Search.setIndex({"docnames": ["doc/COGENT3_LICENSE", "doc/api/__init__/cogent3.__init__.available_apps", "doc/api/__init__/cogent3.__init__.available_codes", "doc/api/__init__/cogent3.__init__.available_models", "doc/api/__init__/cogent3.__init__.available_moltypes", "doc/api/__init__/cogent3.__init__.get_code", "doc/api/__init__/cogent3.__init__.get_model", "doc/api/__init__/cogent3.__init__.get_moltype", "doc/api/__init__/cogent3.__init__.load_aligned_seqs", "doc/api/__init__/cogent3.__init__.load_annotations", "doc/api/__init__/cogent3.__init__.load_delimited", "doc/api/__init__/cogent3.__init__.load_seq", "doc/api/__init__/cogent3.__init__.load_table", "doc/api/__init__/cogent3.__init__.load_tree", "doc/api/__init__/cogent3.__init__.load_unaligned_seqs", "doc/api/__init__/cogent3.__init__.make_aligned_seqs", "doc/api/__init__/cogent3.__init__.make_seq", "doc/api/__init__/cogent3.__init__.make_table", "doc/api/__init__/cogent3.__init__.make_tree", "doc/api/__init__/cogent3.__init__.make_unaligned_seqs", "doc/api/__init__/cogent3.__init__.open_", "doc/api/__init__/cogent3.__init__.open_data_store", "doc/api/alignment/alignment", "doc/api/alignment/classes/cogent3.core.alignment.Alignment", "doc/api/alignment/classes/cogent3.core.alignment.ArrayAlignment", "doc/api/alignment/classes/cogent3.core.alignment.SequenceCollection", "doc/api/alphabet/alphabet", "doc/api/alphabet/classes/cogent3.core.alphabet.Alphabet", "doc/api/annotation/annotation", "doc/api/annotation/classes/cogent3.core.annotation.Feature", "doc/api/annotation_db/annotation_db", "doc/api/annotation_db/classes/cogent3.core.annotation_db.BasicAnnotationDb", "doc/api/annotation_db/classes/cogent3.core.annotation_db.GenbankAnnotationDb", "doc/api/annotation_db/classes/cogent3.core.annotation_db.GffAnnotationDb", "doc/api/app/composable/define_app", "doc/api/app/data_store/classes/cogent3.app.data_store.DataMember", "doc/api/app/data_store/classes/cogent3.app.data_store.DataStoreDirectory", "doc/api/app/data_store/classes/cogent3.app.data_store.ReadOnlyDataStoreZipped", "doc/api/app/io/classes/cogent3.app.io.register_datastore_reader", "doc/api/app/sqlite_data_store/classes/cogent3.app.sqlite_data_store.DataStoreSqlite", "doc/api/genetic_code/classes/cogent3.core.genetic_code.GeneticCode", "doc/api/genetic_code/genetic_code", "doc/api/index", "doc/api/moltype/classes/cogent3.core.moltype.MolType", "doc/api/moltype/moltype", "doc/api/sequence/classes/cogent3.core.sequence.DnaSequence", "doc/api/sequence/classes/cogent3.core.sequence.ProteinSequence", "doc/api/sequence/classes/cogent3.core.sequence.RnaSequence", "doc/api/sequence/sequence", "doc/api/table/classes/cogent3.parse.table.FilteringParser", "doc/api/table/classes/cogent3.util.table.Columns", "doc/api/table/classes/cogent3.util.table.Table", "doc/api/table/table", "doc/api/tree/classes/cogent3.core.tree.PhyloNode", "doc/api/tree/tree", "doc/api/util/deserialise/classes/cogent3.util.deserialise.register_deserialiser", "doc/api/util/deserialise/deserialise_object", "doc/app/align-codon", "doc/app/align-nucleotide", "doc/app/align-protein", "doc/app/app-get", "doc/app/app-help", "doc/app/app-overview", "doc/app/available-apps", "doc/app/dstore", "doc/app/evo-ancestral-states", "doc/app/evo-dt-nuc-model", "doc/app/evo-extract-model-stats", "doc/app/evo-hypothesis", "doc/app/evo-model", "doc/app/evo-model-timehet", "doc/app/evo-model-with-tree", "doc/app/evo-natsel_neutral", "doc/app/evo-natsel_sitehet", "doc/app/evo-natsel_timehet", "doc/app/evo-natsel_zhang", "doc/app/evo-nstat-codon-model", "doc/app/evo-tr-codon-model", "doc/app/evo-tr-nuc-model", "doc/app/index", "doc/app/index-align", "doc/app/index-app", "doc/app/index-custom", "doc/app/index-evo-hypothesis", "doc/app/index-evo-model", "doc/app/index-evo-natsel", "doc/app/index-help", "doc/app/not-completed", "doc/app/user_function", "doc/community", "doc/cookbook/DNA_and_RNA_sequences", "doc/cookbook/alignments", "doc/cookbook/alphabet", "doc/cookbook/annotation_db", "doc/cookbook/building_alignments", "doc/cookbook/building_phylogenies", "doc/cookbook/calc_genetic_distance", "doc/cookbook/evo_modelling", "doc/cookbook/features", "doc/cookbook/genetic_code", "doc/cookbook/index", "doc/cookbook/loading_sequences", "doc/cookbook/loading_tabular", "doc/cookbook/manipulating_biological_data", "doc/cookbook/moltypes", "doc/cookbook/protein_sequences", "doc/cookbook/simple_trees", "doc/cookbook/tables", "doc/cookbook/union_dict", "doc/cookbook/useful_utilities", "doc/cookbook/what_codes", "doc/data_file_links", "doc/draw/aln/plot_aln-coevolution", "doc/draw/aln/plot_aln-dotplot-1", "doc/draw/aln/plot_aln-dotplot-2", "doc/draw/aln/plot_aln-gaps-per-seq", "doc/draw/aln/plot_aln-info-plot", "doc/draw/aln/plot_aln-seqlogo", "doc/draw/aln/plot_seq-features", "doc/draw/index", "doc/draw/tree/plot_tree-angular", "doc/draw/tree/plot_tree-circular", "doc/draw/tree/plot_tree-radial", "doc/draw/tree/plot_tree-square", "doc/draw/tree/plot_tree-support", "doc/examples/align_codons_to_protein", "doc/examples/calculate_UPGMA_cluster", "doc/examples/calculate_neigbourjoining_tree", "doc/examples/calculate_pairwise_distances", "doc/examples/codon_models", "doc/examples/coevolution", "doc/examples/empirical_protein_models", "doc/examples/hmm_par_heterogeneity", "doc/examples/index", "doc/examples/manipulating_tree_nodes", "doc/examples/neutral_test", "doc/examples/parallel", "doc/examples/parametric_bootstrap", "doc/examples/period_estimation", "doc/examples/phylo_by_ls", "doc/examples/rate_heterogeneity", "doc/examples/relative_rate", "doc/examples/scope_model_params_on_trees", "doc/examples/simple", "doc/examples/simulate_alignment", "doc/examples/testing_multi_loci", "doc/index", "doc/install", "doc/licenses", "doc/pycogent", "genindex", "history", "index", "projects"], "filenames": ["doc/COGENT3_LICENSE.rst", "doc/api/__init__/cogent3.__init__.available_apps.rst", "doc/api/__init__/cogent3.__init__.available_codes.rst", "doc/api/__init__/cogent3.__init__.available_models.rst", "doc/api/__init__/cogent3.__init__.available_moltypes.rst", "doc/api/__init__/cogent3.__init__.get_code.rst", "doc/api/__init__/cogent3.__init__.get_model.rst", "doc/api/__init__/cogent3.__init__.get_moltype.rst", "doc/api/__init__/cogent3.__init__.load_aligned_seqs.rst", "doc/api/__init__/cogent3.__init__.load_annotations.rst", "doc/api/__init__/cogent3.__init__.load_delimited.rst", "doc/api/__init__/cogent3.__init__.load_seq.rst", "doc/api/__init__/cogent3.__init__.load_table.rst", "doc/api/__init__/cogent3.__init__.load_tree.rst", "doc/api/__init__/cogent3.__init__.load_unaligned_seqs.rst", "doc/api/__init__/cogent3.__init__.make_aligned_seqs.rst", "doc/api/__init__/cogent3.__init__.make_seq.rst", "doc/api/__init__/cogent3.__init__.make_table.rst", "doc/api/__init__/cogent3.__init__.make_tree.rst", "doc/api/__init__/cogent3.__init__.make_unaligned_seqs.rst", "doc/api/__init__/cogent3.__init__.open_.rst", "doc/api/__init__/cogent3.__init__.open_data_store.rst", "doc/api/alignment/alignment.rst", "doc/api/alignment/classes/cogent3.core.alignment.Alignment.rst", "doc/api/alignment/classes/cogent3.core.alignment.ArrayAlignment.rst", "doc/api/alignment/classes/cogent3.core.alignment.SequenceCollection.rst", "doc/api/alphabet/alphabet.rst", "doc/api/alphabet/classes/cogent3.core.alphabet.Alphabet.rst", "doc/api/annotation/annotation.rst", "doc/api/annotation/classes/cogent3.core.annotation.Feature.rst", "doc/api/annotation_db/annotation_db.rst", "doc/api/annotation_db/classes/cogent3.core.annotation_db.BasicAnnotationDb.rst", "doc/api/annotation_db/classes/cogent3.core.annotation_db.GenbankAnnotationDb.rst", "doc/api/annotation_db/classes/cogent3.core.annotation_db.GffAnnotationDb.rst", "doc/api/app/composable/define_app.rst", "doc/api/app/data_store/classes/cogent3.app.data_store.DataMember.rst", "doc/api/app/data_store/classes/cogent3.app.data_store.DataStoreDirectory.rst", "doc/api/app/data_store/classes/cogent3.app.data_store.ReadOnlyDataStoreZipped.rst", "doc/api/app/io/classes/cogent3.app.io.register_datastore_reader.rst", "doc/api/app/sqlite_data_store/classes/cogent3.app.sqlite_data_store.DataStoreSqlite.rst", "doc/api/genetic_code/classes/cogent3.core.genetic_code.GeneticCode.rst", "doc/api/genetic_code/genetic_code.rst", "doc/api/index.rst", "doc/api/moltype/classes/cogent3.core.moltype.MolType.rst", "doc/api/moltype/moltype.rst", "doc/api/sequence/classes/cogent3.core.sequence.DnaSequence.rst", "doc/api/sequence/classes/cogent3.core.sequence.ProteinSequence.rst", "doc/api/sequence/classes/cogent3.core.sequence.RnaSequence.rst", "doc/api/sequence/sequence.rst", "doc/api/table/classes/cogent3.parse.table.FilteringParser.rst", "doc/api/table/classes/cogent3.util.table.Columns.rst", "doc/api/table/classes/cogent3.util.table.Table.rst", "doc/api/table/table.rst", "doc/api/tree/classes/cogent3.core.tree.PhyloNode.rst", "doc/api/tree/tree.rst", "doc/api/util/deserialise/classes/cogent3.util.deserialise.register_deserialiser.rst", "doc/api/util/deserialise/deserialise_object.rst", "doc/app/align-codon.rst", "doc/app/align-nucleotide.rst", "doc/app/align-protein.rst", "doc/app/app-get.rst", "doc/app/app-help.rst", "doc/app/app-overview.rst", "doc/app/available-apps.rst", "doc/app/dstore.rst", "doc/app/evo-ancestral-states.rst", "doc/app/evo-dt-nuc-model.rst", "doc/app/evo-extract-model-stats.rst", "doc/app/evo-hypothesis.rst", "doc/app/evo-model.rst", "doc/app/evo-model-timehet.rst", "doc/app/evo-model-with-tree.rst", "doc/app/evo-natsel_neutral.rst", "doc/app/evo-natsel_sitehet.rst", "doc/app/evo-natsel_timehet.rst", "doc/app/evo-natsel_zhang.rst", "doc/app/evo-nstat-codon-model.rst", "doc/app/evo-tr-codon-model.rst", "doc/app/evo-tr-nuc-model.rst", "doc/app/index.rst", "doc/app/index-align.rst", "doc/app/index-app.rst", "doc/app/index-custom.rst", "doc/app/index-evo-hypothesis.rst", "doc/app/index-evo-model.rst", "doc/app/index-evo-natsel.rst", "doc/app/index-help.rst", "doc/app/not-completed.rst", "doc/app/user_function.rst", "doc/community.rst", "doc/cookbook/DNA_and_RNA_sequences.rst", "doc/cookbook/alignments.rst", "doc/cookbook/alphabet.rst", "doc/cookbook/annotation_db.rst", "doc/cookbook/building_alignments.rst", "doc/cookbook/building_phylogenies.rst", "doc/cookbook/calc_genetic_distance.rst", "doc/cookbook/evo_modelling.rst", "doc/cookbook/features.rst", "doc/cookbook/genetic_code.rst", "doc/cookbook/index.rst", "doc/cookbook/loading_sequences.rst", "doc/cookbook/loading_tabular.rst", "doc/cookbook/manipulating_biological_data.rst", "doc/cookbook/moltypes.rst", "doc/cookbook/protein_sequences.rst", "doc/cookbook/simple_trees.rst", "doc/cookbook/tables.rst", "doc/cookbook/union_dict.rst", "doc/cookbook/useful_utilities.rst", "doc/cookbook/what_codes.rst", "doc/data_file_links.rst", "doc/draw/aln/plot_aln-coevolution.rst", "doc/draw/aln/plot_aln-dotplot-1.rst", "doc/draw/aln/plot_aln-dotplot-2.rst", "doc/draw/aln/plot_aln-gaps-per-seq.rst", "doc/draw/aln/plot_aln-info-plot.rst", "doc/draw/aln/plot_aln-seqlogo.rst", "doc/draw/aln/plot_seq-features.rst", "doc/draw/index.rst", "doc/draw/tree/plot_tree-angular.rst", "doc/draw/tree/plot_tree-circular.rst", "doc/draw/tree/plot_tree-radial.rst", "doc/draw/tree/plot_tree-square.rst", "doc/draw/tree/plot_tree-support.rst", "doc/examples/align_codons_to_protein.rst", "doc/examples/calculate_UPGMA_cluster.rst", "doc/examples/calculate_neigbourjoining_tree.rst", "doc/examples/calculate_pairwise_distances.rst", "doc/examples/codon_models.rst", "doc/examples/coevolution.rst", "doc/examples/empirical_protein_models.rst", "doc/examples/hmm_par_heterogeneity.rst", "doc/examples/index.rst", "doc/examples/manipulating_tree_nodes.rst", "doc/examples/neutral_test.rst", "doc/examples/parallel.rst", "doc/examples/parametric_bootstrap.rst", "doc/examples/period_estimation.rst", "doc/examples/phylo_by_ls.rst", "doc/examples/rate_heterogeneity.rst", "doc/examples/relative_rate.rst", "doc/examples/scope_model_params_on_trees.rst", "doc/examples/simple.rst", "doc/examples/simulate_alignment.rst", "doc/examples/testing_multi_loci.rst", "doc/index.rst", "doc/install.rst", "doc/licenses.rst", "doc/pycogent.rst", "genindex.rst", "history.rst", "index.rst", "projects.rst"], "titles": ["Cogent3 License", "available_apps", "available_codes", "available_models", "available_moltypes", "get_code", "get_model", "get_moltype", "load_aligned_seqs", "load_annotations", "load_delimited", "load_seq", "load_table", "load_tree", "load_unaligned_seqs", "make_aligned_seqs", "make_seq", "make_table", "make_tree", "make_unaligned_seqs", "open", "open_data_store", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">alignment</span></code>", "Alignment", "ArrayAlignment", "SequenceCollection", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">alphabet</span></code>", "Alphabet", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">annotation</span></code>", "Feature", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">annotation_db</span></code>", "BasicAnnotationDb", "GenbankAnnotationDb", "GffAnnotationDb", "define_app", "DataMember", "DataStoreDirectory", "ReadOnlyDataStoreZipped", "register_datastore_reader", "DataStoreSqlite", "GeneticCode", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">genetic_code</span></code>", "API", "MolType", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">moltype</span></code>", "DnaSequence", "ProteinSequence", "RnaSequence", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">sequence</span></code>", "FilteringParser", "Columns", "Table", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">table</span></code>", "PhyloNode", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">tree</span></code>", "register_deserialiser", "deserialise_object", "Using a codon model", "Using a nucleotide model", "Using a protein model", "Getting an app", "Getting help on an app", "Overview of using apps", "Displaying installed apps", "Data stores \u2013 collections of data records", "Reconstructing ancestral states", "Applying a discrete-time, non-stationary nucleotide model", "Extracting maximum likelihood estimates from a <code class=\"docutils literal notranslate\"><span class=\"pre\">model_result</span></code>", "Testing a hypothesis \u2013 non-stationary or time-reversible", "Apply a non-stationary nucleotide model to an alignment with 3 sequences", "Specifying a non-stationary model with time-heterogeneous parameters", "Apply a non-stationary nucleotide model to an alignment with a tree", "<code class=\"docutils literal notranslate\"><span class=\"pre\">natsel_neutral</span></code> \u2013 a test for selective neutrality", "<code class=\"docutils literal notranslate\"><span class=\"pre\">natsel_sitehet</span></code> \u2013 a test of site heterogeneity", "<code class=\"docutils literal notranslate\"><span class=\"pre\">natsel_timehet</span></code> \u2013 a test of branch heterogeneity", "<code class=\"docutils literal notranslate\"><span class=\"pre\">natsel_zhang</span></code> \u2013 a branch-site test", "Applying GNC, a non-stationary codon model", "Applying a time-reversible codon model", "Applying a time-reversible nucleotide model", "apps", "Sequence Alignment", "Overview of apps", "Write your own Apps", "Testing hypotheses about sequence evolution", "Modelling sequence evolution", "Testing for natural selection", "&lt;no title&gt;", "Tracking records that could not be processed", "Turn your functions into composable apps", "Community", "Sequences", "Sequence Collections and Alignments", "Alphabets", "Annotation Databases", "Building alignments", "Building phylogenies", "Genetic distance calculation", "Evolutionary Analysis Using Likelihood", "Features", "Using genetic codes", "Cookbook", "Loading a sequence from a file", "Loading a csv file", "Manipulating biological data", "Molecular types", "Protein sequences", "Trees", "Tabular data", "<code class=\"docutils literal notranslate\"><span class=\"pre\">UnionDict</span></code> \u2013 a dict with set like operations and keys as attributes", "Useful Utilities", "Available genetic codes", "Data Files Used in the Documentation", "Coevolution analysis", "Dotplot basics", "Dotplot with annotated sequences", "Counting gaps per sequence", "Information analysis of an alignment", "Sequence logos", "Sequence Features", "Image Gallery", "Angular Dendrogram Style", "Circular Dendrogram Style", "Radial Dendrogram Style", "Square Dendrogram Style", "Showing Bootstrap Support", "Map protein alignment gaps to DNA alignment gaps", "Make a UPGMA cluster", "Make a neighbor joining tree", "Calculate pairwise distances between sequences", "Using codon models", "Perform a coevolutionary analysis on biological sequence alignments", "Use an empirical protein substitution model", "Evaluate process heterogeneity using a Hidden Markov Model", "Tutorials", "Manipulation of Tree Node Objects", "A test of the neutral theory", "Parallel computations", "Performing a parametric bootstrap", "Estimating periodic signals", "Phylogenetic reconstruction by least squares", "Analysis of rate heterogeneity", "Performing a relative rate test", "Allowing substitution model parameters to differ between branches", "The simplest script", "Simulate an alignment", "Likelihood analysis of multiple loci", "User Guides", "Installation", "License", "How does <code class=\"docutils literal notranslate\"><span class=\"pre\">cogent3</span></code> relate to PyCogent?", "Index", "Project History", "Making Sense from Sequence", "Projects using <code class=\"docutils literal notranslate\"><span class=\"pre\">cogent3</span></code>"], "terms": {"copyright": [0, 148], "c": [0, 23, 24, 25, 27, 45, 46, 47, 51, 59, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 91, 92, 94, 95, 97, 98, 99, 101, 102, 104, 106, 107, 108, 109, 110, 111, 117, 118, 125, 129, 131, 132, 134, 135, 141, 142, 143, 144, 145, 148, 151], "2019": [0, 64, 65, 128, 148], "date": [0, 148, 151], "develop": [0, 89, 101, 102, 107, 129, 148, 151, 153], "team": [0, 89, 148], "all": [0, 9, 10, 12, 13, 14, 17, 18, 23, 24, 25, 27, 31, 32, 33, 35, 39, 40, 42, 43, 45, 46, 47, 50, 51, 53, 58, 67, 69, 70, 85, 88, 89, 93, 95, 97, 98, 101, 102, 104, 107, 111, 113, 115, 129, 130, 132, 135, 136, 137, 138, 139, 141, 142, 143, 145, 147, 148, 149, 151], "right": [0, 23, 24, 51, 62, 66, 76, 120, 121, 123, 124, 148], "reserv": [0, 148], "redistribut": [0, 148], "us": [0, 11, 12, 17, 23, 24, 25, 27, 34, 40, 43, 45, 46, 47, 50, 51, 53, 55, 56, 61, 63, 65, 67, 68, 69, 76, 79, 80, 84, 88, 89, 90, 103, 108, 110, 112, 114, 115, 117, 119, 123, 124, 125, 126, 127, 130, 133, 134, 135, 137, 138, 140, 141, 142, 143, 144, 145, 146, 148, 149, 151, 152], "sourc": [0, 15, 19, 36, 37, 39, 57, 58, 59, 62, 64, 69, 87, 89, 93, 98, 101, 148], "binari": [0, 53, 148], "form": [0, 23, 24, 39, 51, 129, 148], "without": [0, 23, 24, 34, 62, 79, 87, 91, 93, 94, 101, 115, 147, 148], "modif": [0, 129, 133, 148], "ar": [0, 9, 12, 13, 23, 24, 25, 27, 29, 31, 32, 33, 34, 40, 42, 43, 45, 46, 47, 51, 53, 55, 61, 64, 65, 67, 68, 69, 73, 75, 79, 84, 88, 89, 90, 91, 94, 95, 97, 98, 99, 101, 102, 103, 104, 109, 113, 115, 123, 124, 125, 128, 129, 130, 134, 135, 136, 137, 138, 139, 141, 142, 143, 148, 149, 151, 152], "permit": [0, 23, 24, 25, 148], "provid": [0, 9, 23, 24, 25, 31, 32, 33, 34, 45, 46, 47, 50, 51, 53, 61, 62, 64, 68, 69, 87, 89, 90, 91, 93, 94, 96, 98, 104, 107, 109, 112, 113, 119, 125, 126, 127, 129, 130, 132, 135, 136, 138, 142, 145, 146, 148, 149, 151, 152], "follow": [0, 40, 50, 62, 64, 68, 70, 75, 91, 93, 95, 96, 97, 98, 102, 107, 129, 130, 131, 132, 134, 135, 136, 139, 142, 148], "condit": [0, 31, 32, 33, 49, 62, 64, 69, 79, 87, 93, 97, 98, 102, 107, 129, 133, 135, 136, 148], "met": [0, 87, 97, 148], "code": [0, 2, 5, 23, 24, 25, 27, 40, 43, 45, 46, 47, 51, 53, 87, 89, 97, 98, 100, 125, 130, 136, 137, 146, 148, 149, 151], "must": [0, 9, 12, 17, 23, 24, 25, 27, 34, 38, 43, 45, 46, 47, 51, 53, 55, 57, 58, 61, 62, 91, 107, 109, 130, 136, 142, 148], "retain": [0, 98, 132, 139, 148], "abov": [0, 24, 25, 34, 45, 46, 47, 64, 69, 70, 71, 87, 91, 93, 96, 97, 98, 99, 101, 102, 104, 107, 108, 109, 129, 132, 135, 136, 138, 139, 142, 148], "notic": [0, 91, 148], "thi": [0, 12, 15, 17, 19, 23, 24, 25, 27, 29, 31, 32, 33, 34, 36, 39, 43, 45, 46, 47, 50, 51, 53, 57, 58, 61, 62, 64, 65, 66, 67, 68, 69, 70, 71, 73, 74, 75, 76, 77, 78, 80, 87, 88, 89, 90, 91, 93, 95, 97, 98, 99, 101, 102, 104, 107, 108, 109, 110, 112, 113, 115, 116, 117, 118, 120, 125, 126, 127, 128, 129, 130, 131, 132, 134, 135, 136, 137, 138, 139, 140, 141, 142, 144, 146, 148, 149, 151, 152, 153], "list": [0, 1, 2, 3, 4, 6, 17, 18, 23, 24, 25, 27, 31, 32, 33, 36, 37, 39, 40, 43, 45, 46, 47, 51, 53, 58, 61, 64, 93, 96, 98, 103, 106, 134, 139, 142, 145, 148, 153], "disclaim": [0, 148], "reproduc": [0, 148], "document": [0, 61, 93, 98, 104, 112, 129, 130, 136, 141, 146, 148, 149, 151, 152], "other": [0, 6, 11, 13, 14, 15, 19, 23, 24, 25, 31, 32, 33, 40, 43, 45, 46, 47, 51, 53, 64, 67, 79, 87, 89, 91, 93, 95, 98, 107, 130, 132, 135, 136, 138, 139, 142, 145, 148], "materi": [0, 148], "distribut": [0, 23, 24, 64, 97, 128, 129, 131, 135, 136, 137, 139, 140, 141, 145, 148], "neither": [0, 53, 148], "name": [0, 5, 6, 7, 8, 11, 12, 13, 14, 15, 16, 17, 18, 19, 23, 24, 25, 29, 31, 32, 33, 34, 36, 37, 39, 40, 43, 45, 46, 47, 50, 51, 53, 60, 61, 62, 63, 64, 65, 69, 70, 71, 73, 87, 88, 95, 96, 97, 99, 101, 102, 103, 104, 110, 113, 115, 116, 128, 130, 131, 134, 142, 143, 145, 148, 149, 151], "nor": [0, 148], "its": [0, 27, 40, 45, 47, 53, 57, 59, 78, 79, 91, 93, 132, 134, 135, 136, 148], "contributor": [0, 148], "mai": [0, 23, 24, 25, 27, 43, 45, 46, 47, 53, 64, 93, 97, 98, 109, 111, 125, 134, 139, 148], "endors": [0, 148], "promot": [0, 148], "product": [0, 93, 107, 148], "deriv": [0, 25, 45, 46, 47, 77, 97, 107, 109, 123, 125, 148], "from": [0, 8, 9, 10, 11, 12, 14, 15, 17, 19, 23, 24, 25, 27, 31, 32, 33, 34, 39, 43, 45, 46, 47, 50, 51, 53, 56, 57, 58, 59, 60, 61, 63, 64, 65, 66, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 81, 84, 87, 88, 89, 92, 96, 97, 100, 103, 104, 108, 110, 112, 113, 115, 116, 118, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 148, 149, 151, 153], "softwar": [0, 89, 136, 148], "specif": [0, 27, 43, 53, 56, 62, 66, 84, 87, 88, 91, 93, 97, 98, 101, 109, 129, 132, 136, 138, 142, 146, 148], "prior": [0, 34, 136, 148], "written": [0, 9, 36, 39, 51, 62, 64, 76, 125, 148, 149], "permiss": [0, 148], "i": [0, 6, 9, 10, 12, 13, 14, 18, 23, 24, 25, 27, 29, 31, 32, 33, 34, 39, 40, 43, 45, 46, 47, 50, 51, 53, 55, 56, 57, 58, 59, 60, 61, 62, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 80, 87, 88, 89, 90, 92, 93, 95, 96, 97, 98, 99, 101, 102, 104, 105, 107, 108, 110, 111, 112, 113, 114, 116, 118, 120, 121, 123, 124, 125, 129, 130, 131, 132, 134, 135, 136, 137, 138, 139, 141, 142, 143, 145, 147, 148, 152], "BY": [0, 148], "THE": [0, 148], "holder": [0, 148], "AND": [0, 23, 24, 25, 148], "AS": [0, 148], "ani": [0, 23, 24, 25, 27, 29, 36, 39, 43, 45, 46, 47, 50, 53, 57, 58, 60, 61, 62, 64, 70, 80, 87, 89, 91, 93, 97, 99, 102, 107, 116, 132, 134, 142, 148, 152], "express": [0, 51, 124, 148], "OR": [0, 148], "impli": [0, 12, 17, 62, 148], "warranti": [0, 148], "includ": [0, 23, 24, 25, 27, 29, 34, 40, 45, 46, 47, 51, 53, 57, 61, 62, 64, 65, 77, 88, 91, 93, 97, 98, 99, 117, 142, 148, 153], "BUT": [0, 148], "NOT": [0, 9, 23, 24, 25, 45, 46, 47, 148], "limit": [0, 10, 12, 17, 21, 23, 24, 25, 36, 37, 39, 45, 46, 47, 49, 62, 64, 96, 97, 102, 107, 115, 118, 129, 141, 148], "TO": [0, 24, 148], "OF": [0, 148], "merchant": [0, 148], "fit": [0, 24, 25, 62, 65, 66, 67, 70, 71, 109, 129, 132, 142, 148], "FOR": [0, 24, 132, 148], "A": [0, 23, 24, 25, 27, 40, 45, 46, 47, 49, 51, 53, 57, 58, 59, 62, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 91, 92, 93, 94, 97, 98, 99, 101, 102, 104, 107, 109, 110, 112, 113, 117, 118, 125, 129, 131, 133, 134, 138, 140, 141, 142, 143, 144, 145, 148, 149, 151, 152], "particular": [0, 27, 45, 46, 47, 53, 69, 84, 98, 109, 148], "purpos": [0, 61, 134, 137, 148], "IN": [0, 148], "NO": [0, 148], "event": [0, 148], "shall": [0, 148], "BE": [0, 148], "liabl": [0, 148], "direct": [0, 51, 53, 93, 148, 149, 151], "indirect": [0, 148], "incident": [0, 148], "special": [0, 34, 43, 53, 62, 64, 87, 135, 141, 148], "exemplari": [0, 148], "consequenti": [0, 148], "damag": [0, 148], "procur": [0, 148], "substitut": [0, 3, 23, 24, 69, 72, 77, 78, 80, 84, 94, 95, 96, 126, 127, 128, 130, 132, 133, 139, 143, 144, 148, 152, 153], "good": [0, 72, 74, 97, 106, 129, 136, 139, 148], "servic": [0, 104, 148], "loss": [0, 148], "data": [0, 10, 12, 15, 17, 19, 23, 24, 25, 27, 31, 32, 33, 34, 35, 36, 37, 38, 39, 43, 45, 46, 47, 51, 53, 56, 57, 58, 59, 61, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 87, 88, 91, 94, 95, 96, 97, 99, 101, 104, 105, 106, 108, 109, 112, 113, 114, 115, 117, 118, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 131, 132, 135, 136, 137, 139, 140, 141, 142, 143, 145, 146, 148, 152], "profit": [0, 148], "busi": [0, 148], "interrupt": [0, 64, 148], "howev": [0, 27, 45, 46, 47, 91, 93, 97, 98, 125, 129, 134, 136, 142, 148], "caus": [0, 23, 25, 29, 43, 97, 107, 112, 115, 116, 139, 141, 142, 148], "ON": [0, 148], "theori": [0, 133, 148], "liabil": [0, 148], "whether": [0, 6, 10, 23, 24, 25, 27, 31, 32, 33, 43, 45, 46, 47, 51, 53, 64, 69, 73, 74, 91, 93, 95, 107, 109, 124, 129, 132, 142, 145, 148], "contract": [0, 148], "strict": [0, 23, 24, 25, 43, 45, 46, 47, 51, 91, 107, 130, 148], "tort": [0, 148], "neglig": [0, 148], "otherwis": [0, 8, 15, 23, 24, 27, 36, 37, 39, 40, 45, 46, 47, 50, 51, 53, 56, 57, 58, 107, 134, 136, 148], "aris": [0, 148], "wai": [0, 97, 115, 132, 142, 148, 149, 151], "out": [0, 23, 24, 45, 46, 47, 53, 64, 89, 91, 97, 98, 106, 128, 129, 135, 136, 148], "even": [0, 23, 24, 25, 27, 53, 89, 98, 148], "IF": [0, 148], "advis": [0, 23, 24, 25, 68, 148], "possibl": [0, 23, 24, 43, 45, 46, 47, 51, 53, 66, 69, 91, 93, 95, 98, 101, 102, 107, 129, 132, 138, 139, 142, 143, 148], "SUCH": [0, 148], "return": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 20, 21, 23, 24, 25, 27, 29, 31, 32, 33, 34, 36, 37, 39, 40, 43, 45, 46, 47, 49, 50, 51, 53, 56, 62, 64, 65, 87, 88, 91, 93, 95, 97, 99, 101, 107, 108, 109, 112, 113, 114, 115, 128, 129, 134, 136, 137, 138, 139, 141], "tabl": [1, 2, 3, 4, 12, 17, 27, 31, 32, 33, 36, 37, 39, 40, 42, 50, 55, 64, 66, 67, 69, 75, 88, 93, 129, 145], "avail": [1, 2, 4, 23, 24, 36, 37, 39, 51, 57, 58, 59, 61, 62, 69, 77, 78, 89, 93, 96, 103, 130, 136], "app": [1, 23, 24, 34, 57, 58, 59, 68, 69, 72, 73, 84, 85, 87, 120, 121, 122, 123, 124, 146, 149, 151, 152], "genet": [2, 5, 23, 24, 25, 40, 45, 47, 84, 104, 152, 153], "model_typ": 3, "none": [3, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 21, 23, 24, 25, 27, 29, 31, 32, 33, 34, 36, 37, 39, 40, 43, 45, 46, 47, 49, 50, 51, 53, 61, 62, 64, 66, 69, 71, 93, 98, 102, 107, 124, 129, 136], "pre": [3, 75, 94, 146], "defin": [3, 23, 34, 51, 62, 70, 75, 79, 88, 91, 94, 95, 98, 107, 109, 113, 129, 132, 134, 137, 138, 144, 146], "model": [3, 6, 23, 24, 53, 63, 64, 65, 67, 68, 72, 73, 74, 75, 80, 83, 85, 91, 94, 95, 96, 106, 123, 126, 127, 128, 135, 136, 137, 139, 140, 141, 143, 144, 145, 151, 152, 153], "moltyp": [4, 7, 8, 11, 14, 15, 16, 19, 23, 24, 25, 27, 34, 42, 45, 46, 47, 60, 61, 62, 64, 66, 67, 68, 69, 71, 72, 73, 74, 75, 76, 77, 78, 87, 88, 90, 93, 94, 95, 96, 98, 99, 101, 103, 105, 112, 113, 115, 116, 117, 118, 125, 129, 130, 131], "code_id": 5, "1": [5, 23, 24, 25, 27, 34, 43, 45, 46, 47, 51, 53, 57, 58, 59, 60, 61, 62, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 90, 91, 93, 94, 95, 97, 98, 99, 101, 102, 105, 106, 107, 108, 109, 110, 117, 121, 126, 127, 129, 130, 131, 134, 135, 136, 138, 139, 140, 141, 142, 144, 145, 151, 152], "paramet": [5, 6, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 24, 25, 29, 31, 32, 33, 34, 36, 37, 38, 39, 40, 43, 45, 46, 47, 50, 51, 53, 55, 56, 61, 68, 69, 71, 72, 73, 74, 75, 76, 77, 78, 91, 94, 101, 109, 114, 129, 131, 132, 133, 134, 135, 136, 141, 143, 144, 145], "identifi": [5, 9, 12, 17, 31, 32, 33, 36, 39, 51, 55, 56, 62, 64, 66, 69, 87, 97, 130, 138, 142], "number": [5, 10, 12, 14, 17, 21, 23, 24, 25, 27, 31, 32, 33, 43, 45, 46, 47, 51, 53, 62, 64, 66, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 91, 93, 95, 96, 99, 104, 113, 115, 129, 131, 132, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145], "string": [5, 10, 12, 15, 16, 17, 18, 19, 23, 24, 25, 27, 31, 32, 33, 36, 37, 38, 39, 40, 43, 45, 46, 47, 51, 53, 55, 56, 60, 61, 93, 97, 103, 109, 110, 125, 131, 134, 138], "default": [5, 9, 12, 13, 15, 18, 19, 23, 24, 25, 31, 32, 33, 34, 43, 45, 46, 47, 50, 51, 53, 62, 64, 77, 78, 90, 91, 97, 99, 101, 106, 107, 112, 115, 123, 129, 134, 135, 138, 142], "standard": [5, 20, 23, 24, 25, 43, 45, 46, 47, 53, 62, 88, 89, 91, 96, 97, 99, 102, 103, 110, 132, 134, 136, 142, 152], "kw": [6, 8, 11, 14, 15, 19, 87], "an": [6, 8, 9, 11, 14, 15, 19, 20, 23, 24, 25, 27, 29, 31, 32, 33, 34, 40, 43, 45, 46, 47, 50, 51, 53, 57, 58, 59, 63, 70, 77, 79, 87, 88, 92, 94, 103, 108, 110, 112, 113, 114, 117, 118, 125, 126, 127, 128, 129, 130, 132, 133, 135, 136, 137, 138, 139, 140, 142, 145, 149, 151, 152], "instanc": [6, 8, 16, 21, 23, 24, 25, 29, 31, 32, 33, 34, 40, 45, 46, 47, 50, 51, 53, 56, 60, 61, 67, 69, 83, 87, 88, 90, 91, 92, 96, 98, 101, 103, 104, 107, 109, 114, 126, 127, 129, 132, 136, 137, 139, 145, 149, 152], "case": [6, 23, 24, 25, 34, 43, 45, 46, 47, 50, 51, 53, 57, 58, 62, 64, 66, 68, 77, 78, 88, 91, 96, 97, 99, 101, 102, 104, 106, 107, 112, 115, 128, 129, 131, 132, 134, 136, 138, 139, 140, 142, 152], "sensit": [6, 45, 46, 47, 77, 78, 97], "optimise_motif_prob": [6, 68, 69, 71, 72, 73, 74, 75, 77, 78, 129], "bool": [6, 8, 9, 10, 12, 13, 15, 18, 23, 24, 25, 29, 31, 32, 33, 34, 39, 43, 45, 46, 47, 51, 53, 61, 114, 136], "treat": [6, 23, 24, 91, 135, 142], "like": [6, 43, 45, 46, 47, 50, 64, 67, 69, 87, 88, 89, 97, 102, 107, 128, 132, 135, 136, 139, 152], "free": [6, 66, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 89, 129, 131, 132, 135, 140, 141, 142, 143, 144, 145], "recode_gap": [6, 23, 24, 45, 46, 47, 132], "gap": [6, 23, 24, 25, 27, 29, 43, 45, 46, 47, 61, 63, 99, 104, 113, 117, 129, 133], "align": [6, 8, 15, 24, 25, 29, 31, 32, 33, 34, 42, 43, 45, 46, 47, 51, 61, 62, 63, 64, 65, 76, 77, 78, 87, 88, 93, 99, 104, 107, 112, 113, 126, 127, 128, 129, 131, 132, 133, 135, 136, 137, 139, 140, 141, 142, 145, 152], "should": [6, 9, 23, 24, 25, 27, 45, 46, 47, 53, 91, 97, 98, 106, 125, 126, 130, 134, 136, 152], "ambigu": [6, 23, 24, 25, 27, 43, 45, 46, 47, 91, 98, 103, 130], "state": [6, 23, 24, 45, 46, 47, 53, 61, 64, 91, 97, 104, 149, 151], "instead": [6, 23, 24, 25, 43, 45, 46, 47, 53, 71, 91, 97, 107, 134, 139], "note": [6, 9, 10, 11, 13, 18, 23, 24, 25, 27, 29, 31, 32, 34, 36, 39, 40, 43, 45, 46, 47, 51, 53, 56, 64, 66, 72, 76, 91, 93, 98, 102, 106, 107, 109, 117, 120, 125, 128, 130, 134, 135], "see": [6, 23, 24, 34, 51, 53, 57, 58, 60, 61, 62, 64, 66, 69, 76, 84, 88, 91, 93, 97, 98, 113, 118, 130, 136, 139, 142, 146, 149, 151, 152], "available_model": [6, 42, 57, 58, 77, 78, 84, 97], "full": [6, 29, 51, 77, 138], "match": [7, 9, 21, 23, 24, 25, 27, 29, 31, 32, 33, 34, 39, 43, 45, 46, 47, 49, 51, 53, 62, 91, 93, 98, 101, 106, 130, 149, 151], "attribut": [7, 23, 24, 25, 29, 31, 32, 33, 34, 35, 36, 37, 39, 40, 45, 46, 47, 50, 51, 53, 64, 69, 87, 91, 98, 101, 104, 106, 107, 112, 115, 124], "filenam": [8, 10, 11, 12, 13, 14, 20, 21, 23, 24, 25, 51, 53, 62, 64, 91, 98, 101, 102, 107, 141], "str": [8, 9, 10, 11, 12, 13, 14, 16, 17, 18, 21, 23, 24, 25, 29, 31, 32, 33, 35, 36, 37, 38, 39, 40, 43, 45, 46, 47, 50, 51, 53, 55, 61, 90, 101, 102, 109], "path": [8, 9, 10, 11, 12, 13, 14, 20, 21, 23, 24, 25, 31, 32, 33, 36, 37, 39, 45, 46, 47, 56, 68, 87, 93, 98], "format": [8, 11, 12, 13, 14, 17, 18, 23, 24, 25, 27, 38, 43, 45, 46, 47, 51, 53, 57, 58, 59, 62, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 87, 103, 123, 124, 128, 129, 131, 139, 152], "array_align": [8, 15, 23, 24, 88, 91, 98, 101, 116, 130], "true": [8, 10, 12, 15, 23, 24, 25, 27, 29, 31, 32, 33, 34, 40, 43, 45, 46, 47, 49, 51, 53, 57, 58, 60, 61, 62, 63, 64, 65, 66, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 90, 91, 92, 93, 94, 97, 98, 99, 102, 104, 106, 107, 109, 113, 114, 115, 116, 117, 120, 121, 122, 123, 124, 129, 130, 132, 134, 135, 136, 138, 139, 140, 141, 142], "label_to_nam": [8, 11, 14, 15, 19, 25, 93, 98, 101], "parser_kw": [8, 11, 14], "info": [8, 11, 14, 15, 19, 23, 24, 25, 45, 46, 47, 51, 63, 64, 101], "load": [8, 9, 11, 14, 23, 24, 25, 56, 57, 58, 59, 62, 64, 65, 69, 70, 91, 94, 97, 103, 118, 126, 127, 128, 129, 132, 139, 142], "sequenc": [8, 11, 14, 15, 16, 19, 23, 24, 25, 27, 29, 31, 32, 33, 34, 38, 40, 42, 43, 45, 46, 47, 51, 55, 57, 58, 59, 61, 62, 63, 64, 71, 87, 94, 95, 113, 125, 126, 127, 132, 133, 138, 139, 143, 149, 151, 153], "file": [8, 9, 10, 11, 12, 13, 14, 17, 20, 21, 23, 24, 25, 32, 33, 36, 37, 38, 39, 45, 46, 47, 49, 51, 53, 56, 62, 64, 65, 79, 87, 97, 99, 103, 108, 109, 114, 125, 126, 127, 128, 131, 135, 136, 137, 146, 151], "specifi": [8, 11, 14, 21, 23, 24, 25, 27, 40, 43, 45, 46, 47, 50, 51, 53, 64, 69, 74, 75, 76, 77, 78, 88, 90, 91, 93, 94, 95, 96, 98, 99, 103, 104, 106, 110, 118, 125, 129, 132, 134, 135, 136, 137, 140, 144, 145], "tri": [8, 11, 14, 43, 45, 46, 47], "guess": [8, 11, 14, 51, 97, 107, 109], "suffix": [8, 11, 13, 14, 21, 23, 24, 25, 36, 38, 39, 51, 53, 62, 64, 91, 93, 101, 102, 107, 111], "eg": [8, 11, 14, 15, 19, 23, 24, 45, 46, 47], "dna": [8, 11, 14, 15, 19, 23, 24, 25, 27, 34, 40, 43, 45, 46, 47, 57, 58, 59, 60, 61, 62, 64, 66, 67, 68, 69, 71, 72, 73, 74, 75, 76, 77, 78, 88, 92, 93, 94, 95, 96, 97, 98, 101, 103, 104, 112, 113, 115, 116, 117, 118, 129, 133, 139, 144, 153], "protein": [8, 11, 14, 15, 19, 23, 24, 25, 40, 45, 46, 47, 92, 93, 94, 96, 99, 101, 103, 104, 116, 130, 133, 136, 139], "arrayalign": [8, 15, 23, 61, 63, 87, 88, 90, 95, 101, 103, 113, 130], "annotat": [8, 15, 23], "function": [8, 11, 12, 14, 15, 17, 19, 20, 23, 24, 25, 34, 40, 45, 46, 47, 51, 53, 55, 56, 57, 58, 60, 61, 63, 64, 65, 66, 69, 70, 79, 90, 94, 96, 98, 101, 102, 104, 107, 110, 123, 129, 130, 131, 132, 134, 135, 136, 137, 138, 141, 142, 145, 149, 151, 152], "convert": [8, 11, 14, 15, 16, 19, 23, 24, 25, 34, 43, 45, 46, 47, 51, 63, 88, 101, 102, 103, 107, 138], "origin": [8, 11, 14, 15, 19, 23, 24, 25, 34, 53, 56, 62, 64, 87, 91, 93, 98, 101, 104, 107, 125, 129, 130, 134, 149, 151, 153], "anoth": [8, 11, 14, 15, 19, 53, 62, 66, 70, 98, 99, 108, 109, 134, 139], "dict": [8, 11, 12, 14, 15, 17, 19, 23, 24, 25, 31, 32, 33, 40, 43, 45, 46, 47, 50, 51, 53, 55, 56, 57, 67, 69, 70, 88, 97, 103, 121, 123, 125, 129, 132, 136, 139, 144], "option": [8, 11, 14, 23, 24, 29, 31, 32, 33, 45, 46, 47, 61, 95, 97, 109, 139], "argument": [8, 11, 14, 15, 19, 23, 24, 25, 31, 32, 33, 34, 43, 53, 60, 61, 64, 70, 88, 91, 93, 95, 97, 98, 99, 101, 102, 104, 106, 107, 112, 115, 124, 129, 135, 136, 139], "parser": [8, 11, 12, 14, 49, 103], "pathlik": [9, 11, 20, 23, 25, 31, 32, 33, 45, 46, 47], "seqid": [9, 23, 25, 29, 31, 32, 33, 45, 46, 47, 93, 98], "db": [9, 21, 23, 25, 31, 32, 33, 39, 45, 46, 47, 64, 93, 98, 149, 151], "supportsfeatur": [9, 23, 25, 31, 32, 33, 45, 46, 47], "write_path": 9, "memori": [9, 62, 91, 93, 98, 101], "show_progress": [9, 14, 23, 24, 25, 62, 69, 71, 88, 94, 95, 96, 97, 109, 112, 126, 127, 128, 129, 131, 132, 135, 137, 139, 140, 141, 142, 143, 145], "fals": [9, 10, 12, 13, 18, 23, 24, 25, 27, 29, 31, 32, 33, 34, 39, 40, 43, 45, 46, 47, 49, 51, 53, 62, 64, 69, 71, 72, 73, 74, 75, 88, 90, 91, 93, 94, 95, 96, 97, 98, 101, 102, 107, 109, 112, 114, 116, 125, 126, 127, 128, 129, 131, 132, 134, 135, 136, 137, 139, 140, 141, 142, 143, 145], "annot": [9, 23, 24, 25, 29, 31, 32, 33, 42, 45, 46, 47, 69, 91, 101, 103, 107, 118, 129, 135, 152], "flatfil": 9, "plain": [9, 64], "text": [9, 36, 39, 51, 64, 65, 90, 91, 96, 98, 104, 115, 118, 121, 130, 136], "contain": [9, 12, 13, 23, 24, 25, 27, 31, 32, 33, 40, 43, 45, 46, 47, 51, 53, 56, 61, 62, 63, 64, 67, 87, 91, 93, 97, 98, 107, 131, 134, 135, 137, 138], "featur": [9, 23, 25, 31, 32, 33, 45, 46, 47, 79, 90, 91, 97, 103, 134, 149], "onli": [9, 12, 13, 17, 23, 24, 25, 27, 29, 31, 32, 33, 38, 43, 45, 46, 47, 51, 53, 66, 67, 69, 73, 88, 91, 93, 97, 98, 101, 106, 124, 128, 129, 134, 137, 139, 140, 142, 143, 149, 151], "whose": [9, 23, 24, 31, 32, 33, 40, 50, 51, 95, 134, 138, 139], "exist": [9, 23, 24, 25, 39, 45, 46, 47, 51, 64, 87, 88, 97, 99, 103, 132, 135], "add": [9, 23, 24, 25, 27, 31, 32, 33, 34, 45, 46, 47, 50, 91, 98, 101, 103, 106, 112, 134, 139], "record": [9, 23, 25, 31, 32, 33, 36, 39, 45, 46, 47, 49, 63, 79, 101, 118], "compat": [9, 20, 23, 25, 31, 32, 33, 34, 45, 46, 47, 53, 88], "type": [9, 12, 17, 21, 23, 24, 25, 27, 31, 32, 33, 34, 39, 43, 45, 46, 47, 50, 51, 53, 55, 56, 61, 63, 67, 68, 69, 72, 77, 78, 85, 91, 97, 102, 103, 105, 107, 112, 115, 129, 132], "where": [9, 23, 24, 25, 43, 45, 46, 47, 51, 53, 62, 87, 91, 93, 97, 99, 101, 129, 132, 134, 135, 136], "construct": [9, 23, 24, 25, 45, 46, 47, 51, 57, 70, 73, 88, 90, 97, 104, 107, 125, 132, 138, 142, 145], "databas": [9, 39, 45, 46, 47, 64, 98, 103, 130, 136, 153], "appli": [9, 12, 17, 23, 24, 25, 51, 53, 79, 87, 91, 97, 101, 102, 107, 109, 117, 132, 136, 137, 138, 142], "multipl": [9, 23, 24, 25, 27, 33, 45, 46, 47, 61, 63, 64, 87, 93, 97, 109, 128, 133, 149, 152], "we": [9, 14, 45, 46, 47, 53, 57, 58, 59, 62, 64, 65, 66, 67, 68, 69, 70, 71, 72, 74, 75, 77, 78, 84, 87, 88, 89, 90, 91, 93, 94, 95, 97, 98, 99, 101, 102, 104, 106, 107, 109, 110, 113, 114, 115, 117, 118, 119, 123, 124, 125, 126, 127, 128, 129, 132, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 147, 149, 151, 152], "do": [9, 24, 45, 46, 47, 53, 89, 91, 93, 97, 98, 102, 107, 129, 130, 132, 134, 135, 136, 138, 139, 142, 146], "check": [9, 27, 31, 32, 33, 34, 43, 45, 46, 47, 64, 66, 79, 136, 149, 151], "alreadi": [9, 27, 38, 51, 91, 125], "header": [10, 12, 17, 51, 65, 129, 145], "sep": [10, 12, 49, 51, 102, 107], "with_titl": [10, 51, 97, 129], "with_legend": [10, 51], "kwarg": [10, 12, 17, 20, 21, 23, 24, 25, 29, 31, 32, 33, 36, 37, 39, 43, 46, 51, 53, 87], "basic": [10, 103, 107, 125, 129, 134, 137, 139], "process": [10, 14, 20, 59, 64, 66, 69, 97, 104, 133, 134, 136, 151, 152], "tabular": [10, 12, 49, 51, 152], "delimit": [10, 12, 49, 51, 64, 101], "can": [10, 23, 24, 25, 27, 31, 34, 38, 40, 43, 45, 46, 47, 50, 51, 53, 57, 58, 61, 65, 69, 70, 71, 79, 80, 82, 84, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 101, 102, 106, 108, 109, 110, 111, 115, 117, 118, 125, 127, 128, 129, 130, 132, 134, 135, 136, 137, 138, 139, 142, 143, 145, 146, 147, 149, 151], "begin": [10, 40, 98, 107, 125], "first": [10, 12, 23, 24, 25, 34, 40, 43, 45, 46, 47, 51, 53, 62, 64, 65, 67, 69, 73, 88, 91, 93, 94, 97, 98, 101, 102, 107, 125, 129, 130, 132, 134, 136, 138, 139, 142, 152], "line": [10, 12, 17, 23, 24, 25, 45, 46, 47, 53, 70, 87, 91, 98, 99, 103, 106, 108, 109, 121, 123, 129, 136, 153], "after": [10, 12, 17, 23, 24, 43, 53, 97, 98, 101, 125, 129, 130, 134, 136, 139], "titl": [10, 12, 17, 23, 24, 25, 51, 91, 102, 113, 129, 140], "present": [10, 23, 24, 25, 29, 38, 43, 50, 53, 69, 75, 88, 91, 93, 97, 98, 101, 104, 129, 136, 149, 151], "charact": [10, 12, 23, 24, 25, 27, 40, 43, 45, 46, 47, 51, 53, 61, 63, 98, 103, 109, 117, 129, 130], "separ": [10, 23, 24, 27, 45, 46, 47, 51, 53, 101, 102, 107, 129, 134, 136, 139], "column": [10, 12, 17, 23, 24, 27, 31, 32, 33, 49, 51, 53, 61, 62, 63, 64, 66, 67, 68, 69, 71, 75, 76, 77, 78, 93, 96, 97, 99, 104, 110, 130, 132, 140, 145], "last": [10, 23, 24, 34, 43, 45, 46, 47, 53, 62, 70, 87, 91, 93, 99, 108, 109, 139, 151], "legend": [10, 12, 17, 51, 102, 113, 116], "int": [10, 21, 23, 24, 25, 31, 32, 33, 40, 45, 46, 47, 51, 53, 61, 109, 136], "maximum": [10, 12, 17, 23, 24, 25, 45, 46, 47, 63, 66, 68, 69, 73, 95, 116, 129, 135, 138, 141], "read": [10, 12, 13, 18, 35, 36, 37, 38, 39, 40, 61, 89, 102, 107, 117, 125, 152], "row": [10, 12, 17, 23, 24, 25, 27, 31, 32, 33, 50, 51, 53, 62, 63, 64, 65, 66, 67, 68, 69, 71, 75, 76, 77, 78, 93, 96, 97, 104, 110, 140, 145], "valu": [10, 12, 13, 17, 23, 24, 25, 27, 31, 32, 33, 34, 45, 46, 47, 50, 51, 53, 55, 56, 57, 60, 62, 64, 65, 66, 67, 68, 69, 71, 73, 88, 89, 91, 94, 96, 98, 102, 106, 109, 113, 121, 123, 124, 129, 130, 132, 134, 135, 136, 137, 138, 139, 140, 141, 142], "remain": [10, 23, 24, 53, 64, 66, 89, 139, 142], "annotation_path": [11, 93, 98], "callabl": [11, 23, 24, 25, 34], "unalign": [11, 14, 19, 25, 57, 58, 59, 88, 94, 103, 113, 125], "which": [11, 14, 15, 17, 19, 23, 24, 25, 27, 29, 34, 45, 46, 47, 51, 53, 55, 62, 64, 67, 75, 88, 89, 90, 91, 93, 95, 97, 98, 101, 102, 106, 107, 109, 112, 115, 125, 129, 130, 132, 134, 135, 136, 138, 139, 142, 145, 148], "make": [11, 14, 15, 19, 23, 24, 25, 43, 45, 46, 47, 53, 61, 62, 78, 87, 88, 89, 98, 99, 103, 109, 118, 129, 131, 133, 135, 138, 139, 140, 141, 142, 143, 145, 149, 151, 153], "object": [11, 14, 15, 16, 19, 20, 23, 24, 25, 27, 43, 45, 46, 47, 50, 51, 53, 55, 56, 62, 63, 64, 65, 68, 69, 75, 90, 93, 97, 103, 104, 108, 112, 115, 125, 126, 127, 128, 129, 130, 131, 133, 135, 137, 139, 141, 146], "keyword": [11, 14, 15, 19, 23, 24, 43, 60, 61, 88, 136], "pass": [11, 14, 15, 19, 20, 23, 24, 25, 27, 34, 43, 45, 46, 47, 51, 53, 60, 61, 91, 95, 97, 98, 101, 109, 129, 136, 138, 139], "sequencecollect": [11, 14, 19, 23, 24, 31, 63, 88, 94, 98, 101, 113, 114, 125], "one": [11, 14, 23, 24, 25, 34, 38, 40, 43, 45, 46, 47, 51, 53, 69, 70, 87, 88, 91, 93, 97, 101, 104, 106, 108, 109, 114, 129, 130, 132, 134, 135, 136, 139, 143], "load_aligned_seq": [11, 42, 91, 95, 96, 97, 98, 101, 104, 105, 112, 115, 116, 117, 126, 127, 128, 129, 131, 132, 135, 137, 141, 142, 143, 145], "load_unaligned_seq": [11, 42, 57, 58, 91, 94, 101, 113], "get": [11, 23, 24, 25, 40, 43, 50, 53, 62, 67, 69, 89, 101, 103, 108, 109, 125, 129, 135, 136, 137, 141, 145, 149, 151], "collect": [11, 15, 19, 25, 50, 53, 63, 93, 103, 113, 139], "reader": [12, 87, 102, 107, 120, 121, 122, 123, 124], "digit": [12, 17, 51, 97, 102, 129, 132, 135, 140, 141, 142, 145], "4": [12, 17, 24, 25, 40, 51, 53, 64, 65, 66, 67, 69, 70, 72, 73, 74, 75, 77, 88, 91, 93, 94, 97, 98, 99, 101, 102, 104, 106, 107, 108, 109, 110, 117, 129, 130, 132, 134, 136, 138, 139, 140, 141, 143, 144, 145, 152], "space": [12, 13, 17, 18, 23, 24, 45, 46, 47, 51, 95, 97, 98, 121, 129, 131, 132, 134, 135, 140, 141, 142, 145], "missing_data": [12, 17, 51, 102, 107], "max_width": [12, 17, 51, 107], "1e": [12, 17, 51, 57, 58, 59, 64, 69, 71, 91, 97, 107, 109, 129, 132, 139], "100": [12, 17, 23, 24, 25, 45, 46, 47, 51, 53, 65, 91, 95, 98, 102, 107, 109, 112, 124, 129, 136, 138], "index_nam": [12, 17, 50, 51, 102, 107], "column_templ": [12, 17, 51], "static_column_typ": [12, 102, 107], "simpl": [12, 17, 51, 62, 91, 97, 101, 107, 109, 140, 144], "skip_inconsist": 12, "between": [12, 17, 23, 24, 25, 34, 40, 43, 45, 46, 47, 51, 53, 57, 67, 70, 79, 93, 97, 98, 103, 104, 107, 113, 114, 121, 129, 130, 132, 133, 135, 136, 139, 140, 145, 152], "approach": [12, 45, 46, 47, 53, 62, 90, 91, 96, 97, 98, 113, 125, 129, 136, 138], "assum": [12, 14, 23, 24, 45, 46, 47, 51, 91, 93, 98, 138], "numer": [12, 23, 24, 51, 71, 96, 129, 132], "non": [12, 17, 23, 24, 25, 43, 45, 46, 47, 51, 53, 61, 63, 67, 77, 78, 84, 95, 97, 98, 102, 123, 129, 141, 152, 153], "subsequ": [12, 104, 129, 142], "entri": [12, 24, 55, 67, 104, 113, 152], "same": [12, 23, 24, 25, 27, 31, 32, 33, 34, 40, 43, 45, 46, 47, 51, 53, 57, 62, 64, 91, 93, 98, 107, 109, 124, 129, 131, 132, 135, 136, 137, 138, 139, 142, 145], "float": [12, 17, 23, 24, 27, 53, 102, 107, 137], "point": [12, 17, 23, 24, 43, 45, 46, 47, 109, 115, 137, 142], "resolut": [12, 17, 23, 24, 25], "assign": [12, 23, 24, 43, 45, 46, 47, 53, 69, 70, 98, 103, 107, 129, 136, 142], "ha": [12, 23, 24, 25, 43, 45, 46, 47, 50, 53, 57, 59, 61, 64, 66, 67, 69, 72, 80, 87, 88, 91, 93, 97, 98, 99, 101, 106, 108, 109, 112, 115, 129, 134, 135, 136, 142, 149, 151], "width": [12, 17, 23, 24, 25, 45, 46, 47, 51, 65, 66, 70, 76, 91, 112, 113, 114, 115, 116, 117, 118, 120, 121, 122, 123, 124], "print": [12, 17, 23, 24, 25, 45, 46, 47, 64, 91, 92, 93, 95, 97, 99, 101, 106, 107, 109, 126, 127, 129, 130, 132, 134, 135, 136, 137, 138, 139, 141, 142, 145], "kei": [12, 17, 23, 24, 25, 38, 43, 45, 46, 47, 50, 51, 53, 56, 65, 66, 67, 69, 71, 72, 73, 74, 75, 76, 77, 78, 79, 91, 98, 101, 102, 107, 130, 136], "slice": [12, 17, 23, 24, 25, 29, 103, 118, 125, 138], "uniqu": [12, 17, 23, 24, 36, 38, 39, 51, 53, 55, 63, 69, 84, 98, 102, 142], "head": [12, 17, 51], "handl": [12, 17, 20, 27, 43, 51, 53, 98, 99, 103, 104, 107, 108, 109, 111, 130], "exit": [12, 17, 64, 97], "mani": [12, 17, 43, 45, 46, 47, 62, 97, 98, 136, 137, 138, 151], "pickl": [12, 17, 51, 63, 102, 107, 128, 139], "output": [12, 17, 23, 24, 25, 51, 53, 61, 62, 63, 64, 68, 69, 79, 91, 115, 129, 136], "when": [12, 14, 17, 23, 24, 25, 45, 46, 47, 51, 53, 64, 69, 87, 89, 93, 101, 115, 128, 132, 134, 139, 147], "skip": [12, 98, 102, 107], "have": [12, 17, 23, 24, 25, 34, 40, 43, 45, 46, 47, 51, 53, 57, 58, 62, 64, 69, 73, 75, 79, 87, 88, 89, 90, 91, 92, 93, 97, 98, 101, 104, 107, 109, 112, 113, 114, 115, 124, 125, 129, 132, 134, 136, 138, 139, 140, 142, 146, 149, 151, 152], "differ": [12, 20, 23, 24, 25, 27, 34, 40, 45, 46, 47, 51, 53, 64, 66, 67, 69, 70, 73, 85, 97, 98, 101, 103, 104, 106, 107, 115, 117, 125, 129, 132, 133, 136, 138, 139, 141, 144, 145, 149, 151, 152], "length": [12, 23, 24, 25, 27, 29, 43, 45, 46, 47, 53, 57, 58, 59, 62, 63, 64, 67, 68, 69, 70, 71, 72, 73, 74, 75, 77, 78, 90, 91, 98, 99, 101, 102, 104, 105, 107, 118, 123, 129, 131, 132, 134, 135, 137, 138, 139, 140, 141, 142, 143, 144, 145, 152], "underscore_unmung": [13, 18], "constructor": [13, 23, 24, 25, 36, 37, 39, 43, 53, 93], "tree": [13, 18, 23, 24, 25, 42, 53, 65, 67, 68, 69, 70, 72, 73, 74, 75, 77, 78, 80, 94, 111, 120, 121, 122, 123, 124, 126, 129, 131, 132, 133, 135, 137, 140, 141, 142, 143, 144, 145, 152], "newick": [13, 18, 53, 65, 76], "xml": [13, 18, 53], "either": [13, 18, 21, 23, 24, 25, 31, 32, 33, 34, 50, 51, 61, 62, 64, 69, 84, 91, 93, 104, 110, 118, 125], "json": [13, 23, 24, 25, 27, 31, 32, 33, 36, 39, 43, 45, 46, 47, 53, 55, 56, 62, 64, 88, 95, 97, 111, 120, 121, 122, 123, 124, 128], "overrid": [13, 23, 24, 36, 37, 39, 51, 53, 102, 104, 107], "replac": [13, 17, 18, 23, 24, 45, 46, 47, 51, 149, 151], "underscor": [13, 18], "e": [13, 18, 23, 24, 25, 27, 34, 43, 45, 46, 47, 50, 51, 53, 55, 62, 63, 64, 88, 92, 93, 97, 98, 102, 104, 106, 107, 109, 110, 118, 125, 129, 130, 131, 132, 134, 136, 151], "sp_name": [13, 18], "becom": [13, 18, 43, 51, 64, 88, 107, 134], "sp": [13, 18], "phylonod": [13, 18, 88, 106, 134], "unmung": [13, 18], "turn": [13, 18, 45, 46, 47, 113, 149, 151], "off": [13, 18, 24, 90, 113], "although": [13, 18, 27, 102, 107, 125], "part": [13, 18, 27, 29, 53, 88, 97, 101, 132, 136, 142], "cogent3": [13, 23, 24, 25, 34, 40, 45, 46, 47, 53, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 80, 84, 87, 89, 90, 91, 92, 93, 96, 97, 98, 99, 101, 102, 104, 105, 106, 107, 108, 110, 112, 113, 114, 115, 116, 117, 118, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 134, 135, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 152], "support": [13, 23, 24, 25, 32, 33, 34, 45, 46, 47, 53, 95, 98, 101, 102, 107, 109, 111, 115, 136, 139, 152], "glob": 14, "pattern": [14, 40, 43, 45, 46, 47, 130], "If": [14, 17, 23, 24, 25, 27, 29, 34, 39, 43, 45, 46, 47, 50, 51, 53, 56, 57, 58, 61, 62, 64, 65, 67, 76, 87, 88, 89, 91, 93, 97, 98, 101, 102, 104, 107, 108, 109, 113, 114, 118, 125, 129, 132, 136, 139, 142, 153], "singl": [14, 23, 24, 25, 29, 33, 34, 45, 46, 47, 51, 53, 57, 58, 62, 64, 67, 79, 95, 98, 118, 132, 134, 142], "per": [14, 21, 23, 24, 25, 34, 45, 46, 47, 53, 91, 98, 107, 129, 136, 138, 139], "seq": [14, 16, 23, 24, 25, 27, 40, 43, 45, 46, 47, 57, 58, 59, 63, 87, 88, 90, 91, 92, 93, 98, 99, 101, 104, 105, 113, 114, 116, 118, 125, 138], "The": [14, 23, 24, 25, 27, 29, 31, 32, 33, 34, 38, 43, 45, 46, 47, 51, 53, 55, 56, 57, 58, 59, 60, 61, 65, 69, 70, 73, 75, 76, 77, 88, 89, 90, 93, 94, 95, 96, 98, 99, 101, 102, 103, 104, 107, 109, 112, 113, 114, 115, 121, 123, 124, 125, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 142, 146, 147, 149, 151, 152], "latter": [14, 23, 24, 25, 64, 91, 93, 97, 107, 121, 129, 136, 138], "induc": [14, 23, 24, 115], "progress": [14, 23, 24, 80, 129, 151], "bar": [14, 23, 24, 109, 123, 137, 151], "initi": [15, 19, 53, 89, 97, 109, 129, 132, 134, 142], "unknown": [15, 19, 98], "ad": [15, 19, 23, 24, 25, 38, 45, 46, 47, 51, 53, 55, 79, 93, 95, 98, 103, 125, 134, 139, 146, 153], "class": [15, 23, 24, 25, 27, 29, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 43, 45, 46, 47, 49, 50, 51, 53, 55, 62, 64, 73, 84, 88, 91, 93, 95, 97, 101, 104, 107, 113, 129, 134, 137, 138, 139, 152], "raw": [16, 51, 64, 101, 111, 125], "row_ord": 17, "data_fram": [17, 102, 107], "2d": [17, 45, 46, 47], "tupl": [17, 23, 24, 25, 27, 31, 32, 33, 43, 45, 46, 47, 50, 53, 61, 91, 98, 99, 103, 129, 132, 139], "top": [17, 31, 32, 33, 42, 51, 60, 61, 62, 63, 64, 66, 76, 95, 104, 121, 123], "level": [17, 31, 32, 33, 42, 60, 61, 62, 64, 89, 104, 107, 109, 124, 136], "common": [17, 53, 70, 130, 142, 151, 152], "label": [17, 23, 24, 25, 43, 45, 46, 47, 51, 53, 90, 103, 107, 121, 132], "each": [17, 23, 24, 25, 27, 31, 32, 33, 43, 45, 46, 47, 51, 53, 64, 65, 67, 89, 91, 93, 95, 97, 98, 107, 115, 132, 134, 135, 136, 139, 145], "order": [17, 23, 24, 25, 27, 34, 40, 43, 45, 46, 47, 50, 51, 53, 62, 91, 95, 97, 111, 125, 131, 134, 139, 142], "pull": [17, 23, 24], "twoddict": 17, "miss": [17, 43, 45, 46, 47, 64, 91, 98], "panda": [17, 51], "datafram": [17, 51], "supersed": 17, "treestr": [18, 131], "tip_nam": [18, 53, 70, 97, 106, 129, 142, 143, 145], "initialis": 18, "tip": [18, 53, 70, 95, 134, 142], "star": 18, "topologi": [18, 53, 95, 97], "indic": [18, 23, 24, 25, 27, 43, 45, 46, 47, 51, 53, 62, 69, 72, 73, 88, 90, 91, 92, 93, 98, 115, 116, 118, 124, 129, 136], "open_": 20, "mode": [20, 21, 36, 37, 39, 51, 62, 64, 68, 72, 73, 74, 85, 87], "rt": 20, "io": [20, 62, 63, 64, 87, 91, 99, 108, 109, 120, 121, 122, 123, 124, 136], "compress": [20, 51, 63, 64], "url": [20, 91, 103, 151, 152], "deleg": [20, 45, 46, 47], "open_url": 20, "protocol": 20, "base_path": 21, "r": [21, 23, 24, 25, 45, 46, 47, 51, 62, 64, 87, 92, 97, 99, 104, 107, 110, 131, 132, 136, 151, 152], "datastoreabc": [21, 35], "datastor": [21, 36, 37, 39, 62, 64], "directori": [21, 62, 64, 87], "open": [21, 40, 42, 51, 65, 87, 89, 103, 128, 131, 139], "w": [21, 23, 24, 25, 43, 45, 46, 47, 62, 64, 68, 92, 97, 99, 104, 110, 131, 152], "arg": [23, 24, 27, 31, 32, 33, 36, 37, 38, 39, 45, 46, 47, 53, 55, 87], "annotation_db": [23, 24, 25, 42, 45, 46, 47, 93, 98], "num_seq": [23, 24, 25], "posit": [23, 24, 25, 29, 34, 40, 43, 45, 46, 47, 51, 53, 60, 61, 62, 65, 73, 75, 89, 93, 116, 124, 125, 129, 130, 132, 138], "iter": [23, 24, 25, 29, 31, 32, 33, 45, 46, 47, 50, 51, 53, 64, 95, 134], "over": [23, 24, 25, 50, 51, 53, 65, 89, 98, 109, 115, 124, 129, 132, 139, 151], "method": [23, 24, 25, 27, 29, 31, 32, 33, 34, 35, 36, 37, 39, 40, 43, 45, 46, 47, 49, 50, 51, 53, 55, 62, 64, 69, 76, 88, 91, 93, 95, 97, 103, 104, 107, 108, 109, 112, 113, 114, 115, 125, 129, 130, 134, 135, 136, 139, 141, 142, 152], "gapped_by_map": [23, 45, 46, 47], "add_featur": [23, 25, 31, 32, 33, 45, 46, 47, 90, 91, 93], "biotyp": [23, 25, 29, 31, 32, 33, 45, 46, 47, 90, 91], "span": [23, 25, 29, 31, 32, 33, 40, 45, 46, 47, 90, 91, 93], "parent_id": [23, 25, 31, 32, 33, 45, 46, 47, 93], "strand": [23, 24, 25, 31, 32, 33, 43, 45, 46, 47, 78, 93, 97, 98], "on_align": [23, 31, 32, 33, 45, 46, 47, 93, 98], "itself": [23, 25, 27, 34, 45, 46, 47, 91, 107, 134], "incompat": 23, "parent": [23, 25, 29, 31, 32, 33, 35, 45, 46, 47, 53, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 97, 102, 107, 129, 131, 132, 134, 135, 141, 142, 143, 144], "biolog": [23, 25, 31, 32, 33, 45, 46, 47, 90, 93, 98, 132, 133, 152], "g": [23, 24, 25, 27, 34, 43, 45, 46, 47, 51, 53, 55, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 88, 91, 92, 94, 97, 98, 99, 101, 104, 106, 107, 110, 117, 118, 125, 129, 130, 131, 132, 135, 136, 141, 142, 143, 144, 145, 151], "cd": [23, 25, 57, 58, 59, 93, 98, 109, 111, 113, 114, 118], "plu": [23, 25, 51, 62, 90, 98, 142], "coordin": [23, 24, 25, 29, 45, 46, 47, 93, 124], "set": [23, 24, 25, 27, 40, 43, 45, 46, 47, 50, 51, 53, 61, 68, 69, 70, 72, 74, 75, 77, 78, 87, 91, 93, 98, 99, 101, 106, 115, 124, 125, 126, 127, 128, 129, 131, 132, 136, 137, 138, 139, 141, 142], "rais": [23, 24, 25, 27, 29, 43, 45, 46, 47, 50, 53, 57, 58, 62, 87, 97, 99, 108, 109, 136], "valueerror": [23, 24, 25, 45, 47, 53, 57, 58], "add_from_ref_aln": [23, 24, 91], "ref_aln": [23, 24, 91], "before_nam": [23, 24, 25, 91], "after_nam": [23, 24, 25, 91], "insert": [23, 24, 25, 53, 134], "": [23, 24, 25, 40, 45, 46, 47, 50, 51, 53, 55, 59, 72, 74, 76, 77, 78, 79, 87, 88, 89, 90, 92, 93, 97, 98, 99, 100, 101, 102, 103, 104, 107, 110, 117, 118, 120, 125, 128, 129, 131, 132, 134, 135, 138, 139, 141, 142, 143, 145, 151, 152], "self": [23, 24, 25, 27, 29, 31, 32, 33, 34, 40, 43, 45, 46, 47, 51, 53, 87, 93, 99, 108, 109], "base": [23, 24, 25, 27, 40, 43, 45, 46, 47, 50, 53, 63, 80, 93, 98, 107, 109, 125, 130, 136, 151, 153], "refer": [23, 24, 25, 36, 37, 39, 88, 93, 97, 98, 101, 106, 107, 111, 132, 151], "0": [23, 24, 25, 27, 34, 40, 45, 46, 47, 51, 53, 57, 58, 59, 62, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 87, 88, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 101, 102, 104, 105, 106, 107, 109, 115, 117, 118, 121, 122, 124, 125, 126, 127, 128, 129, 130, 131, 132, 134, 135, 136, 138, 139, 140, 141, 142, 143, 144, 145], "By": [23, 24, 25, 62, 77, 78, 101, 115, 129, 135], "append": [23, 24, 25, 51, 53, 64, 98, 109, 134], "end": [23, 24, 25, 31, 32, 33, 36, 39, 45, 46, 47, 51, 53, 64, 91, 93, 98, 107, 121, 132, 136, 139], "chang": [23, 24, 25, 27, 34, 40, 43, 53, 62, 69, 75, 89, 91, 93, 97, 104, 106, 113, 123, 129, 132, 139, 147, 149, 151], "seri": [23, 24, 45, 46, 47, 50, 51, 64, 95, 98, 103, 136], "new": [23, 24, 25, 27, 29, 31, 32, 33, 34, 43, 45, 46, 47, 50, 51, 53, 89, 93, 98, 103, 106, 129, 134, 135, 140, 149, 151, 152], "structur": [23, 24, 53, 97, 149, 151, 152], "ref_nam": [23, 24, 25], "befor": [23, 24, 25, 43, 53, 113, 129, 130, 145], "both": [23, 24, 25, 45, 46, 47, 51, 53, 84, 87, 88, 91, 93, 95, 98, 99, 101, 118, 139, 142], "exampl": [23, 24, 27, 31, 32, 33, 34, 42, 45, 46, 47, 57, 58, 64, 67, 70, 72, 74, 75, 87, 91, 92, 93, 97, 99, 101, 102, 103, 104, 106, 107, 109, 118, 125, 126, 127, 128, 129, 130, 131, 132, 133, 135, 136, 137, 138, 139, 140, 142, 144, 145, 146, 149, 151], "aln1": [23, 24, 98, 130, 140, 145], "ac": [23, 24, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 92, 97], "defghi": [23, 24], "seq1": [23, 24, 25, 91, 93, 96, 98, 101, 104], "xxxxxx": [23, 24], "xx": [23, 24], "seq2": [23, 24, 25, 91, 96, 98, 101], "yyyi": [23, 24], "yyyyi": [23, 24], "seq3": [23, 24, 91], "aln2": [23, 24, 98, 130, 140, 145], "acdefghi": [23, 24], "kl": [23, 24], "mnpr": [23, 24], "seqx": [23, 24], "klacmnpr": [23, 24], "seqi": [23, 24], "seqz": [23, 24], "acmnpr": [23, 24], "add_seq": [23, 24, 25, 91], "coerceabl": [23, 24, 25], "alignment_qu": [23, 24], "app_nam": [23, 24], "ic_scor": [23, 24], "comput": [23, 24, 25, 31, 32, 33, 51, 53, 65, 89, 97, 103, 109, 112, 116, 128, 129, 130, 132, 133, 138, 139, 146, 152, 153], "qualiti": [23, 24, 89], "score": [23, 24, 25, 45, 46, 47, 53, 93, 106, 139], "calcul": [23, 24, 25, 45, 46, 47, 53, 87, 90, 97, 126, 127, 132, 133, 135, 136, 138, 139, 141], "cogent3_scor": [23, 24], "sp_score": [23, 24], "app_help": [23, 24, 61, 62], "notcomplet": [23, 24, 34, 39, 62, 64], "could": [23, 24, 43, 45, 46, 47, 57, 58, 62, 64, 91, 93, 98, 107, 114, 130, 134, 136, 139, 142], "annotate_from_gff": [23, 25, 45, 46, 47, 98], "f": [23, 24, 25, 40, 45, 46, 47, 50, 62, 64, 87, 92, 97, 99, 101, 104, 106, 108, 109, 110, 128, 131, 134, 135, 136, 139], "seq_id": [23, 25, 98], "copi": [23, 24, 25, 31, 32, 33, 45, 46, 47, 53, 91, 93, 148], "gff": [23, 25, 31, 33, 45, 46, 47, 111], "seq_nam": [23, 24, 25], "doe": [23, 24, 25, 34, 43, 45, 46, 47, 50, 53, 56, 77, 78, 87, 91, 93, 98, 102, 107], "offset": [23, 25, 45, 46, 47, 98], "directli": [23, 24, 25, 27, 43, 53, 98, 101, 102, 107, 110, 125, 129], "annotation_offset": [23, 25, 45, 46, 47, 98], "properti": [23, 24, 25, 29, 31, 32, 33, 35, 36, 37, 39, 40, 45, 46, 47, 50, 51, 53, 64, 68, 90, 93, 97, 109, 129, 132, 134], "apply_pssm": [23, 24, 25], "pssm": [23, 24, 25], "background": [23, 24, 25, 75, 129, 130], "pseudocount": [23, 24, 25, 91], "ui": [23, 24, 25], "profil": [23, 24, 25, 27, 97], "jaspar": [23, 24, 25, 111, 117], "cisbp": [23, 24, 25], "matrix": [23, 24, 25, 45, 46, 47, 53, 67, 97, 106, 107, 115, 126, 127, 128, 131, 139], "adjust": [23, 24, 25, 43, 45, 46, 47, 67, 77, 97, 125, 132, 139], "zero": [23, 24, 25, 91], "numpi": [23, 24, 25, 50, 51, 53, 91, 109, 129, 132, 138], "arrai": [23, 24, 25, 27, 43, 50, 51, 53, 91, 93, 109, 129, 130, 132, 138], "log2": [23, 24, 25], "everi": [23, 24, 25, 43, 45, 46, 47, 53, 57, 58, 64, 93, 102, 106, 107, 139], "coevolut": [23, 24, 130], "nmi": [23, 24, 112, 130], "segment": [23, 24, 25, 45, 46, 47, 98, 113, 138], "drawabl": [23, 24, 25, 45, 46, 47, 112, 113, 114, 115], "perform": [23, 24, 43, 51, 53, 62, 63, 76, 83, 91, 96, 97, 106, 107, 108, 109, 133, 135, 136, 138, 152], "pairwis": [23, 24, 25, 94, 126, 127, 133, 139], "measur": [23, 24, 53, 84, 95, 112, 152, 153], "metric": [23, 24, 25, 53, 66, 95, 138], "normal": [23, 24, 25, 45, 46, 47, 51], "mutual": [23, 24, 112, 130], "inform": [23, 24, 34, 53, 61, 62, 64, 70, 87, 93, 96, 98, 101, 112, 117, 130, 138], "valid": [23, 24, 25, 27, 36, 37, 39, 43, 45, 46, 47, 51, 53, 64, 79, 97, 98, 107, 109, 123, 136], "choic": [23, 24, 25], "rmi": [23, 24, 130], "resampl": [23, 24, 95, 124, 138], "mi": [23, 24, 130], "start": [23, 24, 31, 32, 33, 40, 45, 46, 47, 51, 53, 62, 91, 93, 98, 99, 107, 129, 130, 132, 135, 136, 138, 139, 140, 142], "pair": [23, 24, 25, 43, 45, 46, 47, 50, 53, 67, 91, 98, 104, 106, 107, 130], "within": [23, 24, 31, 32, 33, 45, 46, 47, 51, 53, 64, 93, 97, 107, 109, 113, 118, 129, 132, 136, 146, 152], "examin": [23, 24, 64, 70], "result": [23, 24, 25, 27, 34, 36, 37, 39, 43, 45, 46, 47, 51, 53, 57, 61, 62, 64, 65, 66, 67, 69, 70, 72, 73, 74, 75, 76, 77, 78, 88, 91, 98, 106, 107, 114, 115, 125, 129, 130, 132, 134, 135, 136, 138, 139, 141, 145], "capabl": [23, 24, 84, 91, 97, 146, 149, 151, 152], "plot": [23, 24, 25, 45, 46, 47, 53, 116, 135, 147], "box": [23, 24, 112, 117], "heatmap": [23, 24], "violin": [23, 24], "show": [23, 24, 61, 65, 66, 70, 76, 91, 93, 94, 97, 98, 101, 106, 112, 113, 114, 115, 116, 117, 118, 120, 121, 122, 123, 129, 142, 146], "dictarrai": [23, 24, 65, 88, 97, 129, 132], "lower": [23, 24, 69, 71, 97, 109, 129, 131, 132, 152], "triangular": [23, 24], "upper": [23, 24, 69, 71, 88, 109, 129, 132], "element": [23, 24, 25, 27, 43, 45, 46, 47, 51, 64, 67, 88, 98, 103, 136], "estim": [23, 24, 25, 69, 73, 77, 78, 94, 95, 109, 112, 129, 133, 135, 137, 139, 141, 152], "reason": [23, 24, 45, 46, 47, 87, 139], "nan": [23, 24, 130], "deep": [23, 24, 25], "copy_annot": [23, 25, 45, 46, 47, 98], "seq_db": [23, 25, 45, 46, 47], "attach": [23, 25, 45, 46, 47, 135], "count_gaps_per_po": [23, 24], "include_ambigu": [23, 24, 25, 45, 46, 47, 91], "count": [23, 24, 25, 27, 31, 32, 33, 43, 45, 46, 47, 51, 53, 93, 129], "count_gaps_per_seq": [23, 24, 115], "induced_bi": [23, 24], "consid": [23, 24, 27, 53, 70, 97, 98, 113, 136, 138, 139, 142], "via": [23, 24, 34, 68, 69, 91, 104, 107, 130, 149, 151], "motif_length": [23, 24, 25, 43, 45, 46, 47, 60, 61, 78, 91, 97, 112], "allow_gap": [23, 24, 25, 29, 45, 46, 47, 98], "exclude_unobserv": [23, 24, 25, 45, 46, 47], "motif": [23, 24, 25, 27, 43, 45, 46, 47, 66, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 129, 131, 132, 135, 138, 141, 142, 143, 144, 145, 149, 151], "No": [23, 24, 25, 45, 46, 47, 87, 117, 149, 151], "expans": [23, 24, 25, 45, 46, 47], "those": [23, 24, 25, 31, 32, 33, 45, 46, 47, 51, 57, 62, 64, 65, 75, 89, 91, 97, 101, 102, 107, 125, 129, 132, 145], "attempt": [23, 24, 25, 45, 46, 47, 51, 97, 134], "unobserv": [23, 24, 25, 45, 46, 47, 67], "combin": [23, 24, 25, 34, 45, 46, 47, 51, 62, 79, 98, 103, 108, 109, 138], "exclud": [23, 24, 25, 27, 45, 46, 47, 51, 53, 61, 63, 91, 130], "overlap": [23, 24, 25, 29, 34, 45, 46, 47, 53, 61, 62, 91, 98, 120], "counts_per_po": [23, 24], "alert": [23, 24, 25], "warn": [23, 24, 25, 43, 45, 46, 47, 53, 97, 147], "trim": [23, 24, 45, 47, 99], "produc": [23, 24, 27, 34, 62, 64, 87, 89, 129, 136], "counts_per_seq": [23, 24, 25], "canon": [23, 24, 45, 46, 47, 114], "motifcountsarrai": [23, 24, 25], "deepcopi": [23, 24, 25, 53], "reduc": [23, 24, 25, 33, 129], "current": [23, 24, 25, 34, 40, 45, 46, 47, 51, 53, 64, 67, 75, 107, 129, 130, 139], "interv": [23, 24, 25, 45, 46, 47, 109], "also": [23, 24, 25, 34, 50, 53, 62, 64, 67, 69, 84, 88, 90, 91, 93, 95, 96, 97, 98, 101, 102, 104, 106, 107, 108, 109, 117, 128, 129, 130, 132, 136, 138, 139, 142, 149, 151, 152], "drop": [23, 24, 25, 36, 39, 63, 139], "default_gap": [23, 24], "degap": [23, 24, 25, 43, 45, 46, 47, 90, 91], "distance_matrix": [23, 24, 25, 88, 95, 96], "calc": [23, 24, 25, 88, 95, 96, 138], "pdist": [23, 24, 25, 88, 96], "drop_invalid": [23, 24], "distanc": [23, 24, 25, 45, 46, 47, 53, 84, 94, 107, 126, 127, 133, 134, 139, 152], "For": [23, 24, 25, 27, 34, 45, 46, 47, 53, 58, 62, 64, 66, 69, 75, 87, 91, 96, 98, 99, 102, 104, 107, 125, 129, 132, 134, 136, 139, 144, 149, 151, 152], "evolv": [23, 24, 72, 75, 90, 94, 95, 96, 97, 126, 127, 128, 129, 130, 131, 135, 137, 139, 140, 141, 142, 143, 144, 145, 149, 151], "fast_dist": [23, 24, 96, 139], "available_dist": [23, 24, 96], "control": [23, 24, 53, 69, 107, 121, 124, 131, 135, 136, 141], "displai": [23, 24, 25, 45, 46, 47, 51, 62, 64, 68, 69, 70, 71, 73, 75, 77, 78, 84, 93, 95, 97, 102, 117, 118, 120, 124, 129, 134, 139, 141, 142, 145, 151], "arithmeticerror": [23, 24, 97], "observ": [23, 24, 91, 107, 129, 135, 137, 141], "dotplot": [23, 24, 25], "name1": [23, 24, 25, 53, 113, 114], "name2": [23, 24, 25, 53, 113, 114], "window": [23, 24, 25, 45, 46, 47, 113, 116, 138], "20": [23, 24, 25, 62, 64, 65, 67, 68, 70, 71, 72, 73, 74, 75, 76, 77, 78, 97, 107, 115, 117, 129, 132, 136, 138], "threshold": [23, 24, 25, 113, 124], "k": [23, 24, 25, 45, 46, 47, 50, 92, 95, 97, 104, 108, 109, 110, 131, 139, 149, 151], "min_gap": [23, 24, 25], "500": [23, 24, 25, 51, 65, 66, 70, 76, 115, 116, 117, 124, 132], "rc": [23, 24, 25, 43, 45, 46, 47, 90, 98, 113], "random": [23, 24, 25, 43, 45, 46, 47, 51, 53, 137, 138], "chosen": [23, 24, 25, 93, 113], "made": [23, 24, 25, 43, 45, 46, 47, 53, 89, 104, 138, 151], "mer": [23, 24, 25, 45, 46, 47, 149, 151], "size": [23, 24, 25, 27, 61, 113, 136, 138, 139], "comparison": [23, 24, 25], "ident": [23, 24, 25, 45, 46, 47, 53, 57, 91, 132, 137], "break": [23, 24, 25, 91, 107, 135], "larger": [23, 24, 25, 45, 46, 47, 136, 139], "increas": [23, 24, 25, 136, 142], "speed": [23, 24, 25, 27, 72, 74, 97, 112], "join": [23, 24, 25, 51, 91, 94, 133], "adjac": [23, 24, 25, 91, 113], "figur": [23, 24, 25, 45, 46, 47, 89, 98, 108, 109, 113], "height": [23, 24, 25, 53, 65, 66, 70, 76, 115, 116, 117, 118, 120, 121, 122, 123, 124], "ratio": [23, 24, 25, 68, 72, 77, 94, 102, 107, 129, 132, 135, 137, 140, 141, 142, 145], "len": [23, 24, 25, 27, 64, 90, 91, 93, 98, 109, 136, 138, 139, 145], "revers": [23, 24, 25, 43, 45, 46, 47, 51, 67, 91, 93, 97, 98, 129, 152], "compliment": [23, 24, 25], "nucleic": [23, 24, 25, 27, 45, 46, 47, 103], "acid": [23, 24, 25, 27, 40, 45, 46, 47, 59, 64, 97, 101, 103, 110, 125, 130, 131], "annotateddraw": [23, 24, 25, 114], "entropy_per_po": [23, 24], "shannon": [23, 24, 25], "entropi": [23, 24, 25, 116], "entropy_per_seq": [23, 24, 25], "avoid": [23, 24, 25, 43], "unnecessari": [23, 24, 25, 102, 107], "filter": [23, 24, 51, 63, 98, 102], "predic": [23, 24, 132], "drop_remaind": [23, 24], "callback": [23, 24, 25, 45, 46, 47, 51, 102, 107], "take": [23, 24, 25, 27, 43, 45, 46, 47, 51, 62, 65, 83, 88, 91, 97, 107, 117, 131, 136, 137, 139], "split": [23, 24, 61, 93, 98, 101, 109, 130, 134, 136, 140, 145], "3": [23, 24, 25, 45, 46, 47, 53, 57, 62, 64, 65, 66, 67, 68, 70, 71, 72, 73, 74, 75, 76, 77, 78, 87, 90, 91, 92, 93, 94, 95, 97, 98, 99, 101, 102, 104, 105, 106, 107, 108, 109, 110, 112, 115, 117, 121, 125, 129, 130, 132, 134, 135, 136, 138, 139, 140, 141, 142, 144, 145, 151, 152], "codon": [23, 24, 25, 27, 40, 45, 47, 59, 62, 63, 64, 72, 74, 78, 85, 110, 125, 133, 135, 142, 152, 153], "modulo": [23, 24], "allow": [23, 24, 25, 34, 43, 45, 46, 47, 53, 60, 62, 91, 93, 95, 97, 99, 101, 102, 104, 107, 109, 132, 133], "termin": [23, 24, 25, 45, 46, 47, 53, 63, 64, 99, 106], "gap_char": [23, 24], "keep": [23, 24, 29, 53, 102, 107, 129, 139], "get_ambiguous_posit": [23, 24, 25], "char": [23, 24, 25, 43, 45, 46, 47], "likelihood": [23, 24, 25, 27, 53, 63, 65, 66, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 95, 106, 123, 129, 131, 132, 133, 135, 137, 141, 142, 143], "get_degapped_relative_to": [23, 24, 91], "remov": [23, 24, 25, 29, 39, 45, 46, 47, 50, 53, 63, 101, 106, 134], "given": [23, 24, 45, 46, 47, 50, 51, 68, 91, 98, 132, 138, 151], "alwai": [23, 24, 25, 27, 34, 40, 43, 45, 46, 47, 53, 62, 91, 130, 136, 149, 151], "get_draw": [23, 29, 45, 46, 47, 98, 118], "600": [23, 45, 46, 47, 65, 98, 114, 120, 121, 122, 123], "vertic": [23, 24, 45, 46, 47, 98], "get_featur": [23, 25, 45, 46, 47, 98], "pixel": [23, 24, 45, 46, 47, 124], "rotat": [23, 45, 46, 47], "allow_parti": [23, 24, 25, 31, 32, 33, 45, 46, 47], "yield": [23, 24, 25, 31, 32, 33, 45, 46, 47, 93, 98, 130], "search": [23, 25, 45, 46, 47, 93, 95, 98, 149, 151], "gene": [23, 25, 31, 32, 33, 45, 46, 47, 72, 98, 118, 136, 153], "queri": [23, 24, 43, 103, 114, 139, 149, 151, 153], "ignor": [23, 24, 25, 39, 45, 46, 47, 51, 53, 64, 97, 107], "partial": [23, 25, 91, 99], "deal": [23, 25, 45, 46, 47, 136], "consist": [23, 25, 34, 45, 46, 47, 57, 59, 65, 107, 136, 145, 149], "orient": [23, 25, 45, 46, 47, 53, 106], "irrespect": [23, 25, 45, 46, 47], "get_gap_arrai": [23, 24], "get_gapped_seq": [23, 24, 91], "seqnam": [23, 24, 25], "arraysequ": [23, 43], "get_identical_set": [23, 24, 25], "mask_degen": [23, 24, 25], "degener": [23, 24, 25, 27, 43, 45, 46, 47, 61, 103], "get_length": [23, 24, 25], "get_motif_prob": [23, 24, 25, 91, 97], "alphabet": [23, 24, 25, 42, 43, 45, 46, 47, 53, 91, 97, 99, 103, 104, 130], "dictionari": [23, 24, 25, 27, 43, 51, 53, 69, 70, 91, 93, 107, 129, 132], "prob": [23, 24, 25], "averag": [23, 24, 25, 53, 77, 78, 129], "frequenc": [23, 24, 25, 43, 45, 46, 47, 73, 77, 78, 91, 97, 129, 130, 131, 152], "across": [23, 24, 25, 31, 32, 33, 69, 128, 129, 132, 136, 142, 145], "resolv": [23, 24, 25, 99, 104], "get_position_indic": [23, 24], "nativ": [23, 24, 139], "negat": [23, 24, 25, 49, 51, 91, 102, 107], "col": [23, 24, 51, 91], "boolean": [23, 24, 51], "get_projected_featur": 23, "project": [23, 149], "onto": [23, 98, 139], "bound": [23, 34, 35, 53, 65, 93, 98, 109], "get_seq": [23, 24, 25, 91, 98], "ungap": [23, 24, 43, 45, 46, 47, 91], "get_seq_indic": [23, 24, 25], "get_similar": [23, 24, 25], "target": [23, 24, 25, 53, 99, 134, 146], "min_similar": [23, 24, 25], "max_similar": [23, 24, 25], "util": [23, 24, 25, 45, 46, 47, 55, 91, 93, 95, 97, 102, 107, 108], "transform": [23, 24, 25, 45, 46, 47], "for_seq": [23, 24, 25, 45, 46, 47], "similar": [23, 24, 25, 27, 45, 46, 47, 93, 139], "compar": [23, 24, 25, 45, 46, 47, 51, 53, 68, 97, 108, 109, 113, 129, 134, 135, 151], "minimum": [23, 24, 25, 106], "kept": [23, 24, 25, 53, 95, 139], "inclus": [23, 24, 25, 89], "first_seq": [23, 24, 25], "second_seq": [23, 24, 25], "fraction": [23, 24, 25, 45, 46, 47, 51, 53, 63], "rang": [23, 24, 25, 63, 90, 91, 98, 102, 106, 107, 136], "lot": [23, 24, 25, 53, 91], "unbound": [23, 24, 25], "act": [23, 24, 25, 45, 46, 47, 72, 73, 74, 75, 76, 77, 91, 92, 97, 99, 107, 110, 129], "frac_same_gap": [23, 24, 25, 45, 46, 47], "whole": [23, 24, 25], "frequent": [23, 24, 25, 91, 101], "elimin": [23, 24, 25, 63, 149], "real": [23, 24, 25, 138, 152], "extract": [23, 24, 25, 62, 141], "rnasequ": [23, 24, 25, 88, 90], "depend": [23, 24, 25, 43, 53, 147, 151], "fail": [23, 24, 25, 29, 43, 87, 99, 136, 141], "get_transl": [23, 24, 25, 45, 47, 90, 94, 99, 105, 112, 117, 125], "gc": [23, 24, 25, 40, 45, 47, 62, 64, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 91, 92, 94, 97, 99, 110, 125, 129, 135], "incomplete_ok": [23, 24, 25, 45, 47, 99, 117], "include_stop": [23, 24, 25, 40, 45, 47, 99], "trim_stop": [23, 24, 25, 45, 47, 99], "translat": [23, 24, 25, 40, 45, 47, 59, 64, 94, 104, 105, 125], "core": [23, 24, 25, 45, 46, 47, 75, 90, 91, 93, 94, 98, 99, 101, 104, 105, 106, 125, 129, 130, 134, 136], "genetic_cod": [23, 24, 25, 42], "available_cod": [23, 24, 25, 42, 110], "mix": [23, 24, 25, 45, 47], "nucleotid": [23, 24, 25, 40, 45, 47, 57, 63, 67, 68, 96, 101, 118, 129, 132, 143, 144, 152, 153], "stop": [23, 24, 25, 40, 45, 46, 47, 63, 64, 97, 98, 110], "thei": [23, 24, 25, 27, 34, 53, 57, 59, 62, 64, 69, 79, 91, 93, 96, 98, 99, 117, 125, 132, 134, 139, 142, 146, 151], "relat": [23, 24, 25, 73, 91, 93, 134, 135, 139, 151, 153], "has_terminal_stop": [23, 24, 25, 45, 47], "input": [23, 24, 25, 27, 34, 43, 45, 46, 47, 61, 62, 63, 64, 79, 87, 88, 95, 101, 125, 130, 136], "get_cod": [23, 24, 25, 40, 42, 45, 47, 99, 105], "except": [23, 24, 25, 27, 29, 34, 45, 47, 53, 87, 97, 98, 99, 108, 109, 117, 136], "divis": [23, 24, 25, 45, 47, 64, 91, 110], "deprec": [23, 24, 25, 51], "information_plot": [23, 24, 116], "stat": [23, 24, 62, 66, 67, 75, 95, 97, 102, 107, 111, 116, 129, 132, 135, 138, 141, 145], "median": [23, 24, 94, 116], "include_gap": [23, 24, 43, 116], "smooth": [23, 24], "sqrt": [23, 24, 53, 136], "mean": [23, 24, 45, 46, 47, 62, 64, 91, 93, 97, 98, 102, 106, 107, 125, 129, 132, 135, 138, 139, 142], "summari": [23, 24, 62, 64, 69, 103], "statist": [23, 24, 51, 53, 62, 69, 72, 73, 74, 97, 103, 107, 109, 128, 129, 130, 131, 132, 135, 137, 139, 141, 145, 151], "shown": [23, 24, 62, 64, 71, 97, 98, 99, 105, 115, 136], "y": [23, 24, 25, 27, 40, 45, 46, 47, 91, 92, 97, 98, 102, 104, 107, 109, 110, 124, 131, 132], "axi": [23, 24], "is_arrai": [23, 24, 25], "array_seq": [23, 24, 25], "is_rag": [23, 24, 25], "iter_posit": [23, 24, 91], "pos_ord": [23, 24, 25], "let": [23, 24, 25, 88, 93, 98, 134, 139], "you": [23, 24, 25, 27, 34, 43, 45, 46, 47, 53, 57, 58, 60, 61, 64, 65, 67, 68, 82, 84, 87, 88, 89, 90, 91, 92, 93, 97, 98, 99, 101, 102, 107, 108, 109, 111, 118, 120, 125, 129, 130, 136, 137, 139, 142, 146, 147, 149, 151, 152, 153], "rearrang": [23, 24], "want": [23, 24, 34, 43, 45, 46, 47, 53, 60, 61, 62, 67, 91, 93, 97, 98, 101, 102, 107, 109, 118, 125, 129, 132, 134, 137, 138, 140, 145, 153], "individu": [23, 24, 61, 64, 69, 97, 100, 102, 107, 136, 146, 151, 152], "map": [23, 24, 25, 29, 40, 43, 45, 46, 47, 50, 53, 69, 98, 104, 133], "Will": [23, 24, 25, 51, 53], "indexerror": [23, 24], "exce": [23, 24, 25], "happen": [23, 24, 71], "rag": [23, 24], "seq_len": [23, 24], "iter_select": [23, 24, 25], "seq_ord": [23, 24, 25], "select": [23, 24, 25, 31, 32, 33, 51, 64, 69, 73, 74, 75, 81, 97, 98, 100, 113, 136, 139, 142, 152, 153], "subset": [23, 24, 25, 27, 31, 32, 33, 45, 46, 47, 53, 93, 98, 102, 106, 107, 142, 149, 151], "along": [23, 24, 25, 53, 60, 98], "down": [23, 24, 25, 118, 136], "transpos": [23, 24, 25, 51], "j": [23, 24, 25, 27, 45, 46, 47, 97, 151], "possibli": [23, 24, 25, 53], "iteritem": [23, 24, 25], "built": [23, 24, 25, 80, 84, 117], "iter_seq": [23, 24, 25], "give": [23, 24, 25, 53, 64, 89, 138], "keyerror": [23, 24, 25, 27, 43, 45, 46, 47, 50, 62, 91, 108, 109], "been": [23, 24, 25, 53, 69, 73, 93, 97, 98, 114, 129, 139, 142, 146, 149, 151], "delet": [23, 24, 25, 43, 45, 46, 47, 53, 134], "named_seq": [23, 24, 25], "accept": [23, 24, 25, 61, 68, 93, 109], "iupac_consensu": [23, 24], "iupac": [23, 24, 45, 46, 47, 110], "consensu": [23, 24, 95], "majority_consensu": [23, 24], "most": [23, 24, 25, 45, 46, 47, 53, 62, 77, 84, 87, 91, 97, 99, 106, 108, 109, 142, 149, 152], "item": [23, 24, 27, 43, 45, 46, 47, 50, 53, 106, 108, 109, 116, 129], "make_featur": [23, 25, 45, 46, 47], "featuredatatyp": [23, 25, 31, 32, 33, 45, 46, 47], "creat": [23, 24, 25, 29, 34, 40, 43, 45, 46, 47, 60, 61, 62, 70, 87, 88, 89, 97, 99, 101, 103, 114, 126, 127, 128, 129, 130, 131, 134, 136, 137, 138, 139, 140, 141, 144, 145], "necessari": [23, 25, 53, 93, 129, 132, 134], "rto": [23, 25], "To": [23, 24, 25, 31, 32, 33, 45, 46, 47, 64, 70, 88, 91, 93, 97, 98, 101, 102, 107, 109, 124, 129, 130, 132, 134, 136, 138, 139, 142, 145, 146], "matching_ref": [23, 24], "gap_fract": [23, 24, 34, 91], "gap_run": [23, 24], "well": [23, 24, 45, 46, 47, 97, 111, 132, 134], "templat": [23, 24, 51], "consecut": [23, 24, 25], "toler": [23, 24, 97, 129, 130], "rel": [23, 24, 45, 46, 47, 53, 124, 129, 133, 137], "b": [23, 24, 25, 53, 88, 91, 95, 97, 102, 104, 106, 107, 108, 109, 130, 134, 144, 151], "d": [23, 24, 25, 43, 45, 46, 47, 50, 92, 96, 97, 101, 104, 106, 107, 108, 109, 110, 126, 127, 128, 131, 134, 137, 144, 151, 152], "h": [23, 24, 25, 45, 46, 47, 53, 92, 97, 99, 104, 106, 107, 110, 131, 151], "l": [23, 24, 25, 45, 46, 47, 51, 92, 95, 97, 109, 110, 117, 131, 139, 152], "m": [23, 24, 25, 45, 46, 47, 62, 64, 72, 73, 74, 87, 91, 92, 93, 97, 98, 99, 104, 109, 110, 125, 129, 131, 136, 139, 142, 151], "n": [23, 24, 25, 27, 45, 46, 47, 53, 77, 91, 92, 97, 104, 106, 110, 125, 129, 131, 134, 136, 138], "o": [23, 24, 25, 53, 109, 113, 136], "p": [23, 24, 25, 45, 46, 47, 59, 68, 69, 92, 97, 105, 110, 131, 135, 137, 138, 141, 145, 151], "q": [23, 24, 25, 45, 46, 47, 69, 92, 97, 110, 131], "t": [23, 24, 25, 27, 34, 39, 43, 45, 46, 47, 53, 57, 58, 62, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 88, 89, 91, 92, 94, 97, 98, 99, 101, 102, 104, 106, 107, 109, 110, 117, 118, 125, 129, 131, 132, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 147, 152], "u": [23, 24, 25, 27, 45, 46, 47, 62, 64, 89, 91, 92, 104, 134], "v": [23, 24, 25, 45, 46, 47, 50, 59, 92, 97, 99, 104, 110, 131, 151], "x": [23, 24, 25, 40, 57, 58, 59, 62, 63, 64, 66, 67, 68, 69, 71, 75, 76, 77, 78, 88, 91, 93, 94, 96, 97, 98, 99, 101, 102, 104, 107, 109, 110, 124, 125, 130, 140, 144, 145], "z": [23, 24, 25, 77, 97, 130, 151], "no_degener": [23, 24, 91, 112], "unit": [23, 24, 151], "evolutionari": [23, 24, 53, 62, 63, 84, 91, 96, 129, 132, 142, 153], "omit_bad_seq": [23, 24, 34, 63], "quantil": [23, 24, 34], "introduc": [23, 24, 125], "exceed": [23, 24, 97], "obtain": [23, 24, 91, 94, 109, 132, 137, 139], "cutoff": [23, 24, 130], "than": [23, 24, 25, 34, 38, 51, 53, 62, 89, 91, 93, 96, 97, 101, 109, 125, 132, 134, 135, 136, 145, 152], "omit_gap_po": [23, 24, 91], "allowed_gap_frac": [23, 24, 25], "999999": [23, 24], "proport": [23, 24, 25, 45, 46, 47, 75, 129], "just": [23, 24, 34, 45, 46, 47, 50, 51, 53, 57, 58, 62, 64, 69, 71, 73, 88, 91, 93, 98, 99, 101, 102, 104, 106, 107, 109, 118, 129, 130, 135, 136, 138, 139, 141, 143, 144, 145, 152], "least": [23, 24, 25, 43, 53, 107, 129, 133], "preserv": [23, 24, 25, 29, 45, 47, 51, 53, 91, 125, 134], "6": [23, 24, 25, 57, 58, 59, 62, 63, 64, 65, 67, 68, 70, 71, 72, 73, 74, 75, 76, 90, 91, 96, 98, 102, 104, 106, 107, 109, 110, 129, 132, 135, 138, 140], "strictli": [23, 24], "correspond": [23, 24, 27, 29, 31, 32, 33, 36, 39, 43, 45, 46, 47, 50, 51, 64, 65, 66, 69, 73, 91, 97, 98, 107, 112, 115, 136, 138], "omit_gap_run": [23, 24, 25, 91], "allowed_run": [23, 24, 25], "run": [23, 24, 25, 53, 62, 96, 97, 98, 104, 126, 127, 128, 130, 136, 137, 141], "exactli": [23, 24, 25, 53, 98, 138, 142], "becaus": [23, 24, 25, 27, 53, 62, 69, 71, 72, 74, 89, 91, 96, 97, 98, 107, 125, 129, 132, 138, 139], "test": [23, 24, 25, 43, 45, 46, 47, 51, 53, 76, 91, 107, 111, 112, 126, 130, 132, 133, 134, 137, 139, 140, 142, 145, 151, 152], "trigger": [23, 24, 25], "neg": [23, 24, 25], "still": [23, 24, 25, 149], "through": [23, 24, 25, 27, 84, 89, 91, 134], "omit_gap_seq": [23, 24, 25, 91], "pad_seq": [23, 24, 25], "pad_length": [23, 24, 25], "pad": [23, 24, 25], "max": [23, 24, 25, 53], "less": [23, 24, 25, 91, 152], "probs_per_po": [23, 24], "motiffreqsarrai": [23, 24, 25, 117], "probs_per_seq": [23, 24, 25], "quick_tre": [23, 24], "percent": [23, 24, 45, 46, 47, 57, 59, 91], "bootstrap": [23, 24, 95, 133], "parametr": [23, 24, 75, 95, 129, 133], "replic": [23, 24, 93, 124, 129, 137, 138], "build": [23, 24, 25, 34, 97, 126, 127, 146], "phylogeni": [23, 24, 53, 152], "phylogenet": [23, 24, 53, 126, 134, 152], "weight": [23, 24, 43, 45, 46, 47, 95, 129], "major": [23, 24, 62, 146], "node": [23, 24, 53, 65, 97, 124, 133, 142], "store": [23, 24, 32, 35, 36, 37, 38, 39, 62, 93, 98, 107, 129, 136], "edg": [23, 24, 53, 65, 66, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 95, 97, 102, 107, 120, 126, 127, 129, 131, 132, 135, 139, 141, 143, 144], "param": [23, 24, 53, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 94, 97, 106, 129, 131, 132, 135, 140, 141, 142, 143, 144, 145], "omit": [23, 24, 142], "requir": [23, 24, 34, 69, 79, 88, 91, 93, 96, 107, 113, 130, 132, 136, 138, 139, 142, 143, 152], "complement": [23, 24, 25, 27, 43, 45, 46, 47, 98, 103], "rename_seq": [23, 24, 25, 88], "renam": [23, 24, 25, 53, 111, 134, 149], "replace_seq": [23, 24, 94, 125], "aa_to_codon": [23, 24, 94], "shape": [23, 24, 51, 107], "taken": [23, 24, 139], "more": [23, 24, 34, 38, 45, 46, 47, 51, 62, 69, 83, 89, 91, 93, 96, 97, 98, 101, 117, 129, 134, 138, 141, 142, 146, 149, 151, 152], "gener": [23, 24, 29, 34, 35, 45, 46, 47, 61, 62, 64, 65, 68, 69, 77, 78, 84, 88, 91, 97, 98, 103, 107, 117, 118, 132, 134, 136, 137, 138, 139, 141, 142, 152], "necessarili": [23, 24, 91], "three": [23, 24, 93, 115, 131, 134, 143], "time": [23, 24, 38, 45, 46, 47, 62, 64, 67, 88, 91, 117, 129, 132, 135, 136, 142], "rather": [23, 24, 91, 97, 109, 125], "put": [23, 24, 53, 93], "place": [23, 24, 25, 45, 46, 47, 51, 53, 115, 124, 148], "reverse_compl": [23, 24, 25, 45, 47], "synonym": [23, 24, 25, 72, 97, 129, 142], "sampl": [23, 24, 51, 53, 63, 65, 69, 70, 76, 91, 107, 129, 136, 137, 138, 139, 140, 142, 153], "with_replac": [23, 24], "randint": [23, 24], "mtrand": [23, 24], "randomst": [23, 24], "permut": [23, 24], "flag": [23, 24, 134], "determin": [23, 24, 51, 53, 91, 93, 131, 132], "random_seri": 23, "min": 23, "leav": [23, 24, 139], "seqlogo": [23, 24, 117], "700": [23, 24, 65, 118], "wrap": [23, 24, 25, 45, 46, 47, 53, 88, 98, 117, 149, 151], "vspace": [23, 24, 117], "005": [23, 24, 91], "colour": [23, 24, 45, 46, 47, 117], "logo": [23, 24], "dimens": [23, 24, 51], "total": [23, 24, 53, 91, 93], "custom": [23, 24, 88, 101, 103], "everyth": [23, 24, 45, 46, 47, 66, 75, 101, 129, 147], "ecept": [23, 24], "so": [23, 24, 43, 45, 46, 47, 53, 57, 59, 64, 66, 75, 79, 89, 91, 93, 97, 98, 104, 106, 107, 109, 111, 118, 124, 129, 132, 135, 138, 139, 142], "num_stat": [23, 24], "set_repr_polici": [23, 24, 25, 51, 107], "num_po": [23, 24, 25], "polici": [23, 24, 25, 51], "repr": [23, 24, 25, 51, 68, 88], "repres": [23, 24, 25, 43, 45, 46, 47, 51, 64, 91, 93], "longest": [23, 24, 25], "sliding_window": [23, 24, 45, 46, 47], "step": [23, 24, 45, 46, 47, 64, 87, 91, 94, 95, 129, 132, 134, 136, 139], "success": [23, 24, 95], "strand_symmetri": [23, 24, 25, 45, 46, 47], "symmetri": [23, 24, 25, 45, 47], "take_posit": [23, 24, 91], "altern": [23, 24, 53, 91, 97, 107, 110, 129, 134, 137, 149, 151], "take_positions_if": [23, 24], "take_seq": [23, 24, 25, 91], "old": [23, 24, 25, 51], "take_seqs_if": [23, 24, 25, 91], "to_dict": [23, 24, 25, 29, 50, 51, 91, 107, 139], "to_dna": [23, 24, 25, 45, 47, 90, 91], "to_fasta": [23, 24, 25, 45, 46, 47, 91], "fasta": [23, 24, 25, 45, 46, 47, 57, 58, 59, 62, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 87, 94, 95, 96, 97, 98, 103, 104, 111, 112, 113, 115, 116, 117, 127, 128, 129, 132, 135, 136, 137, 141, 142, 143, 145], "make_seqlabel": [23, 24, 25, 45, 46, 47], "to_html": [23, 24, 45, 46, 47, 51, 107], "name_ord": [23, 24], "60": [23, 24, 45, 46, 47, 57, 58, 59, 65, 91, 94, 97, 98, 101, 117, 118, 125, 138, 144], "color": [23, 24, 43, 45, 46, 47, 70, 107, 121, 123], "font_siz": [23, 24, 43, 45, 46, 47, 51], "12": [23, 24, 43, 45, 46, 47, 51, 65, 73, 75, 88, 91, 98, 99, 102, 106, 107, 110, 132, 135, 138, 142], "font_famili": [23, 24, 43, 45, 46, 47], "lucida": [23, 24, 43, 45, 46, 47], "consol": [23, 24, 43, 45, 46, 47], "html": [23, 24, 45, 46, 47, 51, 75, 129, 136], "embed": [23, 24, 45, 46, 47, 152], "style": [23, 24, 29, 45, 46, 47, 51, 53, 69, 149, 151, 152], "truncat": [23, 24, 43, 45, 46, 47, 57, 58, 59, 64, 75, 91, 94, 97, 98, 101, 118, 125, 129, 144], "affect": [23, 24, 45, 46, 47, 74, 90, 97, 102, 104, 107, 142], "denot": [23, 24, 45, 46, 47, 67], "font": [23, 24, 43, 45, 46, 47], "famili": [23, 24, 45, 46, 47, 97], "jupyt": [23, 24, 45, 46, 47, 64, 69, 97, 119, 136, 146, 152], "notebook": [23, 24, 45, 46, 47, 69, 119, 136, 146, 152], "ipython": [23, 24, 45, 46, 47, 75, 129], "import": [23, 24, 34, 42, 45, 46, 47, 57, 58, 59, 60, 61, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 87, 88, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 101, 102, 104, 105, 106, 107, 108, 109, 110, 112, 113, 114, 115, 116, 117, 118, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 149, 151, 152], "aln": [23, 24, 34, 45, 46, 47, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 87, 88, 91, 94, 95, 96, 97, 98, 101, 112, 115, 116, 117, 129, 130, 132, 137, 141, 142, 143, 145], "to_json": [23, 24, 25, 27, 31, 32, 33, 43, 45, 46, 47, 51, 53, 97], "to_moltyp": [23, 24, 25, 45, 46, 47, 91], "to_nexu": [23, 24, 25], "seq_typ": [23, 24, 25], "50": [23, 24, 25, 53, 65, 69, 71, 91, 97, 98, 117, 132, 138], "nexu": [23, 24, 25], "id": [23, 24, 25, 40, 69, 89, 93, 98, 99, 107, 110, 130], "Not": [23, 24, 25, 129], "come": [23, 24, 25, 51, 53], "speci": [23, 24, 25, 101, 106, 130, 134, 136, 143, 152], "concaten": [23, 24, 25, 51, 140], "togeth": [23, 24, 25, 34, 51, 79, 109, 130, 132, 146], "rna": [23, 24, 25, 27, 45, 47, 61, 96, 103, 104], "invalid": [23, 24, 25, 34, 43, 45, 46, 47, 130], "to_phylip": [23, 24, 25, 91], "phylip": [23, 24, 25, 51, 103, 107, 111, 128, 131], "to_pretti": [23, 24], "represent": [23, 24, 40, 69, 91, 93, 97, 139], "pretti": [23, 24, 145], "to_protein": [23, 24, 25, 91], "to_rich_dict": [23, 24, 25, 27, 31, 32, 33, 43, 45, 46, 47, 50, 51, 53], "detail": [23, 24, 25, 51, 61, 62, 69, 79, 89, 91, 97, 98], "content": [23, 24, 25, 51, 64, 93, 102, 107, 117], "to_rna": [23, 24, 25, 45, 47, 90, 91], "to_typ": [23, 24, 91], "convers": [23, 24, 43, 99, 105, 138], "lose": [23, 24], "would": [23, 24, 27, 53, 68, 89, 91, 134, 136, 139, 146], "trim_stop_codon": [23, 24, 25, 45, 47, 63, 91], "variable_posit": [23, 24, 91], "include_gap_motif": [23, 24], "variabl": [23, 24, 97, 116, 136], "index": [23, 24, 27, 40, 43, 45, 46, 47, 50, 51, 53, 64, 88, 91, 138], "with_gaps_from": 23, "overwritten": [23, 64], "with_masked_annot": [23, 45, 46, 47, 98], "mask_char": [23, 45, 46, 47, 98], "shadow": [23, 29, 45, 46, 47], "annot_typ": [23, 45, 46, 47], "region": [23, 45, 46, 47, 102, 107], "mask": [23, 45, 46, 47, 109], "with_modified_termini": [23, 24, 25], "termini": [23, 24, 25], "gapmotif": [23, 24, 25], "correct": [23, 24, 25, 27, 43, 53, 64, 97, 104, 107, 109, 136], "program": [23, 24, 25, 79, 125, 136, 149, 151, 152], "write": [23, 24, 25, 31, 32, 33, 36, 37, 39, 51, 53, 62, 64, 68, 76, 79, 103, 109, 112, 115, 125, 126, 127, 128, 136], "infer": [23, 24, 25, 91, 93, 101, 102, 107], "hold": [24, 27, 40, 45, 46, 47, 91], "dens": 24, "_often_": 24, "might": [24, 45, 46, 47, 53, 97, 138], "some": [24, 27, 45, 46, 47, 50, 53, 62, 64, 69, 75, 84, 89, 90, 91, 94, 101, 109, 117, 129, 130, 136, 138, 139, 142], "larg": [24, 53, 79, 97, 118, 134, 139], "symbol": [24, 27, 43, 45, 46, 47, 130], "64": [24, 40, 65, 78, 97, 138, 152], "tripeptid": 24, "letter": [24, 131], "8000": 24, "_not_": [24, 45, 46, 47], "around": [24, 53, 62], "unpredict": 24, "wrong": 24, "greater": [24, 132, 134, 136], "255": [24, 65, 107], "uint8": [24, 138], "need": [24, 27, 45, 46, 47, 53, 62, 64, 88, 91, 93, 97, 98, 107, 111, 125, 129, 132, 134, 135, 136, 137, 138, 139, 141, 142, 146, 147], "uint16": 24, "65536": 24, "sign": 24, "your": [24, 62, 64, 65, 81, 91, 98, 102, 104, 107, 125, 126, 127, 128, 135, 136, 141, 147, 149, 151, 153], "unless": [24, 34, 51, 64, 67, 99], "love": 24, "miseri": 24, "hard": 24, "debug": 24, "problem": [24, 89, 100, 136, 146, 152], "implement": [24, 27, 34, 40, 43, 45, 46, 47, 53, 75, 84, 96, 129, 136, 138, 152], "usual": [24, 91, 129, 139], "user": [24, 31, 32, 33, 64, 89, 93, 95, 109, 136, 138], "think": [24, 142], "editor": 24, "clustal": 24, "typic": [24, 27, 34, 45, 46, 47, 91, 93, 97, 98, 132], "cut": 24, "terminologi": 24, "view": [24, 50, 69, 130, 135, 141], "longer": [24, 91], "don": [24, 43, 53, 62, 88, 91, 101, 106, 135, 136, 147, 152], "updat": [24, 31, 32, 33, 50], "two": [24, 34, 40, 45, 46, 47, 53, 62, 70, 73, 83, 88, 91, 97, 102, 103, 107, 108, 109, 113, 129, 130, 134, 135, 136, 137, 138, 139, 140, 141, 142, 145], "sync": [24, 98], "sort": [24, 31, 32, 33, 51, 53, 91, 138], "realli": [24, 97], "troubl": 24, "immut": [24, 40, 107], "though": [24, 98], "enforc": [24, 109], "bad": [24, 97, 106, 139], "thing": [24, 88, 98], "sequencetyp": 24, "_input_handl": 24, "input_typ": 24, "input_handl": 24, "_guess_input_typ": 24, "force_same_object": 24, "rebind": 24, "recommend": [24, 27, 97], "cach": 24, "effici": [24, 53, 91, 103, 138], "strip": [24, 43, 45, 46, 47, 53, 103, 106], "them": [24, 45, 46, 47, 51, 59, 64, 79, 93, 111, 125, 129, 130, 132, 136, 139, 140], "primarili": [24, 62, 108, 109], "superclass": 24, "x00": [24, 25, 104], "x01": [24, 25, 104], "x02": [24, 25, 104], "x03": [24, 25, 104], "x04": [24, 25], "x05": [24, 25], "x06": [24, 25], "x07": [24, 25], "x08": [24, 25], "x0b": [24, 25], "x0c": [24, 25], "x0e": [24, 25], "x0f": [24, 25], "x10": [24, 25], "x11": [24, 25], "x12": [24, 25], "x13": [24, 25], "x14": [24, 25], "x15": [24, 25], "x16": [24, 25], "x17": [24, 25], "x18": [24, 25], "x19": [24, 25], "x1a": [24, 25], "x1b": [24, 25], "x1c": [24, 25], "x1d": [24, 25], "x1e": [24, 25], "x1f": [24, 25], "2": [24, 25, 27, 40, 45, 46, 47, 50, 53, 62, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 87, 88, 90, 91, 92, 93, 95, 96, 97, 98, 101, 102, 104, 106, 107, 108, 109, 110, 116, 117, 121, 126, 129, 130, 134, 135, 136, 138, 139, 140, 141, 142, 144, 145, 151, 152], "5": [24, 25, 45, 46, 47, 51, 62, 63, 64, 65, 66, 68, 69, 71, 73, 75, 76, 77, 78, 87, 90, 91, 94, 95, 97, 98, 99, 101, 102, 106, 107, 109, 110, 117, 129, 130, 132, 134, 137, 138, 139, 143, 151], "7": [24, 25, 62, 64, 65, 72, 73, 74, 75, 76, 90, 91, 95, 96, 97, 98, 101, 102, 104, 107, 108, 109, 131, 138, 141], "8": [24, 25, 65, 67, 68, 71, 73, 75, 77, 89, 91, 96, 97, 98, 101, 102, 107, 108, 109, 113, 124, 129, 132, 134, 135, 138, 141, 151, 152], "9": [24, 25, 53, 65, 68, 69, 70, 73, 75, 77, 91, 97, 98, 99, 102, 106, 107, 109, 110, 129, 132, 138, 142, 151, 152], "_": [24, 25, 87, 109, 117], "x7f": [24, 25], "x80": [24, 25], "x81": [24, 25], "x82": [24, 25], "x83": [24, 25], "x84": [24, 25], "x85": [24, 25], "x86": [24, 25], "x87": [24, 25], "x88": [24, 25], "x89": [24, 25], "x8a": [24, 25], "x8b": [24, 25], "x8c": [24, 25], "x8d": [24, 25], "x8e": [24, 25], "x8f": [24, 25], "x90": [24, 25], "x91": [24, 25], "x92": [24, 25], "x93": [24, 25], "x94": [24, 25], "x95": [24, 25], "x96": [24, 25], "x97": [24, 25], "x98": [24, 25], "x99": [24, 25], "x9a": [24, 25], "x9b": [24, 25], "x9c": [24, 25], "x9d": [24, 25], "x9e": [24, 25], "x9f": [24, 25], "xa0": [24, 25], "\u00aa": [24, 25], "xad": [24, 25], "\u00b2": [24, 25], "\u00b3": [24, 25], "\u00b5": [24, 25], "\u00b9": [24, 25], "\u00ba": [24, 25], "\u00bc": [24, 25], "\u00bd": [24, 25], "\u00be": [24, 25], "\u00e0": [24, 25], "\u00e1": [24, 25], "\u00e2": [24, 25], "\u00e3": [24, 25], "\u00e4": [24, 25], "\u00e5": [24, 25], "\u00e6": [24, 25], "\u00e7": [24, 25], "\u00e8": [24, 25], "\u00e9": [24, 25], "\u00ea": [24, 25], "\u00eb": [24, 25], "\u00ec": [24, 25], "\u00ed": [24, 25], "\u00ee": [24, 25], "\u00ef": [24, 25], "\u00f0": [24, 25], "\u00f1": [24, 25], "\u00f2": [24, 25], "\u00f3": [24, 25], "\u00f4": [24, 25], "\u00f5": [24, 25], "\u00f6": [24, 25], "\u00f8": [24, 25], "\u00f9": [24, 25], "\u00fa": [24, 25], "\u00fb": [24, 25], "\u00fc": [24, 25], "\u00fd": [24, 25], "\u00fe": [24, 25], "\u00df": [24, 25], "\u00ff": [24, 25], "what": [24, 34, 43, 61, 62, 65, 87, 88, 103, 118, 132, 136, 139, 142, 146], "wa": [24, 31, 32, 33, 53, 62, 64, 87, 89, 98, 106, 109, 114, 123, 132, 134, 139, 149, 151], "get_sub_align": 24, "po": [24, 43, 45, 46, 47, 91], "invert_seq": 24, "invert_po": 24, "subalign": 24, "_except_": 24, "unlik": [24, 27, 45, 46, 47], "share": [24, 45, 46, 47, 53, 70, 89, 98, 142, 145], "integ": [24, 53, 103, 110, 124, 138], "respect": [24, 45, 46, 47, 132], "conversion_f": 25, "force_same_data": 25, "remove_duplicate_nam": 25, "suppress_named_seq": 25, "associ": [25, 43, 68, 84, 109, 129, 139], "jc69": [25, 78, 96, 97], "approxim": [25, 93, 132], "site": [25, 62, 64, 87, 99, 108, 109, 117, 140], "juke": [25, 78, 97], "cantor": [25, 78, 97], "distancematrix": [25, 88, 139], "jaccard": 25, "coeffici": [25, 53], "were": [25, 27, 55, 97, 98, 114, 125, 129, 132, 146, 151], "polynomi": 25, "kmer": 25, "10": [25, 57, 58, 59, 62, 64, 65, 67, 68, 70, 71, 72, 73, 74, 75, 76, 77, 78, 91, 97, 98, 101, 102, 106, 107, 109, 110, 115, 117, 129, 131, 132, 135, 138, 141, 142], "mammalian": [25, 97], "106": [25, 65, 138], "motifset": [27, 43, 97, 104], "fix": [27, 63, 132, 138], "61": [27, 65, 97, 132, 138], "sens": [27, 45, 46, 47, 116, 118, 151], "known": [27, 93, 102, 107, 120, 132], "amino": [27, 40, 45, 47, 59, 64, 97, 101, 125, 130, 131], "suppli": [27, 43, 45, 46, 47], "coercion": 27, "appropri": [27, 43, 45, 46, 47, 55, 64, 91, 104, 109, 137], "alphabeterror": [27, 45, 47, 64, 99], "add_not": 27, "with_traceback": 27, "tb": 27, "__traceback__": 27, "adapt_motif_prob": 27, "motif_prob": [27, 91], "prepar": [27, 130], "probabl": [27, 43, 65, 66, 67, 77, 78, 129, 130, 132, 135, 137, 139, 140, 141, 145], "occurr": [27, 45, 46, 47, 51, 91, 138], "from_indic": [27, 92], "enumer": [27, 106], "invers": [27, 93, 98], "to_indic": [27, 92], "ccau": 27, "get_gap_motif": 27, "get_matched_arrai": 27, "dtype": [27, 51, 107, 138], "ith": 27, "jth": 27, "tcag": [27, 65, 97, 104, 117], "encompass": 27, "perhap": 27, "merg": [27, 29, 31, 32, 33, 93, 95, 113], "noth": [27, 97], "about": [27, 89, 91, 93, 98, 109, 136], "get_motif_len": 27, "get_subset": 27, "motif_subset": 27, "get_word_alphabet": [27, 91, 92], "word_length": 27, "jointenumer": 27, "cannot": [27, 40, 45, 46, 47, 91, 93, 130, 134], "unpack": 27, "_are_": 27, "includes_gap_motif": 27, "goe": 27, "extra": [27, 53, 147], "lookup": 27, "_really_": 27, "bind": [27, 117, 136], "_obj_to_index": 27, "__getitem__": 27, "intern": [27, 53, 65, 99, 106, 124, 134], "is_valid": [27, 43, 45, 46, 47, 104], "resolve_ambigu": [27, 99], "ambig_motif": [27, 99], "multi": 27, "screen": [27, 97], "against": [27, 109, 135], "version": [27, 31, 53, 62, 64, 106, 151], "found": [27, 50], "expect": [27, 43, 53, 69, 91, 107, 137, 138], "for_pickl": [27, 43], "with_gap_motif": 27, "resembl": 27, "demand": 29, "remapped_to": 29, "as_one_span": [29, 98], "get_children": [29, 98], "sub": [29, 51, 53, 88], "get_coordin": [29, 98], "start1": 29, "end1": 29, "plotli": [29, 51, 98, 119, 147, 149, 151], "trace": 29, "get_par": [29, 98], "get_slic": [29, 90, 91, 98], "complet": [29, 36, 37, 39, 45, 46, 47, 53, 62, 64, 93, 98, 101, 139], "fragment": 29, "grandpar": 29, "gmap": 29, "disjoint": 29, "union": [29, 31, 32, 33, 34, 88, 108, 109], "without_lost_span": 29, "actual": [29, 43, 53, 97, 102, 107, 132, 134, 135, 136, 141, 142], "underli": 29, "genbank": [31, 32, 118], "describ": [31, 32, 33, 36, 37, 39, 61, 62, 64, 84, 93, 97, 129, 130, 136], "descript": [31, 32, 33, 69, 76, 77, 78, 97, 101, 107], "table_nam": [31, 32, 33, 39], "strorbool": [31, 32, 33], "add_record": [31, 32, 33], "from_dict": [31, 32, 33], "get_features_match": [31, 32, 33, 93], "alia": [31, 32, 33], "resid": [31, 32, 33], "addit": [31, 32, 33, 51, 62, 64, 75, 91, 95, 129, 134, 136, 139, 149], "biotype_count": [31, 32, 33], "other_db": [31, 32, 33], "symmetr": [31, 32, 33, 78, 97], "equal": [31, 32, 33, 43, 45, 46, 47, 53, 97, 113, 129, 132, 136, 138, 139, 140, 142], "mine": [31, 32, 33], "count_distinct": [31, 32, 33, 93], "distinct": [31, 32, 33, 51, 64, 74, 93, 132, 142], "field": [31, 32, 33, 51, 101], "genom": [31, 32, 33, 45, 46, 47, 89, 98, 107, 138, 151, 152], "counts_tabl": [31, 32, 33], "connect": [31, 32, 33, 37, 39, 43, 53], "classmethod": [31, 32, 33], "get_feature_children": [31, 32, 33, 93], "children": [31, 32, 33, 53, 134], "get_feature_par": [31, 32, 33, 93], "get_records_match": [31, 32, 33, 93], "num_match": [31, 32, 33, 93], "suitabl": [31, 32, 33, 63, 96, 147, 152], "serialis": [31, 32, 33, 34, 55, 63, 68], "annot_db": [31, 32, 33], "schema": [31, 32, 33], "superset": [31, 32, 33], "byte": [31, 32, 33, 35, 37, 39, 63, 64, 90, 91, 96, 101, 104], "extend": [32, 53, 97, 98, 118], "gb": [32, 93, 98, 111, 118], "exclude_biotyp": 32, "klass": 34, "app_typ": 34, "apptyp": 34, "skip_not_complet": 34, "decor": [34, 38, 55, 88], "static": [34, 102, 107], "being": [34, 43, 53, 79, 87, 88, 97, 98, 107, 109, 113, 118, 132, 134, 138, 149, 151], "main": [34, 87, 97, 136], "occur": [34, 43, 45, 46, 47, 62, 87, 97, 99, 108, 109, 132], "log": [34, 36, 37, 39, 45, 46, 47, 66, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 129, 131, 132, 135, 141, 142, 143, 145], "loader": [34, 57, 58, 59, 62, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 114], "writer": [34, 51, 62, 64, 68], "compos": [34, 63, 64, 79, 136], "sum": [34, 51, 53, 64, 69, 91, 99, 139], "sequenti": [34, 132, 142], "invok": [34, 102, 107, 136], "independ": [34, 53, 97, 107], "usag": [34, 53, 57, 59, 79, 152], "app1": 34, "app2": 34, "equival": [34, 53, 91, 113, 139], "constrain": [34, 97, 129, 135, 142], "how": [34, 43, 45, 46, 47, 61, 62, 89, 91, 100, 101, 103, 106, 125, 126, 127, 128, 130, 132, 134, 135, 136, 137, 138, 139, 142, 146], "a_load": [34, 62], "a_gener": [34, 62], "a_writ": [34, 62], "typeerror": [34, 43, 62, 91, 109], "There": [34, 62, 93, 97, 130, 136, 149, 151], "constraint": [34, 62, 97, 109, 129, 137, 141], "asid": [34, 66, 142], "below": [34, 60, 61, 64, 66, 69, 71, 84, 87, 91, 93, 97, 98, 104, 109, 111, 113, 115, 136, 139], "In": [34, 45, 46, 47, 50, 51, 53, 64, 68, 70, 71, 79, 87, 88, 90, 91, 93, 95, 97, 98, 99, 101, 102, 107, 108, 109, 115, 118, 125, 128, 129, 130, 131, 132, 134, 136, 139, 140, 142, 152], "call": [34, 75, 87, 88, 91, 97, 98, 99, 104, 107, 108, 109, 129, 132, 134, 136, 139], "hint": [34, 88, 93], "while": [34, 64, 101, 109, 130, 136, 142, 151], "__call__": 34, "immedi": [34, 132], "definit": [34, 57, 103], "alignedseqstyp": [34, 88], "serialisabletyp": [34, 61, 63, 88], "drop_bad": 34, "def": [34, 88, 91, 101, 109, 136, 137], "__init__": [34, 109], "It": [34, 40, 45, 46, 47, 53, 60, 61, 64, 67, 71, 75, 91, 101, 104, 107, 108, 109, 118, 119, 129, 132, 134, 136, 138, 139, 152], "staticmethod": 34, "omit_seq": 34, "now": [34, 43, 64, 69, 76, 88, 91, 93, 98, 104, 123, 126, 127, 129, 134, 135, 138, 139, 140, 141, 142, 144, 149, 151], "variant": [34, 77, 97], "ones": 34, "omit_bad": 34, "95": [34, 65, 129, 135, 138, 142], "data_stor": [35, 62, 64, 68], "unique_id": [35, 36, 37, 39, 64], "oper": [35, 43, 50, 51, 62, 72, 98], "deliv": 35, "md5": [35, 36, 37, 39, 64], "member": [36, 37, 39, 70, 91, 98], "subclass": [36, 37, 39, 53], "not_complet": [36, 37, 39, 62, 64], "summary_log": [36, 37, 39, 62, 64], "summaris": [36, 37, 39], "summary_not_complet": [36, 37, 39, 62, 64], "drop_not_complet": [36, 37, 39], "write_log": [36, 37, 39], "datamemb": [36, 37, 42, 62, 64], "tabulartyp": [36, 37, 39, 88], "checksum": [36, 37, 39], "datamemberabc": [36, 37, 39], "write_not_complet": [36, 37, 39], "registr": [38, 55], "regist": [38, 93], "preced": [38, 98], "lock": [39, 64], "lock_pid": 39, "null": [39, 72, 73, 74, 75, 97, 129, 132, 137, 145], "doesn": [39, 45, 46, 47, 53, 97, 118], "record_typ": 39, "close": [39, 97, 132, 134, 139], "writabl": [39, 107], "pid": 39, "store_suffix": 39, "sqlitedb": [39, 64, 68, 136], "unlock": [39, 64], "forc": [39, 64, 97], "readonli": 39, "code_sequ": 40, "start_codon_sequ": 40, "vice": 40, "versa": 40, "These": [40, 42, 51, 62, 64, 65, 67, 69, 85, 87, 91, 98, 109, 124, 129, 132, 136, 139, 141, 142, 151], "ffllssssyi": 40, "cc": [40, 91, 92, 109, 144], "wllllpppphhqqrrrriiimttttnnkkssrrvvvvaaaaddeegggg": 40, "sgc": 40, "uuu": 40, "ttt": [40, 72, 73, 74, 75, 76, 77, 91, 92, 97, 99, 110, 129], "ttc": [40, 72, 73, 74, 75, 76, 77, 91, 92, 97, 99, 110, 129, 144], "arbitrari": [40, 51, 53], "taa": [40, 91, 92, 99, 110], "tag": [40, 91, 92, 110], "tga": [40, 64, 91, 92, 99, 110], "ncbi": [40, 149, 151, 152], "onc": [40, 53, 93, 134], "block": [40, 98, 136], "get_alphabet": [40, 99], "quartet": 40, "xyn": 40, "doublet": 40, "xyt": 40, "xyc": 40, "xya": 40, "xyg": 40, "aa": [40, 91, 92, 93, 99, 110, 117, 125, 138, 144], "singlet": 40, "ggg": [40, 72, 73, 74, 75, 76, 77, 91, 92, 97, 99, 110, 129], "purin": 40, "pyrimidin": 40, "boundari": [40, 97, 129, 132], "xy": 40, "get_stop_indic": [40, 99], "frame": [40, 51, 61, 91, 98, 125], "is_start": 40, "is_stop": 40, "sixfram": [40, 99], "six": 40, "to_regex": [40, 43], "regex": [40, 43, 45, 46, 47], "expand": [40, 43], "to_tabl": [40, 107], "entir": [40, 45, 46, 47, 61, 98, 117, 129], "caller": 40, "respons": 40, "find": [40, 53, 91, 152], "load_seq": [42, 98, 101, 118], "load_delimit": 42, "load_tabl": [42, 102, 107], "load_tre": [42, 70, 71, 97, 106, 129, 132, 134, 135, 137, 140, 141, 142], "load_annot": [42, 93], "open_data_stor": [42, 62, 64, 68], "make_unaligned_seq": [42, 91, 94, 101, 125], "make_seq": [42, 43, 90, 91, 93, 98, 99, 104, 105, 116], "make_aligned_seq": [42, 88, 94, 97, 98, 99, 101, 116, 125, 130], "make_t": [42, 102, 107, 145], "make_tre": [42, 94, 97, 106, 131, 134, 139, 143, 144, 145], "get_moltyp": [42, 104], "get_model": [42, 94, 96, 127, 129, 135, 141, 143, 144], "available_moltyp": [42, 104], "available_app": [42, 62, 63], "define_app": [42, 88], "register_datastore_read": 42, "datastoredirectori": [42, 62, 64], "readonlydatastorezip": [42, 64], "datastoresqlit": 42, "deserialise_object": [42, 55, 95, 97], "register_deserialis": 42, "seq_constructor": [43, 104], "mw_calcul": 43, "add_low": 43, "preserve_existing_moltyp": 43, "make_alphabet_group": 43, "array_seq_constructor": 43, "coerce_str": 43, "know": [43, 91, 98, 129, 132, 140, 145, 149, 151], "forth": 43, "disambigu": [43, 45, 46, 47], "proteinsequ": [43, 88, 90, 99, 103], "up": [43, 53, 72, 74, 88, 91, 97, 129, 132, 134, 135, 136, 138, 139, 141, 142, 145], "reset": [43, 104, 142], "can_match": [43, 45, 46, 47], "second": [43, 45, 46, 47, 91, 97, 98, 136], "1st": [43, 125, 145], "2nd": [43, 145], "shorter": [43, 45, 46, 47], "can_mismatch": [43, 45, 46, 47], "mismatch": [43, 45, 46, 47, 53], "can_mispair": [43, 45, 46, 47], "mispair": [43, 45, 46, 47], "etc": [43, 45, 46, 47, 53, 97, 107, 129, 132, 136, 139, 149, 151], "weak": [43, 45, 46, 47], "gu": [43, 45, 46, 47], "can_pair": [43, 45, 46, 47, 90], "categori": [43, 45, 46, 47, 51, 107, 129, 140], "abl": [43, 45, 46, 47, 53, 79], "look": [43, 45, 46, 47, 64, 66, 91, 107, 134, 135, 141], "count_degener": [43, 45, 46, 47], "count_gap": [43, 45, 46, 47], "degenerate_from_seq": 43, "inverse_degener": 43, "Then": [43, 91, 107], "uppercas": 43, "lowercas": 43, "monom": [43, 45, 46, 47, 129], "first_degener": [43, 45, 46, 47], "first_gap": [43, 45, 46, 47], "first_invalid": [43, 45, 46, 47], "first_non_strict": [43, 45, 46, 47], "first_not_in_alphabet": 43, "gap_indic": [43, 45, 46, 47], "gap_map": [43, 45, 46, 47, 91], "ungapped_coord": 43, "gapped_coord": 43, "themselv": [43, 45, 46, 47, 79, 146], "gap_vector": [43, 45, 46, 47], "get_css_styl": 43, "css": [43, 51], "monospac": 43, "get_degenerate_posit": 43, "get_typ": [43, 45, 46, 47], "is_ambigu": 43, "querymotif": 43, "amibigu": 43, "is_degener": [43, 45, 46, 47], "is_gap": [43, 45, 46, 47, 91], "is_strict": [43, 45, 46, 47], "make_array_seq": 43, "must_match": [43, 45, 46, 47], "must_pair": [43, 45, 46, 47], "mw": [43, 45, 46, 47], "delta": [43, 45, 46, 47], "molecular": [43, 45, 46, 47, 61, 62, 84, 97, 103, 151, 152, 153], "decid": [43, 45, 46, 47, 101], "possibilit": 43, "strand_symmetric_motif": 43, "complementari": 43, "valid_on_alphabet": 43, "anyth": [43, 130, 135], "__contains__": 43, "verify_sequ": 43, "gaps_allow": [43, 45, 46, 47], "wildcards_allow": [43, 45, 46, 47], "wild": 43, "card": 43, "mechan": [43, 97], "parallel": [43, 133, 137, 151, 152], "routin": 43, "explicitli": [43, 45, 46, 47, 64, 90, 91, 97, 99, 107, 129, 131, 136, 149, 151], "what_ambigu": 43, "minim": [43, 93], "duplic": 43, "degeneratefromsequ": 43, "preserve_cas": [45, 46, 47], "codon_alphabet": [45, 47, 99], "line_wrap": [45, 46, 47], "gapped_by_map_motif_it": [45, 46, 47], "gapped_by_map_segment_it": [45, 46, 47], "sinc": [45, 46, 47, 53, 57, 58, 67, 68, 93, 97, 98, 129, 137, 139], "annotate_matches_to": [45, 46, 47], "allow_multipl": [45, 46, 47], "domain": [45, 46, 47], "context": [45, 46, 47, 109], "chromosom": [45, 46, 47, 98, 111, 118], "bp": [45, 46, 47], "ensur": [45, 46, 47, 51, 53, 89, 97, 125, 129, 132, 134], "exclude_annot": [45, 46, 47], "_seq": [45, 46, 47], "diff": [45, 46, 47], "misc": [45, 46, 47, 101, 109], "distancefrommatrix": [45, 46, 47, 109], "_elements_": [45, 46, 47], "behavior": [45, 46, 47, 53], "suggest": [45, 46, 47, 89], "One": [45, 46, 47, 64, 132], "advantag": [45, 46, 47, 62, 137], "standalon": [45, 46, 47, 103, 136, 149, 151], "factori": [45, 46, 47, 109, 138], "aggreg": [45, 46, 47], "frac_diff": [45, 46, 47], "frac_sam": [45, 46, 47], "empti": [45, 46, 47, 50, 93, 98], "frac_diff_gap": [45, 46, 47], "frac": [45, 46, 47], "word": [45, 46, 47, 53, 79, 91, 136], "frac_diff_non_gap": [45, 46, 47], "frac_same_non_gap": [45, 46, 47], "frac_similar": [45, 46, 47], "similar_pair": [45, 46, 47], "pairsfromgroup": [45, 46, 47], "residu": [45, 46, 47, 107, 130], "re": [45, 46, 47, 53, 97, 103, 117, 129, 132, 138], "expens": [45, 46, 47], "vector": [45, 46, 47, 141], "accord": [45, 46, 47, 51, 132], "get_in_motif_s": [45, 46, 47, 99], "log_warn": [45, 46, 47], "notifi": [45, 46, 47], "incomplet": [45, 46, 47, 91, 98, 99, 118], "get_kmer": [45, 46, 47], "get_nam": [45, 46, 47], "is_annot": [45, 46, 47], "absent": [45, 46, 47], "iter_km": [45, 46, 47], "matrix_dist": [45, 46, 47], "diagon": [45, 46, 47, 66, 69], "kind": [45, 46, 47, 104], "matric": [45, 46, 47, 53, 67, 69, 70, 97, 129, 152], "odd": [45, 46, 47], "18": [45, 46, 47, 64, 65, 73, 75, 97, 98, 99, 107, 136, 138, 145], "da": [45, 46, 47], "water": [45, 46, 47], "monophosph": [45, 46, 47], "oh": [45, 46, 47], "multipli": [45, 46, 47, 136], "accur": [45, 46, 47], "due": [45, 46, 47, 97, 129], "bia": [45, 46, 47], "mitochondri": [45, 46, 47, 97, 110], "parse_out_gap": [45, 46, 47], "locat": [45, 46, 47, 53, 93, 98, 114], "oldchar": [45, 46, 47], "newchar": [45, 46, 47], "replace_annotation_db": [45, 46, 47], "public": [45, 46, 47, 151], "interfac": [45, 46, 47, 69, 93, 101, 109, 112, 136, 139, 141, 147, 149, 151, 152], "veri": [45, 46, 47, 91, 93, 97, 109, 129, 130, 136, 137, 138, 139, 149, 151], "confid": [45, 46, 47, 93, 130], "resolved_ambigu": [45, 46, 47], "synonymn": [45, 47], "shuffl": [45, 46, 47, 53, 90], "strip_bad": [45, 46, 47], "strip_bad_and_gap": [45, 46, 47], "strip_degener": [45, 46, 47], "block_siz": [45, 46, 47, 138], "trail": [45, 46, 47], "newlin": [45, 46, 47, 87], "extend_queri": [45, 46, 47], "with_termini_unknown": [45, 46, 47], "remap": [45, 46, 47], "row_condit": 49, "with_head": [49, 102, 107], "iter_row": 50, "add_column_from_str": 50, "cast": 50, "clear": [50, 141], "els": [50, 75, 129, 136], "pop": [50, 53], "popitem": 50, "setdefault": 50, "take_column": 50, "lack": [50, 134], "new_column": 51, "1d": 51, "python": [51, 62, 63, 64, 87, 88, 91, 103, 109, 128, 129, 130, 136, 139, 151, 152, 153], "evalu": [51, 73, 75, 85, 87, 91, 93, 95, 97, 102, 107, 133, 136, 138, 139], "count_uniqu": [51, 107], "categorycount": [51, 107], "cross_join": [51, 107], "col_prefix": 51, "right_": [51, 107], "cross": [51, 101], "outer": 51, "prepend": 51, "distinct_valu": [51, 107], "satisfi": [51, 69], "filtered_by_column": [51, 107], "format_column": [51, 107], "column_head": 51, "format_templ": 51, "get_column": 51, "with_index": 51, "get_row_indic": 51, "nrow": 51, "inner_join": [51, 107], "columns_self": [51, 107], "columns_oth": 51, "use_index": 51, "inner": [51, 107], "matter": [51, 69, 106], "iff": 51, "nomin": 51, "docstr": [51, 109, 130], "by_row": 51, "denominator_func": 51, "func": 51, "normalis": [51, 112], "done": [51, 53, 64, 70, 74, 91, 97, 98, 101, 106, 107, 108, 109, 117, 129, 136, 138, 149, 152], "denomin": 51, "tail": 51, "show_shap": 51, "bottom": [51, 63, 66, 114, 120, 123], "randomli": [51, 113, 132, 139], "superced": 51, "sum_column": 51, "cell": [51, 91, 99, 108, 109], "sum_row": 51, "col_sum": [51, 107], "to_categor": [51, 107], "conting": 51, "under": [51, 62, 91, 97, 99, 101, 104, 137, 145, 148], "to_csv": 51, "comma": 51, "to_datafram": [51, 107], "flatten": 51, "column_align": 51, "col_nam": 51, "c3tabl": 51, "div": 51, "emb": 51, "to_latex": [51, 107], "concat_title_legend": 51, "justifi": [51, 107], "latex": 51, "caption": [51, 107], "justif": [51, 107], "referenc": [51, 53, 129], "page": [51, 89], "here": [51, 53, 62, 88, 90, 91, 93, 95, 97, 106, 107, 109, 116, 117, 125, 129, 132, 135, 137, 139, 142, 146, 148], "command": [51, 62, 64, 136, 140, 153], "packag": [51, 62, 64, 87, 99, 108, 109, 131, 136], "http": [51, 101, 102, 107, 136, 147, 151, 152], "ctan": 51, "org": [51, 153], "pkg": 51, "to_list": [51, 107, 129], "to_markdown": [51, 107], "markdown": 51, "surround": 51, "to_plotli": 51, "layout": [51, 108, 109], "to_rst": [51, 107], "csv_tabl": [51, 107], "rst": [51, 107], "csv": 51, "grid": 51, "to_str": 51, "border": 51, "center": [51, 107], "rest": [51, 104, 107, 129, 138, 142], "md": [51, 107, 109], "bedgraph": 51, "tsv": [51, 102, 107, 111], "delin": [51, 131, 132], "concat": 51, "chrom": [51, 107], "to_tsv": 51, "tab": [51, 64, 75, 102, 107], "tolist": [51, 107], "new_column_nam": [51, 107], "select_as_head": [51, 107], "with_new_column": [51, 107], "subtabl": 51, "with_new_head": [51, 107], "try": [51, 53, 87, 93, 97, 99, 108, 109, 118, 140], "gzip": 51, "gz": 51, "unformat": 51, "accuraci": 51, "accessor": 53, "get_node_matching_nam": [53, 106], "unrooted_deepcopi": [53, 106], "ancestor": [53, 67, 70, 97], "back": [53, 125, 136, 151], "root": [53, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 95, 97, 102, 106, 107, 126, 127, 129, 131, 132, 134, 135, 139, 141, 142, 143, 144], "dynam": [53, 98], "clean": [53, 134], "ref": [53, 57, 58, 59, 98, 101, 113], "ascii_art": [53, 95, 97, 126, 127, 134, 139, 142], "show_intern": [53, 134], "compact": 53, "ascii": [53, 101], "draw": [53, 108, 109, 113, 114, 116], "balanc": [53, 95, 139], "neighbour": [53, 94, 127, 132, 153], "substanti": [53, 106, 151], "improv": [53, 89, 97, 106, 129, 132, 138], "effect": [53, 101, 106, 139, 142, 153], "clade": [53, 70, 97, 106, 129, 139], "stem": [53, 106], "parameteris": [53, 97, 106, 132], "outgroup_nam": [53, 70, 97, 106, 129, 142], "bifurc": 53, "ep": 53, "name_unnam": 53, "multifurc": 53, "num": [53, 62, 64], "child_group": 53, "nontip": 53, "child_parent_map": 53, "child": [53, 93, 98, 106], "compare_by_nam": 53, "compare_by_subset": 53, "exclude_absent_taxa": 53, "compare_by_tip_dist": [53, 106], "dist_f": 53, "distance_from_r": 53, "shuffle_f": 53, "m1": 53, "m2": 53, "pearson": [53, 106], "correl": [53, 106, 130], "madimum": 53, "applic": [53, 64, 66, 91, 149, 151, 153], "distance_from_r_squar": 53, "automat": [53, 65, 79, 93, 106, 109, 135], "undefin": 53, "reorder": 53, "compare_nam": 53, "treenod": [53, 88, 134], "memo": 53, "_nil": 53, "copy_topologi": 53, "branch": [53, 57, 58, 59, 67, 69, 123, 133, 134, 135, 137, 139, 141, 144, 145, 152], "environ": [53, 136, 147], "modul": [53, 63, 88, 90, 108, 109, 114, 129, 130, 136], "_much_": 53, "faster": [53, 91, 136], "descendant_arrai": 53, "tip_list": 53, "descend": [53, 142, 151], "decend": 53, "appear": [53, 65], "final": [53, 95, 134, 142], "preorder": 53, "travers": 53, "get_connecting_edg": [53, 106], "lca": 53, "get_connecting_nod": 53, "get_dist": [53, 88, 106], "endpoint": 53, "grab": [53, 91, 137], "get_edge_nam": 53, "tip1nam": 53, "tip2nam": 53, "intersect": 53, "tip1": [53, 74, 75], "2name": 53, "subtre": 53, "sai": [53, 62, 101, 109], "primat": [53, 70, 71, 98, 142, 143, 152], "set_param_rul": [53, 97, 129, 132, 135, 140, 141, 142, 145], "get_edge_vector": 53, "include_root": 53, "postfix": 53, "get_figur": [53, 65, 66, 70, 76, 120, 121, 122, 123, 124], "squar": [53, 97, 109, 132, 133], "dendrogram": 53, "angular": 53, "radial": 53, "circular": 53, "get_max_tip_tip_dist": 53, "dist": [53, 95, 96, 106, 139], "internal_nod": 53, "get_newick": [53, 106], "with_dist": [53, 106], "semicolon": 53, "escape_nam": 53, "with_node_nam": 53, "quot": 53, "get_node_nam": [53, 106], "includeself": 53, "tipsonli": 53, "natur": [53, 72, 73, 74, 75, 89, 132, 134, 142, 152, 153], "get_nodes_dict": [53, 106], "treeerror": 53, "encount": 53, "get_param_valu": [53, 97, 129, 132], "get_sub_tre": [53, 106], "name_list": 53, "ignore_miss": 53, "keep_root": 53, "otu": [53, 107], "aren": 53, "constant": [53, 142], "get_tip_nam": [53, 106], "get_xml": [53, 106], "index_in_par": 53, "is_root": 53, "is_tip": [53, 106], "isroot": 53, "istip": 53, "iter_nontip": [53, 106], "include_self": 53, "iter_tip": [53, 106, 134], "last_common_ancestor": [53, 106], "levelord": 53, "lin_rajan_moret": 53, "tree2": 53, "lin": 53, "rajan": 53, "moret": 53, "exhibit": 53, "superior": 53, "robinson": 53, "fould": 53, "unroot": [53, 69, 143], "et": [53, 67, 69, 75, 76, 77, 78, 89, 97, 129, 131], "al": [53, 67, 69, 75, 76, 77, 78, 89, 97, 126, 127, 128, 129, 131, 135], "2012": [53, 65], "ieee": 53, "acm": 53, "transact": 53, "biologi": [53, 78, 97, 152], "bioinformat": [53, 151, 152], "vol": [53, 97], "pp": [53, 97, 129, 132], "1014": [53, 65], "1022": [53, 65], "juli": 53, "aug": 53, "lowest_common_ancestor": 53, "tipnam": 53, "lowest": 53, "make_tree_arrai": 53, "dec_list": 53, "max_tip_tip_dist": [53, 106], "few": 53, "unnam": 53, "name_unnamed_nod": 53, "often": [53, 91, 134], "non_tip_children": 53, "algorithm": [53, 65, 94, 95, 125, 130, 136, 138, 139, 151, 152], "access": [53, 64, 69, 93, 98], "much": [53, 89, 136, 138, 139, 151, 152], "_parent": 53, "mutat": [53, 97, 153], "rememb": [53, 139], "postord": 53, "somewhat": 53, "ineleg": 53, "save": [53, 62, 114, 123, 124, 126, 127, 128, 139], "stack": 53, "30": [53, 65, 67, 68, 70, 71, 72, 73, 74, 75, 76, 77, 78, 97, 98, 107, 110, 117, 129, 138], "3x": [53, 67], "worst": 53, "comb": 53, "pre_and_postord": 53, "visit": 53, "prune": [53, 134], "reconstruct": [53, 95, 126, 152], "reflect": [53, 106, 113], "reassign_nam": 53, "reassign": 53, "old_nam": 53, "new_nam": 53, "remove_delet": 53, "is_delet": 53, "remove_nod": [53, 134], "root_at_midpoint": [53, 106], "midpoint": 53, "farthest": 53, "apart": 53, "fn": [53, 91], "rooted_at": [53, 106], "edge_nam": 53, "knowledg": 53, "rooted_with_tip": [53, 106], "same_shap": 53, "same_topologi": [53, 106], "scale_branch_length": [53, 106], "max_length": 53, "ultrametr": 53, "scale": [53, 57, 59, 123, 131], "branchlength": 53, "precis": [53, 71, 141], "set_max_tip_tip_dist": 53, "propag": 53, "julia": 53, "goodrich": 53, "intent": 53, "modifi": [53, 64, 91, 93, 97, 107, 109, 121, 129, 134, 135, 142], "track": [53, 79, 107], "set_param_valu": 53, "set_tip_dist": [53, 106], "distant": [53, 106], "sibl": 53, "sort_ord": 53, "At": [53, 88, 104, 132, 142], "left": [53, 62, 81, 100, 102, 107, 108, 109, 114, 120, 123, 134, 148], "kid": 53, "tip_children": 53, "tip_to_tip_dist": [53, 106], "default_length": 53, "__start": 53, "__stop": 53, "tip_ord": 53, "confus": [53, 142], "tips_within_dist": [53, 106], "interpret": [53, 130], "edge_attribut": 53, "total_descending_branch_length": 53, "total_length": [53, 69], "self_befor": 53, "self_aft": 53, "safe": [53, 109], "depth": 53, "inord": 53, "inflat": 55, "deserialis": [56, 63, 95, 97], "recreat": [56, 129], "our": [57, 58, 64, 70, 75, 84, 87, 89, 91, 93, 98, 107, 109, 119, 129, 132, 136, 137, 144, 146, 151, 152], "get_app": [57, 58, 59, 60, 61, 62, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 87, 114], "load_unalign": [57, 58, 59, 64], "sca1": [57, 58, 59, 111, 113], "mg94hky": [57, 77, 94, 97, 142], "codon_align": 57, "progressive_align": [57, 58, 59, 63, 64], "2478": [57, 65, 68, 78], "macaqu": [57, 58, 59, 114, 143], "atgaaatccaa": [57, 58], "chimp": [57, 58, 59, 101, 143], "human": [57, 58, 59, 64, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 87, 91, 94, 95, 96, 97, 98, 101, 102, 106, 107, 113, 114, 126, 127, 128, 129, 130, 131, 132, 135, 137, 139, 141, 142, 143], "humanatgaaatccaaccaagagcggagcaacgaatgcctgcctcccaagaagcgcgagatcccc": [57, 58], "rat": [57, 58, 59, 94, 125, 131, 139], "mous": [57, 58, 59, 65, 87, 91, 94, 101, 106, 113, 115, 126, 127, 128, 132, 135, 139, 141, 142], "lemur": [57, 58, 59], "unique_guid": [57, 58, 64], "tn93": [57, 58, 78, 95, 96, 97], "paralinear": [57, 58, 59, 69, 96], "nt_align": [57, 58], "001": [57, 58, 75, 97], "0076": [57, 58, 68, 70, 78, 97], "01": [57, 58, 65, 97, 102, 107, 129, 138], "02": [57, 58, 97, 129, 132, 135, 138, 141, 142], "mouse_lemur": [57, 58, 59], "guide_tre": [57, 58, 59, 64], "indel_r": [57, 58, 59, 64], "indel_length": [57, 58, 59, 64], "cnfhky": [57, 77, 97], "param_v": [57, 64, 94], "omega": [57, 72, 73, 74, 75, 76, 77, 94, 97, 109, 129, 135, 142], "kappa": [57, 64, 77, 94, 97, 141, 142, 143, 145], "align_param": [57, 58, 59], "autogenerated_name_sh": 57, "06": [57, 58, 59, 69, 71, 73, 75, 107, 129, 135, 142], "lnl": [57, 58, 59, 66, 68, 69, 71, 72, 73, 74, 75, 76, 77, 78, 97, 135, 141, 145], "6211": 57, "755293808823": 57, "hky85": [58, 64, 78, 94, 97, 126, 127, 128, 137, 139, 141, 143, 145], "2475": [58, 65], "f81": [58, 78, 95, 96, 97, 144], "autogenerated_name_c": 58, "6402": 58, "5569169915125": 58, "to_aa": 59, "translate_seq": [59, 64], "wg01": [59, 97], "aa_align": 59, "825": [59, 65], "mksnqersnec": 59, "humanmksnqersneclppkkreipatsrsseekaptlpsdnhrvegtawlpgnpggrghgggrh": 59, "ap": [59, 97], "ta": [59, 92], "st": 59, "004763355238688913": 59, "011219581285708921": 59, "052856143725369786": 59, "03580862702845759": 59, "02435147404130339": 59, "0023127545121458537": 59, "00019740149152159842": 59, "008168683695808834": 59, "0030743103943117606": 59, "autogenerated_name_ot": 59, "jtt92": [59, 97, 139], "3208": 59, "5222197901758": 59, "help": [60, 62, 97, 114, 130], "omit_degener": [60, 61, 63], "just_nuc": 60, "gap_is_degen": [60, 61], "request": [61, 128, 136, 139], "overview": 61, "accomod": 61, "omit_degenerates_app": 61, "degen": 61, "vignett": 61, "section": [61, 125, 126, 127, 128, 129, 130, 131, 132, 134, 135, 137, 138, 139, 140, 141, 142, 143, 144, 145], "instal": [62, 136, 146], "crucial": [62, 136], "concept": [62, 142], "concern": [62, 142, 149, 151], "convent": [62, 69, 84, 91], "load_": [62, 101], "write_": 62, "As": [62, 67, 69, 70, 118, 132, 136, 138, 139, 142, 143], "fit_model": 62, "analysi": [62, 104, 123, 138, 152, 153], "extract_stat": 62, "simplifi": [62, 106, 146], "composit": 62, "next": [62, 98, 132, 134, 139, 142], "involv": [62, 104, 106, 130, 132, 139, 140, 142, 149, 152], "work": [62, 64, 87, 89, 90, 93, 98, 99, 108, 109, 136, 149, 151], "illustr": [62, 64, 70, 87, 88, 91, 95, 97, 102, 107, 117, 132, 142], "third": 62, "destin": 62, "out_dstor": [62, 64], "path_to_dir": 62, "fa": [62, 64, 93, 98, 101, 111], "load_align": [62, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 87], "cpos3": 62, "take_codon_posit": 62, "write_seq": 62, "primate_brca1": [62, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 87, 95, 96, 97, 98, 111, 129], "just3rd": 62, "simpler": [62, 97, 112, 132], "loop": [62, 79, 98, 109, 139], "dstore": [62, 64], "apply_to": [62, 64], "fingerprint": 62, "who": [62, 64, 151], "2023": [62, 65], "09": [62, 132, 135, 141, 142], "57": [62, 65, 138], "32": [62, 65, 107, 110, 138], "6b3b3c60": 62, "11": [62, 65, 67, 73, 75, 77, 87, 90, 91, 97, 98, 99, 102, 107, 108, 109, 110, 129, 132, 135, 138, 141, 142], "runner": [62, 64, 87], "home": [62, 64, 87], "github": [62, 64, 87, 99, 101, 102, 107, 108, 109, 147], "venv": [62, 87, 99, 108, 109], "lib": [62, 64, 87, 99, 108, 109], "python3": [62, 64, 87, 99, 108, 109, 136], "ipykernel_launch": [62, 64], "py": [62, 64, 87, 99, 108, 109, 136], "tmp": 62, "tmpbgw9k21y": 62, "historymanag": 62, "hist_fil": 62, "fourfold_degener": 62, "c3org": [62, 64, 87], "doc": [62, 63, 64, 87, 101, 102, 107, 152], "tmppn7klv4l": 62, "verbos": [62, 64, 69, 71], "id_from_sourc": [62, 64], "functionget_unique_id": 62, "0x7f6bfa429b20": 62, "timenamepython": [62, 64], "versionwhocommandcompos": [62, 64], "32log": 62, "log3": [62, 64], "5runner": 62, "interrog": [62, 65, 103], "did": [62, 132, 136], "typenumb": [62, 64], "completed7": 62, "not_completed6": 62, "logs1": [62, 64], "messag": [62, 64, 87, 97, 136], "error": [62, 64, 79, 96, 97, 108, 109, 125, 139], "ce": 62, "refseqs_protein": [62, 111], "test2": [62, 94, 111], "typeoriginmessagenumsourc": [62, 64], "errorload_align": 62, "6refseqs_protein": 62, "00": [62, 67, 68, 70, 71, 72, 73, 74, 75, 76, 77, 78, 97, 107, 117, 129, 131, 132, 135, 138, 141, 142, 144], "processor": [62, 136, 152], "machin": [62, 153], "mpi": [62, 136], "analys": [63, 68, 69, 71, 84, 91, 97, 130, 140, 149, 151, 152, 153], "pickle_it": [63, 64], "unpickle_it": 63, "decompress": 63, "to_primit": [63, 64], "primit": 63, "min_length": 63, "fixed_length": 63, "omit_dupl": 63, "redund": [63, 93], "54": [63, 65, 138], "modulenamecomposabledocinput": 63, "typeoutput": 63, "iopickle_ittrueserialis": 63, "serialisabletypebyt": 63, "iounpickle_ittruedeserialis": 63, "bytesserialisabletyp": 63, "iocompresstruecompress": 63, "bytesbyt": 63, "iodecompresstruedecompress": 63, "ioto_primitivetrueconvert": 63, "serialisationserialisabletypeserialisabletyp": 63, "samplemin_lengthtruefilt": 63, "sequencecollectionalign": 63, "samplefixed_lengthtruesampl": 63, "arrayalignmentalign": 63, "sampleomit_bad_seqstrueelimin": 63, "sampleomit_duplicatedtrueremov": 63, "sampletrim_stop_codonstrueremov": 63, "download": [64, 93, 98, 111, 146], "zip": [64, 111, 129, 138], "unzip": 64, "035": 64, "previous": [64, 93, 134], "four": [64, 144], "organis": [64, 93], "system": [64, 136, 152], "subdirectori": 64, "demo_dstor": 64, "scitrack": 64, "integr": [64, 109, 151], "sql": 64, "membership": 64, "conveni": [64, 90, 97, 101, 129, 148], "1035x": 64, "ensg00000157184": 64, "ensg00000131791": 64, "demonstr": [64, 66, 67, 68, 69, 91, 97, 101, 104, 107, 109, 113, 126, 129, 134, 142], "1035": [64, 65], "completed1035": 64, "not_completed0": 64, "logs0": 64, "folow": 64, "ensg00000127054": 64, "ensg00000067704": 64, "ensg00000182004": 64, "natggcgtaccgtg": 64, "storag": [64, 108, 109], "best": [64, 89, 93, 95, 97, 130, 134, 142, 149, 151], "load_db": 64, "creation": [64, 129], "former": [64, 93, 136], "easier": [64, 89], "issu": [64, 71, 87, 89, 120], "unnatur": 64, "demo": [64, 98, 111, 136], "175": [64, 65], "completed175": 64, "execut": [64, 72, 74, 97, 104, 107, 136, 151, 152], "logfil": 64, "regard": [64, 72, 85, 87], "07": [64, 107, 129], "24": [64, 65, 73, 74, 75, 77, 91, 97, 108, 109, 110, 138, 145], "14": [64, 65, 69, 73, 75, 91, 97, 105, 110, 129, 138], "42": [64, 65, 69, 93, 97, 109, 132, 138], "56": [64, 65, 106, 107, 129, 132, 138], "write_db": [64, 68], "pid8650": 64, "gavin": [64, 125, 127, 128, 129, 131, 132, 135, 137, 138, 139, 140, 141, 142, 143, 144, 145, 152], "miniconda3": 64, "env": 64, "c3dev": [64, 89, 153], "librari": [64, 136, 149, 151, 152], "runtim": 64, "kernel": 64, "5eb93aeb": 64, "f6e0": 64, "493e": 64, "85d1": 64, "d62895201ae2": 64, "data_path": 64, "nt": [64, 98], "tinydb": 64, "name_callback": 64, "if_exist": 64, "overwrit": 64, "56log": 64, "3gavin": 64, "jsonload_unalign": 64, "vial": 64, "225": [64, 65], "clariti": 64, "eratosthen": 64, "local": [64, 97, 109, 129, 132, 135, 137, 140, 141, 142], "8650": 64, "system_detail": 64, "darwin": 64, "thu": [64, 91, 114, 149, 151], "apr": [64, 97], "25": [64, 65, 68, 91, 97, 98, 108, 109, 110, 138], "23": [64, 65, 72, 74, 76, 102, 107, 110, 122, 132, 135, 138, 141, 142], "16": [64, 65, 69, 73, 75, 90, 93, 97, 102, 107, 110, 129, 132, 138], "27": [64, 65, 75, 77, 97, 110, 138, 142], "pdt": 64, "xnu": 64, "4903": 64, "261": [64, 65, 78, 97], "release_x86_64": 64, "sqlite": [64, 93], "gtet": 64, "synopsi": 64, "in_dstor": 64, "allow_rc": 64, "trim_terminal_stop": 64, "get_unique_id": 64, "0x7f5a2415db20": 64, "convertor": [64, 138], "as_dict": 64, "0x7f5a24176840": 64, "1025": [64, 65], "completed1025": 64, "not_completed10": 64, "confirm": 64, "statu": 64, "md5sum": 64, "incorrect": [64, 87], "conditionvalu": 64, "correct1035": 64, "incorrect0": 64, "missing0": 64, "logtru": 64, "why": [64, 69, 136], "huma": 64, "ensg00000198938": 64, "ensg00000183291": 64, "errortranslate_seq": 64, "10ensg00000198938": 64, "came": 64, "had": [64, 109, 136], "model_result": [65, 88], "tabular_result": [65, 66, 67, 75, 88], "posterior": [65, 97, 129, 132, 140], "margin": 65, "gn": [65, 67, 68, 69, 70, 71, 78, 97, 111, 120, 121, 122, 123], "reconstuctor": 65, "states_result": 65, "5x": [65, 75], "0000": [65, 66, 67, 68, 70, 71, 72, 73, 74, 75, 76, 77, 78, 88, 96, 97, 102, 107, 117, 128, 132], "13": [65, 73, 75, 90, 93, 98, 107, 110, 135, 138, 142, 145], "15": [65, 73, 75, 77, 97, 98, 109, 110, 118, 124, 138, 142, 144], "17": [65, 73, 75, 93, 129, 138], "19": [65, 68, 73, 75, 78, 129, 132, 135, 138, 141, 142, 145], "21": [65, 77, 97, 98, 104, 107, 110, 129, 132, 135, 138, 141, 142, 145], "22": [65, 71, 72, 97, 104, 106, 107, 110, 129, 132, 138, 145], "26": [65, 73, 107, 110, 132, 138], "28": [65, 98, 110, 132, 135, 138, 141, 142], "29": [65, 98, 110, 138], "31": [65, 97, 107, 110, 132, 138], "33": [65, 70, 95, 106, 107, 110, 138, 145], "34": [65, 91, 107, 135, 138, 142], "35": [65, 98, 108, 109, 138, 145], "36": [65, 77, 93, 97, 99, 107, 108, 109, 135, 138], "37": [65, 108, 109, 132, 135, 138, 141, 142], "38": [65, 108, 109, 132, 135, 138, 142, 145], "39": [65, 132, 135, 138], "40": [65, 91, 97, 98, 109, 117, 132, 138], "41": [65, 132, 138], "43": [65, 78, 97, 138], "44": [65, 97, 106, 107, 138, 140], "45": [65, 98, 107, 138, 140], "46": [65, 138], "47": [65, 138, 140], "48": [65, 98, 138], "49": [65, 77, 97, 138], "51": [65, 78, 97, 138], "52": [65, 104, 138], "53": [65, 129, 138], "55": [65, 107, 138, 140], "58": [65, 98, 107, 129, 138], "59": [65, 102, 107, 132, 135, 137, 138, 142, 145], "62": [65, 138], "63": [65, 138], "65": [65, 138], "66": [65, 107, 138], "67": [65, 107, 138], "68": [65, 91, 97, 138], "69": [65, 138], "70": [65, 91, 138], "71": [65, 135, 138], "72": [65, 135, 138], "73": [65, 77, 95, 97, 135, 138], "74": [65, 138, 145], "75": [65, 94, 125, 129, 138], "76": [65, 78, 97, 138], "77": [65, 77, 107, 138, 142], "78": [65, 97, 107, 129, 138], "79": [65, 138], "80": [65, 138], "81": [65, 138], "82": [65, 97, 138], "83": [65, 135, 138], "84": [65, 98, 129, 135, 138, 142], "85": [65, 138, 142], "86": [65, 129, 138], "87": [65, 138, 142], "88": [65, 107, 138], "89": [65, 129, 138], "90": [65, 135, 138], "91": [65, 138], "92": [65, 135, 138, 142], "93": [65, 78, 97, 138, 152], "94": [65, 102, 107, 137, 138], "96": [65, 129, 135, 138], "97": [65, 138], "98": [65, 138, 145], "99": [65, 107, 129, 138], "101": [65, 75, 98, 107, 138], "102": [65, 107, 138], "103": [65, 94, 107, 138], "104": [65, 107, 129, 138], "105": [65, 107, 138], "107": [65, 138], "108": [65, 138], "109": [65, 138], "110": [65, 138], "111": [65, 75, 135, 138, 142], "112": [65, 138, 142], "113": [65, 91, 138], "114": [65, 138], "115": [65, 91, 138], "116": [65, 138], "117": [65, 138], "118": [65, 107, 138], "119": [65, 138], "120": [65, 107, 117, 135, 138, 142], "121": [65, 138, 142], "122": [65, 138], "123": [65, 109, 138], "124": [65, 138], "125": [65, 107, 138], "126": [65, 138], "127": [65, 93, 138], "128": [65, 138], "129": [65, 107, 138], "130": [65, 138], "131": [65, 138], "132": [65, 66, 138], "133": [65, 138], "134": [65, 77, 97, 138, 152], "135": [65, 138], "136": [65, 138], "137": [65, 138], "138": [65, 107, 138], "139": [65, 138], "140": [65, 129, 138], "141": [65, 107, 138], "142": [65, 94, 138], "143": [65, 138], "144": [65, 78, 97, 138], "145": [65, 138], "146": [65, 138], "147": [65, 138], "148": [65, 138], "149": [65, 138, 152], "150": [65, 91], "151": 65, "152": 65, "153": 65, "154": 65, "155": 65, "156": 65, "157": 65, "158": 65, "159": [65, 102, 107], "160": 65, "161": [65, 107], "162": 65, "163": 65, "164": 65, "165": 65, "166": 65, "167": [65, 97], "168": 65, "169": [65, 93], "170": 65, "171": 65, "172": 65, "173": 65, "174": [65, 97], "176": [65, 66], "177": 65, "178": 65, "179": 65, "180": [65, 145], "181": 65, "182": 65, "183": 65, "184": 65, "185": [65, 94], "186": 65, "187": 65, "188": 65, "189": 65, "190": [65, 132, 135, 141, 142, 145], "191": 65, "192": 65, "193": 65, "194": 65, "195": 65, "196": 65, "197": 65, "198": 65, "199": 65, "200": 65, "201": [65, 75, 102, 107], "202": 65, "203": 65, "204": 65, "205": 65, "206": 65, "207": 65, "208": 65, "209": [65, 97], "210": [65, 132, 135, 141, 142, 145], "211": [65, 75], "212": 65, "213": 65, "214": 65, "215": 65, "216": 65, "217": 65, "218": 65, "219": 65, "220": [65, 145], "221": 65, "222": 65, "223": 65, "224": 65, "226": 65, "227": 65, "228": 65, "229": [65, 107], "230": 65, "231": 65, "232": 65, "233": 65, "234": [65, 109], "235": 65, "236": 65, "237": 65, "238": 65, "239": 65, "240": 65, "241": [65, 97], "242": 65, "243": 65, "244": 65, "245": 65, "246": 65, "247": 65, "248": 65, "249": 65, "250": [65, 117], "251": 65, "252": 65, "253": 65, "254": 65, "256": [65, 104], "257": 65, "258": 65, "259": 65, "260": 65, "262": 65, "263": 65, "264": 65, "265": 65, "266": 65, "267": 65, "268": 65, "269": [65, 87], "270": 65, "271": 65, "272": 65, "273": 65, "274": [65, 87], "275": [65, 97], "276": 65, "277": 65, "278": [65, 87], "279": 65, "280": [65, 142], "281": [65, 78, 97, 135, 142, 152], "282": [65, 142], "283": 65, "284": 65, "285": 65, "286": 65, "287": 65, "288": 65, "289": 65, "290": 65, "291": 65, "292": 65, "293": 65, "294": [65, 107], "295": 65, "296": 65, "297": 65, "298": 65, "299": 65, "300": [65, 112, 115, 117, 118], "301": [65, 75], "302": [65, 107], "303": 65, "304": 65, "305": 65, "306": [65, 87], "307": 65, "308": 65, "309": 65, "310": 65, "311": [65, 75, 117], "312": 65, "313": 65, "314": 65, "315": 65, "316": 65, "317": 65, "318": 65, "319": 65, "320": 65, "321": 65, "322": 65, "323": 65, "324": 65, "325": 65, "326": 65, "327": 65, "328": 65, "329": 65, "330": 65, "331": 65, "332": [65, 107], "333": 65, "334": 65, "335": 65, "336": 65, "337": 65, "338": 65, "339": 65, "340": [65, 135, 142], "341": 65, "342": 65, "343": 65, "344": 65, "345": [65, 97, 102, 107], "346": 65, "347": 65, "348": 65, "349": 65, "350": [65, 145], "351": 65, "352": [65, 97], "353": 65, "354": 65, "355": 65, "356": 65, "357": 65, "358": 65, "359": 65, "360": [65, 135], "361": 65, "362": 65, "363": 65, "364": 65, "365": 65, "366": [65, 87], "367": 65, "368": 65, "369": 65, "370": [65, 132, 135, 141, 142], "371": 65, "372": 65, "373": 65, "374": 65, "375": 65, "376": [65, 97], "377": 65, "378": 65, "379": 65, "380": [65, 102, 107, 135, 145], "381": [65, 132], "382": 65, "383": 65, "384": 65, "385": 65, "386": 65, "387": [65, 98], "388": 65, "389": 65, "390": 65, "391": 65, "392": 65, "393": [65, 107], "394": 65, "395": 65, "396": 65, "397": 65, "398": 65, "399": 65, "400": [65, 113, 116, 118, 124], "401": 65, "402": 65, "403": 65, "404": 65, "405": 65, "406": 65, "407": 65, "408": 65, "409": 65, "410": 65, "411": 65, "412": 65, "413": 65, "414": 65, "415": 65, "416": 65, "417": 65, "418": 65, "419": 65, "420": [65, 78, 97, 98], "421": [65, 132], "422": 65, "423": 65, "424": 65, "425": 65, "426": 65, "427": 65, "428": 65, "429": 65, "430": 65, "431": 65, "432": 65, "433": 65, "434": [65, 98, 118], "435": 65, "436": 65, "437": 65, "438": 65, "439": 65, "440": 65, "441": 65, "442": 65, "443": 65, "444": 65, "445": 65, "446": 65, "447": 65, "448": 65, "449": 65, "450": [65, 140], "451": 65, "452": 65, "453": 65, "454": 65, "455": 65, "456": 65, "457": 65, "458": 65, "459": [65, 97], "460": 65, "461": 65, "462": 65, "463": 65, "464": 65, "465": 65, "466": 65, "467": 65, "468": 65, "469": 65, "470": 65, "471": 65, "472": 65, "473": 65, "474": 65, "475": 65, "476": 65, "477": 65, "478": 65, "479": 65, "480": 65, "481": 65, "482": 65, "483": 65, "484": 65, "485": 65, "486": 65, "487": 65, "488": 65, "489": 65, "490": 65, "491": 65, "492": 65, "493": 65, "494": 65, "495": 65, "496": 65, "497": 65, "498": 65, "499": 65, "501": [65, 132], "502": 65, "503": 65, "504": 65, "505": 65, "506": 65, "507": 65, "508": 65, "509": 65, "510": 65, "511": [65, 102, 107], "512": 65, "513": 65, "514": 65, "515": 65, "516": 65, "517": 65, "518": 65, "519": 65, "520": 65, "521": [65, 93], "522": 65, "523": 65, "524": 65, "525": 65, "526": 65, "527": 65, "528": 65, "529": 65, "530": 65, "531": 65, "532": 65, "533": 65, "534": [65, 102, 107], "535": 65, "536": 65, "537": 65, "538": 65, "539": 65, "540": 65, "541": 65, "542": 65, "543": [65, 102, 107], "544": 65, "545": 65, "546": [65, 93], "547": [65, 93], "548": 65, "549": 65, "550": [65, 152], "551": [65, 140], "552": 65, "553": 65, "554": 65, "555": 65, "556": 65, "557": 65, "558": 65, "559": 65, "560": 65, "561": [65, 93], "562": 65, "563": [65, 93], "564": [65, 132], "565": 65, "566": 65, "567": 65, "568": [65, 77, 97], "569": 65, "570": 65, "571": 65, "572": 65, "573": 65, "574": 65, "575": 65, "576": 65, "577": 65, "578": [65, 98], "579": 65, "580": [65, 101], "581": [65, 129], "582": 65, "583": 65, "584": 65, "585": 65, "586": 65, "587": 65, "588": 65, "589": 65, "590": 65, "591": 65, "592": 65, "593": 65, "594": 65, "595": [65, 94], "596": 65, "597": 65, "598": 65, "599": 65, "601": 65, "602": 65, "603": 65, "604": 65, "605": 65, "606": 65, "607": 65, "608": 65, "609": 65, "610": 65, "611": 65, "612": 65, "613": 65, "614": 65, "615": 65, "616": [65, 99], "617": [65, 99], "618": 65, "619": [65, 99], "620": 65, "621": 65, "622": 65, "623": 65, "624": 65, "625": 65, "626": [65, 102, 107], "627": 65, "628": 65, "629": 65, "630": 65, "631": 65, "632": 65, "633": 65, "634": 65, "635": 65, "636": 65, "637": 65, "638": 65, "639": 65, "640": 65, "641": 65, "642": 65, "643": 65, "644": 65, "645": 65, "646": 65, "647": 65, "648": 65, "649": 65, "650": [65, 118, 121], "651": 65, "652": 65, "653": 65, "654": 65, "655": 65, "656": 65, "657": 65, "658": 65, "659": 65, "660": 65, "661": 65, "662": 65, "663": 65, "664": 65, "665": 65, "666": [65, 98], "667": 65, "668": 65, "669": 65, "670": 65, "671": 65, "672": 65, "673": 65, "674": 65, "675": 65, "676": 65, "677": 65, "678": [65, 102, 107], "679": 65, "680": 65, "681": 65, "682": 65, "683": 65, "684": 65, "685": [65, 93], "686": [65, 109], "687": [65, 109], "688": [65, 109], "689": [65, 109], "690": [65, 109], "691": [65, 97], "692": 65, "693": 65, "694": 65, "695": 65, "696": 65, "697": 65, "698": 65, "699": 65, "701": 65, "702": 65, "703": 65, "704": 65, "705": 65, "706": 65, "707": 65, "708": 65, "709": 65, "710": [65, 135], "711": 65, "712": 65, "713": 65, "714": 65, "715": [65, 77, 97], "716": 65, "717": 65, "718": 65, "719": [65, 98], "720": 65, "721": 65, "722": 65, "723": 65, "724": 65, "725": [65, 77, 97], "726": [65, 77, 97], "727": 65, "728": 65, "729": 65, "730": [65, 135], "731": 65, "732": 65, "733": 65, "734": [65, 77, 97], "735": 65, "736": 65, "737": 65, "738": 65, "739": 65, "740": 65, "741": 65, "742": 65, "743": 65, "744": 65, "745": 65, "746": 65, "747": 65, "748": 65, "749": 65, "750": 65, "751": 65, "752": 65, "753": 65, "754": 65, "755": 65, "756": 65, "757": 65, "758": 65, "759": 65, "760": 65, "761": 65, "762": 65, "763": 65, "764": 65, "765": 65, "766": 65, "767": 65, "768": 65, "769": 65, "770": 65, "771": 65, "772": 65, "773": 65, "774": 65, "775": 65, "776": 65, "777": 65, "778": 65, "779": 65, "780": 65, "781": [65, 129], "782": 65, "783": 65, "784": 65, "785": 65, "786": 65, "787": 65, "788": 65, "789": 65, "790": 65, "791": 65, "792": 65, "793": 65, "794": 65, "795": 65, "796": 65, "797": 65, "798": 65, "799": 65, "800": 65, "801": 65, "802": 65, "803": 65, "804": 65, "805": 65, "806": 65, "807": 65, "808": 65, "809": 65, "810": 65, "811": 65, "812": 65, "813": 65, "814": 65, "815": 65, "816": 65, "817": 65, "818": 65, "819": 65, "820": 65, "821": 65, "822": 65, "823": 65, "824": 65, "826": 65, "827": 65, "828": 65, "829": 65, "830": [65, 135], "831": 65, "832": 65, "833": 65, "834": 65, "835": [65, 98], "836": 65, "837": 65, "838": 65, "839": 65, "840": [65, 142], "841": [65, 129], "842": 65, "843": 65, "844": 65, "845": 65, "846": 65, "847": 65, "848": 65, "849": 65, "850": 65, "851": 65, "852": 65, "853": 65, "854": 65, "855": 65, "856": 65, "857": 65, "858": 65, "859": 65, "860": [65, 129], "861": [65, 129], "862": 65, "863": 65, "864": 65, "865": 65, "866": 65, "867": [65, 102, 107], "868": 65, "869": 65, "870": 65, "871": 65, "872": 65, "873": 65, "874": 65, "875": 65, "876": 65, "877": 65, "878": 65, "879": 65, "880": 65, "881": 65, "882": 65, "883": 65, "884": 65, "885": 65, "886": 65, "887": 65, "888": 65, "889": 65, "890": 65, "891": 65, "892": 65, "893": 65, "894": 65, "895": 65, "896": 65, "897": 65, "898": 65, "899": 65, "900": 65, "901": 65, "902": 65, "903": 65, "904": 65, "905": 65, "906": 65, "907": 65, "908": 65, "909": [65, 87], "910": 65, "911": 65, "912": 65, "913": 65, "914": 65, "915": 65, "916": 65, "917": 65, "918": 65, "919": 65, "920": 65, "921": 65, "922": 65, "923": 65, "924": 65, "925": 65, "926": 65, "927": 65, "928": 65, "929": 65, "930": 65, "931": 65, "932": 65, "933": 65, "934": 65, "935": 65, "936": 65, "937": 65, "938": 65, "939": 65, "940": 65, "941": 65, "942": 65, "943": 65, "944": 65, "945": 65, "946": 65, "947": 65, "948": 65, "949": 65, "950": 65, "951": 65, "952": 65, "953": [65, 135], "954": [65, 129], "955": 65, "956": 65, "957": 65, "958": 65, "959": 65, "960": [65, 129], "961": 65, "962": 65, "963": 65, "964": [65, 129], "965": 65, "966": 65, "967": 65, "968": 65, "969": 65, "970": 65, "971": 65, "972": 65, "973": [65, 107], "974": 65, "975": 65, "976": 65, "977": 65, "978": 65, "979": 65, "980": [65, 145], "981": 65, "982": 65, "983": 65, "984": 65, "985": 65, "986": 65, "987": 65, "988": 65, "989": 65, "990": 65, "991": 65, "992": 65, "993": 65, "994": 65, "995": 65, "996": 65, "997": 65, "998": 65, "999": 65, "1000": [65, 102, 107, 138, 144, 152], "1001": 65, "1002": 65, "1003": 65, "1004": 65, "1005": 65, "1006": 65, "1007": 65, "1008": 65, "1009": 65, "1010": 65, "1011": [65, 107], "1012": 65, "1013": 65, "1015": 65, "1016": 65, "1017": 65, "1018": 65, "1019": 65, "1020": [65, 73], "1021": 65, "1023": 65, "1024": 65, "1026": 65, "1027": 65, "1028": 65, "1029": 65, "1030": 65, "1031": 65, "1032": [65, 73], "1033": 65, "1034": [65, 73], "1036": 65, "1037": 65, "1038": 65, "1039": 65, "1040": 65, "1041": 65, "1042": 65, "1043": [65, 73], "1044": [65, 87], "1045": 65, "1046": 65, "1047": 65, "1048": 65, "1049": 65, "1050": 65, "1051": 65, "1052": 65, "1053": 65, "1054": 65, "1055": 65, "1056": 65, "1057": 65, "1058": [65, 87], "1059": 65, "1060": 65, "1061": [65, 73], "1062": 65, "1063": 65, "1064": 65, "1065": 65, "1066": 65, "1067": 65, "1068": 65, "1069": 65, "1070": 65, "1071": 65, "1072": 65, "1073": 65, "1074": 65, "1075": 65, "1076": [65, 73], "1077": 65, "1078": 65, "1079": 65, "1080": 65, "1081": 65, "1082": 65, "1083": 65, "1084": 65, "1085": 65, "1086": 65, "1087": 65, "1088": 65, "1089": 65, "1090": 65, "1091": 65, "1092": 65, "1093": 65, "1094": 65, "1095": 65, "1096": 65, "1097": 65, "1098": 65, "1099": 65, "1100": 65, "1101": 65, "1102": 65, "1103": 65, "1104": 65, "1105": 65, "1106": 65, "1107": 65, "1108": [65, 73], "1109": 65, "1110": 65, "1111": 65, "1112": 65, "1113": 65, "1114": 65, "1115": 65, "1116": 65, "1117": 65, "1118": 65, "1119": 65, "1120": 65, "1121": 65, "1122": 65, "1123": 65, "1124": 65, "1125": [65, 66], "1126": 65, "1127": [65, 69, 93], "1128": 65, "1129": 65, "1130": 65, "1131": 65, "1132": 65, "1133": 65, "1134": 65, "1135": 65, "1136": 65, "1137": 65, "1138": 65, "1139": 65, "1140": 65, "1141": 65, "1142": 65, "1143": 65, "1144": 65, "1145": 65, "1146": [65, 73], "1147": 65, "1148": 65, "1149": [65, 70], "1150": 65, "1151": 65, "1152": 65, "1153": 65, "1154": 65, "1155": 65, "1156": 65, "1157": 65, "1158": 65, "1159": 65, "1160": 65, "1161": 65, "1162": 65, "1163": 65, "1164": 65, "1165": 65, "1166": 65, "1167": 65, "1168": 65, "1169": [65, 93], "1170": 65, "1171": 65, "1172": 65, "1173": 65, "1174": 65, "1175": 65, "1176": 65, "1177": 65, "1178": 65, "1179": 65, "1180": 65, "1181": 65, "1182": 65, "1183": [65, 117], "1184": 65, "1185": 65, "1186": 65, "1187": 65, "1188": 65, "1189": 65, "1190": 65, "1191": [65, 73], "1192": 65, "1193": 65, "1194": 65, "1195": 65, "1196": 65, "1197": 65, "1198": 65, "1199": 65, "1200": 65, "1201": 65, "1202": 65, "1203": 65, "1204": 65, "1205": 65, "1206": 65, "1207": 65, "1208": 65, "1209": 65, "1210": 65, "1211": 65, "1212": 65, "1213": 65, "1214": 65, "1215": 65, "1216": [65, 73], "1217": 65, "1218": 65, "1219": 65, "1220": 65, "1221": 65, "1222": 65, "1223": 65, "1224": 65, "1225": 65, "1226": 65, "1227": 65, "1228": 65, "1229": 65, "1230": [65, 107], "1231": 65, "1232": 65, "1233": 65, "1234": 65, "1235": 65, "1236": 65, "1237": 65, "1238": 65, "1239": 65, "1240": 65, "1241": 65, "1242": 65, "1243": 65, "1244": 65, "1245": [65, 67, 71], "1246": 65, "1247": 65, "1248": 65, "1249": 65, "1250": 65, "1251": 65, "1252": 65, "1253": 65, "1254": 65, "1255": 65, "1256": 65, "1257": 65, "1258": [65, 69], "1259": 65, "1260": 65, "1261": 65, "1262": 65, "1263": 65, "1264": [65, 68], "1265": 65, "1266": 65, "1267": 65, "1268": 65, "1269": 65, "1270": 65, "1271": 65, "1272": 65, "1273": 65, "1274": 65, "1275": 65, "1276": 65, "1277": 65, "1278": 65, "1279": 65, "1280": 65, "1281": 65, "1282": 65, "1283": 65, "1284": 65, "1285": 65, "1286": 65, "1287": 65, "1288": 65, "1289": 65, "1290": 65, "1291": 65, "1292": 65, "1293": 65, "1294": 65, "1295": 65, "1296": 65, "1297": 65, "1298": 65, "1299": 65, "1300": 65, "1301": 65, "1302": 65, "1303": 65, "1304": 65, "1305": 65, "1306": 65, "1307": 65, "1308": 65, "1309": 65, "1310": 65, "1311": 65, "1312": 65, "1313": [65, 73], "1314": 65, "1315": 65, "1316": 65, "1317": 65, "1318": 65, "1319": 65, "1320": 65, "1321": 65, "1322": 65, "1323": 65, "1324": 65, "1325": 65, "1326": 65, "1327": 65, "1328": 65, "1329": 65, "1330": 65, "1331": 65, "1332": 65, "1333": 65, "1334": 65, "1335": 65, "1336": 65, "1337": 65, "1338": [65, 72, 76], "1339": [65, 74], "1340": 65, "1341": 65, "1342": 65, "1343": 65, "1344": 65, "1345": [65, 73], "1346": 65, "1347": 65, "1348": 65, "1349": 65, "1350": 65, "1351": 65, "1352": 65, "1353": 65, "1354": 65, "1355": [65, 135], "1356": 65, "1357": [65, 73], "1358": 65, "1359": [65, 75], "1360": 65, "1361": 65, "1362": 65, "1363": 65, "1364": [65, 73], "1365": [65, 77], "1366": 65, "1367": [65, 132], "1368": 65, "1369": 65, "1370": 65, "1371": 65, "1372": 65, "1373": 65, "1374": 65, "1375": 65, "1376": 65, "1377": 65, "1378": 65, "1379": 65, "1380": 65, "1381": 65, "1382": [65, 69], "1383": [65, 142], "1384": 65, "1385": 65, "1386": 65, "1387": 65, "1388": 65, "1389": 65, "1390": 65, "1391": 65, "1392": 65, "1393": 65, "1394": 65, "1395": 65, "1396": 65, "1397": 65, "1398": 65, "1399": 65, "1400": 65, "1401": 65, "1402": 65, "1403": 65, "1404": 65, "1405": 65, "1406": 65, "1407": 65, "1408": 65, "1409": 65, "1410": 65, "1411": 65, "1412": 65, "1413": 65, "1414": 65, "1415": 65, "1416": 65, "1417": 65, "1418": 65, "1419": 65, "1420": 65, "1421": 65, "1422": 65, "1423": 65, "1424": [65, 107], "1425": 65, "1426": 65, "1427": 65, "1428": 65, "1429": 65, "1430": 65, "1431": 65, "1432": 65, "1433": 65, "1434": 65, "1435": 65, "1436": 65, "1437": 65, "1438": 65, "1439": 65, "1440": 65, "1441": 65, "1442": 65, "1443": 65, "1444": 65, "1445": 65, "1446": 65, "1447": 65, "1448": 65, "1449": 65, "1450": 65, "1451": 65, "1452": 65, "1453": 65, "1454": 65, "1455": 65, "1456": 65, "1457": 65, "1458": 65, "1459": 65, "1460": 65, "1461": 65, "1462": 65, "1463": 65, "1464": 65, "1465": 65, "1466": 65, "1467": 65, "1468": 65, "1469": 65, "1470": 65, "1471": 65, "1472": 65, "1473": 65, "1474": 65, "1475": 65, "1476": 65, "1477": 65, "1478": 65, "1479": 65, "1480": 65, "1481": 65, "1482": 65, "1483": 65, "1484": 65, "1485": 65, "1486": 65, "1487": 65, "1488": 65, "1489": 65, "1490": 65, "1491": [65, 73], "1492": 65, "1493": 65, "1494": 65, "1495": 65, "1496": 65, "1497": 65, "1498": 65, "1499": 65, "1500": [65, 144], "1501": 65, "1502": 65, "1503": 65, "1504": 65, "1505": 65, "1506": 65, "1507": [65, 98], "1508": 65, "1509": 65, "1510": 65, "1511": 65, "1512": 65, "1513": 65, "1514": 65, "1515": 65, "1516": 65, "1517": 65, "1518": 65, "1519": 65, "1520": 65, "1521": 65, "1522": 65, "1523": 65, "1524": 65, "1525": 65, "1526": 65, "1527": 65, "1528": 65, "1529": 65, "1530": 65, "1531": 65, "1532": [65, 68], "1533": 65, "1534": 65, "1535": 65, "1536": 65, "1537": 65, "1538": 65, "1539": 65, "1540": 65, "1541": 65, "1542": 65, "1543": 65, "1544": 65, "1545": 65, "1546": 65, "1547": 65, "1548": 65, "1549": 65, "1550": 65, "1551": 65, "1552": 65, "1553": 65, "1554": 65, "1555": 65, "1556": 65, "1557": 65, "1558": 65, "1559": 65, "1560": 65, "1561": [65, 97], "1562": 65, "1563": [65, 73], "1564": 65, "1565": 65, "1566": 65, "1567": [65, 69], "1568": [65, 117], "1569": [65, 73], "1570": 65, "1571": 65, "1572": [65, 75], "1573": 65, "1574": 65, "1575": 65, "1576": 65, "1577": 65, "1578": 65, "1579": 65, "1580": 65, "1581": 65, "1582": 65, "1583": 65, "1584": 65, "1585": 65, "1586": 65, "1587": 65, "1588": 65, "1589": 65, "1590": 65, "1591": 65, "1592": 65, "1593": 65, "1594": 65, "1595": 65, "1596": 65, "1597": 65, "1598": 65, "1599": 65, "1600": 65, "1601": 65, "1602": 65, "1603": 65, "1604": 65, "1605": 65, "1606": [65, 107], "1607": 65, "1608": 65, "1609": 65, "1610": 65, "1611": 65, "1612": 65, "1613": 65, "1614": 65, "1615": 65, "1616": 65, "1617": 65, "1618": 65, "1619": 65, "1620": 65, "1621": 65, "1622": 65, "1623": 65, "1624": 65, "1625": 65, "1626": 65, "1627": 65, "1628": 65, "1629": 65, "1630": 65, "1631": 65, "1632": 65, "1633": 65, "1634": 65, "1635": 65, "1636": 65, "1637": 65, "1638": 65, "1639": 65, "1640": 65, "1641": 65, "1642": 65, "1643": 65, "1644": 65, "1645": 65, "1646": 65, "1647": 65, "1648": 65, "1649": 65, "1650": 65, "1651": 65, "1652": 65, "1653": 65, "1654": 65, "1655": 65, "1656": 65, "1657": 65, "1658": 65, "1659": 65, "1660": 65, "1661": 65, "1662": 65, "1663": 65, "1664": 65, "1665": 65, "1666": 65, "1667": [65, 97], "1668": 65, "1669": 65, "1670": 65, "1671": 65, "1672": 65, "1673": 65, "1674": 65, "1675": 65, "1676": 65, "1677": 65, "1678": 65, "1679": 65, "1680": 65, "1681": 65, "1682": 65, "1683": 65, "1684": [65, 66], "1685": 65, "1686": 65, "1687": 65, "1688": 65, "1689": 65, "1690": 65, "1691": 65, "1692": 65, "1693": 65, "1694": 65, "1695": 65, "1696": 65, "1697": 65, "1698": 65, "1699": 65, "1700": 65, "1701": 65, "1702": 65, "1703": 65, "1704": 65, "1705": 65, "1706": [65, 131], "1707": 65, "1708": 65, "1709": 65, "1710": 65, "1711": 65, "1712": 65, "1713": 65, "1714": 65, "1715": 65, "1716": 65, "1717": 65, "1718": 65, "1719": [65, 68, 78], "1720": 65, "1721": 65, "1722": 65, "1723": 65, "1724": 65, "1725": 65, "1726": 65, "1727": [65, 68, 78], "1728": 65, "1729": [65, 70], "1730": 65, "1731": [65, 97], "1732": 65, "1733": 65, "1734": [65, 67, 69, 71], "1735": [65, 68], "1736": 65, "1737": 65, "1738": 65, "1739": 65, "1740": [65, 97], "1741": 65, "1742": [65, 66, 67, 70, 71, 97], "1743": 65, "1744": [65, 75], "1745": 65, "1746": 65, "1747": 65, "1748": 65, "1749": 65, "1750": [65, 131], "1751": 65, "1752": 65, "1753": 65, "1754": 65, "1755": [65, 99], "1756": [65, 99], "1757": [65, 99], "1758": [65, 99], "1759": [65, 99], "1760": [65, 77, 97, 99], "1761": [65, 99], "1762": [65, 99], "1763": [65, 99], "1764": 65, "1765": 65, "1766": 65, "1767": 65, "1768": [65, 68], "1769": 65, "1770": 65, "1771": 65, "1772": 65, "1773": [65, 69], "1774": 65, "1775": 65, "1776": 65, "1777": [65, 69], "1778": 65, "1779": 65, "1780": 65, "1781": 65, "1782": 65, "1783": 65, "1784": 65, "1785": 65, "1786": 65, "1787": 65, "1788": 65, "1789": 65, "1790": 65, "1791": 65, "1792": 65, "1793": 65, "1794": 65, "1795": 65, "1796": 65, "1797": 65, "1798": 65, "1799": 65, "1800": 65, "1801": [65, 73, 135], "1802": 65, "1803": 65, "1804": [65, 128], "1805": 65, "1806": 65, "1807": 65, "1808": 65, "1809": 65, "1810": 65, "1811": 65, "1812": 65, "1813": 65, "1814": 65, "1815": 65, "1816": [65, 97], "1817": 65, "1818": 65, "1819": 65, "1820": 65, "1821": 65, "1822": 65, "1823": 65, "1824": 65, "1825": 65, "1826": 65, "1827": 65, "1828": [65, 93], "1829": 65, "1830": 65, "1831": 65, "1832": 65, "1833": 65, "1834": 65, "1835": 65, "1836": 65, "1837": 65, "1838": 65, "1839": 65, "1840": 65, "1841": 65, "1842": 65, "1843": 65, "1844": 65, "1845": 65, "1846": 65, "1847": 65, "1848": 65, "1849": 65, "1850": 65, "1851": 65, "1852": 65, "1853": 65, "1854": 65, "1855": 65, "1856": 65, "1857": 65, "1858": 65, "1859": 65, "1860": 65, "1861": 65, "1862": 65, "1863": 65, "1864": 65, "1865": [65, 128], "1866": 65, "1867": 65, "1868": 65, "1869": 65, "1870": 65, "1871": 65, "1872": 65, "1873": 65, "1874": 65, "1875": 65, "1876": 65, "1877": 65, "1878": 65, "1879": 65, "1880": 65, "1881": 65, "1882": 65, "1883": 65, "1884": 65, "1885": 65, "1886": 65, "1887": 65, "1888": 65, "1889": 65, "1890": 65, "1891": [65, 96], "1892": [65, 96], "1893": 65, "1894": 65, "1895": 65, "1896": 65, "1897": 65, "1898": 65, "1899": 65, "1900": 65, "1901": 65, "1902": 65, "1903": 65, "1904": 65, "1905": 65, "1906": 65, "1907": 65, "1908": 65, "1909": 65, "1910": 65, "1911": 65, "1912": 65, "1913": 65, "1914": 65, "1915": [65, 96], "1916": 65, "1917": 65, "1918": 65, "1919": 65, "1920": 65, "1921": [65, 96], "1922": 65, "1923": [65, 96], "1924": 65, "1925": 65, "1926": 65, "1927": 65, "1928": 65, "1929": 65, "1930": [65, 96], "1931": 65, "1932": 65, "1933": 65, "1934": [65, 69, 96], "1935": 65, "1936": 65, "1937": 65, "1938": 65, "1939": 65, "1940": 65, "1941": [65, 75], "1942": 65, "1943": 65, "1944": [65, 96], "1945": 65, "1946": 65, "1947": [65, 69], "1948": 65, "1949": 65, "1950": 65, "1951": 65, "1952": 65, "1953": 65, "1954": 65, "1955": [65, 69], "1956": 65, "1957": 65, "1958": 65, "1959": 65, "1960": 65, "1961": 65, "1962": [65, 96], "1963": 65, "1964": 65, "1965": [65, 96], "1966": 65, "1967": 65, "1968": 65, "1969": [65, 78, 97], "1970": 65, "1971": 65, "1972": [65, 128], "1973": 65, "1974": 65, "1975": 65, "1976": 65, "1977": [65, 69], "1978": [65, 97, 131], "1979": 65, "1980": [65, 78, 97], "1981": [65, 78, 97, 144], "1982": 65, "1983": 65, "1984": 65, "1985": [65, 78, 97], "1986": 65, "1987": [65, 66, 78, 97], "1988": 65, "1989": 65, "1990": 65, "1991": 65, "1992": [65, 97], "1993": [65, 78, 97], "1994": [65, 77, 97, 129, 135], "1995": 65, "1996": [65, 69, 97], "1997": 65, "1998": [65, 73, 74, 77, 97], "1999": 65, "2000": [65, 129, 144], "2001": [65, 97], "2002": 65, "2003": 65, "2004": [65, 77, 97, 149, 151], "2005": [65, 129], "2006": 65, "2007": [65, 89, 151], "2008": [65, 152], "2009": 65, "2010": [65, 77, 97], "2011": 65, "2013": [65, 152], "2014": 65, "2015": [65, 78, 97, 152], "2016": 65, "2017": [65, 77, 78, 97, 152], "2018": 65, "2020": 65, "2021": 65, "2022": 65, "2024": 65, "2025": 65, "2026": 65, "2027": 65, "2028": 65, "2029": 65, "2030": 65, "2031": 65, "2032": 65, "2033": 65, "2034": 65, "2035": 65, "2036": 65, "2037": 65, "2038": 65, "2039": 65, "2040": 65, "2041": 65, "2042": [65, 72, 76], "2043": 65, "2044": 65, "2045": 65, "2046": [65, 75], "2047": 65, "2048": 65, "2049": 65, "2050": 65, "2051": 65, "2052": 65, "2053": 65, "2054": 65, "2055": 65, "2056": 65, "2057": 65, "2058": [65, 69], "2059": [65, 74], "2060": 65, "2061": 65, "2062": 65, "2063": 65, "2064": 65, "2065": 65, "2066": [65, 68, 78], "2067": 65, "2068": 65, "2069": 65, "2070": 65, "2071": 65, "2072": 65, "2073": 65, "2074": 65, "2075": 65, "2076": 65, "2077": 65, "2078": [65, 68, 128], "2079": 65, "2080": 65, "2081": 65, "2082": 65, "2083": 65, "2084": 65, "2085": 65, "2086": 65, "2087": 65, "2088": 65, "2089": 65, "2090": [65, 97], "2091": 65, "2092": 65, "2093": [65, 70], "2094": 65, "2095": [65, 66, 67, 70, 71, 97], "2096": 65, "2097": 65, "2098": 65, "2099": 65, "2100": 65, "2101": 65, "2102": 65, "2103": [65, 70], "2104": 65, "2105": 65, "2106": 65, "2107": 65, "2108": 65, "2109": [65, 107], "2110": 65, "2111": 65, "2112": [65, 96], "2113": 65, "2114": 65, "2115": 65, "2116": 65, "2117": 65, "2118": 65, "2119": 65, "2120": 65, "2121": 65, "2122": 65, "2123": 65, "2124": 65, "2125": 65, "2126": 65, "2127": 65, "2128": 65, "2129": 65, "2130": 65, "2131": 65, "2132": 65, "2133": 65, "2134": 65, "2135": 65, "2136": 65, "2137": 65, "2138": 65, "2139": 65, "2140": 65, "2141": 65, "2142": 65, "2143": 65, "2144": 65, "2145": 65, "2146": 65, "2147": 65, "2148": 65, "2149": 65, "2150": 65, "2151": 65, "2152": 65, "2153": 65, "2154": 65, "2155": 65, "2156": 65, "2157": [65, 96], "2158": 65, "2159": 65, "2160": 65, "2161": 65, "2162": 65, "2163": 65, "2164": 65, "2165": 65, "2166": 65, "2167": 65, "2168": 65, "2169": 65, "2170": 65, "2171": 65, "2172": 65, "2173": 65, "2174": 65, "2175": 65, "2176": 65, "2177": 65, "2178": [65, 68], "2179": 65, "2180": 65, "2181": 65, "2182": 65, "2183": 65, "2184": 65, "2185": 65, "2186": 65, "2187": 65, "2188": 65, "2189": 65, "2190": 65, "2191": 65, "2192": 65, "2193": 65, "2194": 65, "2195": 65, "2196": 65, "2197": 65, "2198": 65, "2199": 65, "2200": 65, "2201": 65, "2202": 65, "2203": 65, "2204": 65, "2205": 65, "2206": 65, "2207": 65, "2208": 65, "2209": 65, "2210": 65, "2211": 65, "2212": [65, 67, 71], "2213": 65, "2214": 65, "2215": 65, "2216": 65, "2217": 65, "2218": 65, "2219": 65, "2220": 65, "2221": 65, "2222": 65, "2223": 65, "2224": 65, "2225": 65, "2226": 65, "2227": 65, "2228": 65, "2229": 65, "2230": 65, "2231": 65, "2232": 65, "2233": 65, "2234": 65, "2235": 65, "2236": 65, "2237": 65, "2238": 65, "2239": 65, "2240": 65, "2241": 65, "2242": 65, "2243": 65, "2244": 65, "2245": 65, "2246": 65, "2247": 65, "2248": 65, "2249": 65, "2250": 65, "2251": 65, "2252": 65, "2253": [65, 72, 76], "2254": 65, "2255": 65, "2256": 65, "2257": 65, "2258": 65, "2259": 65, "2260": 65, "2261": 65, "2262": 65, "2263": 65, "2264": 65, "2265": [65, 74, 77], "2266": 65, "2267": 65, "2268": 65, "2269": 65, "2270": 65, "2271": 65, "2272": 65, "2273": 65, "2274": 65, "2275": 65, "2276": 65, "2277": 65, "2278": 65, "2279": 65, "2280": 65, "2281": 65, "2282": 65, "2283": 65, "2284": 65, "2285": 65, "2286": 65, "2287": 65, "2288": [65, 68], "2289": 65, "2290": 65, "2291": 65, "2292": 65, "2293": 65, "2294": 65, "2295": [65, 67, 71], "2296": [65, 68, 78], "2297": 65, "2298": 65, "2299": 65, "2300": 65, "2301": 65, "2302": 65, "2303": 65, "2304": 65, "2305": 65, "2306": 65, "2307": 65, "2308": 65, "2309": 65, "2310": 65, "2311": 65, "2312": 65, "2313": 65, "2314": 65, "2315": 65, "2316": [65, 97], "2317": 65, "2318": 65, "2319": 65, "2320": 65, "2321": 65, "2322": 65, "2323": 65, "2324": 65, "2325": 65, "2326": 65, "2327": 65, "2328": 65, "2329": 65, "2330": 65, "2331": 65, "2332": 65, "2333": 65, "2334": 65, "2335": 65, "2336": 65, "2337": 65, "2338": 65, "2339": 65, "2340": 65, "2341": 65, "2342": 65, "2343": 65, "2344": 65, "2345": 65, "2346": 65, "2347": [65, 73], "2348": 65, "2349": 65, "2350": 65, "2351": 65, "2352": 65, "2353": 65, "2354": 65, "2355": 65, "2356": 65, "2357": 65, "2358": 65, "2359": 65, "2360": 65, "2361": 65, "2362": 65, "2363": 65, "2364": 65, "2365": 65, "2366": 65, "2367": 65, "2368": 65, "2369": 65, "2370": 65, "2371": 65, "2372": 65, "2373": 65, "2374": 65, "2375": 65, "2376": 65, "2377": 65, "2378": 65, "2379": 65, "2380": 65, "2381": 65, "2382": 65, "2383": 65, "2384": 65, "2385": 65, "2386": 65, "2387": 65, "2388": 65, "2389": 65, "2390": 65, "2391": 65, "2392": 65, "2393": 65, "2394": 65, "2395": 65, "2396": 65, "2397": 65, "2398": [65, 68], "2399": 65, "2400": 65, "2401": 65, "2402": 65, "2403": 65, "2404": 65, "2405": 65, "2406": [65, 66, 67, 70, 71, 97], "2407": 65, "2408": 65, "2409": 65, "2410": 65, "2411": 65, "2412": 65, "2413": 65, "2414": 65, "2415": [65, 69], "2416": 65, "2417": 65, "2418": 65, "2419": 65, "2420": 65, "2421": [65, 75], "2422": 65, "2423": [65, 68, 78], "2424": [65, 131], "2425": 65, "2426": 65, "2427": 65, "2428": [65, 143], "2429": 65, "2430": 65, "2431": 65, "2432": 65, "2433": 65, "2434": 65, "2435": 65, "2436": 65, "2437": 65, "2438": 65, "2439": [65, 143], "2440": 65, "2441": 65, "2442": 65, "2443": 65, "2444": 65, "2445": 65, "2446": 65, "2447": 65, "2448": 65, "2449": 65, "2450": 65, "2451": 65, "2452": 65, "2453": 65, "2454": 65, "2455": 65, "2456": 65, "2457": 65, "2458": 65, "2459": 65, "2460": 65, "2461": 65, "2462": 65, "2463": 65, "2464": 65, "2465": 65, "2466": 65, "2467": 65, "2468": 65, "2469": 65, "2470": [65, 70], "2471": 65, "2472": [65, 129], "2473": 65, "2474": 65, "2476": 65, "2477": 65, "2479": 65, "2480": 65, "2481": 65, "2482": 65, "2483": 65, "2484": 65, "2485": 65, "2486": 65, "2487": 65, "2488": 65, "2489": [65, 131], "2490": 65, "2491": 65, "2492": 65, "2493": 65, "2494": [65, 143], "2495": 65, "2496": 65, "2497": 65, "2498": 65, "2499": [65, 68], "2500": 65, "2501": 65, "2502": [65, 67, 71], "2503": 65, "2504": 65, "2505": 65, "2506": 65, "2507": [65, 107], "2508": 65, "2509": 65, "2510": 65, "2511": 65, "2512": 65, "2513": 65, "2514": 65, "2515": 65, "2516": 65, "2517": 65, "2518": 65, "2519": 65, "2520": 65, "2521": 65, "2522": 65, "2523": 65, "2524": 65, "2525": 65, "2526": 65, "2527": 65, "2528": 65, "2529": 65, "2530": 65, "2531": 65, "2532": [65, 91, 101], "2533": 65, "2534": [65, 97], "2535": 65, "2536": 65, "2537": 65, "2538": 65, "2539": [65, 75], "2540": 65, "2541": [65, 75], "2542": 65, "2543": 65, "2544": 65, "2545": 65, "2546": 65, "2547": 65, "2548": 65, "2549": 65, "2550": 65, "2551": 65, "2552": [65, 143], "2553": 65, "2554": 65, "2555": 65, "2556": 65, "2557": 65, "2558": 65, "2559": [65, 75], "2560": 65, "2561": 65, "2562": 65, "2563": 65, "2564": 65, "2565": [65, 72], "2566": [65, 76], "2567": 65, "2568": 65, "2569": 65, "2570": 65, "2571": 65, "2572": 65, "2573": 65, "2574": 65, "2575": 65, "2576": 65, "2577": 65, "2578": 65, "2579": 65, "2580": 65, "2581": [65, 143], "2582": 65, "2583": [65, 69], "2584": 65, "2585": 65, "2586": 65, "2587": 65, "2588": 65, "2589": 65, "2590": 65, "2591": 65, "2592": 65, "2593": 65, "2594": 65, "2595": 65, "2596": [65, 75], "2597": [65, 75], "2598": 65, "2599": 65, "2600": 65, "2601": [65, 75], "2602": 65, "2603": 65, "2604": 65, "2605": 65, "2606": 65, "2607": 65, "2608": 65, "2609": 65, "2610": 65, "2611": 65, "2612": 65, "2613": 65, "2614": 65, "2615": 65, "2616": 65, "2617": 65, "2618": 65, "2619": 65, "2620": 65, "2621": 65, "2622": 65, "2623": 65, "2624": [65, 75], "2625": 65, "2626": 65, "2627": 65, "2628": 65, "2629": [65, 74], "2630": [65, 75], "2631": 65, "2632": 65, "2633": 65, "2634": 65, "2635": 65, "2636": 65, "2637": 65, "2638": 65, "2639": 65, "2640": 65, "2641": [65, 75], "2642": 65, "2643": 65, "2644": 65, "2645": 65, "2646": 65, "2647": 65, "2648": 65, "2649": 65, "2650": 65, "2651": 65, "2652": 65, "2653": 65, "2654": 65, "2655": 65, "2656": 65, "2657": 65, "2658": 65, "2659": 65, "2660": 65, "2661": 65, "2662": 65, "2663": 65, "2664": 65, "2665": 65, "2666": 65, "2667": 65, "2668": [65, 75], "2669": [65, 75], "2670": 65, "2671": [65, 75], "2672": 65, "2673": 65, "2674": 65, "2675": 65, "2676": 65, "2677": 65, "2678": 65, "2679": 65, "2680": 65, "2681": 65, "2682": 65, "2683": 65, "2684": 65, "2685": 65, "2686": 65, "2687": 65, "2688": 65, "2689": [65, 75], "2690": [65, 69], "2691": 65, "2692": 65, "2693": 65, "2694": 65, "2695": 65, "2696": 65, "2697": 65, "2698": 65, "2699": 65, "2700": 65, "2701": 65, "2702": 65, "2703": 65, "2704": 65, "2705": 65, "2706": 65, "2707": 65, "2708": 65, "2709": 65, "2710": 65, "2711": 65, "2712": [65, 75], "2713": 65, "2714": [65, 75], "2715": 65, "2716": 65, "2717": 65, "2718": 65, "2719": 65, "2720": [65, 75], "2721": 65, "2722": 65, "2723": 65, "2724": 65, "2725": 65, "2726": 65, "2727": [65, 97], "2728": 65, "2729": [65, 75], "2730": 65, "2731": 65, "2732": 65, "2733": [65, 72, 74, 76], "2734": 65, "2735": 65, "2736": 65, "2737": 65, "2738": 65, "2739": 65, "2740": 65, "2741": 65, "2742": 65, "2743": 65, "2744": 65, "2745": 65, "2746": [65, 75], "2747": 65, "2748": 65, "2749": 65, "2750": 65, "2751": 65, "2752": 65, "2753": 65, "2754": 65, "2755": 65, "2756": 65, "2757": 65, "2758": 65, "2759": 65, "2760": 65, "2761": 65, "2762": 65, "2763": 65, "2764": 65, "2765": 65, "2766": 65, "2767": 65, "2768": 65, "2769": 65, "2770": 65, "2771": 65, "2772": 65, "2773": 65, "2774": 65, "2775": 65, "2776": 65, "2777": 65, "2778": 65, "2779": 65, "2780": 65, "2781": 65, "2782": 65, "2783": 65, "2784": 65, "2785": 65, "2786": 65, "2787": 65, "2788": 65, "2789": 65, "2790": 65, "2791": 65, "2792": 65, "2793": 65, "2794": 65, "2795": 65, "2796": 65, "2797": 65, "2798": [65, 73], "2799": 65, "2800": 65, "2801": 65, "2802": 65, "2803": 65, "2804": 65, "2805": 65, "2806": 65, "2807": 65, "2808": 65, "2809": 65, "2810": 65, "2811": 65, "2812": 65, "2813": 65, "00000": [65, 70, 73, 74, 75, 88, 96, 97, 117, 128], "00001": 65, "28090": 65, "28101": 65, "28110": 65, "28120": 65, "28130": 65, "establish": [65, 136, 152], "move": 65, "cursor": [65, 98], "hover": [65, 98, 115, 118], "contemporan": [65, 70], "markov": [66, 69, 78, 97, 133, 152, 153], "barri": [66, 78, 97], "hartigan": [66, 78, 97], "bh": [66, 78, 97], "nfp": [66, 68, 69, 71, 72, 73, 74, 75, 76, 77, 78, 97, 145], "dlc": [66, 68, 69, 71, 72, 73, 74, 75, 76, 77, 78], "unique_q": [66, 68, 69, 71, 72, 73, 74, 75, 76, 77, 78], "6941": 66, "6028": 66, "keylnlnfpdlcunique_q": [66, 68, 69, 71, 76, 77, 78], "6028132truetru": 66, "stand": [66, 138], "largest": [66, 69], "lf": [66, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 97, 129, 131, 135, 137, 140, 141, 142, 143, 144, 145], "motif2": 66, "psub": 66, "galago": [66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 87, 95, 96, 97, 98, 129], "8750": [66, 132, 137, 141], "0649": [66, 73], "0409": [66, 131], "0192": [66, 72, 73, 74, 75, 76], "8058": 66, "0404": [66, 131], "0413": 66, "0255": 66, "8879": 66, "0611": 66, "0207": [66, 69], "0194": 66, "7915": 66, "howlermon": [66, 67, 68, 70, 71, 72, 73, 74, 75, 76, 77, 78, 87, 91, 94, 95, 96, 97, 98, 101, 106, 126, 127, 128, 129, 132, 135, 137, 139, 141, 142], "9688": 66, "0241": 66, "0041": 66, "0030": 66, "0374": 66, "9407": 66, "0069": [66, 72, 73, 74, 75, 76], "0150": 66, "0038": [66, 77], "9591": 66, "0333": 66, "0031": 66, "0068": 66, "0406": 66, "9494": 66, "rhesu": [66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 87, 95, 96, 97, 98, 129], "9879": 66, "0078": [66, 67, 68, 71, 72, 73, 74, 75, 76], "0015": [66, 72, 73, 74, 75, 76], "0028": [66, 67, 68, 70, 71, 78, 97], "0187": [66, 72, 73, 74, 75, 76], "9710": 66, "0040": [66, 72, 73, 74, 75, 76, 96, 143], "0063": [66, 70, 77], "0019": 66, "0009": [66, 72, 73, 74, 75, 76], "9850": 66, "0122": [66, 77], "0017": 66, "0295": 66, "9620": 66, "orangutan": [66, 67, 68, 70, 71, 72, 73, 74, 75, 76, 77, 78, 87, 95, 96, 97, 98, 114, 129], "9911": 66, "0059": 66, "0082": [66, 72, 73, 74, 75, 76], "9898": 66, "0020": 66, "9952": 66, "0073": 66, "9910": 66, "gorilla": [66, 67, 68, 70, 71, 72, 73, 74, 75, 76, 77, 78, 87, 95, 96, 97, 98, 129, 139], "9980": 66, "0010": 66, "9962": 66, "0029": 66, "0033": [66, 67, 68, 71, 77], "9967": 66, "9941": 66, "9918": 66, "9971": 66, "0083": [66, 77], "9900": 66, "chimpanze": [66, 67, 68, 70, 71, 72, 73, 74, 75, 76, 77, 78, 87, 95, 96, 97, 129], "9956": 66, "0044": 66, "9959": 66, "9990": 66, "9946": 66, "0054": [66, 96], "9868": 66, "0025": [66, 67, 68, 70, 71, 78, 96, 97], "0034": [66, 68, 70, 78, 97], "0121": [66, 67, 68, 70, 71], "9797": 66, "9916": 66, "0065": [66, 77], "0057": 66, "9926": 66, "9913": 66, "0043": [66, 77], "0045": 66, "0023": [66, 72, 73, 74, 75, 76, 96], "9933": 66, "0018": [66, 72, 73, 74, 75, 76, 96], "9920": [66, 93], "0053": [66, 96], "0011": [66, 72, 73, 74, 75, 76], "9948": 66, "3757": [66, 67, 70, 71, 97], "edgemotifmotif2psub": 66, "galagott0": 66, "galagotc0": 66, "galagota0": 66, "galagotg0": 66, "galagoct0": 66, "3ag0": 66, "3gt0": 66, "3gc0": 66, "3ga0": 66, "3gg0": 66, "acgt": [66, 67, 68, 69, 70, 71, 78, 91, 97, 132, 135, 141, 142, 143, 144], "37570": [66, 67, 70, 71, 97], "17420": [66, 67, 70, 71, 97], "20950": [66, 67, 70, 71, 97], "fig": [66, 70, 76, 98, 116, 118, 120, 121, 122, 123, 124], "scale_bar": [66, 76, 121, 123, 124], "But": [66, 108, 109, 136], "continu": [66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 89, 97, 107, 129, 131], "tabul": [66, 67], "tabulate_stat": [66, 75], "2x": 66, "behaviour": [67, 69, 93, 97, 129], "homogen": 67, "rate": [67, 133, 137, 152], "scalar": [67, 71, 109], "0450": [67, 68, 70, 71], "0215": [67, 68, 71, 78], "0061": [67, 68, 70, 71, 97, 143], "0077": [67, 68, 70, 71, 77, 78, 97, 117], "edgeparentlength": [67, 68, 69, 71, 72, 73, 75, 76, 77, 78, 97, 129, 131, 132, 135, 141, 143, 144], "galagoroot0": [67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 97, 129], "howlermonroot0": [67, 68, 70, 71, 72, 73, 74, 75, 76, 77, 78, 97, 129], "rhesusedg": [67, 68, 70, 71, 72, 73, 74, 75, 76, 77, 78, 97, 129], "orangutanedg": [67, 68, 70, 71, 72, 73, 74, 75, 76, 77, 78, 97, 129], "gorillaedg": [67, 68, 70, 71, 72, 73, 74, 75, 76, 77, 78, 97, 129], "humanedg": [67, 68, 70, 71, 72, 73, 74, 75, 76, 77, 78, 97, 129, 131, 132, 135, 141, 142], "chimpanzeeedg": [67, 68, 70, 71, 72, 73, 74, 75, 76, 77, 78, 97, 129], "0edg": [67, 68, 70, 71, 72, 73, 74, 75, 76, 77, 78, 97, 129, 131, 132, 135, 141, 142], "1edg": [67, 68, 70, 71, 72, 73, 74, 75, 76, 77, 78, 97, 129], "2edg": [67, 68, 70, 71, 72, 73, 74, 75, 76, 77, 78, 97, 129], "3root0": [67, 68, 70, 71, 72, 73, 74, 75, 76, 77, 78, 97, 129], "en": [67, 69, 71, 123, 136], "kaehler": [67, 69, 76, 77, 78, 97, 152], "stationari": [67, 78, 84, 97, 123, 132, 152, 153], "dure": [67, 87, 95, 97, 99, 108, 109, 146], "optimis": [67, 77, 78, 96, 129, 131, 132, 135, 137, 139, 140, 141, 142, 143, 145], "8699": [67, 71], "6640": [67, 71], "9110": [67, 71], "5907": [67, 71], "0240": [67, 71], "6296": [67, 71], "4168": [67, 71], "ca": [67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 88, 91, 92, 97, 107, 129, 135], "ga": [67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 92, 97, 129, 135], "tc": [67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 92, 97, 107, 129, 130, 135, 144], "tg": [67, 68, 69, 71, 72, 73, 74, 75, 76, 91, 92], "ag": [67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 91, 92, 94, 125], "cg": [67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 91, 92], "tt": [67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 88, 92, 94, 98, 125, 138], "86993": [67, 71], "66400": [67, 71], "91101": [67, 71], "59072": [67, 71], "12456": [67, 71], "02408": [67, 71], "22121": [67, 71], "22950": [67, 71], "62961": [67, 71], "gtr": [68, 77, 97, 129], "suffici": 68, "alt": [68, 72, 73, 74, 75, 97, 132, 137], "hyp": 68, "degre": [68, 97, 135, 141, 142], "freedom": [68, 97, 135, 141, 142], "lr": [68, 72, 73, 74, 75, 97, 129, 132, 135, 141, 145], "df": [68, 72, 73, 74, 75, 97, 102, 107, 129, 135, 141, 145], "pvalu": [68, 72, 73, 74, 75, 107], "3813": [68, 128], "6992": [68, 78, 97], "5741": [68, 78], "6987": [68, 71], "8834": 68, "lrdfpvalu": [68, 72, 73, 74, 75], "381360": 68, "hypothesiskeylnlnfpdlcunique_q": [68, 72, 73, 74, 75], "574119truetru": [68, 78], "883425truetru": 68, "05": [68, 107, 117, 138, 139], "381277658088948": 68, "15324334523613845": 68, "9472": [68, 78], "3389": [68, 78], "9665": [68, 78], "0448": [68, 78], "0060": [68, 78], "0119": [68, 75, 78], "3792": [68, 78], "global": [68, 69, 71, 72, 73, 74, 75, 76, 77, 78, 97, 109, 129, 132, 135, 141, 142, 143, 145], "22965": [68, 78], "24780": [68, 78], "94722": [68, 78], "33895": [68, 78], "37920": [68, 78], "17190": [68, 78], "20660": [68, 78], "8700": 68, "6670": 68, "9111": 68, "5925": 68, "0324": [68, 131], "6294": 68, "4136": 68, "3756": 68, "87003": 68, "66700": 68, "91111": 68, "59252": 68, "12646": 68, "03248": 68, "21781": 68, "22880": 68, "62941": 68, "37560": 68, "17680": 68, "20780": [68, 128], "flexibl": [68, 109, 138], "downstream": 68, "myresult": 68, "select_seq": [69, 87], "take_named_seq": [69, 87], "henc": [69, 107], "sm": [69, 71, 97, 131, 135, 137, 141, 142, 144], "unique_tre": [69, 71], "tree_func": [69, 71], "sm_arg": [69, 71], "lf_arg": [69, 71], "time_het": [69, 70, 71], "param_rul": [69, 71], "opt_arg": [69, 71], "split_codon": [69, 71], "quantiti": [69, 152], "5964": 69, "258314truetru": 69, "0636": 69, "0209": 69, "7945": 69, "3268": 69, "6769": 69, "0617": 69, "8312": 69, "5002": 69, "5618": 69, "0213": [69, 72, 73, 74, 75, 76], "3793": 69, "06363": 69, "19471": 69, "02091": 69, "79452": 69, "32685": 69, "67699": 69, "06171": 69, "11270": 69, "83121": 69, "humanroot0": [69, 143], "rhesusroot0": 69, "37930": 69, "17340": 69, "20580": 69, "258307123591": 69, "Of": [69, 84, 132], "signific": [69, 84, 129, 132], "2814": [69, 98], "tgtggcacaaa": [69, 91, 97, 98, 101], "tgtggcaaaaa": [69, 98], "length_a": 69, "929225750320291": 69, "5867": 69, "4461": 69, "7571": 69, "4200": 69, "446142truetru": 69, "757114": 69, "269014": 69, "420014": 69, "achiev": [69, 91, 93, 97, 98, 124], "7529": 69, "4660": 69, "4151": 69, "3739": 69, "4118": 69, "8499": 69, "0220": [69, 77], "7348": 69, "9255": 69, "2915": 69, "0239": [69, 77], "0316": 69, "3443": 69, "3607": 69, "75293": 69, "46602": 69, "41512": 69, "37393": 69, "411816": 69, "125816": 69, "84992": 69, "02201": 69, "AT": [69, 70, 91, 92, 138], "92555": 69, "34430": 69, "13820": 69, "15670": 69, "term": [70, 77, 97, 124, 129], "highlight": 70, "style_edg": [70, 121, 123], "tip2": [70, 74, 75, 121, 123], "outgroup": 70, "red": 70, "ingroup": 70, "interest": [70, 73, 74, 91, 97, 109, 132, 138, 142], "outsid": [70, 98, 118], "suffic": 70, "outcom": 70, "black": [70, 149], "6982": 70, "2973": 70, "7829": [70, 73], "0384": [70, 143], "7245": 70, "0214": [70, 77], "5009": 70, "9013": 70, "3245": 70, "3346": 70, "0174": 70, "7649": 70, "4581": 70, "5748": 70, "3534": 70, "9566": 70, "6227": 70, "3394": 70, "9912": 70, "edgeparentlengtha": 70, "17291": 70, "00633": 70, "78291": [70, 73], "03841": 70, "72452": 70, "32456": 70, "04501": 70, "02141": 70, "00770": [70, 77, 117], "21033": 70, "50090": 70, "20930": 70, "90131": 70, "35344": 70, "00250": 70, "00610": 70, "00280": 70, "00340": 70, "01211": 70, "00761": 70, "01741": 70, "24700": 70, "76491": 70, "45813": 70, "62271": 70, "11490": 70, "33942": 70, "9604": 71, "960422truetru": 71, "emploi": [72, 74, 85, 132], "hypothes": [72, 85, 132], "\u03c9": 72, "nonsynonym": [72, 97, 129, 142], "idea": [72, 74, 125, 136], "omega_eq_1": 72, "gnc": [72, 73, 74, 75, 77, 97, 153], "hypothesis_result": [72, 88], "5034": 72, "0338": 72, "hypothesi": [72, 73, 74, 75, 76, 83, 97, 132, 137, 152], "6715": 72, "5250": 72, "6713": [72, 74, 76], "503410": 72, "525022truetru": 72, "273323truetru": [72, 74, 76], "8614": [72, 76], "5373": [72, 76, 145], "9792": [72, 76], "6667": 72, "9195": 72, "8014": [72, 76], "2911": [72, 76], "0723": 72, "8204": [72, 76], "5232": [72, 76], "0640": [72, 74, 76], "0233": [72, 73, 74, 76, 77], "0075": [72, 73, 74, 75, 76, 77], "0182": [72, 73, 74, 75, 76, 77], "0085": [72, 73, 74, 75, 76, 77], "0100": [72, 74, 76], "0366": [72, 74, 76], "0238": [72, 73, 74, 75, 76, 77], "aaa": [72, 73, 74, 75, 76, 77, 91, 92, 97, 99, 110, 129, 130], "aac": [72, 73, 74, 75, 76, 77, 91, 92, 97, 98, 99, 101, 110, 129], "aag": [72, 73, 74, 75, 76, 77, 91, 92, 97, 99, 110, 129], "aat": [72, 73, 74, 75, 76, 77, 91, 92, 97, 99, 110, 129], "aca": [72, 73, 74, 75, 76, 77, 91, 92, 97, 99, 110, 129], "acc": [72, 73, 74, 75, 76, 77, 91, 92, 97, 99, 110, 129], "acg": [72, 73, 74, 75, 76, 77, 91, 92, 97, 99, 104, 110, 129], "0556": [72, 73, 74, 75, 76], "0235": [72, 73, 74, 75, 76], "0344": [72, 73, 74, 75, 76], "0228": [72, 73, 74, 75, 76, 77], "0046": [72, 73, 74, 75, 76], "0008": [72, 73, 74, 75, 76], "0289": [72, 73, 74, 75, 76], "aga": [72, 73, 74, 75, 76, 77, 91, 92, 97, 99, 110, 129], "agc": [72, 73, 74, 75, 76, 77, 91, 92, 97, 99, 110, 129], "agg": [72, 73, 74, 75, 76, 77, 91, 92, 97, 99, 104, 110, 129], "agt": [72, 73, 74, 75, 76, 77, 91, 92, 97, 99, 110, 129], "ata": [72, 73, 74, 75, 76, 77, 91, 92, 97, 99, 110, 129], "atc": [72, 73, 74, 75, 76, 77, 91, 92, 97, 99, 110, 129], "atg": [72, 73, 74, 75, 76, 77, 91, 92, 97, 99, 110, 129], "att": [72, 73, 74, 75, 76, 77, 91, 92, 97, 99, 110, 129], "0231": [72, 73, 74, 75, 76], "0286": [72, 73, 74, 75, 76], "0140": [72, 73, 74, 75, 76, 96], "0381": [72, 73, 74, 75, 76], "0186": [72, 73, 74, 75, 76], "0070": [72, 73, 74, 75, 76], "0128": [72, 73, 74, 75, 76], "caa": [72, 73, 74, 75, 76, 77, 91, 92, 97, 99, 110, 129], "cac": [72, 73, 74, 75, 76, 77, 91, 92, 97, 99, 110, 129], "cag": [72, 73, 74, 75, 76, 77, 91, 92, 97, 99, 110, 129], "cat": [72, 73, 74, 75, 76, 77, 91, 92, 97, 99, 110, 115, 129], "cca": [72, 73, 74, 75, 76, 77, 91, 92, 94, 97, 99, 110, 125, 129], "ccc": [72, 73, 74, 75, 76, 77, 91, 92, 97, 98, 99, 110, 129], "ccg": [72, 73, 74, 75, 76, 77, 91, 92, 97, 99, 110, 129], "cct": [72, 73, 74, 75, 76, 77, 91, 92, 97, 99, 110, 129], "0196": [72, 73, 74, 75, 76], "0052": [72, 73, 74, 75, 76], "0221": [72, 73, 74, 75, 76], "0195": [72, 73, 74, 75, 76], "0062": [72, 73, 74, 75, 76], "0006": [72, 73, 74, 75, 76], "0263": [72, 73, 74, 75, 76, 77], "cga": [72, 73, 74, 75, 76, 77, 91, 92, 97, 99, 110, 129], "cgc": [72, 73, 74, 75, 76, 77, 91, 92, 97, 99, 110, 129, 144], "cgg": [72, 73, 74, 75, 76, 77, 91, 92, 97, 99, 110, 129], "cgt": [72, 73, 74, 75, 76, 77, 91, 92, 97, 99, 110, 129], "cta": [72, 73, 74, 75, 76, 77, 91, 92, 97, 99, 110, 129, 130], "ctc": [72, 73, 74, 75, 76, 77, 91, 92, 97, 99, 110, 129, 130], "ctg": [72, 73, 74, 75, 76, 77, 91, 92, 97, 99, 110, 129], "ctt": [72, 73, 74, 75, 76, 77, 91, 92, 97, 99, 110, 129], "0032": [72, 73, 74, 75, 76], "0137": [72, 73, 74, 75, 76, 96], "0125": [72, 73, 74, 75, 76], "0105": [72, 73, 74, 75, 76, 77, 131], "gaa": [72, 73, 74, 75, 76, 77, 91, 92, 97, 99, 110, 129, 130], "gac": [72, 73, 74, 75, 76, 77, 91, 92, 97, 99, 110, 129], "gag": [72, 73, 74, 75, 76, 77, 91, 92, 97, 99, 110, 129], "gat": [72, 73, 74, 75, 76, 77, 91, 92, 97, 99, 110, 129], "gca": [72, 73, 74, 75, 76, 77, 91, 92, 97, 99, 110, 129], "gcc": [72, 73, 74, 75, 76, 77, 91, 92, 97, 99, 110, 129], "gcg": [72, 73, 74, 75, 76, 77, 91, 92, 97, 99, 110, 129], "gct": [72, 73, 74, 75, 76, 77, 91, 92, 97, 99, 101, 110, 129], "0755": [72, 73, 74, 75, 76], "0303": [72, 73, 74, 75, 76], "0315": [72, 73, 74, 75, 76], "0158": [72, 73, 74, 75, 76], "0096": [72, 73, 74, 75, 76, 96], "0014": [72, 73, 74, 75, 76, 96], "gga": [72, 73, 74, 75, 76, 77, 91, 92, 97, 99, 110, 129], "ggc": [72, 73, 74, 75, 76, 77, 91, 92, 97, 99, 110, 129], "ggt": [72, 73, 74, 75, 76, 77, 91, 92, 97, 99, 110, 129], "gta": [72, 73, 74, 75, 76, 77, 91, 92, 97, 99, 110, 129], "gtc": [72, 73, 74, 75, 76, 77, 91, 92, 97, 99, 110, 129], "gtg": [72, 73, 74, 75, 76, 77, 91, 92, 97, 99, 110, 129], "gtt": [72, 73, 74, 75, 76, 77, 91, 92, 97, 98, 99, 110, 129], "0161": [72, 73, 74, 75, 76], "0090": [72, 73, 74, 75, 76], "0067": [72, 73, 74, 75, 76], "0133": [72, 73, 74, 75, 76], "0148": [72, 73, 74, 75, 76, 131], "tac": [72, 73, 74, 75, 76, 77, 91, 92, 97, 99, 110, 129], "tat": [72, 73, 74, 75, 76, 77, 91, 92, 97, 99, 110, 129], "tca": [72, 73, 74, 75, 76, 77, 91, 92, 97, 99, 110, 129], "tcc": [72, 73, 74, 75, 76, 77, 91, 92, 97, 99, 104, 110, 129], "tcg": [72, 73, 74, 75, 76, 77, 91, 92, 97, 99, 110, 129], "tct": [72, 73, 74, 75, 76, 77, 91, 92, 97, 99, 110, 129], "tgc": [72, 73, 74, 75, 76, 77, 91, 92, 97, 99, 110, 129], "tgg": [72, 73, 74, 75, 76, 77, 91, 92, 97, 99, 110, 129, 144], "0101": [72, 73, 74, 75, 76, 77], "0251": [72, 73, 74, 75, 76], "tgt": [72, 73, 74, 75, 76, 77, 91, 92, 97, 99, 110, 129], "tta": [72, 73, 74, 75, 76, 77, 91, 92, 97, 99, 110, 129], "ttg": [72, 73, 74, 75, 76, 77, 91, 92, 97, 99, 110, 129], "0201": [72, 73, 74, 75, 76, 77], "0212": [72, 73, 74, 75, 76], "0108": [72, 73, 74, 75, 76], "86143": [72, 76], "53730": [72, 76], "97921": [72, 76], "66672": 72, "20426": [72, 76], "25657": 72, "91951": 72, "22530": [72, 76], "80141": [72, 76], "comega": [72, 76], "07230": 72, "aaaaacaagaatacaaccacgactagaagc": [72, 73, 74, 75, 76, 77], "05560": [72, 73, 74, 75, 76], "02350": [72, 73, 74, 75, 76], "03440": [72, 73, 74, 75, 76], "02280": [72, 73, 74, 75, 76, 77], "00460": [72, 73, 74, 75, 76], "00080": [72, 73, 74, 75, 76], "02890": [72, 73, 74, 75, 76], "02310": [72, 73, 74, 75, 76], "aggagtataatcatgattcaacaccagcat": [72, 73, 74, 75, 76, 77], "01400": [72, 73, 74, 75, 76, 96], "03810": [72, 73, 74, 75, 76], "01860": [72, 73, 74, 75, 76], "00700": [72, 73, 74, 75, 76], "01280": [72, 73, 74, 75, 76], "01920": [72, 73, 74, 75, 76], "01960": [72, 73, 74, 75, 76], "00520": [72, 73, 74, 75, 76], "02380": [72, 73, 74, 75, 76, 77], "ccacccccgcctcgacgccggcgtctactc": [72, 73, 74, 75, 76, 77], "01950": [72, 73, 74, 75, 76], "00620": [72, 73, 74, 75, 76], "00060": [72, 73, 74, 75, 76], "02630": [72, 73, 74, 75, 76, 77], "00110": [72, 73, 74, 75, 76], "00090": [72, 73, 74, 75, 76], "00230": [72, 73, 74, 75, 76], "00320": [72, 73, 74, 75, 76], "01370": [72, 73, 74, 75, 76, 96], "ctgcttgaagacgaggatgcagccgcggct": [72, 73, 74, 75, 76, 77], "01250": [72, 73, 74, 75, 76], "01050": [72, 73, 74, 75, 76, 77, 131], "07550": [72, 73, 74, 75, 76], "03030": [72, 73, 74, 75, 76], "03150": [72, 73, 74, 75, 76], "01580": [72, 73, 74, 75, 76], "00960": [72, 73, 74, 75, 76], "00140": [72, 73, 74, 75, 76], "ggaggcgggggtgtagtcgtggtttactat": [72, 73, 74, 75, 76, 77], "01610": [72, 73, 74, 75, 76], "00900": [72, 73, 74, 75, 76], "00670": [72, 73, 74, 75, 76], "01330": [72, 73, 74, 75, 76], "01480": [72, 73, 74, 75, 76, 131], "00690": [72, 73, 74, 75, 76], "02130": [72, 73, 74, 75, 76], "tcatcctcgtcttgctggtgtttattcttg": [72, 73, 74, 75, 76, 77], "02210": [72, 73, 74, 75, 76], "00820": [72, 73, 74, 75, 76], "00150": [72, 73, 74, 75, 76], "02510": [72, 73, 74, 75, 76], "00180": [72, 73, 74, 75, 76], "00400": [72, 73, 74, 75, 76], "02010": [72, 73, 74, 75, 76, 77], "02120": [72, 73, 74, 75, 76], "00780": [72, 73, 74, 75, 76], "evid": [73, 97], "nielsen": [73, 129], "yang": [73, 74, 77, 97, 129, 131, 135], "sites_diff": 73, "4048": 73, "4954": 73, "6708": [73, 75], "3119": [73, 75], "6707": 73, "6095": 73, "404820": 73, "311924truetru": [73, 75], "609526truetru": 73, "bin": [73, 75, 97, 129, 132, 140], "ve": [73, 91, 97, 99, 125, 142], "purifi": [73, 152], "oomega": 73, "neutral": [73, 75, 97, 133], "bprob": [73, 75, 97, 129, 132, 140], "8530": 73, "5646": 73, "9734": 73, "6405": 73, "3218": 73, "0814": 73, "0292": 73, "8052": 73, "0905": 73, "5463": 73, "0099": [73, 75], "0364": 73, "85303": 73, "56460": 73, "97341": 73, "64052": 73, "18016": 73, "32188": 73, "08141": 73, "23470": 73, "binbprobsomega": [73, 129], "ve0": 73, "10431": 73, "0000002772997368e": 73, "neutral0": [73, 129], "80521": 73, "090519": 73, "99999999356965": 73, "get_bin_prob": [73, 75, 129, 132], "0839": 73, "0843": 73, "0798": 73, "0760": 73, "0937": 73, "5173": 73, "0695": 73, "7725": 73, "8127": 73, "8643": 73, "7851": [73, 77], "7961": 73, "7668": 73, "8125": 73, "7927": 73, "8032": 73, "8141": 73, "8164": 73, "8070": 73, "8655": 73, "7670": 73, "4824": 73, "8197": 73, "7909": 73, "0784": 73, "0837": 73, "0893": 73, "0764": 73, "0882": 73, "0948": 73, "0993": 73, "0766": 73, "0003": 73, "0875": 73, "012345678910111213141516171819": [73, 75], "14910": 73, "08390": 73, "13130": 73, "11460": 73, "15690": 73, "08430": 73, "11910": 73, "10200": 73, "07980": 73, "07600": 73, "09370": 73, "15630": 73, "51730": 73, "06950": 73, "77250": 73, "81270": 73, "86430": 73, "78510": 73, "79610": 73, "76680": 73, "81250": 73, "79270": 73, "80320": 73, "81410": 73, "81640": 73, "80700": 73, "86550": 73, "76700": 73, "48240": 73, "81970": 73, "07840": 73, "10340": 73, "13570": 73, "08370": 73, "08930": 73, "07640": 73, "10320": 73, "08820": 73, "09480": 73, "10610": 73, "10760": 73, "09930": 73, "13450": 73, "07660": 73, "00030": 73, "11080": 73, "lineag": [74, 75, 97, 142], "hc_differ": 74, "9248": 74, "0265": 74, "6710": 74, "8109": 74, "924810": 74, "810924truetru": 74, "8620": 74, "5360": 74, "9790": 74, "6698": 74, "9208": 74, "8024": 74, "2882": 74, "0675": 74, "5237": 74, "7906": 74, "6351": 74, "86203": 74, "53600": 74, "97901": 74, "66982": 74, "20596": 74, "26297": 74, "92081": 74, "22650": [74, 77], "80241": 74, "edgeparentlengthomega": [74, 97, 135, 142], "52370": 74, "13390": 74, "06400": 74, "02330": 74, "00750": 74, "01822": 74, "00852": 74, "01000": 74, "03660": 74, "zhang": [75, 78, 97, 129, 152], "undergon": 75, "group": [75, 129], "adapt": [75, 129], "foreground": [75, 129], "ll": [75, 90, 91, 107, 113, 120, 125, 128, 129, 132, 135, 137, 138, 139, 140, 142, 144, 145], "scope": [75, 129, 135, 145], "succinct": [75, 129, 134, 139], "zhang_test": 75, "9647": 75, "6705": 75, "8296": 75, "964730": 75, "829627truetru": 75, "8556": 75, "5349": 75, "9746": 75, "6589": 75, "7943": [75, 117], "9650": 75, "0527": 75, "2a": [75, 98, 129], "0408": 75, "2b": [75, 98, 129], "6397": 75, "5420": 75, "0648": 75, "0365": 75, "0234": 75, "85563": 75, "53490": 75, "97461": 75, "65892": 75, "19416": 75, "25978": 75, "01191": 75, "24210": 75, "79431": 75, "binbprob": 75, "2a0": 75, "2b0": 75, "edgebinomega": 75, "galago01": 75, "0000001217055336e": 75, "galago11": 75, "galago2a1": 75, "galago2b1": 75, "howlermon01": 75, "howlermon11": 75, "howlermon2a1": 75, "howlermon2b1": 75, "rhesus01": 75, "rhesus11": 75, "rhesus2a1": 75, "rhesus2b1": 75, "orangutan01": 75, "orangutan11": 75, "orangutan2a1": 75, "orangutan2b1": 75, "gorilla01": 75, "gorilla11": 75, "gorilla2a1": 75, "gorilla2b1": 75, "human01": 75, "human11": 75, "human2a19": 75, "999999993442533": 75, "human2b19": 75, "chimpanzee01": 75, "chimpanzee11": 75, "chimpanzee2a19": 75, "chimpanzee2b19": 75, "011": [75, 91], "02a1": 75, "02b1": 75, "12a1": 75, "12b1": 75, "22a1": 75, "22b1": 75, "32a1": 75, "32b1": 75, "0753": 75, "0424": 75, "0665": 75, "0581": 75, "0794": 75, "0426": 75, "0603": 75, "0514": 75, "0407": 75, "0389": 75, "0476": 75, "0790": 75, "0352": [75, 77], "0614": 75, "2943": 75, "2940": 75, "0574": 75, "0332": 75, "0510": 75, "0449": [75, 97], "0604": 75, "0334": 75, "0465": 75, "0400": 75, "0321": 75, "0306": 75, "0372": 75, "0601": 75, "0278": 75, "0474": 75, "6115": 75, "6530": 75, "7057": 75, "6225": 75, "6330": 75, "6064": 75, "6527": 75, "6302": 75, "6415": 75, "6552": 75, "6576": 75, "6464": 75, "7060": 75, "6068": 75, "3787": 75, "6623": 75, "6288": 75, "07530": 75, "04240": 75, "06650": 75, "05810": 75, "07940": 75, "04260": 75, "06030": 75, "05140": 75, "04070": 75, "03890": 75, "04760": 75, "07900": 75, "25960": 75, "03520": 75, "25590": 75, "27140": 75, "29430": 75, "26010": 75, "26410": 75, "25390": 75, "27120": 75, "26300": 75, "26710": 75, "27200": 75, "27290": 75, "26890": 75, "29400": 75, "25410": 75, "15720": 75, "27460": 75, "05740": 75, "03320": 75, "05100": 75, "04490": 75, "06040": 75, "03340": 75, "04650": 75, "04000": 75, "03210": 75, "03060": 75, "03720": 75, "06010": 75, "20460": 75, "02780": 75, "61150": 75, "65300": 75, "70570": 75, "62250": 75, "63300": 75, "60640": 75, "65270": 75, "63020": 75, "64150": 75, "65520": 75, "65760": 75, "64640": 75, "70600": 75, "60680": 75, "37870": 75, "66230": 75, "formal": [76, 116, 132], "elsewher": [76, 139], "abbrevi": [76, 77, 78, 96, 97, 104], "6668": 76, "9196": 76, "0724": [76, 102, 107], "66682": 76, "25667": 76, "91961": 76, "07240": 76, "cnfgtr": [77, 97, 129], "analag": [77, 97], "yap": [77, 78, 97, 129, 152], "lindsai": [77, 97, 129, 151], "easteal": [77, 97, 129, 152], "huttlei": [77, 78, 97, 125, 127, 128, 129, 131, 132, 135, 137, 138, 139, 140, 141, 142, 143, 144, 145, 151, 152], "mol": [77, 97, 129], "biol": [77, 78, 89, 97, 129, 151], "evol": [77, 97, 129], "hky": [77, 97, 129, 132, 137], "transit": [77, 94, 97, 132, 142, 145], "transvers": [77, 94, 97, 132, 142, 145], "muse": [77, 97, 129], "gaut": [77, 97, 129], "mg94gtr": [77, 97, 129, 135], "gy94": [77, 97, 129], "goldman": [77, 97, 129, 135], "y98": [77, 97], "h04g": [77, 97], "cpg": [77, 97], "h04gk": [77, 97], "h04ggk": [77, 97], "gen": [77, 97], "typeabbreviationdescript": [77, 78, 97], "codoncnfgtrcondit": [77, 97], "codoncnfhkycondit": [77, 97], "codonmg94hkymus": [77, 97], "codonmg94gtrmus": [77, 97], "codongy94goldman": [77, 97], "codony98yang": [77, 97], "codonh04ghuttlei": [77, 97], "codonh04gkhuttlei": [77, 97], "codonh04ggkhuttlei": [77, 97], "codongncgener": [77, 97], "robust": [77, 112, 142, 152], "configur": [77, 78, 129], "6739": 77, "3067": 77, "306777truetru": 77, "0656": 77, "9391": 77, "9475": 77, "7569": 77, "5330": 77, "0659": 77, "0540": 77, "0242": 77, "0307": 77, "0543": 77, "0237": 77, "0021": 77, "0297": 77, "0280": 77, "0405": 77, "0226": [77, 107], "0071": 77, "0141": 77, "0203": 77, "0165": 77, "0022": [77, 96], "0012": 77, "0035": 77, "0058": 77, "0123": 77, "0098": 77, "0703": 77, "0112": 77, "0310": 77, "0154": 77, "0036": 77, "0145": [77, 107], "0151": 77, "0072": 77, "0051": [77, 117], "0139": 77, "0170": 77, "0094": 77, "0210": 77, "0171": 77, "0039": [77, 96], "0222": 77, "0107": 77, "0146": 77, "tomega": [77, 129, 135], "06563": 77, "93910": 77, "78511": 77, "94754": 77, "05400": 77, "02420": 77, "03070": 77, "05430": 77, "02370": 77, "00630": 77, "00210": 77, "02970": 77, "01220": 77, "04050": 77, "02260": [77, 107], "00710": 77, "01410": 77, "02030": 77, "02200": 77, "01650": 77, "00430": 77, "02390": 77, "00220": 77, "00120": 77, "00350": 77, "00580": 77, "01230": 77, "00980": 77, "07030": 77, "01120": 77, "03100": 77, "01540": 77, "00830": 77, "00360": 77, "01510": 77, "00720": 77, "00510": 77, "01390": 77, "01700": 77, "00940": 77, "02100": 77, "00390": 77, "02140": 77, "00380": 77, "00330": 77, "02220": 77, "discret": [78, 97, 129, 132], "biometr": [78, 97], "dt": [78, 97], "dinucleotid": [78, 91, 92, 97, 138], "trinucleotid": [78, 91, 92, 97], "sy": [78, 97, 144], "ssgn": [78, 97], "journal": [78, 97], "theoret": [78, 97], "k80": [78, 97], "kimura": [78, 97], "tamura": [78, 97], "nei": [78, 97], "hasegawa": [78, 97], "kishino": [78, 97], "yano": [78, 97], "felsenstein": [78, 97, 144], "nucleotidebhbarri": [78, 97], "nucleotidedtdiscret": [78, 97], "nucleotidegngener": [78, 97], "nucleotidessgnstrand": [78, 97], "nucleotidek80kimura": [78, 97], "nucleotidejc69juk": [78, 97], "nucleotidegtrgener": [78, 97], "nucleotidetn93tamura": [78, 97], "nucleotidehky85hasegawa": [78, 97], "nucleotidef81felsenstein": [78, 97], "lanav": 78, "design": [79, 102, 107, 131, 132, 136], "enabl": [79, 136], "understand": [79, 89], "batch": [79, 138], "amount": [79, 136, 149, 151], "aka": [79, 98], "pipelin": [79, 146], "thousand": 79, "sever": [79, 115, 130], "trap": 79, "relationship": 79, "hmm": [80, 132], "topic": 81, "sidebar": 81, "possess": 84, "That": [84, 101, 125, 139], "said": 84, "task": [84, 136, 142, 146], "aros": 87, "whatev": 87, "traceback": [87, 91, 99, 108, 109], "assert": [87, 90, 91, 107, 109, 132, 139], "failur": 87, "unexpect": 87, "recent": [87, 91, 99, 108, 109], "_call": 87, "val": [87, 88], "_load_seq": 87, "_parser": 87, "_read_it": 87, "opt": 87, "hostedtoolcach": 87, "x64": 87, "functool": 87, "wrapper": [87, 88, 107], "dispatch": 87, "__class__": 87, "read_text": 87, "pathlib": 87, "encod": [87, 97], "buffer": 87, "filenotfounderror": 87, "errno": 87, "defined_typ": 88, "unalignedseqstyp": 88, "seqscollectiontyp": 88, "seqtyp": 88, "bytesequ": [88, 90, 91], "dnasequ": [88, 91, 98, 101, 104, 105, 118], "proteinwithstopsequ": [88, 99], "pairwisedistancetyp": 88, "treetyp": 88, "bootstrapresulttyp": 88, "bootstrap_result": 88, "hypothesisresulttyp": 88, "modelcollectionresulttyp": 88, "model_collection_result": 88, "modelresulttyp": 88, "tabularresulttyp": 88, "genericresulttyp": 88, "generic_result": 88, "resulttyp": 88, "identifiertyp": 88, "hintinclud": 88, "alignedseqstypealign": 88, "unalignedseqstypesequencecollect": 88, "seqscollectiontypealign": 88, "seqtypebytesequ": 88, "pairwisedistancetypedistancematrix": 88, "tabulartypedictarrai": 88, "treetypetreenod": 88, "serialisabletypeserialisabletyp": 88, "bootstrapresulttypebootstrap_result": 88, "hypothesisresulttypehypothesis_result": 88, "modelcollectionresulttypemodel_collection_result": 88, "modelresulttypemodel_result": 88, "tabularresulttypetabular_result": 88, "genericresulttypegeneric_result": 88, "resulttypebootstrap_result": 88, "identifiertypeidentifiertyp": 88, "up_to": 88, "first4": 88, "gcaagcgtttat": 88, "gcttttgtcaat": 88, "gcaa": 88, "gctt": 88, "agcaa": 88, "abil": [88, 93, 97, 115, 152], "lambda": [88, 91, 93, 98, 101, 102, 107, 109, 132], "gcaagcgttta": 88, "gcttttgtcaa": 88, "agcaagcgtttat": 88, "tttt": [88, 98], "ham": [88, 96], "percent_dist": 88, "5000": 88, "namesab": 88, "a0": 88, "b0": 88, "50000": 88, "passion": 89, "scienc": 89, "role": 89, "necess": 89, "high": 89, "scientif": [89, 107], "tool": [89, 136, 153], "freeli": 89, "everyon": 89, "arguabl": 89, "greatest": 89, "pleasur": 89, "opportun": 89, "experi": [89, 136, 152], "collabor": 89, "mission": 89, "sophist": 89, "address": [89, 101], "incred": 89, "pace": 89, "reward": 89, "choos": 89, "better": [89, 91, 136], "And": 89, "yet": [89, 112], "feel": 89, "enthusiast": 89, "gratefulli": 89, "receiv": 89, "adopt": [89, 136], "conduct": [89, 129, 132, 145], "newcom": 89, "adher": 89, "interact": [89, 98, 119, 146, 152], "pleas": 89, "cultur": 89, "grow": 89, "hope": 89, "companion": 89, "repo": 89, "technic": 89, "solv": [89, 100, 136, 146], "discuss": [89, 91, 97, 142], "hand": 89, "discov": 89, "ticket": 89, "grate": [89, 151], "chan": 89, "zuckerberg": 89, "fund": 89, "acknowledg": [89, 151], "provis": 89, "wingwar": 89, "licens": 89, "profession": 89, "Their": 89, "commit": 89, "decad": [89, 151], "greatli": 89, "appreci": 89, "port": 89, "pycog": [89, 151], "wing": 89, "refactor": 89, "publish": [89, 151], "cite": 89, "knight": [89, 151, 152], "r171": [89, 151], "manipul": [90, 93, 98, 149, 151, 152], "critic": [90, 104, 138], "my_seq": [90, 91, 99], "agtacactggt": 90, "agtacac": 90, "noneagtacactggt": 90, "circumst": 90, "rnaseq": 90, "acguacguacguacgu": [90, 104], "acguacg": 90, "noneacguacguacguacgu": 90, "my_gen": [90, 99], "my_geneagtacactggt": 90, "tcatgtg": 90, "nonetcatgtgacca": 90, "accagtg": 90, "noneaccagtgtact": 90, "gcttgggaaagtcaaatggaa": 90, "s1": [90, 98, 99, 116], "pep": [90, 99, 105], "awesqm": 90, "s1awesqm": 90, "acgtacgtacgtacgt": 90, "dnaseq": 90, "acgtacg": 90, "noneacgtacgtacgtacgt": 90, "extra_seq": 90, "ctgac": 90, "long_seq": 90, "noneagtacactggtctgac": 90, "gtaca": 90, "nonegtaca": 90, "easiest": 90, "atgatgatgatg": [90, 91], "pos3": [90, 91], "gggg": [90, 91], "pos12": 90, "atatatat": 90, "uagcgcu": 90, "noneuagcgcuacaugaugc": 90, "auuaugcuau": 90, "uau": 90, "auuaugc": 90, "noneauuaugcuauuau": 90, "hood": 91, "long": 91, "ndarrai": [91, 107], "atgacc": 91, "atcgcc": 91, "seq1atgacc": 91, "paml": [91, 97, 111, 126, 131], "0x7f85cd89f890": 91, "atgaa": 91, "agtgatg": 91, "gatg": 91, "seq2atg": 91, "new_seq": 91, "seq0": 91, "seq4": 91, "atgcc": 91, "new_aln": 91, "ataggatg": 91, "agcg": 91, "atgctggg": 91, "desir": [91, 97, 132, 134], "atgaatg": 91, "seq1atgaatg": 91, "seq1atgaa": 91, "long_testseq": [91, 101, 111, 127, 128, 132, 135, 137, 141, 142, 145], "tgtggca": [91, 101], "humantgtggcacaaatactcatgccagc": 91, "nineband": [91, 94, 101, 102, 106, 107, 126, 127, 128, 132, 135, 139, 141, 142], "dogfac": [91, 94, 101, 102, 106, 107, 126, 127, 128, 132, 135, 139, 141, 142], "0x7f85cd8bab10": 91, "gcaaggcgcca": 91, "gcagtgagcca": [91, 94], "gcaaggagcca": [91, 94], "dogfacedgcaaggagccagcagaacagatgggttgaaactaaggaaacatgtaatgataggcagact": [91, 94], "gt": [91, 92, 94], "later": [91, 97, 129, 135, 141], "dedic": 91, "cctggg": 91, "bcctggg": 91, "Or": [91, 97, 102, 107], "ccuggg": 91, "bccuggg": 91, "tyv": 91, "te": 91, "prot": 91, "xtyv": 91, "primate_cdx2_promot": [91, 111, 143], "remove_fil": 91, "error_on_miss": 91, "fasta_align": 91, "got": [91, 136], "gcaaggcgccaacagagcagatgggctgaaagtaaggaaacatgtaatgataggcagact": 91, "gcagtgagccagcagagcagatgggctgcaagtaaaggaacatgtaacgacaggcaggtt": 91, "gcaaggagccaacataacagatgggctggaagtaaggaaacatgtaatgataggcggact": 91, "gcaaggagccaacataacagatgggctgaaagtgaggaaacatgtaatgataggcagact": 91, "gcaaggagccagcagaacagatgggttgaaactaaggaaacatgtaatgataggcagact": 91, "string_list": 91, "tgtggcacaga": [91, 101], "dogfacedtgtggcacaaatactcatgccaac": 91, "subscript": 91, "column_four": 91, "atgatgatg": 91, "seq2gggg": 91, "notat": [91, 107], "acgtaa": 91, "acgaca": 91, "acgcaatga": 91, "acgcaa": 91, "seq2acgaca": 91, "detect": [91, 93, 130], "cover": [91, 109], "acgac": 91, "sometim": [91, 101], "atgaaggtg": 91, "atgaaggtgatg": 91, "atgaaggngatg": 91, "nuc": [91, 105], "atgaaggg": 91, "seq1atgaaggg": 91, "trinuc": 91, "atgaag": 91, "seq1atgaag": 91, "just_variable_aln": 91, "aagcaaaact": 91, "aagcaagact": 91, "gggcccagct": 91, "dogfacedaaacaaaata": 91, "ct": [91, 92, 101, 144], "mouseggg": 91, "just_constant_aln": 91, "tgtggcacaa": 91, "dogfacedtgtggcacaa": 91, "variable_codon": 91, "aagcaaaac": 91, "aagcaagac": 91, "gggcccagc": 91, "dogfacedaaacaaaat": 91, "humantgtggcacaaatactcatgccagctcattacagcatgagaacagcagtttattactcact": 91, "dogfacedtgtggcacaaatactcatgccaactcattacagcatgagaacagcagtttattatacact": [91, 101], "no_n_char": 91, "atgaaggtgat": 91, "seq2atgaaggtgatg": 91, "addition": 91, "atgaaggngat": 91, "seq3atgaaggngatg": 91, "ipuac": 91, "110147": 91, "aaaaacaagaatacaaccacgactagaagcaggagtataatcatgattcaacaccagcatccacccccgcctcgacgccggcgtctactcctgcttgaagacgaggatgcagccgcggctggaggcgggggtgtagtcgtggtttaatactagtattcatcctcgtcttgatgctggtgtttattcttgttt": 91, "0030000000000050000000000000000000000000000000200000000000000000": 91, "acgnt": 91, "1101417": 91, "25520602569782896": 91, "25808595480726626": 91, "24390784226849802": 91, "24280017722640673": 91, "trinuc_alphabet": [91, 92], "3f": 91, "037": 91, "034": [91, 94], "030": [91, 129], "029": 91, "028": 91, "027": [91, 94], "026": 91, "025": 91, "024": 91, "023": [91, 94, 135], "021": [91, 97, 142], "020": [91, 97, 129], "019": [91, 94], "018": 91, "017": 91, "015": 91, "014": 91, "013": [91, 94], "012": [91, 97, 102, 107], "010": [91, 98, 129], "009": [91, 97, 101], "008": [91, 97], "007": 91, "006": [91, 97], "003": [91, 97], "002": [91, 97], "pseudo": 91, "slightli": [91, 97, 132, 136], "aacaac": 91, "aagaag": 91, "clearli": 91, "aacgtaag": 91, "dinuc_alphabet": [91, 92], "incid": 91, "naiv": 91, "aaagtaag": 91, "aaaa": [91, 98], "comprehens": [91, 139], "di_nuc": 91, "nn": 91, "c1": 91, "c2": 91, "6666666666666666": 91, "atgaagg": 91, "aggtgatg": 91, "seq_to_aln_map": 91, "tell": [91, 136], "oppos": 91, "aln_to_seq_map": 91, "therefor": [91, 139], "seq_po": 91, "computation": [91, 118], "stretch": 91, "anywher": 91, "certain": [91, 98, 102, 107], "percentag": 91, "atga": 91, "atgaggatg": 91, "aggatg": 91, "seq2atgaggatg": 91, "commonli": [91, 142], "filtered_aln": 91, "4th": 91, "atgagtgatg": 91, "seq2atgagtgatg": 91, "gg": [92, 144], "tagt": 92, "guid": [93, 94, 98], "gffannotationdb": [93, 98], "genbankannotationdb": [93, 98], "distinguish": [93, 132], "anno_db": 93, "total_record": [93, 98], "bacterium": 93, "mycoplasma": [93, 101, 110, 111], "genitalium": [93, 101, 111], "extens": [93, 97, 98, 117, 146, 152], "gff_db": 93, "again": [93, 97, 98, 142], "gb_db": 93, "nc_000908": [93, 101], "namer": [93, 98], "rnase_p_rna": 93, "srp_rna": 93, "exon": [93, 98], "pseudogen": [93, 98], "rrna": 93, "trna": 93, "tmrna": 93, "num_row": 93, "link": [93, 101, 111], "interesting_gen": 93, "successfulli": [93, 97, 134], "outpath": 93, "gbdb": 93, "someth": [93, 101, 107], "quick_load_gb_db": 93, "arbitrarili": [93, 132], "futur": [93, 136, 151], "simpli": [93, 107, 134, 138, 139], "practic": 93, "mg_16": 93, "mg_rs00775": 93, "170011": 93, "171529": 93, "similarli": 93, "85561": 93, "86589": 93, "mg_rs02910": 93, "86784": 93, "87549": 93, "mg_rs00385": 93, "adhesin": 93, "operon": 93, "220600": 93, "229079": 93, "operon_cd": 93, "229067": 93, "220606": 93, "221563": 93, "wp_009886005": 93, "221569": 93, "225904": 93, "wp_010869366": 93, "225914": 93, "wp_041593683": 93, "particularli": 93, "replication_record": 93, "homologi": 93, "phase": 93, "wp_009885562": 93, "mg_rs00005": 93, "dbxref": 93, "ontology_term": 93, "go": [93, 109, 125, 129, 132, 139, 142], "0006260": 93, "0003887": 93, "0009360": 93, "gbkei": 93, "dnan": 93, "go_compon": 93, "polymeras": 93, "iii": [93, 129, 132], "complex": [93, 129, 134, 138, 146, 152], "iea": 93, "go_funct": 93, "activ": [93, 147], "go_process": 93, "refseq": [93, 111], "wp_010874358": 93, "locus_tag": 93, "subunit": 93, "beta": 93, "protein_id": 93, "transl_tabl": 93, "comment": [93, 101], "explor": 93, "smallest": 93, "bacteri": [93, 110], "life": [93, 109], "total_gen": 93, "single_copi": 93, "almost": [93, 132], "littl": 93, "fun": 93, "exact": [93, 113], "nest": [93, 97, 98, 129, 132], "transcript": [93, 98, 114, 117], "mg_rs00035": 93, "9155": 93, "wp_009885556": 93, "union_db": 93, "new_gb_db": 93, "aagaagaagacccccaaaaaaaaaattttttttttaaaaagggaaccct": [93, 98], "gb_seq": 93, "gff_seq": 93, "gff3": 93, "mycoplasmoid": [93, 101], "g37": [93, 101], "tree_align": 94, "gcca": 94, "046": 94, "058": 94, "079": 94, "062": 94, "cgcca": 94, "hum": [94, 125], "aagcagatccaggaaagcagcgagaatggcagcctggccgcgcgccaggagaggcaggcccaggtcaacctcact": [94, 125], "mu": [94, 101, 106, 125], "aagcagatccaggagagcggcgagagcggcagcctggccgcgcggcaggagaggcaggcccaagtcaacctcacg": [94, 125], "ctgaacaagcagccactttcaaacaagaaa": [94, 125], "unaligned_dna": [94, 125], "0x7f11724affd0": 94, "0x7f1172497f50": 94, "aligned_aa_seq": [94, 125], "kqiqessengslaarqerqaqvnlt": [94, 125], "kqiqesgesgslaarqerqaqvnlt": [94, 125], "lnkq": [94, 125], "pl": [94, 125], "nkk": [94, 125], "aligned_aa": [94, 125], "aligned_dna": [94, 125], "aagcagatcca": [94, 125], "ctgaacaagca": [94, 125], "humaagcagatccaggaaagcagcgagaatggcagcctggccgcgcgccaggagaggcaggcc": [94, 125], "ratct": [94, 125], "pure": 95, "advanc": [95, 139], "stepwis": [95, 139], "taxa": [95, 129, 139], "exhaust": 95, "least_squar": [95, 139], "wl": [95, 139], "dists_for_phylo": [95, 111, 128, 139], "trex": [95, 139], "return_al": [95, 139], "scoredtreecollect": 95, "randomis": 95, "maximum_likelihood": [95, 139], "insensit": [96, 104], "logdet": 96, "abbreviationsuit": 96, "paralineardna": 96, "logdetdna": 96, "jc69dna": 96, "tn93dna": 96, "hammingdna": 96, "pdistdna": 96, "0704": 96, "0089": 96, "0396": 96, "0700": 96, "0086": 96, "0393": 96, "0736": 96, "0719": 96, "0173": 96, "0423": 96, "0411": [96, 117], "nameschimpanzeegalagogorillahowlermonhumanorangutanrhesu": 96, "chimpanzee0": 96, "19210": 96, "00540": 96, "07040": 96, "00890": 96, "galago0": 96, "19230": 96, "21570": 96, "19650": 96, "19440": 96, "gorilla0": 96, "07000": 96, "00860": 96, "howlermon0": [96, 128], "07360": 96, "07190": 96, "human0": [96, 128], "01730": 96, "orangutan0": 96, "rhesus0": 96, "03960": 96, "19620": 96, "03930": 96, "04230": 96, "04110": [96, 117], "get_distance_calcul": 96, "dist_calc": 96, "tn93pair": 96, "0x7fa735fcfc90": 96, "get_pairwise_dist": [96, 126, 127, 128], "stderr": 96, "0103": 96, "0095": 96, "seq2galagohowlermonrhesusorangutangorillahumanchimpanze": 96, "galago00": 96, "0102748270583958960": 96, "0096163078326485620": 96, "0095356465322767870": 96, "0094913822495401760": 96, "0096150330918649170": 96, "009469268026590141": 96, "01027482705839589600": 96, "0054118117125547720": 96, "00533485849516111750": 96, "0052656124746942460": 96, "0054067602387489840": 96, "005273572620183854": 96, "00541181171255477200": 96, "00394085494178657550": 96, "0038527981619030950": 96, "0040050459201001250": 96, "0038665597157698894": 96, "003940854941786575500": 96, "00222911247430113750": 96, "00251518387918036550": 96, "0022606571679022955": 96, "002229112474301137500": 96, "00175969199023268760": 96, "0013848543487237903": 96, "001759691990232687600": 96, "0017949285088691988": 96, "0094692680265901410": 96, "0052735726201838540": 96, "00386655971576988940": 96, "00226065716790229550": 96, "00138485434872379030": 96, "00179492850886919880": 96, "significantli": [96, 129, 136, 149], "slower": [96, 139], "estimatedist": [96, 126, 127, 128], "submodel": [96, 126, 127, 128], "0697": 96, "0395": 96, "0693": 96, "0136": 96, "0391": [96, 107], "0729": 96, "0713": 96, "0421": 96, "0410": 96, "18920": 96, "06970": 96, "18910": 96, "21120": 96, "19340": 96, "19150": 96, "06930": 96, "01360": 96, "07290": 96, "07130": 96, "03950": 96, "19300": 96, "03910": 96, "04210": 96, "04100": 96, "dso78": 97, "dayhoff": [97, 131], "empir": [97, 133], "mo": 97, "schwartz": 97, "rm": 97, "orcutt": 97, "bc": [97, 107], "atla": 97, "suppl": 97, "nation": 97, "biomed": 97, "research": 97, "foundat": 97, "washington": 97, "dat": [97, 131], "jone": 97, "taylor": 97, "thornton": 97, "wr": 97, "jm": 97, "rapid": 97, "appl": 97, "biosci": 97, "jun": 97, "ah96": 97, "adachi": 97, "mtrev24": 97, "ah96_mtmamm": 97, "mtmam": 97, "whelan": 97, "globular": 97, "evolut": [97, 132, 134, 151, 152], "wag": 97, "proteindso78dayhoff": 97, "proteinjtt92jon": 97, "proteinah96adachi": 97, "proteinah96_mtmammalsadachi": 97, "proteinwg01whelan": 97, "timereversiblenucleotid": [97, 132, 140], "num_motif": 97, "gamma": [97, 140], "sub_mod": 97, "with_rat": 97, "timereversiblecodon": [97, 129], "make_likelihood_funct": [97, 129, 131, 132, 135, 137, 140, 141, 142, 143, 144, 145], "set_align": [97, 129, 131, 132, 135, 140, 141, 142, 143, 145], "great": 97, "precan": 97, "init": [97, 98, 129, 132, 142], "rule": [97, 129, 142], "galagoroot1": 97, "howlermonroot1": 97, "000": [97, 98, 129, 136], "3root1": 97, "aaaaacaagaatacaaccacgactagaagcaggagtata": [97, 129], "atcatgattcaacaccagcatccacccccgcctcgacgc": [97, 129], "cggcgtctactcctgcttgaagacgaggatgcagccgcg": [97, 129], "gctggaggcgggggtgtagtcgtggtttactattcatcc": [97, 129], "tcgtcttgctggtgtttattcttgttt": [97, 129], "maximis": [97, 109], "essenti": [97, 129], "is_const": [97, 129, 132, 140, 142], "closer": 97, "quicker": 97, "stuck": 97, "seem": 97, "too": [97, 142, 147], "sensibl": 97, "fulli": [97, 109], "sites_independ": [97, 132], "hidden": [97, 133], "simul": [97, 109, 133, 134, 135, 140, 149, 151], "anneal": [97, 109, 135], "powel": [97, 109, 135], "slow": [97, 132, 136], "adequ": 97, "setup": [97, 132], "max_restart": [97, 129, 140], "restart": 97, "spot": 97, "overcom": 97, "maxima": 97, "crude": 97, "rigor": [97, 135], "global_toler": [97, 135], "guarante": [97, 109], "sure": 97, "proce": [97, 139], "endlessli": 97, "monitor": 97, "situat": 97, "limit_act": 97, "hide": [97, 129], "max_evalu": 97, "return_calcul": 97, "err": 97, "catch": 97, "shouldn": 97, "7690": 97, "9585": 97, "3159": 97, "9700": 97, "0216": 97, "0120": 97, "23165": 97, "25340": 97, "95852": 97, "31595": 97, "reus": [97, 129], "768994254335": 97, "get_aic": 97, "14017": 97, "53798850867": 97, "aic": 97, "second_ord": 97, "732482609492": 97, "get_bic": 97, "14112": 97, "61578431146": 97, "exchang": [97, 142, 145], "a_g": 97, "253426081232493": 97, "006060124932976551": 97, "mprob": 97, "24060": 97, "get_statist": [97, 129, 140], "with_motif_prob": 97, "clock": [97, 137, 141], "is_independ": [97, 135, 141, 142, 145], "set_nam": [97, 141], "null_lnl": [97, 135, 141], "null_nfp": [97, 135, 141], "7177": 97, "4403": 97, "044": 97, "004": 97, "3760": 97, "alt_lnl": 97, "alt_nfp": 97, "7175": 97, "7756": 97, "chi": [97, 132, 135, 141], "scipi": [97, 129, 132, 135, 141, 145], "chi2": [97, 129, 132, 135, 141, 145], "sf": [97, 129, 132, 135, 141, 145], "4f": [97, 109, 132, 139], "3294": 97, "reli": [97, 130, 136], "asymptot": 97, "lrt": [97, 132], "small": [97, 98, 100, 101, 107, 129, 132, 136, 137, 139, 141], "simulate_align": [97, 140, 144], "sim_aln": 97, "gaatgcaacat": 97, "gcatggatcat": 97, "chimpanzeegaatgcaacatggaatcaatcatacgtcataaacgtgacgttagctttaaatgagtggat": 97, "kappa_lo": 97, "kappa_ml": 97, "kappa_hi": 97, "get_param_interv": 97, "lo": 97, "2f": [97, 136, 137], "hi": 97, "human_lo": 97, "human_ml": 97, "human_hi": 97, "reload": 97, "disk": [97, 103], "acgg": 97, "atag": 97, "atgg": 97, "newlf": 97, "3333": 97, "0833": 97, "4167": 97, "aroot1": 97, "broot1": 97, "croot1": 97, "33330": 97, "08330": 97, "41670": 97, "likely_ancestral_seq": 97, "0tgtggcacaaatactcatgccagctcattacagcatgagaacagtttattactcactaaa": 97, "ancestral_prob": 97, "reconstruct_ancestral_seq": 97, "18160": 97, "quit": [97, 118, 129], "difficult": 97, "easi": 97, "relax": 97, "until": [97, 139], "markedli": 97, "instruct": 98, "utilis": 98, "gcctaatactaagcctaagcctaagactaagcctaatactaagcctaagcctaagactaa": 98, "a_gen": 98, "gcctaat": 98, "cpgsite": 98, "a_cpgsit": 98, "aaaccccca": 98, "belong": [98, 132], "aligned_exon": 98, "basicannotationdb": [98, 103], "caenorhabd": [98, 118], "elegan": [98, 111, 118], "timeit": 98, "std": 98, "dev": [98, 147], "40578": 98, "wbcel235": 98, "15072434": 98, "60166": 98, "loaded_seq": [98, 101], "sub_seq": 98, "600th": 98, "brca1": [98, 101, 104, 111, 112, 115, 116, 117, 129], "brca1_aln": 98, "chimpanzeetgtggcacaaatactcatgccagctcattacagcatgagaacagtttattactcactaaa": 98, "brca1_hsa_shorten": [98, 111], "wbgene00021661": 98, "348424": 98, "343068": 98, "gcctaag": [98, 118], "072": [98, 118], "wbgene00000001": 98, "5107843": 98, "5108016": 98, "5108063": 98, "5108323": 98, "5108504": 98, "5108770": 98, "5108997": 98, "5109429": 98, "5109509": 98, "5109947": 98, "wbgene00000006": 98, "2576006": 98, "2575840": 98, "2575629": 98, "2575438": 98, "2574584": 98, "2574520": 98, "2574444": 98, "2574312": 98, "2574267": 98, "2573998": 98, "2573941": 98, "2573740": 98, "2572736": 98, "2572569": 98, "2572519": 98, "2572355": 98, "2572300": 98, "2572092": 98, "2572039": 98, "2571987": 98, "wbgene00000010": 98, "11396658": 98, "11396567": 98, "11396432": 98, "11396253": 98, "11395177": 98, "11395068": 98, "11395007": 98, "11394926": 98, "11394878": 98, "11394746": 98, "11393875": 98, "11393721": 98, "11393519": 98, "11393291": 98, "11392185": 98, "11392047": 98, "11391134": 98, "11390947": 98, "11390188": 98, "11390088": 98, "11390003": 98, "11389874": 98, "11389238": 98, "11389140": 98, "348364": 98, "348304": 98, "347044": 98, "346792": 98, "346742": 98, "346560": 98, "346516": 98, "346374": 98, "345830": 98, "345020": 98, "344033": 98, "343893": 98, "343649": 98, "343540": 98, "347113": 98, "347092": 98, "region_featur": 98, "10148": 98, "26732": 98, "wbgene00022276": 98, "11494": 98, "16837": 98, "mrna": [98, 118], "11561": 98, "11617": 98, "11689": 98, "14950": 98, "15160": 98, "16472": 98, "11640": 98, "16585": 98, "29322": 98, "human_exon": 98, "todo": 98, "dont": 98, "any_featur": 98, "pseudogene1": 98, "aln_featur": 98, "discontinu": 98, "lead": [98, 142], "omiss": 98, "aln3": [98, 140], "cccaaaaa": 98, "ex1": 98, "cccc": 98, "xcccc": 98, "aln_exon": 98, "opposit": 98, "xc": 98, "cagcaag": 98, "icagcaagaagaacttccacaagacatttatgaaggacgtgactgcggaattggccagaat": 98, "zoom": 98, "dark": 98, "big": 98, "subseq": 98, "25000": [98, 118], "35000": [98, 118], "misc_rna": 98, "beyond": 98, "23600": 98, "22881": 98, "intron": 98, "exon_coord": 98, "intron_coord": 98, "y74c9a": 98, "union_cd": 98, "wbgene00000012": 98, "wbgene00000013": 98, "wbgene00000020": 98, "wbgene00000023": 98, "wbgene00000036": 98, "wbgene00000045": 98, "wbgene00000050": 98, "wbgene00000058": 98, "wbgene00000079": 98, "wbgene00000084": 98, "wbgene00000088": 98, "wbgene00000089": 98, "wbgene00000095": 98, "wbgene00000096": 98, "wbgene00000099": 98, "wbgene00000138": 98, "wbgene00000140": 98, "wbgene00000147": 98, "wbgene00000148": 98, "wbgene00000150": 98, "wbgene00000155": 98, "wbgene00000156": 98, "wbgene00000158": 98, "wbgene00000163": 98, "wbgene00000165": 98, "wbgene00000177": 98, "wbgene00000197": 98, "wbgene00000199": 98, "wbgene00000205": 98, "wbgene00000209": 98, "wbgene00000227": 98, "wbgene00000230": 98, "wbgene00000232": 98, "wbgene00000236": 98, "wbgene00000237": 98, "wbgene00000241": 98, "wbgene00000253": 98, "wbgene00000254": 98, "wbgene00000269": 98, "wbgene00000272": 98, "wbgene00000275": 98, "wbgene00000284": 98, "wbgene00000368": 98, "wbgene00000371": 98, "wbgene00000382": 98, "wbgene00000386": 98, "wbgene00000408": 98, "wbgene00000409": 98, "wbgene00000410": 98, "wbgene00000413": 98, "wbgene00000415": 98, "wbgene00000426": 98, "wbgene00000429": 98, "wbgene00000430": 98, "wbgene00000431": 98, "wbgene00000433": 98, "wbgene00000434": 98, "wbgene00000436": 98, "wbgene00000440": 98, "wbgene00000466": 98, "wbgene00000467": 98, "wbgene00000468": 98, "wbgene00000469": 98, "wbgene00000473": 98, "wbgene00000474": 98, "wbgene00000476": 98, "wbgene00000483": 98, "wbgene00000485": 98, "wbgene00000492": 98, "wbgene00000493": 98, "wbgene00000496": 98, "wbgene00000500": 98, "wbgene00000502": 98, "wbgene00000527": 98, "wbgene00000540": 98, "wbgene00000544": 98, "wbgene00000583": 98, "wbgene00000596": 98, "wbgene00000612": 98, "wbgene00000622": 98, "wbgene00000623": 98, "wbgene00000624": 98, "wbgene00000625": 98, "wbgene00000626": 98, "wbgene00000627": 98, "wbgene00000628": 98, "wbgene00000629": 98, "wbgene00000630": 98, "wbgene00000631": 98, "wbgene00000632": 98, "wbgene00000633": 98, "wbgene00000634": 98, "wbgene00000636": 98, "wbgene00000637": 98, "wbgene00000638": 98, "wbgene00000639": 98, "wbgene00000640": 98, "wbgene00000641": 98, "wbgene00000642": 98, "wbgene00000761": 98, "wbgene00000764": 98, "wbgene00000772": 98, "wbgene00000777": 98, "wbgene00000779": 98, "wbgene00000780": 98, "wbgene00000787": 98, "wbgene00000788": 98, "wbgene00000794": 98, "wbgene00000800": 98, "wbgene00000801": 98, "wbgene00000812": 98, "wbgene00000814": 98, "wbgene00000821": 98, "wbgene00000832": 98, "wbgene00000843": 98, "wbgene00000867": 98, "wbgene00000869": 98, "wbgene00000871": 98, "wbgene00000881": 98, "wbgene00000890": 98, "wbgene00000891": 98, "wbgene00000896": 98, "wbgene00000904": 98, "wbgene00000912": 98, "wbgene00000917": 98, "wbgene00000931": 98, "wbgene00000937": 98, "wbgene00000938": 98, "wbgene00000962": 98, "wbgene00000963": 98, "wbgene00000965": 98, "wbgene00000966": 98, "wbgene00000967": 98, "wbgene00000968": 98, "wbgene00001008": 98, "wbgene00001022": 98, "wbgene00001030": 98, "wbgene00001039": 98, "wbgene00001045": 98, "wbgene00001046": 98, "wbgene00001047": 98, "wbgene00001048": 98, "wbgene00001049": 98, "wbgene00001050": 98, "wbgene00001056": 98, "wbgene00001067": 98, "wbgene00001075": 98, "wbgene00001112": 98, "wbgene00001115": 98, "wbgene00001117": 98, "wbgene00001121": 98, "wbgene00001131": 98, "wbgene00001136": 98, "wbgene00001145": 98, "wbgene00001147": 98, "wbgene00001156": 98, "wbgene00001167": 98, "wbgene00001196": 98, "wbgene00001214": 98, "wbgene00001215": 98, "wbgene00001226": 98, "wbgene00001228": 98, "wbgene00001231": 98, "wbgene00001232": 98, "wbgene00001234": 98, "wbgene00001309": 98, "wbgene00001333": 98, "wbgene00001334": 98, "wbgene00001337": 98, "wbgene00001365": 98, "wbgene00001372": 98, "wbgene00001377": 98, "wbgene00001404": 98, "wbgene00001405": 98, "wbgene00001414": 98, "wbgene00001427": 98, "wbgene00001430": 98, "wbgene00001432": 98, "wbgene00001433": 98, "wbgene00001442": 98, "wbgene00001481": 98, "wbgene00001483": 98, "wbgene00001488": 98, "wbgene00001491": 98, "wbgene00001497": 98, "wbgene00001501": 98, "wbgene00001542": 98, "wbgene00001555": 98, "wbgene00001568": 98, "wbgene00001574": 98, "wbgene00001582": 98, "wbgene00001590": 98, "wbgene00001592": 98, "wbgene00001595": 98, "wbgene00001596": 98, "wbgene00001598": 98, "wbgene00001599": 98, "wbgene00001600": 98, "wbgene00001601": 98, "wbgene00001614": 98, "wbgene00001627": 98, "wbgene00001640": 98, "wbgene00001641": 98, "wbgene00001642": 98, "wbgene00001643": 98, "wbgene00001644": 98, "wbgene00001647": 98, "wbgene00001648": 98, "wbgene00001651": 98, "wbgene00001676": 98, "wbgene00001677": 98, "wbgene00001678": 98, "wbgene00001680": 98, "wbgene00001682": 98, "wbgene00001704": 98, "wbgene00001707": 98, "wbgene00001725": 98, "wbgene00001745": 98, "wbgene00001746": 98, "wbgene00001773": 98, "wbgene00001791": 98, "wbgene00001814": 98, "wbgene00001816": 98, "wbgene00001819": 98, "wbgene00001832": 98, "wbgene00001833": 98, "wbgene00001836": 98, "wbgene00001843": 98, "wbgene00001856": 98, "wbgene00001859": 98, "wbgene00001860": 98, "wbgene00001941": 98, "wbgene00001942": 98, "wbgene00001949": 98, "wbgene00001960": 98, "wbgene00001973": 98, "wbgene00001979": 98, "wbgene00001980": 98, "wbgene00001985": 98, "wbgene00001990": 98, "wbgene00002000": 98, "wbgene00002004": 98, "wbgene00002026": 98, "wbgene00002027": 98, "wbgene00002034": 98, "wbgene00002035": 98, "wbgene00002040": 98, "wbgene00002042": 98, "wbgene00002047": 98, "wbgene00002069": 98, "wbgene00002070": 98, "wbgene00002073": 98, "wbgene00002075": 98, "wbgene00002077": 98, "wbgene00002079": 98, "wbgene00002101": 98, "wbgene00002107": 98, "wbgene00002108": 98, "wbgene00002109": 98, "wbgene00002110": 98, "wbgene00002111": 98, "wbgene00002112": 98, "wbgene00002113": 98, "wbgene00002116": 98, "wbgene00002119": 98, "wbgene00002134": 98, "wbgene00002135": 98, "wbgene00002136": 98, "wbgene00002137": 98, "wbgene00002138": 98, "wbgene00002139": 98, "wbgene00002141": 98, "wbgene00002142": 98, "wbgene00002143": 98, "wbgene00002144": 98, "wbgene00002153": 98, "wbgene00002174": 98, "wbgene00002179": 98, "wbgene00002181": 98, "wbgene00002189": 98, "wbgene00002191": 98, "wbgene00002196": 98, "wbgene00002198": 98, "wbgene00002205": 98, "wbgene00002213": 98, "wbgene00002225": 98, "wbgene00002226": 98, "wbgene00002232": 98, "wbgene00002240": 98, "wbgene00002248": 98, "wbgene00002257": 98, "wbgene00002258": 98, "wbgene00002276": 98, "wbgene00002324": 98, "wbgene00002348": 98, "wbgene00002393": 98, "wbgene00002583": 98, "wbgene00002601": 98, "wbgene00002694": 98, "wbgene00002696": 98, "wbgene00002717": 98, "wbgene00002783": 98, "wbgene00002804": 98, "wbgene00002977": 98, "wbgene00002978": 98, "wbgene00002979": 98, "wbgene00002989": 98, "wbgene00002999": 98, "wbgene00003000": 98, "wbgene00003006": 98, "wbgene00003014": 98, "wbgene00003020": 98, "wbgene00003026": 98, "wbgene00003029": 98, "wbgene00003036": 98, "wbgene00003040": 98, "wbgene00003041": 98, "wbgene00003052": 98, "wbgene00003059": 98, "wbgene00003060": 98, "wbgene00003061": 98, "wbgene00003062": 98, "wbgene00003068": 98, "wbgene00003071": 98, "wbgene00003072": 98, "wbgene00003074": 98, "wbgene00003080": 98, "wbgene00003083": 98, "wbgene00003098": 98, "wbgene00003111": 98, "wbgene00003123": 98, "wbgene00003132": 98, "wbgene00003136": 98, "wbgene00003156": 98, "wbgene00003170": 98, "wbgene00003172": 98, "wbgene00003182": 98, "wbgene00003183": 98, "wbgene00003184": 98, "wbgene00003186": 98, "wbgene00003209": 98, "wbgene00003221": 98, "wbgene00003229": 98, "wbgene00003233": 98, "wbgene00003236": 98, "wbgene00003238": 98, "wbgene00003258": 98, "wbgene00003260": 98, "wbgene00003261": 98, "wbgene00003278": 98, "wbgene00003299": 98, "wbgene00003307": 98, "wbgene00003316": 98, "wbgene00003328": 98, "wbgene00003338": 98, "wbgene00003339": 98, "wbgene00003387": 98, "wbgene00003396": 98, "wbgene00003397": 98, "wbgene00003400": 98, "wbgene00003418": 98, "wbgene00003422": 98, "wbgene00003471": 98, "wbgene00003472": 98, "wbgene00003475": 98, "wbgene00003499": 98, "wbgene00003508": 98, "wbgene00003516": 98, "wbgene00003524": 98, "wbgene00003548": 98, "wbgene00003552": 98, "wbgene00003564": 98, "wbgene00003569": 98, "wbgene00003578": 98, "wbgene00003581": 98, "wbgene00003584": 98, "wbgene00003585": 98, "wbgene00003587": 98, "wbgene00003596": 98, "wbgene00003601": 98, "wbgene00003622": 98, "wbgene00003639": 98, "wbgene00003652": 98, "wbgene00003654": 98, "wbgene00003659": 98, "wbgene00003663": 98, "wbgene00003664": 98, "wbgene00003667": 98, "wbgene00003671": 98, "wbgene00003672": 98, "wbgene00003675": 98, "wbgene00003679": 98, "wbgene00003703": 98, "wbgene00003735": 98, "wbgene00003742": 98, "wbgene00003746": 98, "wbgene00003750": 98, "wbgene00003753": 98, "wbgene00003777": 98, "wbgene00003788": 98, "wbgene00003790": 98, "wbgene00003792": 98, "wbgene00003793": 98, "wbgene00003797": 98, "wbgene00003798": 98, "wbgene00003799": 98, "wbgene00003800": 98, "wbgene00003803": 98, "wbgene00003815": 98, "wbgene00003818": 98, "wbgene00003836": 98, "wbgene00003842": 98, "wbgene00003847": 98, "wbgene00003878": 98, "wbgene00003902": 98, "wbgene00003904": 98, "wbgene00003905": 98, "wbgene00003906": 98, "wbgene00003921": 98, "wbgene00003924": 98, "wbgene00003925": 98, "wbgene00003926": 98, "wbgene00003934": 98, "wbgene00003948": 98, "wbgene00003950": 98, "wbgene00003951": 98, "wbgene00003953": 98, "wbgene00003964": 98, "wbgene00003977": 98, "wbgene00003980": 98, "wbgene00003989": 98, "wbgene00003996": 98, "wbgene00004014": 98, "wbgene00004028": 98, "wbgene00004043": 98, "wbgene00004049": 98, "wbgene00004063": 98, "wbgene00004068": 98, "wbgene00004077": 98, "wbgene00004087": 98, "wbgene00004093": 98, "wbgene00004094": 98, "wbgene00004109": 98, "wbgene00004110": 98, "wbgene00004111": 98, "wbgene00004113": 98, "wbgene00004115": 98, "wbgene00004117": 98, "wbgene00004131": 98, "wbgene00004143": 98, "wbgene00004147": 98, "wbgene00004154": 98, "wbgene00004168": 98, "wbgene00004178": 98, "wbgene00004181": 98, "wbgene00004186": 98, "wbgene00004190": 98, "wbgene00004196": 98, "wbgene00004202": 98, "wbgene00004217": 98, "wbgene00004224": 98, "wbgene00004225": 98, "wbgene00004226": 98, "wbgene00004231": 98, "wbgene00004235": 98, "wbgene00004237": 98, "wbgene00004246": 98, "wbgene00004268": 98, "wbgene00004272": 98, "wbgene00004273": 98, "wbgene00004274": 98, "wbgene00004275": 98, "wbgene00004298": 98, "wbgene00004305": 98, "wbgene00004312": 98, "wbgene00004318": 98, "wbgene00004324": 98, "wbgene00004332": 98, "wbgene00004368": 98, "wbgene00004372": 98, "wbgene00004378": 98, "wbgene00004380": 98, "wbgene00004389": 98, "wbgene00004393": 98, "wbgene00004404": 98, "wbgene00004408": 98, "wbgene00004409": 98, "wbgene00004412": 98, "wbgene00004415": 98, "wbgene00004418": 98, "wbgene00004425": 98, "wbgene00004426": 98, "wbgene00004429": 98, "wbgene00004431": 98, "wbgene00004436": 98, "wbgene00004437": 98, "wbgene00004439": 98, "wbgene00004441": 98, "wbgene00004444": 98, "wbgene00004445": 98, "wbgene00004464": 98, "wbgene00004466": 98, "wbgene00004475": 98, "wbgene00004476": 98, "wbgene00004479": 98, "wbgene00004484": 98, "wbgene00004486": 98, "wbgene00004488": 98, "wbgene00004489": 98, "wbgene00004495": 98, "wbgene00004505": 98, "wbgene00004508": 98, "wbgene00004509": 98, "wbgene00004512": 98, "wbgene00004513": 98, "wbgene00004567": 98, "wbgene00004622": 98, "wbgene00004677": 98, "wbgene00004684": 98, "wbgene00004706": 98, "wbgene00004721": 98, "wbgene00004743": 98, "wbgene00004753": 98, "wbgene00004771": 98, "wbgene00004773": 98, "wbgene00004775": 98, "wbgene00004778": 98, "wbgene00004803": 98, "wbgene00004807": 98, "wbgene00004808": 98, "wbgene00004836": 98, "wbgene00004838": 98, "wbgene00004839": 98, "wbgene00004841": 98, "wbgene00004875": 98, "wbgene00004879": 98, "wbgene00004880": 98, "wbgene00004883": 98, "wbgene00004887": 98, "wbgene00004888": 98, "wbgene00004889": 98, "wbgene00004890": 98, "wbgene00004895": 98, "wbgene00004900": 98, "wbgene00004901": 98, "wbgene00004915": 98, "wbgene00004920": 98, "wbgene00004924": 98, "wbgene00004931": 98, "wbgene00004944": 98, "wbgene00004946": 98, "wbgene00004952": 98, "wbgene00004953": 98, "wbgene00004955": 98, "wbgene00004958": 98, "wbgene00004959": 98, "wbgene00004962": 98, "wbgene00004963": 98, "wbgene00004965": 98, "wbgene00004966": 98, "wbgene00004969": 98, "wbgene00004978": 98, "wbgene00005000": 98, "wbgene00005002": 98, "wbgene00005009": 98, "wbgene00005010": 98, "wbgene00005023": 98, "wbgene00005043": 98, "wbgene00005044": 98, "wbgene00005045": 98, "wbgene00005046": 98, "wbgene00005047": 98, "wbgene00005048": 98, "wbgene00005049": 98, "wbgene00005050": 98, "wbgene00005051": 98, "wbgene00005077": 98, "wbgene00005078": 98, "wbgene00005131": 98, "wbgene00005171": 98, "wbgene00005272": 98, "wbgene00005273": 98, "wbgene00005274": 98, "wbgene00005517": 98, "wbgene00005523": 98, "wbgene00005524": 98, "wbgene00005525": 98, "wbgene00005526": 98, "wbgene00005527": 98, "wbgene00005528": 98, "wbgene00005529": 98, "wbgene00005710": 98, "wbgene00005835": 98, "wbgene00005839": 98, "wbgene00005840": 98, "wbgene00005858": 98, "wbgene00006044": 98, "wbgene00006047": 98, "wbgene00006048": 98, "wbgene00006058": 98, "wbgene00006061": 98, "wbgene00006062": 98, "wbgene00006272": 98, "wbgene00006306": 98, "wbgene00006324": 98, "wbgene00006349": 98, "wbgene00006352": 98, "wbgene00006377": 98, "wbgene00006379": 98, "wbgene00006382": 98, "wbgene00006385": 98, "wbgene00006386": 98, "wbgene00006394": 98, "wbgene00006399": 98, "wbgene00006407": 98, "wbgene00006423": 98, "wbgene00006440": 98, "wbgene00006445": 98, "wbgene00006447": 98, "wbgene00006461": 98, "wbgene00006484": 98, "wbgene00006492": 98, "wbgene00006503": 98, "wbgene00006505": 98, "wbgene00006508": 98, "wbgene00006518": 98, "wbgene00006525": 98, "wbgene00006528": 98, "wbgene00006529": 98, "wbgene00006531": 98, "wbgene00006532": 98, "wbgene00006565": 98, "wbgene00006574": 98, "wbgene00006577": 98, "wbgene00006578": 98, "wbgene00006593": 98, "wbgene00006594": 98, "wbgene00006595": 98, "wbgene00006607": 98, "wbgene00006616": 98, "wbgene00006618": 98, "wbgene00006624": 98, "wbgene00006625": 98, "wbgene00006633": 98, "wbgene00006641": 98, "wbgene00006645": 98, "wbgene00006656": 98, "wbgene00006681": 98, "wbgene00006682": 98, "wbgene00006689": 98, "wbgene00006700": 98, "wbgene00006702": 98, "wbgene00006707": 98, "wbgene00006709": 98, "wbgene00006711": 98, "wbgene00006720": 98, "wbgene00006726": 98, "wbgene00006730": 98, "wbgene00006732": 98, "wbgene00006740": 98, "wbgene00006751": 98, "wbgene00006752": 98, "wbgene00006753": 98, "wbgene00006754": 98, "wbgene00006765": 98, "wbgene00006771": 98, "wbgene00006773": 98, "wbgene00006774": 98, "wbgene00006776": 98, "wbgene00006789": 98, "wbgene00006790": 98, "wbgene00006791": 98, "wbgene00006793": 98, "wbgene00006797": 98, "wbgene00006805": 98, "wbgene00006807": 98, "wbgene00006819": 98, "wbgene00006820": 98, "wbgene00006823": 98, "wbgene00006824": 98, "wbgene00006829": 98, "wbgene00006833": 98, "wbgene00006844": 98, "wbgene00006845": 98, "wbgene00006876": 98, "wbgene00006888": 98, "wbgene00006889": 98, "wbgene00006902": 98, "wbgene00006919": 98, "wbgene00006932": 98, "wbgene00006936": 98, "wbgene00006958": 98, "wbgene00006961": 98, "wbgene00006963": 98, "wbgene00006976": 98, "wbgene00006978": 98, "wbgene00006984": 98, "wbgene00007001": 98, "wbgene00007009": 98, "wbgene00007018": 98, "wbgene00007024": 98, "wbgene00007026": 98, "wbgene00007042": 98, "wbgene00007043": 98, "wbgene00007047": 98, "wbgene00007053": 98, "wbgene00007054": 98, "wbgene00007057": 98, "wbgene00007094": 98, "wbgene00007155": 98, "wbgene00007156": 98, "wbgene00007158": 98, "wbgene00007159": 98, "wbgene00007213": 98, "wbgene00007214": 98, "wbgene00007215": 98, "wbgene00007216": 98, "wbgene00007217": 98, "wbgene00007218": 98, "wbgene00007219": 98, "wbgene00007252": 98, "wbgene00007253": 98, "wbgene00007254": 98, "wbgene00007255": 98, "wbgene00007256": 98, "wbgene00007257": 98, "wbgene00007258": 98, "wbgene00007274": 98, "wbgene00007275": 98, "wbgene00007277": 98, "wbgene00007278": 98, "wbgene00007297": 98, "wbgene00007299": 98, "wbgene00007300": 98, "wbgene00007301": 98, "wbgene00007302": 98, "wbgene00007303": 98, "wbgene00007533": 98, "wbgene00007597": 98, "wbgene00007598": 98, "wbgene00007599": 98, "wbgene00007600": 98, "wbgene00007601": 98, "wbgene00007602": 98, "wbgene00007603": 98, "wbgene00007620": 98, "wbgene00007621": 98, "wbgene00007637": 98, "wbgene00007638": 98, "wbgene00007639": 98, "wbgene00007640": 98, "wbgene00007641": 98, "wbgene00007642": 98, "wbgene00007643": 98, "wbgene00007644": 98, "wbgene00007645": 98, "wbgene00007646": 98, "wbgene00007647": 98, "wbgene00007654": 98, "wbgene00007655": 98, "wbgene00007656": 98, "wbgene00007657": 98, "wbgene00007658": 98, "wbgene00007659": 98, "wbgene00007660": 98, "wbgene00007661": 98, "wbgene00007662": 98, "wbgene00007705": 98, "wbgene00007707": 98, "wbgene00007708": 98, "wbgene00007709": 98, "wbgene00007710": 98, "wbgene00007711": 98, "wbgene00007712": 98, "wbgene00007713": 98, "wbgene00007739": 98, "wbgene00007740": 98, "wbgene00007741": 98, "wbgene00007742": 98, "wbgene00007743": 98, "wbgene00007766": 98, "wbgene00007767": 98, "wbgene00007768": 98, "wbgene00007769": 98, "wbgene00007770": 98, "wbgene00007854": 98, "wbgene00007855": 98, "wbgene00007856": 98, "wbgene00007857": 98, "wbgene00007858": 98, "wbgene00007911": 98, "wbgene00007912": 98, "wbgene00007913": 98, "wbgene00007914": 98, "wbgene00007971": 98, "wbgene00007972": 98, "wbgene00007973": 98, "wbgene00007974": 98, "wbgene00007975": 98, "wbgene00007976": 98, "wbgene00007977": 98, "wbgene00007978": 98, "wbgene00007979": 98, "wbgene00007984": 98, "wbgene00007985": 98, "wbgene00007986": 98, "wbgene00007988": 98, "wbgene00007989": 98, "wbgene00007990": 98, "wbgene00007991": 98, "wbgene00007992": 98, "wbgene00008061": 98, "wbgene00008062": 98, "wbgene00008063": 98, "wbgene00008064": 98, "wbgene00008107": 98, "wbgene00008130": 98, "wbgene00008131": 98, "wbgene00008132": 98, "wbgene00008133": 98, "wbgene00008134": 98, "wbgene00008157": 98, "wbgene00008158": 98, "wbgene00008159": 98, "wbgene00008160": 98, "wbgene00008161": 98, "wbgene00008162": 98, "wbgene00008163": 98, "wbgene00008184": 98, "wbgene00008185": 98, "wbgene00008186": 98, "wbgene00008187": 98, "wbgene00008188": 98, "wbgene00008190": 98, "wbgene00008191": 98, "wbgene00008216": 98, "wbgene00008289": 98, "wbgene00008290": 98, "wbgene00008291": 98, "wbgene00008292": 98, "wbgene00008293": 98, "wbgene00008294": 98, "wbgene00008295": 98, "wbgene00008311": 98, "wbgene00008312": 98, "wbgene00008313": 98, "wbgene00008314": 98, "wbgene00008315": 98, "wbgene00008316": 98, "wbgene00008317": 98, "wbgene00008318": 98, "wbgene00008381": 98, "wbgene00008382": 98, "wbgene00008383": 98, "wbgene00008384": 98, "wbgene00008385": 98, "wbgene00008386": 98, "wbgene00008387": 98, "wbgene00008397": 98, "wbgene00008398": 98, "wbgene00008399": 98, "wbgene00008400": 98, "wbgene00008401": 98, "wbgene00008411": 98, "wbgene00008412": 98, "wbgene00008413": 98, "wbgene00008414": 98, "wbgene00008415": 98, "wbgene00008417": 98, "wbgene00008418": 98, "wbgene00008419": 98, "wbgene00008420": 98, "wbgene00008421": 98, "wbgene00008439": 98, "wbgene00008440": 98, "wbgene00008470": 98, "wbgene00008471": 98, "wbgene00008472": 98, "wbgene00008473": 98, "wbgene00008474": 98, "wbgene00008475": 98, "wbgene00008476": 98, "wbgene00008477": 98, "wbgene00008478": 98, "wbgene00008479": 98, "wbgene00008528": 98, "wbgene00008529": 98, "wbgene00008530": 98, "wbgene00008531": 98, "wbgene00008532": 98, "wbgene00008533": 98, "wbgene00008541": 98, "wbgene00008542": 98, "wbgene00008543": 98, "wbgene00008564": 98, "wbgene00008565": 98, "wbgene00008566": 98, "wbgene00008567": 98, "wbgene00008568": 98, "wbgene00008569": 98, "wbgene00008570": 98, "wbgene00008610": 98, "wbgene00008611": 98, "wbgene00008612": 98, "wbgene00008613": 98, "wbgene00008648": 98, "wbgene00008649": 98, "wbgene00008650": 98, "wbgene00008651": 98, "wbgene00008652": 98, "wbgene00008661": 98, "wbgene00008662": 98, "wbgene00008663": 98, "wbgene00008664": 98, "wbgene00008665": 98, "wbgene00008666": 98, "wbgene00008667": 98, "wbgene00008681": 98, "wbgene00008695": 98, "wbgene00008762": 98, "wbgene00008763": 98, "wbgene00008764": 98, "wbgene00008765": 98, "wbgene00008766": 98, "wbgene00008767": 98, "wbgene00008768": 98, "wbgene00008769": 98, "wbgene00008770": 98, "wbgene00008779": 98, "wbgene00008780": 98, "wbgene00008781": 98, "wbgene00008782": 98, "wbgene00008783": 98, "wbgene00008784": 98, "wbgene00008785": 98, "wbgene00008786": 98, "wbgene00008787": 98, "wbgene00008852": 98, "wbgene00008853": 98, "wbgene00008854": 98, "wbgene00008855": 98, "wbgene00008856": 98, "wbgene00008857": 98, "wbgene00008858": 98, "wbgene00008870": 98, "wbgene00008876": 98, "wbgene00008877": 98, "wbgene00008878": 98, "wbgene00008885": 98, "wbgene00008886": 98, "wbgene00008887": 98, "wbgene00008889": 98, "wbgene00008890": 98, "wbgene00008905": 98, "wbgene00008906": 98, "wbgene00008907": 98, "wbgene00008908": 98, "wbgene00008909": 98, "wbgene00008934": 98, "wbgene00008935": 98, "wbgene00008990": 98, "wbgene00008991": 98, "wbgene00009001": 98, "wbgene00009002": 98, "wbgene00009004": 98, "wbgene00009005": 98, "wbgene00009050": 98, "wbgene00009051": 98, "wbgene00009052": 98, "wbgene00009054": 98, "wbgene00009055": 98, "wbgene00009056": 98, "wbgene00009061": 98, "wbgene00009063": 98, "wbgene00009064": 98, "wbgene00009065": 98, "wbgene00009112": 98, "wbgene00009113": 98, "wbgene00009114": 98, "wbgene00009116": 98, "wbgene00009117": 98, "wbgene00009118": 98, "wbgene00009119": 98, "wbgene00009120": 98, "wbgene00009121": 98, "wbgene00009122": 98, "wbgene00009123": 98, "wbgene00009124": 98, "wbgene00009125": 98, "wbgene00009126": 98, "wbgene00009127": 98, "wbgene00009128": 98, "wbgene00009129": 98, "wbgene00009130": 98, "wbgene00009140": 98, "wbgene00009141": 98, "wbgene00009142": 98, "wbgene00009143": 98, "wbgene00009144": 98, "wbgene00009145": 98, "wbgene00009157": 98, "wbgene00009158": 98, "wbgene00009159": 98, "wbgene00009160": 98, "wbgene00009161": 98, "wbgene00009162": 98, "wbgene00009163": 98, "wbgene00009164": 98, "wbgene00009165": 98, "wbgene00009173": 98, "wbgene00009174": 98, "wbgene00009176": 98, "wbgene00009177": 98, "wbgene00009178": 98, "wbgene00009187": 98, "wbgene00009188": 98, "wbgene00009189": 98, "wbgene00009190": 98, "wbgene00009191": 98, "wbgene00009210": 98, "wbgene00009220": 98, "wbgene00009243": 98, "wbgene00009250": 98, "wbgene00009251": 98, "wbgene00009252": 98, "wbgene00009254": 98, "wbgene00009260": 98, "wbgene00009261": 98, "wbgene00009262": 98, "wbgene00009263": 98, "wbgene00009264": 98, "wbgene00009266": 98, "wbgene00009267": 98, "wbgene00009268": 98, "wbgene00009269": 98, "wbgene00009270": 98, "wbgene00009271": 98, "wbgene00009272": 98, "wbgene00009274": 98, "wbgene00009276": 98, "wbgene00009277": 98, "wbgene00009284": 98, "wbgene00009285": 98, "wbgene00009286": 98, "wbgene00009287": 98, "wbgene00009288": 98, "wbgene00009304": 98, "wbgene00009305": 98, "wbgene00009306": 98, "wbgene00009312": 98, "wbgene00009313": 98, "wbgene00009314": 98, "wbgene00009315": 98, "wbgene00009316": 98, "wbgene00009318": 98, "wbgene00009341": 98, "wbgene00009342": 98, "wbgene00009343": 98, "wbgene00009344": 98, "wbgene00009345": 98, "wbgene00009346": 98, "wbgene00009359": 98, "wbgene00009360": 98, "wbgene00009361": 98, "wbgene00009362": 98, "wbgene00009363": 98, "wbgene00009366": 98, "wbgene00009367": 98, "wbgene00009368": 98, "wbgene00009369": 98, "wbgene00009370": 98, "wbgene00009371": 98, "wbgene00009408": 98, "wbgene00009409": 98, "wbgene00009410": 98, "wbgene00009411": 98, "wbgene00009412": 98, "wbgene00009413": 98, "wbgene00009414": 98, "wbgene00009415": 98, "wbgene00009416": 98, "wbgene00009451": 98, "wbgene00009452": 98, "wbgene00009453": 98, "wbgene00009454": 98, "wbgene00009455": 98, "wbgene00009456": 98, "wbgene00009457": 98, "wbgene00009458": 98, "wbgene00009459": 98, "wbgene00009460": 98, "wbgene00009461": 98, "wbgene00009462": 98, "wbgene00009463": 98, "wbgene00009464": 98, "wbgene00009465": 98, "wbgene00009466": 98, "wbgene00009467": 98, "wbgene00009468": 98, "wbgene00009475": 98, "wbgene00009476": 98, "wbgene00009477": 98, "wbgene00009478": 98, "wbgene00009479": 98, "wbgene00009480": 98, "wbgene00009481": 98, "wbgene00009498": 98, "wbgene00009499": 98, "wbgene00009500": 98, "wbgene00009507": 98, "wbgene00009508": 98, "wbgene00009509": 98, "wbgene00009510": 98, "wbgene00009553": 98, "wbgene00009554": 98, "wbgene00009556": 98, "wbgene00009557": 98, "wbgene00009558": 98, "wbgene00009559": 98, "wbgene00009562": 98, "wbgene00009563": 98, "wbgene00009565": 98, "wbgene00009607": 98, "wbgene00009608": 98, "wbgene00009609": 98, "wbgene00009610": 98, "wbgene00009611": 98, "wbgene00009612": 98, "wbgene00009613": 98, "wbgene00009614": 98, "wbgene00009615": 98, "wbgene00009616": 98, "wbgene00009646": 98, "wbgene00009664": 98, "wbgene00009665": 98, "wbgene00009666": 98, "wbgene00009667": 98, "wbgene00009668": 98, "wbgene00009670": 98, "wbgene00009671": 98, "wbgene00009672": 98, "wbgene00009673": 98, "wbgene00009693": 98, "wbgene00009695": 98, "wbgene00009696": 98, "wbgene00009697": 98, "wbgene00009698": 98, "wbgene00009743": 98, "wbgene00009744": 98, "wbgene00009745": 98, "wbgene00009746": 98, "wbgene00009747": 98, "wbgene00009748": 98, "wbgene00009749": 98, "wbgene00009750": 98, "wbgene00009751": 98, "wbgene00009752": 98, "wbgene00009753": 98, "wbgene00009754": 98, "wbgene00009755": 98, "wbgene00009822": 98, "wbgene00009823": 98, "wbgene00009824": 98, "wbgene00009825": 98, "wbgene00009826": 98, "wbgene00009827": 98, "wbgene00009828": 98, "wbgene00009861": 98, "wbgene00009862": 98, "wbgene00009863": 98, "wbgene00009864": 98, "wbgene00009865": 98, "wbgene00009915": 98, "wbgene00009916": 98, "wbgene00009917": 98, "wbgene00009918": 98, "wbgene00009919": 98, "wbgene00009920": 98, "wbgene00009921": 98, "wbgene00009922": 98, "wbgene00009923": 98, "wbgene00009937": 98, "wbgene00009938": 98, "wbgene00009939": 98, "wbgene00009940": 98, "wbgene00009941": 98, "wbgene00009942": 98, "wbgene00009958": 98, "wbgene00009959": 98, "wbgene00009960": 98, "wbgene00009961": 98, "wbgene00009962": 98, "wbgene00009963": 98, "wbgene00009964": 98, "wbgene00010110": 98, "wbgene00010111": 98, "wbgene00010112": 98, "wbgene00010113": 98, "wbgene00010114": 98, "wbgene00010133": 98, "wbgene00010134": 98, "wbgene00010135": 98, "wbgene00010136": 98, "wbgene00010137": 98, "wbgene00010157": 98, "wbgene00010158": 98, "wbgene00010159": 98, "wbgene00010160": 98, "wbgene00010161": 98, "wbgene00010162": 98, "wbgene00010163": 98, "wbgene00010165": 98, "wbgene00010166": 98, "wbgene00010167": 98, "wbgene00010168": 98, "wbgene00010169": 98, "wbgene00010170": 98, "wbgene00010171": 98, "wbgene00010172": 98, "wbgene00010173": 98, "wbgene00010242": 98, "wbgene00010243": 98, "wbgene00010244": 98, "wbgene00010245": 98, "wbgene00010246": 98, "wbgene00010247": 98, "wbgene00010248": 98, "wbgene00010291": 98, "wbgene00010323": 98, "wbgene00010324": 98, "wbgene00010325": 98, "wbgene00010326": 98, "wbgene00010327": 98, "wbgene00010328": 98, "wbgene00010366": 98, "wbgene00010367": 98, "wbgene00010369": 98, "wbgene00010370": 98, "wbgene00010371": 98, "wbgene00010399": 98, "wbgene00010400": 98, "wbgene00010401": 98, "wbgene00010402": 98, "wbgene00010416": 98, "wbgene00010417": 98, "wbgene00010419": 98, "wbgene00010420": 98, "wbgene00010421": 98, "wbgene00010422": 98, "wbgene00010427": 98, "wbgene00010487": 98, "wbgene00010488": 98, "wbgene00010495": 98, "wbgene00010496": 98, "wbgene00010497": 98, "wbgene00010498": 98, "wbgene00010499": 98, "wbgene00010500": 98, "wbgene00010537": 98, "wbgene00010560": 98, "wbgene00010562": 98, "wbgene00010563": 98, "wbgene00010564": 98, "wbgene00010565": 98, "wbgene00010566": 98, "wbgene00010567": 98, "wbgene00010568": 98, "wbgene00010569": 98, "wbgene00010576": 98, "wbgene00010577": 98, "wbgene00010578": 98, "wbgene00010579": 98, "wbgene00010580": 98, "wbgene00010581": 98, "wbgene00010582": 98, "wbgene00010583": 98, "wbgene00010584": 98, "wbgene00010585": 98, "wbgene00010586": 98, "wbgene00010587": 98, "wbgene00010608": 98, "wbgene00010609": 98, "wbgene00010610": 98, "wbgene00010611": 98, "wbgene00010612": 98, "wbgene00010613": 98, "wbgene00010614": 98, "wbgene00010615": 98, "wbgene00010616": 98, "wbgene00010617": 98, "wbgene00010618": 98, "wbgene00010619": 98, "wbgene00010620": 98, "wbgene00010621": 98, "wbgene00010622": 98, "wbgene00010623": 98, "wbgene00010624": 98, "wbgene00010641": 98, "wbgene00010642": 98, "wbgene00010643": 98, "wbgene00010644": 98, "wbgene00010645": 98, "wbgene00010650": 98, "wbgene00010651": 98, "wbgene00010652": 98, "wbgene00010653": 98, "wbgene00010654": 98, "wbgene00010730": 98, "wbgene00010731": 98, "wbgene00010732": 98, "wbgene00010738": 98, "wbgene00010740": 98, "wbgene00010766": 98, "wbgene00010767": 98, "wbgene00010768": 98, "wbgene00010769": 98, "wbgene00010770": 98, "wbgene00010771": 98, "wbgene00010804": 98, "wbgene00010805": 98, "wbgene00010806": 98, "wbgene00010807": 98, "wbgene00010808": 98, "wbgene00010817": 98, "wbgene00010818": 98, "wbgene00010819": 98, "wbgene00010820": 98, "wbgene00010821": 98, "wbgene00010822": 98, "wbgene00010823": 98, "wbgene00010824": 98, "wbgene00010825": 98, "wbgene00010854": 98, "wbgene00010855": 98, "wbgene00010856": 98, "wbgene00010857": 98, "wbgene00010858": 98, "wbgene00010859": 98, "wbgene00010869": 98, "wbgene00010870": 98, "wbgene00010871": 98, "wbgene00010872": 98, "wbgene00010873": 98, "wbgene00011026": 98, "wbgene00011027": 98, "wbgene00011028": 98, "wbgene00011029": 98, "wbgene00011030": 98, "wbgene00011032": 98, "wbgene00011033": 98, "wbgene00011034": 98, "wbgene00011035": 98, "wbgene00011036": 98, "wbgene00011037": 98, "wbgene00011058": 98, "wbgene00011059": 98, "wbgene00011060": 98, "wbgene00011061": 98, "wbgene00011062": 98, "wbgene00011063": 98, "wbgene00011064": 98, "wbgene00011065": 98, "wbgene00011066": 98, "wbgene00011155": 98, "wbgene00011156": 98, "wbgene00011230": 98, "wbgene00011231": 98, "wbgene00011232": 98, "wbgene00011234": 98, "wbgene00011235": 98, "wbgene00011344": 98, "wbgene00011345": 98, "wbgene00011352": 98, "wbgene00011353": 98, "wbgene00011375": 98, "wbgene00011376": 98, "wbgene00011378": 98, "wbgene00011379": 98, "wbgene00011380": 98, "wbgene00011386": 98, "wbgene00011387": 98, "wbgene00011388": 98, "wbgene00011389": 98, "wbgene00011390": 98, "wbgene00011431": 98, "wbgene00011432": 98, "wbgene00011433": 98, "wbgene00011434": 98, "wbgene00011435": 98, "wbgene00011488": 98, "wbgene00011489": 98, "wbgene00011490": 98, "wbgene00011491": 98, "wbgene00011492": 98, "wbgene00011493": 98, "wbgene00011494": 98, "wbgene00011495": 98, "wbgene00011497": 98, "wbgene00011531": 98, "wbgene00011532": 98, "wbgene00011545": 98, "wbgene00011546": 98, "wbgene00011547": 98, "wbgene00011548": 98, "wbgene00011549": 98, "wbgene00011550": 98, "wbgene00011551": 98, "wbgene00011581": 98, "wbgene00011582": 98, "wbgene00011583": 98, "wbgene00011584": 98, "wbgene00011585": 98, "wbgene00011586": 98, "wbgene00011629": 98, "wbgene00011630": 98, "wbgene00011631": 98, "wbgene00011650": 98, "wbgene00011651": 98, "wbgene00011652": 98, "wbgene00011653": 98, "wbgene00011654": 98, "wbgene00011655": 98, "wbgene00011656": 98, "wbgene00011657": 98, "wbgene00011658": 98, "wbgene00011659": 98, "wbgene00011660": 98, "wbgene00011778": 98, "wbgene00011779": 98, "wbgene00011780": 98, "wbgene00011781": 98, "wbgene00011782": 98, "wbgene00011783": 98, "wbgene00011784": 98, "wbgene00011785": 98, "wbgene00011786": 98, "wbgene00011827": 98, "wbgene00011828": 98, "wbgene00011829": 98, "wbgene00011864": 98, "wbgene00011906": 98, "wbgene00011908": 98, "wbgene00011909": 98, "wbgene00011912": 98, "wbgene00011913": 98, "wbgene00011914": 98, "wbgene00011915": 98, "wbgene00011916": 98, "wbgene00011917": 98, "wbgene00011918": 98, "wbgene00011919": 98, "wbgene00011920": 98, "wbgene00011921": 98, "wbgene00011933": 98, "wbgene00011934": 98, "wbgene00011935": 98, "wbgene00011936": 98, "wbgene00011944": 98, "wbgene00011945": 98, "wbgene00011968": 98, "wbgene00011969": 98, "wbgene00011970": 98, "wbgene00011971": 98, "wbgene00011972": 98, "wbgene00011973": 98, "wbgene00011975": 98, "wbgene00011985": 98, "wbgene00011986": 98, "wbgene00011988": 98, "wbgene00012029": 98, "wbgene00012030": 98, "wbgene00012031": 98, "wbgene00012036": 98, "wbgene00012037": 98, "wbgene00012038": 98, "wbgene00012039": 98, "wbgene00012040": 98, "wbgene00012041": 98, "wbgene00012042": 98, "wbgene00012102": 98, "wbgene00012103": 98, "wbgene00012104": 98, "wbgene00012105": 98, "wbgene00012106": 98, "wbgene00012107": 98, "wbgene00012113": 98, "wbgene00012114": 98, "wbgene00012115": 98, "wbgene00012116": 98, "wbgene00012136": 98, "wbgene00012137": 98, "wbgene00012138": 98, "wbgene00012139": 98, "wbgene00012140": 98, "wbgene00012150": 98, "wbgene00012151": 98, "wbgene00012164": 98, "wbgene00012165": 98, "wbgene00012166": 98, "wbgene00012167": 98, "wbgene00012168": 98, "wbgene00012192": 98, "wbgene00012193": 98, "wbgene00012194": 98, "wbgene00012195": 98, "wbgene00012196": 98, "wbgene00012208": 98, "wbgene00012209": 98, "wbgene00012210": 98, "wbgene00012211": 98, "wbgene00012212": 98, "wbgene00012213": 98, "wbgene00012214": 98, "wbgene00012215": 98, "wbgene00012216": 98, "wbgene00012231": 98, "wbgene00012232": 98, "wbgene00012233": 98, "wbgene00012234": 98, "wbgene00012235": 98, "wbgene00012236": 98, "wbgene00012237": 98, "wbgene00012238": 98, "wbgene00012239": 98, "wbgene00012240": 98, "wbgene00012241": 98, "wbgene00012264": 98, "wbgene00012265": 98, "wbgene00012266": 98, "wbgene00012267": 98, "wbgene00012268": 98, "wbgene00012269": 98, "wbgene00012270": 98, "wbgene00012274": 98, "wbgene00012275": 98, "wbgene00012289": 98, "wbgene00012290": 98, "wbgene00012296": 98, "wbgene00012297": 98, "wbgene00012298": 98, "wbgene00012317": 98, "wbgene00012343": 98, "wbgene00012344": 98, "wbgene00012345": 98, "wbgene00012351": 98, "wbgene00012352": 98, "wbgene00012353": 98, "wbgene00012354": 98, "wbgene00012355": 98, "wbgene00012365": 98, "wbgene00012366": 98, "wbgene00012368": 98, "wbgene00012369": 98, "wbgene00012370": 98, "wbgene00012371": 98, "wbgene00012376": 98, "wbgene00012377": 98, "wbgene00012386": 98, "wbgene00012387": 98, "wbgene00012388": 98, "wbgene00012389": 98, "wbgene00012390": 98, "wbgene00012391": 98, "wbgene00012393": 98, "wbgene00012394": 98, "wbgene00012474": 98, "wbgene00012475": 98, "wbgene00012476": 98, "wbgene00012477": 98, "wbgene00012478": 98, "wbgene00012479": 98, "wbgene00012480": 98, "wbgene00012481": 98, "wbgene00012482": 98, "wbgene00012483": 98, "wbgene00012484": 98, "wbgene00012485": 98, "wbgene00012486": 98, "wbgene00012487": 98, "wbgene00012488": 98, "wbgene00012500": 98, "wbgene00012501": 98, "wbgene00012502": 98, "wbgene00012503": 98, "wbgene00012504": 98, "wbgene00012505": 98, "wbgene00012509": 98, "wbgene00012576": 98, "wbgene00012577": 98, "wbgene00012578": 98, "wbgene00012653": 98, "wbgene00012732": 98, "wbgene00012734": 98, "wbgene00012735": 98, "wbgene00012738": 98, "wbgene00012739": 98, "wbgene00012740": 98, "wbgene00012752": 98, "wbgene00012945": 98, "wbgene00012946": 98, "wbgene00012947": 98, "wbgene00012948": 98, "wbgene00012950": 98, "wbgene00012951": 98, "wbgene00012952": 98, "wbgene00012953": 98, "wbgene00012954": 98, "wbgene00012955": 98, "wbgene00012956": 98, "wbgene00012958": 98, "wbgene00012959": 98, "wbgene00012960": 98, "wbgene00012961": 98, "wbgene00013010": 98, "wbgene00013018": 98, "wbgene00013019": 98, "wbgene00013020": 98, "wbgene00013021": 98, "wbgene00013023": 98, "wbgene00013121": 98, "wbgene00013122": 98, "wbgene00013123": 98, "wbgene00013124": 98, "wbgene00013125": 98, "wbgene00013126": 98, "wbgene00013127": 98, "wbgene00013128": 98, "wbgene00013129": 98, "wbgene00013130": 98, "wbgene00013131": 98, "wbgene00013134": 98, "wbgene00013135": 98, "wbgene00013136": 98, "wbgene00013137": 98, "wbgene00013138": 98, "wbgene00013177": 98, "wbgene00013178": 98, "wbgene00013179": 98, "wbgene00013180": 98, "wbgene00013181": 98, "wbgene00013182": 98, "wbgene00013184": 98, "wbgene00013186": 98, "wbgene00013197": 98, "wbgene00013198": 98, "wbgene00013200": 98, "wbgene00013201": 98, "wbgene00013202": 98, "wbgene00013203": 98, "wbgene00013204": 98, "wbgene00013386": 98, "wbgene00013403": 98, "wbgene00013404": 98, "wbgene00013405": 98, "wbgene00013406": 98, "wbgene00013407": 98, "wbgene00013408": 98, "wbgene00013409": 98, "wbgene00013410": 98, "wbgene00013449": 98, "wbgene00013500": 98, "wbgene00013501": 98, "wbgene00013502": 98, "wbgene00013503": 98, "wbgene00013505": 98, "wbgene00013506": 98, "wbgene00013507": 98, "wbgene00013508": 98, "wbgene00013509": 98, "wbgene00013510": 98, "wbgene00013511": 98, "wbgene00013512": 98, "wbgene00013513": 98, "wbgene00013593": 98, "wbgene00013594": 98, "wbgene00013595": 98, "wbgene00013596": 98, "wbgene00013597": 98, "wbgene00013598": 98, "wbgene00013599": 98, "wbgene00013601": 98, "wbgene00013602": 98, "wbgene00013603": 98, "wbgene00013604": 98, "wbgene00013605": 98, "wbgene00013666": 98, "wbgene00013667": 98, "wbgene00013668": 98, "wbgene00013669": 98, "wbgene00013670": 98, "wbgene00013671": 98, "wbgene00013672": 98, "wbgene00013673": 98, "wbgene00013674": 98, "wbgene00013676": 98, "wbgene00013677": 98, "wbgene00013678": 98, "wbgene00013679": 98, "wbgene00013680": 98, "wbgene00013682": 98, "wbgene00013683": 98, "wbgene00013684": 98, "wbgene00013685": 98, "wbgene00013687": 98, "wbgene00013688": 98, "wbgene00013689": 98, "wbgene00013690": 98, "wbgene00013691": 98, "wbgene00013692": 98, "wbgene00013693": 98, "wbgene00013694": 98, "wbgene00013695": 98, "wbgene00013696": 98, "wbgene00013697": 98, "wbgene00013698": 98, "wbgene00013699": 98, "wbgene00013700": 98, "wbgene00013701": 98, "wbgene00013702": 98, "wbgene00013703": 98, "wbgene00013704": 98, "wbgene00013705": 98, "wbgene00013706": 98, "wbgene00013707": 98, "wbgene00013708": 98, "wbgene00013709": 98, "wbgene00013710": 98, "wbgene00013711": 98, "wbgene00013712": 98, "wbgene00013713": 98, "wbgene00013716": 98, "wbgene00013717": 98, "wbgene00013718": 98, "wbgene00013719": 98, "wbgene00013720": 98, "wbgene00013721": 98, "wbgene00013722": 98, "wbgene00013723": 98, "wbgene00013724": 98, "wbgene00013725": 98, "wbgene00013726": 98, "wbgene00013859": 98, "wbgene00013860": 98, "wbgene00013865": 98, "wbgene00013891": 98, "wbgene00013892": 98, "wbgene00013893": 98, "wbgene00013894": 98, "wbgene00013895": 98, "wbgene00013918": 98, "wbgene00013927": 98, "wbgene00013928": 98, "wbgene00013929": 98, "wbgene00013930": 98, "wbgene00013931": 98, "wbgene00013932": 98, "wbgene00013933": 98, "wbgene00013955": 98, "wbgene00013956": 98, "wbgene00013957": 98, "wbgene00013958": 98, "wbgene00013959": 98, "wbgene00013960": 98, "wbgene00013969": 98, "wbgene00013970": 98, "wbgene00013993": 98, "wbgene00013994": 98, "wbgene00014026": 98, "wbgene00014100": 98, "wbgene00014101": 98, "wbgene00014102": 98, "wbgene00014103": 98, "wbgene00014104": 98, "wbgene00014115": 98, "wbgene00014116": 98, "wbgene00014117": 98, "wbgene00014118": 98, "wbgene00014119": 98, "wbgene00014120": 98, "wbgene00014121": 98, "wbgene00014126": 98, "wbgene00014147": 98, "wbgene00014148": 98, "wbgene00014149": 98, "wbgene00014150": 98, "wbgene00014182": 98, "wbgene00014183": 98, "wbgene00014184": 98, "wbgene00014185": 98, "wbgene00014186": 98, "wbgene00014188": 98, "wbgene00014189": 98, "wbgene00014196": 98, "wbgene00014197": 98, "wbgene00014198": 98, "wbgene00014199": 98, "wbgene00014200": 98, "wbgene00014201": 98, "wbgene00014235": 98, "wbgene00014236": 98, "wbgene00014238": 98, "wbgene00014239": 98, "wbgene00014279": 98, "wbgene00014280": 98, "wbgene00014281": 98, "wbgene00014282": 98, "wbgene00014288": 98, "wbgene00014301": 98, "wbgene00014325": 98, "wbgene00014326": 98, "wbgene00014327": 98, "wbgene00014328": 98, "wbgene00014332": 98, "wbgene00014335": 98, "wbgene00014336": 98, "wbgene00014337": 98, "wbgene00014343": 98, "wbgene00014344": 98, "wbgene00014345": 98, "wbgene00014349": 98, "wbgene00014363": 98, "wbgene00014389": 98, "wbgene00014403": 98, "wbgene00014404": 98, "wbgene00014405": 98, "wbgene00014411": 98, "wbgene00014418": 98, "wbgene00014424": 98, "wbgene00014446": 98, "wbgene00014483": 98, "wbgene00014498": 98, "wbgene00014500": 98, "wbgene00014501": 98, "wbgene00014502": 98, "wbgene00014503": 98, "wbgene00014510": 98, "wbgene00014525": 98, "wbgene00014526": 98, "wbgene00014527": 98, "wbgene00014528": 98, "wbgene00014529": 98, "wbgene00014533": 98, "wbgene00014542": 98, "wbgene00014545": 98, "wbgene00014577": 98, "wbgene00014585": 98, "wbgene00014586": 98, "wbgene00014587": 98, "wbgene00014605": 98, "wbgene00014612": 98, "wbgene00014620": 98, "wbgene00014664": 98, "wbgene00014698": 98, "wbgene00014699": 98, "wbgene00014700": 98, "wbgene00014714": 98, "wbgene00014727": 98, "wbgene00014729": 98, "wbgene00014731": 98, "wbgene00014746": 98, "wbgene00014748": 98, "wbgene00014759": 98, "wbgene00014760": 98, "wbgene00014761": 98, "wbgene00014789": 98, "wbgene00014806": 98, "wbgene00014807": 98, "wbgene00014820": 98, "wbgene00014852": 98, "wbgene00014853": 98, "wbgene00014858": 98, "wbgene00014861": 98, "wbgene00014864": 98, "wbgene00014870": 98, "wbgene00014871": 98, "wbgene00014914": 98, "wbgene00014915": 98, "wbgene00014916": 98, "wbgene00014917": 98, "wbgene00014918": 98, "wbgene00014921": 98, "wbgene00014947": 98, "wbgene00014964": 98, "wbgene00014965": 98, "wbgene00014966": 98, "wbgene00014992": 98, "wbgene00014994": 98, "wbgene00015001": 98, "wbgene00015006": 98, "wbgene00015007": 98, "wbgene00015008": 98, "wbgene00015009": 98, "wbgene00015010": 98, "wbgene00015011": 98, "wbgene00015017": 98, "wbgene00015018": 98, "wbgene00015019": 98, "wbgene00015020": 98, "wbgene00015021": 98, "wbgene00015022": 98, "wbgene00015023": 98, "wbgene00015024": 98, "wbgene00015025": 98, "wbgene00015026": 98, "wbgene00015027": 98, "wbgene00015028": 98, "wbgene00015029": 98, "wbgene00015030": 98, "wbgene00015032": 98, "wbgene00015033": 98, "wbgene00015034": 98, "wbgene00015091": 98, "wbgene00015092": 98, "wbgene00015093": 98, "wbgene00015094": 98, "wbgene00015095": 98, "wbgene00015096": 98, "wbgene00015175": 98, "wbgene00015176": 98, "wbgene00015228": 98, "wbgene00015229": 98, "wbgene00015230": 98, "wbgene00015231": 98, "wbgene00015232": 98, "wbgene00015233": 98, "wbgene00015235": 98, "wbgene00015236": 98, "wbgene00015237": 98, "wbgene00015238": 98, "wbgene00015303": 98, "wbgene00015312": 98, "wbgene00015313": 98, "wbgene00015442": 98, "wbgene00015499": 98, "wbgene00015500": 98, "wbgene00015501": 98, "wbgene00015504": 98, "wbgene00015505": 98, "wbgene00015570": 98, "wbgene00015631": 98, "wbgene00015632": 98, "wbgene00015633": 98, "wbgene00015634": 98, "wbgene00015635": 98, "wbgene00015636": 98, "wbgene00015685": 98, "wbgene00015686": 98, "wbgene00015687": 98, "wbgene00015688": 98, "wbgene00015689": 98, "wbgene00015690": 98, "wbgene00015691": 98, "wbgene00015692": 98, "wbgene00015693": 98, "wbgene00015694": 98, "wbgene00015695": 98, "wbgene00015696": 98, "wbgene00015697": 98, "wbgene00015698": 98, "wbgene00015704": 98, "wbgene00015907": 98, "wbgene00015908": 98, "wbgene00015970": 98, "wbgene00015971": 98, "wbgene00015972": 98, "wbgene00015974": 98, "wbgene00015975": 98, "wbgene00015976": 98, "wbgene00016040": 98, "wbgene00016063": 98, "wbgene00016064": 98, "wbgene00016066": 98, "wbgene00016154": 98, "wbgene00016155": 98, "wbgene00016156": 98, "wbgene00016157": 98, "wbgene00016158": 98, "wbgene00016159": 98, "wbgene00016258": 98, "wbgene00016259": 98, "wbgene00016260": 98, "wbgene00016261": 98, "wbgene00016262": 98, "wbgene00016263": 98, "wbgene00016264": 98, "wbgene00016265": 98, "wbgene00016266": 98, "wbgene00016278": 98, "wbgene00016320": 98, "wbgene00016321": 98, "wbgene00016322": 98, "wbgene00016323": 98, "wbgene00016324": 98, "wbgene00016325": 98, "wbgene00016326": 98, "wbgene00016327": 98, "wbgene00016328": 98, "wbgene00016329": 98, "wbgene00016330": 98, "wbgene00016331": 98, "wbgene00016332": 98, "wbgene00016333": 98, "wbgene00016386": 98, "wbgene00016387": 98, "wbgene00016388": 98, "wbgene00016389": 98, "wbgene00016390": 98, "wbgene00016391": 98, "wbgene00016392": 98, "wbgene00016393": 98, "wbgene00016394": 98, "wbgene00016395": 98, "wbgene00016396": 98, "wbgene00016418": 98, "wbgene00016419": 98, "wbgene00016420": 98, "wbgene00016421": 98, "wbgene00016422": 98, "wbgene00016453": 98, "wbgene00016454": 98, "wbgene00016455": 98, "wbgene00016456": 98, "wbgene00016457": 98, "wbgene00016458": 98, "wbgene00016459": 98, "wbgene00016460": 98, "wbgene00016461": 98, "wbgene00016462": 98, "wbgene00016463": 98, "wbgene00016491": 98, "wbgene00016492": 98, "wbgene00016493": 98, "wbgene00016494": 98, "wbgene00016561": 98, "wbgene00016562": 98, "wbgene00016564": 98, "wbgene00016565": 98, "wbgene00016566": 98, "wbgene00016567": 98, "wbgene00016601": 98, "wbgene00016602": 98, "wbgene00016603": 98, "wbgene00016605": 98, "wbgene00016606": 98, "wbgene00016607": 98, "wbgene00016608": 98, "wbgene00016609": 98, "wbgene00016621": 98, "wbgene00016622": 98, "wbgene00016650": 98, "wbgene00016652": 98, "wbgene00016653": 98, "wbgene00016654": 98, "wbgene00016655": 98, "wbgene00016663": 98, "wbgene00016727": 98, "wbgene00016728": 98, "wbgene00016729": 98, "wbgene00016730": 98, "wbgene00016731": 98, "wbgene00016732": 98, "wbgene00016733": 98, "wbgene00016734": 98, "wbgene00016735": 98, "wbgene00016740": 98, "wbgene00016741": 98, "wbgene00016742": 98, "wbgene00016743": 98, "wbgene00016744": 98, "wbgene00016745": 98, "wbgene00016746": 98, "wbgene00016749": 98, "wbgene00016750": 98, "wbgene00016751": 98, "wbgene00016752": 98, "wbgene00016753": 98, "wbgene00016754": 98, "wbgene00016835": 98, "wbgene00016836": 98, "wbgene00016837": 98, "wbgene00016838": 98, "wbgene00016839": 98, "wbgene00016840": 98, "wbgene00016841": 98, "wbgene00016902": 98, "wbgene00016903": 98, "wbgene00016905": 98, "wbgene00016906": 98, "wbgene00016907": 98, "wbgene00016930": 98, "wbgene00016931": 98, "wbgene00016932": 98, "wbgene00016942": 98, "wbgene00016943": 98, "wbgene00016944": 98, "wbgene00016945": 98, "wbgene00016946": 98, "wbgene00016947": 98, "wbgene00016948": 98, "wbgene00016949": 98, "wbgene00016950": 98, "wbgene00017001": 98, "wbgene00017002": 98, "wbgene00017003": 98, "wbgene00017004": 98, "wbgene00017005": 98, "wbgene00017007": 98, "wbgene00017009": 98, "wbgene00017010": 98, "wbgene00017011": 98, "wbgene00017025": 98, "wbgene00017026": 98, "wbgene00017063": 98, "wbgene00017064": 98, "wbgene00017065": 98, "wbgene00017066": 98, "wbgene00017068": 98, "wbgene00017084": 98, "wbgene00017085": 98, "wbgene00017087": 98, "wbgene00017088": 98, "wbgene00017089": 98, "wbgene00017090": 98, "wbgene00017098": 98, "wbgene00017239": 98, "wbgene00017240": 98, "wbgene00017398": 98, "wbgene00017399": 98, "wbgene00017650": 98, "wbgene00017651": 98, "wbgene00017671": 98, "wbgene00017672": 98, "wbgene00017673": 98, "wbgene00017674": 98, "wbgene00017675": 98, "wbgene00017676": 98, "wbgene00017731": 98, "wbgene00017732": 98, "wbgene00017733": 98, "wbgene00017734": 98, "wbgene00017735": 98, "wbgene00017736": 98, "wbgene00017737": 98, "wbgene00017738": 98, "wbgene00017739": 98, "wbgene00017741": 98, "wbgene00017795": 98, "wbgene00017815": 98, "wbgene00017816": 98, "wbgene00017817": 98, "wbgene00017851": 98, "wbgene00017852": 98, "wbgene00017853": 98, "wbgene00017854": 98, "wbgene00017855": 98, "wbgene00017858": 98, "wbgene00017860": 98, "wbgene00017885": 98, "wbgene00017886": 98, "wbgene00017887": 98, "wbgene00017888": 98, "wbgene00017889": 98, "wbgene00017908": 98, "wbgene00017909": 98, "wbgene00017910": 98, "wbgene00017975": 98, "wbgene00017976": 98, "wbgene00017977": 98, "wbgene00017978": 98, "wbgene00017979": 98, "wbgene00017980": 98, "wbgene00018000": 98, "wbgene00018001": 98, "wbgene00018002": 98, "wbgene00018003": 98, "wbgene00018004": 98, "wbgene00018005": 98, "wbgene00018006": 98, "wbgene00018007": 98, "wbgene00018008": 98, "wbgene00018009": 98, "wbgene00018156": 98, "wbgene00018157": 98, "wbgene00018158": 98, "wbgene00018159": 98, "wbgene00018230": 98, "wbgene00018231": 98, "wbgene00018232": 98, "wbgene00018233": 98, "wbgene00018508": 98, "wbgene00018509": 98, "wbgene00018510": 98, "wbgene00018511": 98, "wbgene00018512": 98, "wbgene00018513": 98, "wbgene00018525": 98, "wbgene00018526": 98, "wbgene00018527": 98, "wbgene00018528": 98, "wbgene00018529": 98, "wbgene00018530": 98, "wbgene00018531": 98, "wbgene00018579": 98, "wbgene00018580": 98, "wbgene00018582": 98, "wbgene00018594": 98, "wbgene00018595": 98, "wbgene00018596": 98, "wbgene00018598": 98, "wbgene00018599": 98, "wbgene00018600": 98, "wbgene00018601": 98, "wbgene00018625": 98, "wbgene00018626": 98, "wbgene00018627": 98, "wbgene00018628": 98, "wbgene00018630": 98, "wbgene00018631": 98, "wbgene00018632": 98, "wbgene00018763": 98, "wbgene00018764": 98, "wbgene00018765": 98, "wbgene00018771": 98, "wbgene00018772": 98, "wbgene00018773": 98, "wbgene00018774": 98, "wbgene00018786": 98, "wbgene00018787": 98, "wbgene00018788": 98, "wbgene00018789": 98, "wbgene00018791": 98, "wbgene00018792": 98, "wbgene00018797": 98, "wbgene00018798": 98, "wbgene00018847": 98, "wbgene00018848": 98, "wbgene00018849": 98, "wbgene00018850": 98, "wbgene00018851": 98, "wbgene00018852": 98, "wbgene00018862": 98, "wbgene00018863": 98, "wbgene00018864": 98, "wbgene00018865": 98, "wbgene00018866": 98, "wbgene00018867": 98, "wbgene00018868": 98, "wbgene00018890": 98, "wbgene00018891": 98, "wbgene00018892": 98, "wbgene00018893": 98, "wbgene00018894": 98, "wbgene00018895": 98, "wbgene00018896": 98, "wbgene00018897": 98, "wbgene00018908": 98, "wbgene00018909": 98, "wbgene00018921": 98, "wbgene00018923": 98, "wbgene00018955": 98, "wbgene00018957": 98, "wbgene00018958": 98, "wbgene00018978": 98, "wbgene00018979": 98, "wbgene00018980": 98, "wbgene00018981": 98, "wbgene00018982": 98, "wbgene00018993": 98, "wbgene00018994": 98, "wbgene00018995": 98, "wbgene00019001": 98, "wbgene00019002": 98, "wbgene00019003": 98, "wbgene00019004": 98, "wbgene00019005": 98, "wbgene00019006": 98, "wbgene00019007": 98, "wbgene00019008": 98, "wbgene00019009": 98, "wbgene00019010": 98, "wbgene00019011": 98, "wbgene00019012": 98, "wbgene00019013": 98, "wbgene00019074": 98, "wbgene00019075": 98, "wbgene00019076": 98, "wbgene00019077": 98, "wbgene00019079": 98, "wbgene00019080": 98, "wbgene00019081": 98, "wbgene00019082": 98, "wbgene00019245": 98, "wbgene00019246": 98, "wbgene00019247": 98, "wbgene00019248": 98, "wbgene00019253": 98, "wbgene00019254": 98, "wbgene00019322": 98, "wbgene00019323": 98, "wbgene00019324": 98, "wbgene00019360": 98, "wbgene00019361": 98, "wbgene00019362": 98, "wbgene00019394": 98, "wbgene00019395": 98, "wbgene00019396": 98, "wbgene00019399": 98, "wbgene00019429": 98, "wbgene00019430": 98, "wbgene00019431": 98, "wbgene00019432": 98, "wbgene00019433": 98, "wbgene00019434": 98, "wbgene00019461": 98, "wbgene00019594": 98, "wbgene00019595": 98, "wbgene00019597": 98, "wbgene00019598": 98, "wbgene00019673": 98, "wbgene00019674": 98, "wbgene00019692": 98, "wbgene00019693": 98, "wbgene00019697": 98, "wbgene00019698": 98, "wbgene00019706": 98, "wbgene00019710": 98, "wbgene00019711": 98, "wbgene00019712": 98, "wbgene00019713": 98, "wbgene00019767": 98, "wbgene00019768": 98, "wbgene00019769": 98, "wbgene00019770": 98, "wbgene00019771": 98, "wbgene00019909": 98, "wbgene00019911": 98, "wbgene00019992": 98, "wbgene00019993": 98, "wbgene00020030": 98, "wbgene00020031": 98, "wbgene00020032": 98, "wbgene00020033": 98, "wbgene00020034": 98, "wbgene00020035": 98, "wbgene00020036": 98, "wbgene00020037": 98, "wbgene00020038": 98, "wbgene00020039": 98, "wbgene00020040": 98, "wbgene00020087": 98, "wbgene00020088": 98, "wbgene00020089": 98, "wbgene00020090": 98, "wbgene00020091": 98, "wbgene00020131": 98, "wbgene00020184": 98, "wbgene00020185": 98, "wbgene00020187": 98, "wbgene00020188": 98, "wbgene00020189": 98, "wbgene00020190": 98, "wbgene00020191": 98, "wbgene00020192": 98, "wbgene00020193": 98, "wbgene00020212": 98, "wbgene00020258": 98, "wbgene00020259": 98, "wbgene00020260": 98, "wbgene00020261": 98, "wbgene00020262": 98, "wbgene00020263": 98, "wbgene00020281": 98, "wbgene00020282": 98, "wbgene00020283": 98, "wbgene00020345": 98, "wbgene00020346": 98, "wbgene00020347": 98, "wbgene00020348": 98, "wbgene00020349": 98, "wbgene00020350": 98, "wbgene00020375": 98, "wbgene00020376": 98, "wbgene00020377": 98, "wbgene00020378": 98, "wbgene00020379": 98, "wbgene00020380": 98, "wbgene00020381": 98, "wbgene00020382": 98, "wbgene00020383": 98, "wbgene00020397": 98, "wbgene00020398": 98, "wbgene00020399": 98, "wbgene00020400": 98, "wbgene00020401": 98, "wbgene00020402": 98, "wbgene00020403": 98, "wbgene00020404": 98, "wbgene00020411": 98, "wbgene00020412": 98, "wbgene00020413": 98, "wbgene00020414": 98, "wbgene00020415": 98, "wbgene00020416": 98, "wbgene00020417": 98, "wbgene00020418": 98, "wbgene00020419": 98, "wbgene00020466": 98, "wbgene00020467": 98, "wbgene00020556": 98, "wbgene00020557": 98, "wbgene00020558": 98, "wbgene00020625": 98, "wbgene00020626": 98, "wbgene00020627": 98, "wbgene00020628": 98, "wbgene00020629": 98, "wbgene00020652": 98, "wbgene00020653": 98, "wbgene00020655": 98, "wbgene00020656": 98, "wbgene00020659": 98, "wbgene00020660": 98, "wbgene00020661": 98, "wbgene00020693": 98, "wbgene00020694": 98, "wbgene00020709": 98, "wbgene00020710": 98, "wbgene00020711": 98, "wbgene00020712": 98, "wbgene00020713": 98, "wbgene00020714": 98, "wbgene00020742": 98, "wbgene00020743": 98, "wbgene00020838": 98, "wbgene00020839": 98, "wbgene00020840": 98, "wbgene00020841": 98, "wbgene00020842": 98, "wbgene00020843": 98, "wbgene00020856": 98, "wbgene00020857": 98, "wbgene00020858": 98, "wbgene00020859": 98, "wbgene00020860": 98, "wbgene00020900": 98, "wbgene00020901": 98, "wbgene00020902": 98, "wbgene00020903": 98, "wbgene00020913": 98, "wbgene00020914": 98, "wbgene00020915": 98, "wbgene00020917": 98, "wbgene00020931": 98, "wbgene00020932": 98, "wbgene00020933": 98, "wbgene00020935": 98, "wbgene00020936": 98, "wbgene00020937": 98, "wbgene00020984": 98, "wbgene00020985": 98, "wbgene00020986": 98, "wbgene00020987": 98, "wbgene00020988": 98, "wbgene00020989": 98, "wbgene00020990": 98, "wbgene00020991": 98, "wbgene00021005": 98, "wbgene00021006": 98, "wbgene00021007": 98, "wbgene00021008": 98, "wbgene00021009": 98, "wbgene00021014": 98, "wbgene00021015": 98, "wbgene00021016": 98, "wbgene00021017": 98, "wbgene00021024": 98, "wbgene00021025": 98, "wbgene00021026": 98, "wbgene00021027": 98, "wbgene00021028": 98, "wbgene00021034": 98, "wbgene00021035": 98, "wbgene00021036": 98, "wbgene00021037": 98, "wbgene00021038": 98, "wbgene00021039": 98, "wbgene00021109": 98, "wbgene00021110": 98, "wbgene00021111": 98, "wbgene00021112": 98, "wbgene00021113": 98, "wbgene00021114": 98, "wbgene00021115": 98, "wbgene00021125": 98, "wbgene00021127": 98, "wbgene00021128": 98, "wbgene00021175": 98, "wbgene00021207": 98, "wbgene00021208": 98, "wbgene00021209": 98, "wbgene00021210": 98, "wbgene00021212": 98, "wbgene00021213": 98, "wbgene00021214": 98, "wbgene00021215": 98, "wbgene00021237": 98, "wbgene00021238": 98, "wbgene00021239": 98, "wbgene00021269": 98, "wbgene00021270": 98, "wbgene00021271": 98, "wbgene00021272": 98, "wbgene00021273": 98, "wbgene00021274": 98, "wbgene00021275": 98, "wbgene00021276": 98, "wbgene00021277": 98, "wbgene00021278": 98, "wbgene00021279": 98, "wbgene00021280": 98, "wbgene00021327": 98, "wbgene00021328": 98, "wbgene00021329": 98, "wbgene00021331": 98, "wbgene00021332": 98, "wbgene00021333": 98, "wbgene00021334": 98, "wbgene00021335": 98, "wbgene00021346": 98, "wbgene00021347": 98, "wbgene00021348": 98, "wbgene00021349": 98, "wbgene00021350": 98, "wbgene00021351": 98, "wbgene00021352": 98, "wbgene00021353": 98, "wbgene00021354": 98, "wbgene00021355": 98, "wbgene00021382": 98, "wbgene00021383": 98, "wbgene00021384": 98, "wbgene00021385": 98, "wbgene00021386": 98, "wbgene00021387": 98, "wbgene00021388": 98, "wbgene00021458": 98, "wbgene00021460": 98, "wbgene00021461": 98, "wbgene00021463": 98, "wbgene00021464": 98, "wbgene00021465": 98, "wbgene00021466": 98, "wbgene00021467": 98, "wbgene00021468": 98, "wbgene00021469": 98, "wbgene00021470": 98, "wbgene00021471": 98, "wbgene00021472": 98, "wbgene00021473": 98, "wbgene00021474": 98, "wbgene00021475": 98, "wbgene00021476": 98, "wbgene00021477": 98, "wbgene00021547": 98, "wbgene00021548": 98, "wbgene00021549": 98, "wbgene00021551": 98, "wbgene00021552": 98, "wbgene00021553": 98, "wbgene00021628": 98, "wbgene00021629": 98, "wbgene00021630": 98, "wbgene00021631": 98, "wbgene00021632": 98, "wbgene00021633": 98, "wbgene00021634": 98, "wbgene00021635": 98, "wbgene00021636": 98, "wbgene00021637": 98, "wbgene00021638": 98, "wbgene00021639": 98, "wbgene00021640": 98, "wbgene00021641": 98, "wbgene00021643": 98, "wbgene00021644": 98, "wbgene00021645": 98, "wbgene00021646": 98, "wbgene00021647": 98, "wbgene00021648": 98, "wbgene00021649": 98, "wbgene00021650": 98, "wbgene00021651": 98, "wbgene00021653": 98, "wbgene00021657": 98, "wbgene00021658": 98, "wbgene00021660": 98, "wbgene00021662": 98, "wbgene00021664": 98, "wbgene00021666": 98, "wbgene00021667": 98, "wbgene00021668": 98, "wbgene00021671": 98, "wbgene00021672": 98, "wbgene00021673": 98, "wbgene00021675": 98, "wbgene00021676": 98, "wbgene00021677": 98, "wbgene00021678": 98, "wbgene00021679": 98, "wbgene00021681": 98, "wbgene00021682": 98, "wbgene00021683": 98, "wbgene00021685": 98, "wbgene00021686": 98, "wbgene00021687": 98, "wbgene00021689": 98, "wbgene00021690": 98, "wbgene00021691": 98, "wbgene00021692": 98, "wbgene00021693": 98, "wbgene00021694": 98, "wbgene00021733": 98, "wbgene00021734": 98, "wbgene00021763": 98, "wbgene00021764": 98, "wbgene00021765": 98, "wbgene00021766": 98, "wbgene00021768": 98, "wbgene00021771": 98, "wbgene00021826": 98, "wbgene00021827": 98, "wbgene00021828": 98, "wbgene00021829": 98, "wbgene00021830": 98, "wbgene00021831": 98, "wbgene00021832": 98, "wbgene00021833": 98, "wbgene00021834": 98, "wbgene00021835": 98, "wbgene00021838": 98, "wbgene00021839": 98, "wbgene00021840": 98, "wbgene00021841": 98, "wbgene00021842": 98, "wbgene00021843": 98, "wbgene00021844": 98, "wbgene00021845": 98, "wbgene00021846": 98, "wbgene00022025": 98, "wbgene00022026": 98, "wbgene00022027": 98, "wbgene00022028": 98, "wbgene00022029": 98, "wbgene00022030": 98, "wbgene00022031": 98, "wbgene00022032": 98, "wbgene00022033": 98, "wbgene00022034": 98, "wbgene00022035": 98, "wbgene00022036": 98, "wbgene00022037": 98, "wbgene00022038": 98, "wbgene00022039": 98, "wbgene00022040": 98, "wbgene00022042": 98, "wbgene00022043": 98, "wbgene00022107": 98, "wbgene00022108": 98, "wbgene00022110": 98, "wbgene00022111": 98, "wbgene00022112": 98, "wbgene00022113": 98, "wbgene00022114": 98, "wbgene00022115": 98, "wbgene00022117": 98, "wbgene00022118": 98, "wbgene00022119": 98, "wbgene00022121": 98, "wbgene00022122": 98, "wbgene00022123": 98, "wbgene00022124": 98, "wbgene00022125": 98, "wbgene00022126": 98, "wbgene00022127": 98, "wbgene00022128": 98, "wbgene00022129": 98, "wbgene00022130": 98, "wbgene00022131": 98, "wbgene00022133": 98, "wbgene00022138": 98, "wbgene00022139": 98, "wbgene00022140": 98, "wbgene00022141": 98, "wbgene00022142": 98, "wbgene00022143": 98, "wbgene00022144": 98, "wbgene00022145": 98, "wbgene00022146": 98, "wbgene00022148": 98, "wbgene00022149": 98, "wbgene00022150": 98, "wbgene00022152": 98, "wbgene00022153": 98, "wbgene00022154": 98, "wbgene00022155": 98, "wbgene00022156": 98, "wbgene00022157": 98, "wbgene00022158": 98, "wbgene00022159": 98, "wbgene00022160": 98, "wbgene00022161": 98, "wbgene00022162": 98, "wbgene00022163": 98, "wbgene00022268": 98, "wbgene00022269": 98, "wbgene00022270": 98, "wbgene00022271": 98, "wbgene00022272": 98, "wbgene00022273": 98, "wbgene00022274": 98, "wbgene00022275": 98, "wbgene00022277": 98, "wbgene00022278": 98, "wbgene00022279": 98, "wbgene00022280": 98, "wbgene00022281": 98, "wbgene00022282": 98, "wbgene00022358": 98, "wbgene00022360": 98, "wbgene00022361": 98, "wbgene00022363": 98, "wbgene00022365": 98, "wbgene00022366": 98, "wbgene00022367": 98, "wbgene00022368": 98, "wbgene00022369": 98, "wbgene00022370": 98, "wbgene00022371": 98, "wbgene00022372": 98, "wbgene00022373": 98, "wbgene00022385": 98, "wbgene00022386": 98, "wbgene00022388": 98, "wbgene00022389": 98, "wbgene00022390": 98, "wbgene00022391": 98, "wbgene00022454": 98, "wbgene00022455": 98, "wbgene00022456": 98, "wbgene00022457": 98, "wbgene00022458": 98, "wbgene00022459": 98, "wbgene00022460": 98, "wbgene00022462": 98, "wbgene00022463": 98, "wbgene00022465": 98, "wbgene00022466": 98, "wbgene00022467": 98, "wbgene00022469": 98, "wbgene00022470": 98, "wbgene00022471": 98, "wbgene00022472": 98, "wbgene00022473": 98, "wbgene00022474": 98, "wbgene00022475": 98, "wbgene00022517": 98, "wbgene00022518": 98, "wbgene00022519": 98, "wbgene00022586": 98, "wbgene00022591": 98, "wbgene00022592": 98, "wbgene00022593": 98, "wbgene00022594": 98, "wbgene00022631": 98, "wbgene00022632": 98, "wbgene00022633": 98, "wbgene00022634": 98, "wbgene00022635": 98, "wbgene00022748": 98, "wbgene00022749": 98, "wbgene00022750": 98, "wbgene00022751": 98, "wbgene00022752": 98, "wbgene00022753": 98, "wbgene00022754": 98, "wbgene00022815": 98, "wbgene00022830": 98, "wbgene00022831": 98, "wbgene00022832": 98, "wbgene00022833": 98, "wbgene00022834": 98, "wbgene00022835": 98, "wbgene00022836": 98, "wbgene00022837": 98, "wbgene00022838": 98, "wbgene00022946": 98, "wbgene00022953": 98, "wbgene00022955": 98, "wbgene00023023": 98, "wbgene00023024": 98, "wbgene00023055": 98, "wbgene00023057": 98, "wbgene00023058": 98, "wbgene00023065": 98, "wbgene00023066": 98, "wbgene00023067": 98, "wbgene00023068": 98, "wbgene00023072": 98, "wbgene00023073": 98, "wbgene00023135": 98, "wbgene00023136": 98, "wbgene00023142": 98, "wbgene00023156": 98, "wbgene00023169": 98, "wbgene00023172": 98, "wbgene00023176": 98, "wbgene00023193": 98, "wbgene00023198": 98, "wbgene00023199": 98, "wbgene00023273": 98, "wbgene00023274": 98, "wbgene00023295": 98, "wbgene00023314": 98, "wbgene00023344": 98, "wbgene00023368": 98, "wbgene00023369": 98, "wbgene00023398": 98, "wbgene00023409": 98, "wbgene00023411": 98, "wbgene00023413": 98, "wbgene00023415": 98, "wbgene00023452": 98, "wbgene00023459": 98, "wbgene00023461": 98, "wbgene00023472": 98, "wbgene00023490": 98, "wbgene00043049": 98, "wbgene00043056": 98, "wbgene00043279": 98, "wbgene00043308": 98, "wbgene00044008": 98, "wbgene00044058": 98, "wbgene00044065": 98, "wbgene00044066": 98, "wbgene00044070": 98, "wbgene00044094": 98, "wbgene00044120": 98, "wbgene00044122": 98, "wbgene00044236": 98, "wbgene00044237": 98, "wbgene00044242": 98, "wbgene00044243": 98, "wbgene00044245": 98, "wbgene00044246": 98, "wbgene00044247": 98, "wbgene00044250": 98, "wbgene00044251": 98, "wbgene00044260": 98, "wbgene00044261": 98, "wbgene00044262": 98, "wbgene00044264": 98, "wbgene00044265": 98, "wbgene00044266": 98, "wbgene00044267": 98, "wbgene00044270": 98, "wbgene00044277": 98, "wbgene00044289": 98, "wbgene00044305": 98, "wbgene00044321": 98, "wbgene00044345": 98, "wbgene00044347": 98, "wbgene00044348": 98, "wbgene00044349": 98, "wbgene00044358": 98, "wbgene00044413": 98, "wbgene00044414": 98, "wbgene00044421": 98, "wbgene00044423": 98, "wbgene00044427": 98, "wbgene00044431": 98, "wbgene00044432": 98, "wbgene00044433": 98, "wbgene00044434": 98, "wbgene00044435": 98, "wbgene00044436": 98, "wbgene00044437": 98, "wbgene00044438": 98, "wbgene00044440": 98, "wbgene00044441": 98, "wbgene00044461": 98, "wbgene00044607": 98, "wbgene00044610": 98, "wbgene00044611": 98, "wbgene00044614": 98, "wbgene00044616": 98, "wbgene00044644": 98, "wbgene00044646": 98, "wbgene00044679": 98, "wbgene00044680": 98, "wbgene00044684": 98, "wbgene00044706": 98, "wbgene00044707": 98, "wbgene00044708": 98, "wbgene00044709": 98, "wbgene00044710": 98, "wbgene00044711": 98, "wbgene00044712": 98, "wbgene00044713": 98, "wbgene00044714": 98, "wbgene00044716": 98, "wbgene00044722": 98, "wbgene00044746": 98, "wbgene00044754": 98, "wbgene00044764": 98, "wbgene00044769": 98, "wbgene00044781": 98, "wbgene00044782": 98, "wbgene00044786": 98, "wbgene00044792": 98, "wbgene00044796": 98, "wbgene00044805": 98, "wbgene00044809": 98, "wbgene00044810": 98, "wbgene00044894": 98, "wbgene00044895": 98, "wbgene00044896": 98, "wbgene00044897": 98, "wbgene00044898": 98, "wbgene00044905": 98, "wbgene00044925": 98, "wbgene00044926": 98, "wbgene00044927": 98, "wbgene00044928": 98, "wbgene00044929": 98, "wbgene00044930": 98, "wbgene00044931": 98, "wbgene00044932": 98, "wbgene00044933": 98, "wbgene00044934": 98, "wbgene00044935": 98, "wbgene00044964": 98, "wbgene00044975": 98, "wbgene00044982": 98, "wbgene00044984": 98, "wbgene00044987": 98, "wbgene00044988": 98, "wbgene00044997": 98, "wbgene00045048": 98, "wbgene00045052": 98, "wbgene00045053": 98, "wbgene00045057": 98, "wbgene00045058": 98, "wbgene00045075": 98, "wbgene00045076": 98, "wbgene00045077": 98, "wbgene00045082": 98, "wbgene00045087": 98, "wbgene00045093": 98, "wbgene00045094": 98, "wbgene00045103": 98, "wbgene00045138": 98, "wbgene00045150": 98, "wbgene00045156": 98, "wbgene00045162": 98, "wbgene00045164": 98, "wbgene00045192": 98, "wbgene00045212": 98, "wbgene00045218": 98, "wbgene00045234": 98, "wbgene00045235": 98, "wbgene00045236": 98, "wbgene00045237": 98, "wbgene00045238": 98, "wbgene00045254": 98, "wbgene00045328": 98, "wbgene00045329": 98, "wbgene00045369": 98, "wbgene00045370": 98, "wbgene00045375": 98, "wbgene00045376": 98, "wbgene00045383": 98, "wbgene00045387": 98, "wbgene00045396": 98, "wbgene00045398": 98, "wbgene00045399": 98, "wbgene00045433": 98, "wbgene00045434": 98, "wbgene00045458": 98, "wbgene00045468": 98, "wbgene00045473": 98, "wbgene00045474": 98, "wbgene00045483": 98, "wbgene00045498": 98, "wbgene00045508": 98, "wbgene00045509": 98, "wbgene00050875": 98, "wbgene00050878": 98, "wbgene00050879": 98, "wbgene00050880": 98, "wbgene00050881": 98, "wbgene00050896": 98, "wbgene00050921": 98, "wbgene00077443": 98, "wbgene00077508": 98, "wbgene00077515": 98, "wbgene00077519": 98, "wbgene00077520": 98, "wbgene00077521": 98, "wbgene00077524": 98, "wbgene00077525": 98, "wbgene00077526": 98, "wbgene00077527": 98, "wbgene00077534": 98, "wbgene00077535": 98, "wbgene00077537": 98, "wbgene00077539": 98, "wbgene00077543": 98, "wbgene00077546": 98, "wbgene00077548": 98, "wbgene00077549": 98, "wbgene00077551": 98, "wbgene00077552": 98, "wbgene00077553": 98, "wbgene00077555": 98, "wbgene00077556": 98, "wbgene00077557": 98, "wbgene00077558": 98, "wbgene00077559": 98, "wbgene00077561": 98, "wbgene00077563": 98, "wbgene00077599": 98, "wbgene00077684": 98, "wbgene00077685": 98, "wbgene00077686": 98, "wbgene00077687": 98, "wbgene00077689": 98, "wbgene00077701": 98, "wbgene00077708": 98, "wbgene00077715": 98, "wbgene00077717": 98, "wbgene00077718": 98, "wbgene00077719": 98, "wbgene00077728": 98, "wbgene00077764": 98, "wbgene00077765": 98, "wbgene00077766": 98, "wbgene00077767": 98, "wbgene00077768": 98, "wbgene00077769": 98, "wbgene00077770": 98, "wbgene00077771": 98, "wbgene00077772": 98, "wbgene00077773": 98, "wbgene00077781": 98, "wbgene00077785": 98, "wbgene00077789": 98, "wbgene00086551": 98, "wbgene00086552": 98, "wbgene00086553": 98, "wbgene00086554": 98, "wbgene00086555": 98, "wbgene00086556": 98, "wbgene00086557": 98, "wbgene00086562": 98, "wbgene00086563": 98, "wbgene00086564": 98, "wbgene00138716": 98, "wbgene00165026": 98, "wbgene00165095": 98, "wbgene00165439": 98, "wbgene00165483": 98, "wbgene00165567": 98, "wbgene00165627": 98, "wbgene00166055": 98, "wbgene00166087": 98, "wbgene00166290": 98, "wbgene00166331": 98, "wbgene00166332": 98, "wbgene00166448": 98, "wbgene00166549": 98, "wbgene00166632": 98, "wbgene00166768": 98, "wbgene00166975": 98, "wbgene00167006": 98, "wbgene00167018": 98, "wbgene00167052": 98, "wbgene00167193": 98, "wbgene00167652": 98, "wbgene00167709": 98, "wbgene00167738": 98, "wbgene00167759": 98, "wbgene00167822": 98, "wbgene00168081": 98, "wbgene00168182": 98, "wbgene00168457": 98, "wbgene00168505": 98, "wbgene00168694": 98, "wbgene00168700": 98, "wbgene00168707": 98, "wbgene00168760": 98, "wbgene00168761": 98, "wbgene00168902": 98, "wbgene00169054": 98, "wbgene00169118": 98, "wbgene00169222": 98, "wbgene00169224": 98, "wbgene00169245": 98, "wbgene00169408": 98, "wbgene00169462": 98, "wbgene00169515": 98, "wbgene00169521": 98, "wbgene00169597": 98, "wbgene00169979": 98, "wbgene00170108": 98, "wbgene00170117": 98, "wbgene00170253": 98, "wbgene00170280": 98, "wbgene00170333": 98, "wbgene00170426": 98, "wbgene00170676": 98, "wbgene00170690": 98, "wbgene00170698": 98, "wbgene00170789": 98, "wbgene00170835": 98, "wbgene00170884": 98, "wbgene00170927": 98, "wbgene00170953": 98, "wbgene00170964": 98, "wbgene00171005": 98, "wbgene00171130": 98, "wbgene00171280": 98, "wbgene00171346": 98, "wbgene00171663": 98, "wbgene00171678": 98, "wbgene00171818": 98, "wbgene00171935": 98, "wbgene00172021": 98, "wbgene00172093": 98, "wbgene00172419": 98, "wbgene00172654": 98, "wbgene00172703": 98, "wbgene00172802": 98, "wbgene00173043": 98, "wbgene00173107": 98, "wbgene00173115": 98, "wbgene00173142": 98, "wbgene00173238": 98, "wbgene00173290": 98, "wbgene00173303": 98, "wbgene00173337": 98, "wbgene00173414": 98, "wbgene00173516": 98, "wbgene00173569": 98, "wbgene00173790": 98, "wbgene00173976": 98, "wbgene00174000": 98, "wbgene00174101": 98, "wbgene00174114": 98, "wbgene00174124": 98, "wbgene00174161": 98, "wbgene00174311": 98, "wbgene00174649": 98, "wbgene00174741": 98, "wbgene00174760": 98, "wbgene00174770": 98, "wbgene00175036": 98, "wbgene00185086": 98, "wbgene00185098": 98, "wbgene00189949": 98, "wbgene00189958": 98, "wbgene00189974": 98, "wbgene00189979": 98, "wbgene00189983": 98, "wbgene00194652": 98, "wbgene00194653": 98, "wbgene00194654": 98, "wbgene00194656": 98, "wbgene00194657": 98, "wbgene00194659": 98, "wbgene00194660": 98, "wbgene00194697": 98, "wbgene00194698": 98, "wbgene00194700": 98, "wbgene00194701": 98, "wbgene00194702": 98, "wbgene00194703": 98, "wbgene00194806": 98, "wbgene00194809": 98, "wbgene00194810": 98, "wbgene00194992": 98, "wbgene00194999": 98, "wbgene00195031": 98, "wbgene00195032": 98, "wbgene00195033": 98, "wbgene00195045": 98, "wbgene00195056": 98, "wbgene00195057": 98, "wbgene00195068": 98, "wbgene00195069": 98, "wbgene00195155": 98, "wbgene00195175": 98, "wbgene00195178": 98, "wbgene00195179": 98, "wbgene00195180": 98, "wbgene00195227": 98, "wbgene00195228": 98, "wbgene00195229": 98, "wbgene00195230": 98, "wbgene00195231": 98, "wbgene00195232": 98, "wbgene00195244": 98, "wbgene00195247": 98, "wbgene00195253": 98, "wbgene00195254": 98, "wbgene00195255": 98, "wbgene00195257": 98, "wbgene00195289": 98, "wbgene00195315": 98, "wbgene00195320": 98, "wbgene00195336": 98, "wbgene00195350": 98, "wbgene00195352": 98, "wbgene00195355": 98, "wbgene00195369": 98, "wbgene00195394": 98, "wbgene00195400": 98, "wbgene00195405": 98, "wbgene00195417": 98, "wbgene00195424": 98, "wbgene00195426": 98, "wbgene00195443": 98, "wbgene00195445": 98, "wbgene00195448": 98, "wbgene00195455": 98, "wbgene00195459": 98, "wbgene00195465": 98, "wbgene00195476": 98, "wbgene00195485": 98, "wbgene00195486": 98, "wbgene00195504": 98, "wbgene00195514": 98, "wbgene00195529": 98, "wbgene00195544": 98, "wbgene00195546": 98, "wbgene00195553": 98, "wbgene00195560": 98, "wbgene00195578": 98, "wbgene00195590": 98, "wbgene00195592": 98, "wbgene00195596": 98, "wbgene00195605": 98, "wbgene00195606": 98, "wbgene00195608": 98, "wbgene00195610": 98, "wbgene00195613": 98, "wbgene00195615": 98, "wbgene00195618": 98, "wbgene00195645": 98, "wbgene00195672": 98, "wbgene00195683": 98, "wbgene00195719": 98, "wbgene00195749": 98, "wbgene00195751": 98, "wbgene00195752": 98, "wbgene00195755": 98, "wbgene00195771": 98, "wbgene00195776": 98, "wbgene00195813": 98, "wbgene00195817": 98, "wbgene00195833": 98, "wbgene00195835": 98, "wbgene00195861": 98, "wbgene00195883": 98, "wbgene00195884": 98, "wbgene00195888": 98, "wbgene00195909": 98, "wbgene00195916": 98, "wbgene00195923": 98, "wbgene00195924": 98, "wbgene00195926": 98, "wbgene00195955": 98, "wbgene00195962": 98, "wbgene00195985": 98, "wbgene00195989": 98, "wbgene00195998": 98, "wbgene00195999": 98, "wbgene00196006": 98, "wbgene00196011": 98, "wbgene00196017": 98, "wbgene00196043": 98, "wbgene00196062": 98, "wbgene00196075": 98, "wbgene00196076": 98, "wbgene00196097": 98, "wbgene00196099": 98, "wbgene00196100": 98, "wbgene00196101": 98, "wbgene00196116": 98, "wbgene00196124": 98, "wbgene00196129": 98, "wbgene00196143": 98, "wbgene00196146": 98, "wbgene00196187": 98, "wbgene00196188": 98, "wbgene00196196": 98, "wbgene00196204": 98, "wbgene00196211": 98, "wbgene00196215": 98, "wbgene00196219": 98, "wbgene00196224": 98, "wbgene00196234": 98, "wbgene00196235": 98, "wbgene00196243": 98, "wbgene00196260": 98, "wbgene00196276": 98, "wbgene00196296": 98, "wbgene00196297": 98, "wbgene00196342": 98, "wbgene00196343": 98, "wbgene00196360": 98, "wbgene00196367": 98, "wbgene00196389": 98, "wbgene00196394": 98, "wbgene00196396": 98, "wbgene00196397": 98, "wbgene00196398": 98, "wbgene00196406": 98, "wbgene00196417": 98, "wbgene00196418": 98, "wbgene00196421": 98, "wbgene00196428": 98, "wbgene00196465": 98, "wbgene00196468": 98, "wbgene00196479": 98, "wbgene00196480": 98, "wbgene00196493": 98, "wbgene00196502": 98, "wbgene00196508": 98, "wbgene00196517": 98, "wbgene00196533": 98, "wbgene00196551": 98, "wbgene00196566": 98, "wbgene00196610": 98, "wbgene00196622": 98, "wbgene00196636": 98, "wbgene00196638": 98, "wbgene00196639": 98, "wbgene00196658": 98, "wbgene00196671": 98, "wbgene00196679": 98, "wbgene00196703": 98, "wbgene00196705": 98, "wbgene00196717": 98, "wbgene00196718": 98, "wbgene00196720": 98, "wbgene00196721": 98, "wbgene00196743": 98, "wbgene00196754": 98, "wbgene00196756": 98, "wbgene00196768": 98, "wbgene00196780": 98, "wbgene00196781": 98, "wbgene00196791": 98, "wbgene00196796": 98, "wbgene00196802": 98, "wbgene00196824": 98, "wbgene00196837": 98, "wbgene00196879": 98, "wbgene00196880": 98, "wbgene00196881": 98, "wbgene00196890": 98, "wbgene00196897": 98, "wbgene00196903": 98, "wbgene00196907": 98, "wbgene00196917": 98, "wbgene00196934": 98, "wbgene00196963": 98, "wbgene00196978": 98, "wbgene00196993": 98, "wbgene00197005": 98, "wbgene00197014": 98, "wbgene00197026": 98, "wbgene00197032": 98, "wbgene00197034": 98, "wbgene00197035": 98, "wbgene00197044": 98, "wbgene00197059": 98, "wbgene00197062": 98, "wbgene00197063": 98, "wbgene00197076": 98, "wbgene00197084": 98, "wbgene00197112": 98, "wbgene00197121": 98, "wbgene00197138": 98, "wbgene00197140": 98, "wbgene00197142": 98, "wbgene00197150": 98, "wbgene00197156": 98, "wbgene00197162": 98, "wbgene00197166": 98, "wbgene00197167": 98, "wbgene00197177": 98, "wbgene00197182": 98, "wbgene00197193": 98, "wbgene00197229": 98, "wbgene00197232": 98, "wbgene00197234": 98, "wbgene00197258": 98, "wbgene00197259": 98, "wbgene00197263": 98, "wbgene00197264": 98, "wbgene00197271": 98, "wbgene00197277": 98, "wbgene00197303": 98, "wbgene00197305": 98, "wbgene00197324": 98, "wbgene00197341": 98, "wbgene00197353": 98, "wbgene00197361": 98, "wbgene00197364": 98, "wbgene00197378": 98, "wbgene00197411": 98, "wbgene00197432": 98, "wbgene00197441": 98, "wbgene00197447": 98, "wbgene00197457": 98, "wbgene00197503": 98, "wbgene00197505": 98, "wbgene00197508": 98, "wbgene00197519": 98, "wbgene00197526": 98, "wbgene00197538": 98, "wbgene00197549": 98, "wbgene00197559": 98, "wbgene00197565": 98, "wbgene00197570": 98, "wbgene00197585": 98, "wbgene00197595": 98, "wbgene00197613": 98, "wbgene00197618": 98, "wbgene00197627": 98, "wbgene00197673": 98, "wbgene00197693": 98, "wbgene00197696": 98, "wbgene00197704": 98, "wbgene00197712": 98, "wbgene00197713": 98, "wbgene00197714": 98, "wbgene00197716": 98, "wbgene00197725": 98, "wbgene00197736": 98, "wbgene00197738": 98, "wbgene00197757": 98, "wbgene00197758": 98, "wbgene00197772": 98, "wbgene00197776": 98, "wbgene00197781": 98, "wbgene00197785": 98, "wbgene00197788": 98, "wbgene00197789": 98, "wbgene00197794": 98, "wbgene00197823": 98, "wbgene00197825": 98, "wbgene00197864": 98, "wbgene00197871": 98, "wbgene00197872": 98, "wbgene00197888": 98, "wbgene00197900": 98, "wbgene00197940": 98, "wbgene00197941": 98, "wbgene00197950": 98, "wbgene00197957": 98, "wbgene00197961": 98, "wbgene00197965": 98, "wbgene00197971": 98, "wbgene00197978": 98, "wbgene00197993": 98, "wbgene00197996": 98, "wbgene00198001": 98, "wbgene00198011": 98, "wbgene00198026": 98, "wbgene00198042": 98, "wbgene00198047": 98, "wbgene00198052": 98, "wbgene00198059": 98, "wbgene00198061": 98, "wbgene00198066": 98, "wbgene00198071": 98, "wbgene00198089": 98, "wbgene00198093": 98, "wbgene00198097": 98, "wbgene00198101": 98, "wbgene00198102": 98, "wbgene00198120": 98, "wbgene00198131": 98, "wbgene00198144": 98, "wbgene00198146": 98, "wbgene00198151": 98, "wbgene00198170": 98, "wbgene00198187": 98, "wbgene00198190": 98, "wbgene00198202": 98, "wbgene00198205": 98, "wbgene00198207": 98, "wbgene00198208": 98, "wbgene00198214": 98, "wbgene00198221": 98, "wbgene00198238": 98, "wbgene00198245": 98, "wbgene00198267": 98, "wbgene00198277": 98, "wbgene00198280": 98, "wbgene00198315": 98, "wbgene00198317": 98, "wbgene00198324": 98, "wbgene00198328": 98, "wbgene00198335": 98, "wbgene00198369": 98, "wbgene00198375": 98, "wbgene00198377": 98, "wbgene00198389": 98, "wbgene00198391": 98, "wbgene00198411": 98, "wbgene00198423": 98, "wbgene00198482": 98, "wbgene00198497": 98, "wbgene00198499": 98, "wbgene00198507": 98, "wbgene00198540": 98, "wbgene00198554": 98, "wbgene00198570": 98, "wbgene00198585": 98, "wbgene00198586": 98, "wbgene00198588": 98, "wbgene00198609": 98, "wbgene00198612": 98, "wbgene00198649": 98, "wbgene00198651": 98, "wbgene00198657": 98, "wbgene00198691": 98, "wbgene00198708": 98, "wbgene00198727": 98, "wbgene00198736": 98, "wbgene00198744": 98, "wbgene00198757": 98, "wbgene00198773": 98, "wbgene00198788": 98, "wbgene00198814": 98, "wbgene00198816": 98, "wbgene00198823": 98, "wbgene00198824": 98, "wbgene00198826": 98, "wbgene00198838": 98, "wbgene00198839": 98, "wbgene00198848": 98, "wbgene00198876": 98, "wbgene00198883": 98, "wbgene00198884": 98, "wbgene00198893": 98, "wbgene00198900": 98, "wbgene00198922": 98, "wbgene00198941": 98, "wbgene00198946": 98, "wbgene00198957": 98, "wbgene00198984": 98, "wbgene00199005": 98, "wbgene00199008": 98, "wbgene00199010": 98, "wbgene00199013": 98, "wbgene00199017": 98, "wbgene00199036": 98, "wbgene00199039": 98, "wbgene00199044": 98, "wbgene00199061": 98, "wbgene00199062": 98, "wbgene00199064": 98, "wbgene00199070": 98, "wbgene00199077": 98, "wbgene00199081": 98, "wbgene00199088": 98, "wbgene00199103": 98, "wbgene00199106": 98, "wbgene00199113": 98, "wbgene00199116": 98, "wbgene00199148": 98, "wbgene00199160": 98, "wbgene00199182": 98, "wbgene00199191": 98, "wbgene00199192": 98, "wbgene00199200": 98, "wbgene00199201": 98, "wbgene00199211": 98, "wbgene00199215": 98, "wbgene00199217": 98, "wbgene00199244": 98, "wbgene00199250": 98, "wbgene00199256": 98, "wbgene00199257": 98, "wbgene00199280": 98, "wbgene00199297": 98, "wbgene00199300": 98, "wbgene00199318": 98, "wbgene00199333": 98, "wbgene00199339": 98, "wbgene00199346": 98, "wbgene00199362": 98, "wbgene00199394": 98, "wbgene00199400": 98, "wbgene00199407": 98, "wbgene00199408": 98, "wbgene00199411": 98, "wbgene00199416": 98, "wbgene00199417": 98, "wbgene00199422": 98, "wbgene00199432": 98, "wbgene00199436": 98, "wbgene00199463": 98, "wbgene00199467": 98, "wbgene00199469": 98, "wbgene00199486": 98, "wbgene00199495": 98, "wbgene00199505": 98, "wbgene00199506": 98, "wbgene00199508": 98, "wbgene00199511": 98, "wbgene00199523": 98, "wbgene00199530": 98, "wbgene00199531": 98, "wbgene00199533": 98, "wbgene00199566": 98, "wbgene00199582": 98, "wbgene00199586": 98, "wbgene00199597": 98, "wbgene00199602": 98, "wbgene00199607": 98, "wbgene00199609": 98, "wbgene00199622": 98, "wbgene00199623": 98, "wbgene00199629": 98, "wbgene00199635": 98, "wbgene00199640": 98, "wbgene00199648": 98, "wbgene00199650": 98, "wbgene00199662": 98, "wbgene00199669": 98, "wbgene00199670": 98, "wbgene00199683": 98, "wbgene00199697": 98, "wbgene00199710": 98, "wbgene00199718": 98, "wbgene00199719": 98, "wbgene00199734": 98, "wbgene00199737": 98, "wbgene00199757": 98, "wbgene00199760": 98, "wbgene00199766": 98, "wbgene00199768": 98, "wbgene00199775": 98, "wbgene00199781": 98, "wbgene00199790": 98, "wbgene00199799": 98, "wbgene00199814": 98, "wbgene00199816": 98, "wbgene00199825": 98, "wbgene00199840": 98, "wbgene00199872": 98, "wbgene00199873": 98, "wbgene00199884": 98, "wbgene00199892": 98, "wbgene00199899": 98, "wbgene00199900": 98, "wbgene00199915": 98, "wbgene00199923": 98, "wbgene00199928": 98, "wbgene00199929": 98, "wbgene00199930": 98, "wbgene00199946": 98, "wbgene00199971": 98, "wbgene00199978": 98, "wbgene00199987": 98, "wbgene00199992": 98, "wbgene00199998": 98, "wbgene00200012": 98, "wbgene00200022": 98, "wbgene00200024": 98, "wbgene00200034": 98, "wbgene00200037": 98, "wbgene00200046": 98, "wbgene00200048": 98, "wbgene00200067": 98, "wbgene00200084": 98, "wbgene00200093": 98, "wbgene00200096": 98, "wbgene00200098": 98, "wbgene00200101": 98, "wbgene00200104": 98, "wbgene00200117": 98, "wbgene00200124": 98, "wbgene00200158": 98, "wbgene00200159": 98, "wbgene00200165": 98, "wbgene00200171": 98, "wbgene00200203": 98, "wbgene00200218": 98, "wbgene00200232": 98, "wbgene00200243": 98, "wbgene00200247": 98, "wbgene00200253": 98, "wbgene00200254": 98, "wbgene00200262": 98, "wbgene00200264": 98, "wbgene00200265": 98, "wbgene00200276": 98, "wbgene00200277": 98, "wbgene00200286": 98, "wbgene00200290": 98, "wbgene00200294": 98, "wbgene00200300": 98, "wbgene00200301": 98, "wbgene00200307": 98, "wbgene00200310": 98, "wbgene00200317": 98, "wbgene00200345": 98, "wbgene00200353": 98, "wbgene00200364": 98, "wbgene00200365": 98, "wbgene00200387": 98, "wbgene00200408": 98, "wbgene00200417": 98, "wbgene00200422": 98, "wbgene00200427": 98, "wbgene00200428": 98, "wbgene00200441": 98, "wbgene00200442": 98, "wbgene00200482": 98, "wbgene00200484": 98, "wbgene00200496": 98, "wbgene00200506": 98, "wbgene00200507": 98, "wbgene00200510": 98, "wbgene00200517": 98, "wbgene00200519": 98, "wbgene00200521": 98, "wbgene00200550": 98, "wbgene00200556": 98, "wbgene00200571": 98, "wbgene00200577": 98, "wbgene00200606": 98, "wbgene00200608": 98, "wbgene00200634": 98, "wbgene00200644": 98, "wbgene00200648": 98, "wbgene00200654": 98, "wbgene00200656": 98, "wbgene00200661": 98, "wbgene00200668": 98, "wbgene00200669": 98, "wbgene00200672": 98, "wbgene00200688": 98, "wbgene00200693": 98, "wbgene00200700": 98, "wbgene00200705": 98, "wbgene00200707": 98, "wbgene00200715": 98, "wbgene00200720": 98, "wbgene00200726": 98, "wbgene00200742": 98, "wbgene00200760": 98, "wbgene00200766": 98, "wbgene00200768": 98, "wbgene00200773": 98, "wbgene00200786": 98, "wbgene00200810": 98, "wbgene00200833": 98, "wbgene00200840": 98, "wbgene00200854": 98, "wbgene00200860": 98, "wbgene00200878": 98, "wbgene00200888": 98, "wbgene00200900": 98, "wbgene00200910": 98, "wbgene00200924": 98, "wbgene00200936": 98, "wbgene00200953": 98, "wbgene00200957": 98, "wbgene00200970": 98, "wbgene00200985": 98, "wbgene00200987": 98, "wbgene00200992": 98, "wbgene00200994": 98, "wbgene00201013": 98, "wbgene00201017": 98, "wbgene00201018": 98, "wbgene00201019": 98, "wbgene00201068": 98, "wbgene00201075": 98, "wbgene00201084": 98, "wbgene00201096": 98, "wbgene00201101": 98, "wbgene00201104": 98, "wbgene00201106": 98, "wbgene00201107": 98, "wbgene00201128": 98, "wbgene00201134": 98, "wbgene00201147": 98, "wbgene00201162": 98, "wbgene00201164": 98, "wbgene00201165": 98, "wbgene00201170": 98, "wbgene00201172": 98, "wbgene00201181": 98, "wbgene00201187": 98, "wbgene00201188": 98, "wbgene00201190": 98, "wbgene00201192": 98, "wbgene00201193": 98, "wbgene00201202": 98, "wbgene00201209": 98, "wbgene00201222": 98, "wbgene00201225": 98, "wbgene00201255": 98, "wbgene00201270": 98, "wbgene00201274": 98, "wbgene00201300": 98, "wbgene00201317": 98, "wbgene00201318": 98, "wbgene00201319": 98, "wbgene00201331": 98, "wbgene00201336": 98, "wbgene00201351": 98, "wbgene00201383": 98, "wbgene00201393": 98, "wbgene00201398": 98, "wbgene00201435": 98, "wbgene00201436": 98, "wbgene00201440": 98, "wbgene00201448": 98, "wbgene00201449": 98, "wbgene00201455": 98, "wbgene00201456": 98, "wbgene00201458": 98, "wbgene00201470": 98, "wbgene00201478": 98, "wbgene00201484": 98, "wbgene00201494": 98, "wbgene00201499": 98, "wbgene00201508": 98, "wbgene00201517": 98, "wbgene00201534": 98, "wbgene00201569": 98, "wbgene00201573": 98, "wbgene00201588": 98, "wbgene00201589": 98, "wbgene00201611": 98, "wbgene00201627": 98, "wbgene00201662": 98, "wbgene00201665": 98, "wbgene00201667": 98, "wbgene00201669": 98, "wbgene00201676": 98, "wbgene00201678": 98, "wbgene00201682": 98, "wbgene00201688": 98, "wbgene00201694": 98, "wbgene00201710": 98, "wbgene00201723": 98, "wbgene00201737": 98, "wbgene00201753": 98, "wbgene00201754": 98, "wbgene00201755": 98, "wbgene00201765": 98, "wbgene00201768": 98, "wbgene00201777": 98, "wbgene00201782": 98, "wbgene00201794": 98, "wbgene00201801": 98, "wbgene00201816": 98, "wbgene00201824": 98, "wbgene00201829": 98, "wbgene00201869": 98, "wbgene00201890": 98, "wbgene00201901": 98, "wbgene00201916": 98, "wbgene00201925": 98, "wbgene00201926": 98, "wbgene00201927": 98, "wbgene00201953": 98, "wbgene00201965": 98, "wbgene00201973": 98, "wbgene00201974": 98, "wbgene00201976": 98, "wbgene00201989": 98, "wbgene00202007": 98, "wbgene00202025": 98, "wbgene00202027": 98, "wbgene00202039": 98, "wbgene00202040": 98, "wbgene00202055": 98, "wbgene00202057": 98, "wbgene00202063": 98, "wbgene00202085": 98, "wbgene00202087": 98, "wbgene00202093": 98, "wbgene00202110": 98, "wbgene00202130": 98, "wbgene00202136": 98, "wbgene00202137": 98, "wbgene00202142": 98, "wbgene00202148": 98, "wbgene00202152": 98, "wbgene00202155": 98, "wbgene00202156": 98, "wbgene00202162": 98, "wbgene00202170": 98, "wbgene00202173": 98, "wbgene00202175": 98, "wbgene00202230": 98, "wbgene00202233": 98, "wbgene00202237": 98, "wbgene00202238": 98, "wbgene00202255": 98, "wbgene00202259": 98, "wbgene00202263": 98, "wbgene00202277": 98, "wbgene00202295": 98, "wbgene00202319": 98, "wbgene00202331": 98, "wbgene00202346": 98, "wbgene00202349": 98, "wbgene00202359": 98, "wbgene00202365": 98, "wbgene00202368": 98, "wbgene00202369": 98, "wbgene00202384": 98, "wbgene00202405": 98, "wbgene00202408": 98, "wbgene00202420": 98, "wbgene00202441": 98, "wbgene00202444": 98, "wbgene00202449": 98, "wbgene00202452": 98, "wbgene00202469": 98, "wbgene00202489": 98, "wbgene00202494": 98, "wbgene00206356": 98, "wbgene00206357": 98, "wbgene00206362": 98, "wbgene00206363": 98, "wbgene00206393": 98, "wbgene00206464": 98, "wbgene00206474": 98, "wbgene00206497": 98, "wbgene00206528": 98, "wbgene00206530": 98, "wbgene00206532": 98, "wbgene00219206": 98, "wbgene00219219": 98, "wbgene00219227": 98, "wbgene00219231": 98, "wbgene00219234": 98, "wbgene00219253": 98, "wbgene00219261": 98, "wbgene00219263": 98, "wbgene00219275": 98, "wbgene00219281": 98, "wbgene00219282": 98, "wbgene00219283": 98, "wbgene00219284": 98, "wbgene00219285": 98, "wbgene00219286": 98, "wbgene00219287": 98, "wbgene00219288": 98, "wbgene00219310": 98, "wbgene00219313": 98, "wbgene00219319": 98, "wbgene00219422": 98, "wbgene00219450": 98, "wbgene00219460": 98, "wbgene00219498": 98, "wbgene00219557": 98, "wbgene00219578": 98, "wbgene00219580": 98, "wbgene00219581": 98, "wbgene00219582": 98, "wbgene00219588": 98, "wbgene00219591": 98, "wbgene00219592": 98, "wbgene00219598": 98, "wbgene00219608": 98, "wbgene00219621": 98, "wbgene00219622": 98, "wbgene00219637": 98, "wbgene00219654": 98, "wbgene00219663": 98, "wbgene00219678": 98, "wbgene00219692": 98, "wbgene00219703": 98, "wbgene00219705": 98, "wbgene00219710": 98, "wbgene00219712": 98, "wbgene00219721": 98, "wbgene00219725": 98, "wbgene00219727": 98, "wbgene00219733": 98, "wbgene00219746": 98, "wbgene00219749": 98, "wbgene00219754": 98, "wbgene00219760": 98, "wbgene00219766": 98, "wbgene00219767": 98, "wbgene00219778": 98, "wbgene00219779": 98, "wbgene00219787": 98, "wbgene00219788": 98, "wbgene00219789": 98, "wbgene00219796": 98, "wbgene00219798": 98, "wbgene00219811": 98, "wbgene00219817": 98, "wbgene00219820": 98, "wbgene00219821": 98, "wbgene00219830": 98, "wbgene00219833": 98, "wbgene00219834": 98, "wbgene00219835": 98, "wbgene00219845": 98, "wbgene00219857": 98, "wbgene00219863": 98, "wbgene00219870": 98, "wbgene00219871": 98, "wbgene00219882": 98, "wbgene00219894": 98, "wbgene00219895": 98, "wbgene00219910": 98, "wbgene00219911": 98, "wbgene00219918": 98, "wbgene00219919": 98, "wbgene00219920": 98, "wbgene00219923": 98, "wbgene00219926": 98, "wbgene00219927": 98, "wbgene00219929": 98, "wbgene00219930": 98, "wbgene00219937": 98, "wbgene00219940": 98, "wbgene00219943": 98, "wbgene00219950": 98, "wbgene00219951": 98, "wbgene00219953": 98, "wbgene00219955": 98, "wbgene00219972": 98, "wbgene00219973": 98, "wbgene00219976": 98, "wbgene00219983": 98, "wbgene00219984": 98, "wbgene00219985": 98, "wbgene00219987": 98, "wbgene00219998": 98, "wbgene00220000": 98, "wbgene00220004": 98, "wbgene00220006": 98, "wbgene00220010": 98, "wbgene00220015": 98, "wbgene00220016": 98, "wbgene00220018": 98, "wbgene00220019": 98, "wbgene00220027": 98, "wbgene00220039": 98, "wbgene00220041": 98, "wbgene00220054": 98, "wbgene00220064": 98, "wbgene00220065": 98, "wbgene00220069": 98, "wbgene00220081": 98, "wbgene00220085": 98, "wbgene00220086": 98, "wbgene00220087": 98, "wbgene00220089": 98, "wbgene00220100": 98, "wbgene00220106": 98, "wbgene00220112": 98, "wbgene00220118": 98, "wbgene00220126": 98, "wbgene00220127": 98, "wbgene00220128": 98, "wbgene00220135": 98, "wbgene00220136": 98, "wbgene00220142": 98, "wbgene00220147": 98, "wbgene00220148": 98, "wbgene00220165": 98, "wbgene00220166": 98, "wbgene00220167": 98, "wbgene00220171": 98, "wbgene00220179": 98, "wbgene00220188": 98, "wbgene00220189": 98, "wbgene00220190": 98, "wbgene00220191": 98, "wbgene00220195": 98, "wbgene00220197": 98, "wbgene00220198": 98, "wbgene00220212": 98, "wbgene00220217": 98, "wbgene00220225": 98, "wbgene00220226": 98, "wbgene00220231": 98, "wbgene00220232": 98, "wbgene00220240": 98, "wbgene00220241": 98, "wbgene00220243": 98, "wbgene00220246": 98, "wbgene00220261": 98, "wbgene00235158": 98, "wbgene00235197": 98, "wbgene00235237": 98, "wbgene00235254": 98, "wbgene00235381": 98, "wbgene00235385": 98, "wbgene00235387": 98, "wbgene00235388": 98, "wbgene00235390": 98, "wbgene00236789": 98, "wbgene00236797": 98, "wbgene00236798": 98, "wbgene00236800": 98, "wbgene00236808": 98, "wbgene00236809": 98, "wbgene00249808": 98, "wbgene00255420": 98, "wbgene00255457": 98, "wbgene00255549": 98, "wbgene00255550": 98, "wbgene00255568": 98, "wbgene00255576": 98, "wbgene00255577": 98, "wbgene00255578": 98, "wbgene00255584": 98, "wbgene00255594": 98, "wbgene00255605": 98, "wbgene00255606": 98, "wbgene00255714": 98, "wbgene00268216": 98, "wbgene00269382": 98, "wbgene00269393": 98, "wbgene00269435": 98, "wbgene00271567": 98, "wbgene00271598": 98, "wbgene00271605": 98, "wbgene00271632": 98, "wbgene00271639": 98, "wbgene00271648": 98, "wbgene00271649": 98, "wbgene00271653": 98, "wbgene00271694": 98, "wbgene00271776": 98, "wbgene00271777": 98, "wbgene00271778": 98, "wbgene00271779": 98, "wbgene00271780": 98, "wbgene00271781": 98, "wbgene00284845": 98, "wbgene00284852": 98, "wbgene00284853": 98, "wbgene00284854": 98, "wbgene00284857": 98, "wbgene00284858": 98, "wbgene00302974": 98, "wbgene00303028": 98, "wbgene00303030": 98, "wbgene00303032": 98, "wbgene00303055": 98, "wbgene00303056": 98, "wbgene00303057": 98, "wbgene00303058": 98, "wbgene00303070": 98, "wbgene00303078": 98, "wbgene00303082": 98, "wbgene00303088": 98, "wbgene00303090": 98, "wbgene00303094": 98, "wbgene00303097": 98, "wbgene00303103": 98, "wbgene00303104": 98, "wbgene00304792": 98, "wbgene00304811": 98, "wbgene00304981": 98, "wbgene00304985": 98, "wbgene00304992": 98, "wbgene00304996": 98, "wbgene00305018": 98, "wbgene00305047": 98, "wbgene00305048": 98, "wbgene00305049": 98, "wbgene00305050": 98, "wbgene00306076": 98, "wbgene00306080": 98, "wbgene00306081": 98, "wbgene00306121": 98, "3746": 98, "3909": 98, "4115": 98, "10230": 98, "17483": 98, "26781": 98, "27588": 98, "33150": 98, "43732": 98, "44677": 98, "47460": 98, "49860": 98, "49920": 98, "54426": 98, "55292": 98, "64066": 98, "71424": 98, "81156": 98, "81192": 98, "91296": 98, "91403": 98, "92720": 98, "93021": 98, "95312": 98, "96458": 98, "108223": 98, "108681": 98, "110057": 98, "110550": 98, "110771": 98, "111037": 98, "113751": 98, "113806": 98, "114708": 98, "115655": 98, "115676": 98, "115686": 98, "117498": 98, "118092": 98, "120901": 98, "127284": 98, "134270": 98, "134336": 98, "137282": 98, "137844": 98, "144565": 98, "144810": 98, "154855": 98, "160171": 98, "169763": 98, "171222": 98, "176040": 98, "178231": 98, "178291": 98, "178523": 98, "182772": 98, "183363": 98, "208384": 98, "209280": 98, "211738": 98, "212255": 98, "215491": 98, "216027": 98, "217002": 98, "217927": 98, "219137": 98, "219734": 98, "221575": 98, "231577": 98, "237853": 98, "238615": 98, "240250": 98, "240490": 98, "245414": 98, "248623": 98, "251580": 98, "252106": 98, "259157": 98, "263501": 98, "263618": 98, "272602": 98, "272627": 98, "280113": 98, "289185": 98, "291214": 98, "305477": 98, "305810": 98, "310790": 98, "310980": 98, "314989": 98, "316634": 98, "318066": 98, "318548": 98, "323352": 98, "323854": 98, "330987": 98, "332603": 98, "337845": 98, "348459": 98, "357236": 98, "357239": 98, "363901": 98, "364509": 98, "373465": 98, "373570": 98, "381902": 98, "382825": 98, "394415": 98, "398890": 98, "418677": 98, "420921": 98, "423713": 98, "444002": 98, "461605": 98, "461994": 98, "467137": 98, "471134": 98, "473890": 98, "477581": 98, "483880": 98, "484038": 98, "488392": 98, "488606": 98, "489905": 98, "489968": 98, "502042": 98, "502890": 98, "506250": 98, "506472": 98, "519646": 98, "520108": 98, "521554": 98, "526047": 98, "526139": 98, "530214": 98, "530326": 98, "530394": 98, "530683": 98, "530968": 98, "533084": 98, "534454": 98, "535344": 98, "535790": 98, "536587": 98, "536803": 98, "536931": 98, "537121": 98, "542204": 98, "550695": 98, "556709": 98, "557374": 98, "561671": 98, "562735": 98, "565184": 98, "565283": 98, "566588": 98, "572172": 98, "575120": 98, "582210": 98, "583729": 98, "585118": 98, "585376": 98, "585806": 98, "607571": 98, "613289": 98, "613379": 98, "614650": 98, "629444": 98, "629464": 98, "636345": 98, "636803": 98, "637852": 98, "638128": 98, "653988": 98, "654089": 98, "663610": 98, "664386": 98, "666902": 98, "667539": 98, "683472": 98, "683723": 98, "686599": 98, "688256": 98, "691332": 98, "692019": 98, "694948": 98, "694975": 98, "698324": 98, "700277": 98, "715875": 98, "717889": 98, "736562": 98, "740800": 98, "757010": 98, "757297": 98, "760447": 98, "760847": 98, "761849": 98, "763477": 98, "770720": 98, "770891": 98, "776369": 98, "779156": 98, "779241": 98, "788096": 98, "788219": 98, "796996": 98, "797295": 98, "801554": 98, "801698": 98, "803367": 98, "834765": 98, "837995": 98, "846763": 98, "853450": 98, "882713": 98, "882917": 98, "895099": 98, "897285": 98, "907370": 98, "907447": 98, "911189": 98, "912331": 98, "926916": 98, "938482": 98, "947710": 98, "948568": 98, "957456": 98, "963691": 98, "976560": 98, "979124": 98, "979274": 98, "989670": 98, "992178": 98, "995780": 98, "1005640": 98, "1006176": 98, "1014455": 98, "1015194": 98, "1015742": 98, "1016404": 98, "1017176": 98, "1018842": 98, "1019157": 98, "1019826": 98, "1029910": 98, "1030632": 98, "1033436": 98, "1034442": 98, "1041047": 98, "1041471": 98, "1053826": 98, "1053893": 98, "1066899": 98, "1068483": 98, "1074343": 98, "1077424": 98, "1095796": 98, "1107577": 98, "1112303": 98, "1112417": 98, "1115564": 98, "1126974": 98, "1127057": 98, "1128323": 98, "1131765": 98, "1136365": 98, "1154388": 98, "1154513": 98, "1156020": 98, "1156087": 98, "1156454": 98, "1156578": 98, "1157487": 98, "1157570": 98, "1175809": 98, "1176472": 98, "1190830": 98, "1193157": 98, "1211376": 98, "1211484": 98, "1254719": 98, "1254769": 98, "1258169": 98, "1258200": 98, "1268155": 98, "1271515": 98, "1273033": 98, "1278807": 98, "1279042": 98, "1279435": 98, "1279484": 98, "1282100": 98, "1285435": 98, "1287303": 98, "1287959": 98, "1305561": 98, "1328648": 98, "1332697": 98, "1334077": 98, "1335320": 98, "1336867": 98, "1337015": 98, "1338216": 98, "1338783": 98, "1339773": 98, "1340677": 98, "1341265": 98, "1341271": 98, "1344692": 98, "1348502": 98, "1359643": 98, "1365302": 98, "1376409": 98, "1376941": 98, "1379341": 98, "1383461": 98, "1385057": 98, "1389247": 98, "1392759": 98, "1393045": 98, "1402975": 98, "1405934": 98, "1413100": 98, "1413916": 98, "1415807": 98, "1416581": 98, "1425201": 98, "1427226": 98, "1433695": 98, "1436278": 98, "1441334": 98, "1442047": 98, "1443944": 98, "1444506": 98, "1444641": 98, "1446496": 98, "1465358": 98, "1465596": 98, "1469593": 98, "1471074": 98, "1479923": 98, "1483082": 98, "1514417": 98, "1514754": 98, "1540926": 98, "1543524": 98, "1556196": 98, "1556640": 98, "1556661": 98, "1567601": 98, "1580208": 98, "1581393": 98, "1593674": 98, "1594648": 98, "1596216": 98, "1600623": 98, "1601457": 98, "1601837": 98, "1607219": 98, "1607704": 98, "1610041": 98, "1610389": 98, "1628486": 98, "1629002": 98, "1633498": 98, "1634568": 98, "1644115": 98, "1644587": 98, "1651457": 98, "1652875": 98, "1655459": 98, "1655615": 98, "1656763": 98, "1657512": 98, "1663331": 98, "1663401": 98, "1669792": 98, "1670032": 98, "1672742": 98, "1672852": 98, "1676438": 98, "1680445": 98, "1685203": 98, "1686215": 98, "1693675": 98, "1696198": 98, "1697676": 98, "1698348": 98, "1701128": 98, "1701360": 98, "1701808": 98, "1702104": 98, "1708553": 98, "1709586": 98, "1715564": 98, "1721589": 98, "1751055": 98, "1751480": 98, "1754410": 98, "1755328": 98, "1766400": 98, "1767886": 98, "1790157": 98, "1791397": 98, "1791491": 98, "1793253": 98, "1796424": 98, "1797434": 98, "1798722": 98, "1799716": 98, "1806996": 98, "1808091": 98, "1811835": 98, "1812891": 98, "1813581": 98, "1813908": 98, "1823043": 98, "1823446": 98, "1825967": 98, "1828078": 98, "1831929": 98, "1832166": 98, "1832421": 98, "1832896": 98, "1834763": 98, "1834882": 98, "1835438": 98, "1835660": 98, "1841965": 98, "1842444": 98, "1843227": 98, "1843383": 98, "1843959": 98, "1845199": 98, "1850523": 98, "1851668": 98, "1853045": 98, "1856458": 98, "1860578": 98, "1862606": 98, "1872306": 98, "1874007": 98, "1884196": 98, "1885160": 98, "1894910": 98, "1895160": 98, "1923240": 98, "1924299": 98, "1932260": 98, "1932345": 98, "1945220": 98, "1945813": 98, "1949520": 98, "1950593": 98, "1958527": 98, "1958706": 98, "1965066": 98, "1967771": 98, "1973882": 98, "1974778": 98, "1974991": 98, "1978029": 98, "1983412": 98, "1988245": 98, "2010525": 98, "2019431": 98, "2019523": 98, "2026315": 98, "2033748": 98, "2034321": 98, "2043805": 98, "2046538": 98, "2048913": 98, "2049139": 98, "2050177": 98, "2061666": 98, "2063998": 98, "2064292": 98, "2064686": 98, "2064975": 98, "2065481": 98, "2065691": 98, "2069575": 98, "2069680": 98, "2070607": 98, "2070672": 98, "2070891": 98, "2071351": 98, "2072547": 98, "2072679": 98, "2076925": 98, "2078954": 98, "2093796": 98, "2097345": 98, "2123443": 98, "2128587": 98, "2145971": 98, "2149824": 98, "2151826": 98, "2160037": 98, "2209644": 98, "2216097": 98, "2222313": 98, "2223352": 98, "2233099": 98, "2233743": 98, "2234957": 98, "2235601": 98, "2241252": 98, "2242229": 98, "2247223": 98, "2250130": 98, "2254908": 98, "2255920": 98, "2272866": 98, "2279844": 98, "2280800": 98, "2281502": 98, "2291205": 98, "2293126": 98, "2297328": 98, "2297391": 98, "2304397": 98, "2304512": 98, "2306790": 98, "2307266": 98, "2312129": 98, "2312495": 98, "2312958": 98, "2313270": 98, "2315992": 98, "2316306": 98, "2321817": 98, "2322024": 98, "2322596": 98, "2323991": 98, "2327329": 98, "2327988": 98, "2330154": 98, "2330894": 98, "2332652": 98, "2333337": 98, "2338693": 98, "2342215": 98, "2350536": 98, "2350840": 98, "2350945": 98, "2352834": 98, "2356238": 98, "2357882": 98, "2372985": 98, "2377088": 98, "2381851": 98, "2382952": 98, "2401492": 98, "2402229": 98, "2409999": 98, "2410189": 98, "2410261": 98, "2415130": 98, "2420353": 98, "2420833": 98, "2421816": 98, "2422152": 98, "2425185": 98, "2429674": 98, "2432588": 98, "2432589": 98, "2433615": 98, "2434001": 98, "2435691": 98, "2436470": 98, "2437084": 98, "2438764": 98, "2442958": 98, "2445419": 98, "2445983": 98, "2446739": 98, "2448369": 98, "2449413": 98, "2451366": 98, "2451897": 98, "2464618": 98, "2468792": 98, "2471935": 98, "2472059": 98, "2485391": 98, "2485860": 98, "2489787": 98, "2489975": 98, "2497381": 98, "2498133": 98, "2506259": 98, "2506890": 98, "2513710": 98, "2514166": 98, "2514311": 98, "2524531": 98, "2524552": 98, "2533267": 98, "2542114": 98, "2544748": 98, "2546195": 98, "2546385": 98, "2548399": 98, "2549295": 98, "2550543": 98, "2551374": 98, "2551590": 98, "2552733": 98, "2555408": 98, "2556225": 98, "2557451": 98, "2558175": 98, "2560189": 98, "2560371": 98, "2561830": 98, "2562667": 98, "2562997": 98, "2568859": 98, "2571059": 98, "2571739": 98, "2576020": 98, "2581014": 98, "2586124": 98, "2587526": 98, "2595294": 98, "2599978": 98, "2602650": 98, "2605282": 98, "2605605": 98, "2606740": 98, "2617360": 98, "2617528": 98, "2620430": 98, "2620649": 98, "2621859": 98, "2621956": 98, "2628577": 98, "2629684": 98, "2632320": 98, "2632986": 98, "2634561": 98, "2636903": 98, "2637591": 98, "2638648": 98, "2639419": 98, "2642723": 98, "2643778": 98, "2644964": 98, "2657245": 98, "2666383": 98, "2666468": 98, "2668159": 98, "2672438": 98, "2672939": 98, "2682797": 98, "2682865": 98, "2683011": 98, "2684864": 98, "2684997": 98, "2686639": 98, "2689429": 98, "2692108": 98, "2692399": 98, "2692756": 98, "2694084": 98, "2697398": 98, "2699999": 98, "2700419": 98, "2702158": 98, "2703262": 98, "2703458": 98, "2706882": 98, "2717549": 98, "2718026": 98, "2721475": 98, "2721587": 98, "2726724": 98, "2727013": 98, "2727545": 98, "2730003": 98, "2731453": 98, "2731561": 98, "2742528": 98, "2744952": 98, "2745118": 98, "2755539": 98, "2758204": 98, "2758297": 98, "2758405": 98, "2759022": 98, "2776104": 98, "2776363": 98, "2778719": 98, "2780849": 98, "2784271": 98, "2784619": 98, "2786077": 98, "2786331": 98, "2787514": 98, "2787980": 98, "2788418": 98, "2788747": 98, "2790343": 98, "2791686": 98, "2794976": 98, "2796129": 98, "2797464": 98, "2798174": 98, "2800878": 98, "2802802": 98, "2815830": 98, "2816414": 98, "2817689": 98, "2818743": 98, "2822134": 98, "2822242": 98, "2830311": 98, "2830334": 98, "2830483": 98, "2831304": 98, "2831674": 98, "2835344": 98, "2835622": 98, "2835766": 98, "2835984": 98, "2837983": 98, "2838050": 98, "2845858": 98, "2849903": 98, "2851956": 98, "2853903": 98, "2853969": 98, "2855732": 98, "2858520": 98, "2859913": 98, "2864010": 98, "2864061": 98, "2866505": 98, "2875291": 98, "2875397": 98, "2876308": 98, "2876336": 98, "2876554": 98, "2876697": 98, "2876843": 98, "2876931": 98, "2878523": 98, "2878577": 98, "2883454": 98, "2883548": 98, "2893718": 98, "2895328": 98, "2900860": 98, "2901324": 98, "2903006": 98, "2903634": 98, "2928134": 98, "2928394": 98, "2929628": 98, "2929776": 98, "2931361": 98, "2931460": 98, "2947106": 98, "2948428": 98, "2948692": 98, "2949600": 98, "2957910": 98, "2967615": 98, "2967740": 98, "2973509": 98, "2973591": 98, "2974916": 98, "2974970": 98, "2981656": 98, "2983076": 98, "2983202": 98, "2985178": 98, "2986103": 98, "2995914": 98, "2996487": 98, "3001382": 98, "3001405": 98, "3002847": 98, "3004048": 98, "3013448": 98, "3015741": 98, "3021531": 98, "3021650": 98, "3031092": 98, "3031337": 98, "3047794": 98, "3052047": 98, "3070150": 98, "3070967": 98, "3084876": 98, "3085013": 98, "3096266": 98, "3099680": 98, "3099769": 98, "3101850": 98, "3110781": 98, "3115035": 98, "3117628": 98, "3122010": 98, "3127661": 98, "3132969": 98, "3135588": 98, "3137184": 98, "3138447": 98, "3138540": 98, "3140584": 98, "3141703": 98, "3143175": 98, "3144410": 98, "3147793": 98, "3148013": 98, "3152003": 98, "3153284": 98, "3154469": 98, "3158491": 98, "3162391": 98, "3162812": 98, "3163585": 98, "3163687": 98, "3168057": 98, "3168192": 98, "3171230": 98, "3173267": 98, "3176319": 98, "3176417": 98, "3192857": 98, "3193527": 98, "3198838": 98, "3199251": 98, "3203229": 98, "3206761": 98, "3210272": 98, "3211045": 98, "3217267": 98, "3217287": 98, "3222955": 98, "3223159": 98, "3228104": 98, "3229430": 98, "3233286": 98, "3233390": 98, "3256077": 98, "3256688": 98, "3256764": 98, "3258999": 98, "3259089": 98, "3259796": 98, "3266762": 98, "3267093": 98, "3269112": 98, "3269396": 98, "3280883": 98, "3287335": 98, "3293171": 98, "3293183": 98, "3294356": 98, "3299569": 98, "3300516": 98, "3301367": 98, "3307935": 98, "3317977": 98, "3318584": 98, "3318829": 98, "3330673": 98, "3338366": 98, "3349914": 98, "3352433": 98, "3359487": 98, "3362326": 98, "3363492": 98, "3364026": 98, "3365857": 98, "3367639": 98, "3368550": 98, "3368851": 98, "3371444": 98, "3371768": 98, "3373834": 98, "3374775": 98, "3407189": 98, "3410012": 98, "3416368": 98, "3419599": 98, "3424211": 98, "3427147": 98, "3438543": 98, "3439098": 98, "3449175": 98, "3449325": 98, "3462174": 98, "3462257": 98, "3478517": 98, "3479352": 98, "3481715": 98, "3481996": 98, "3484500": 98, "3487803": 98, "3499706": 98, "3502735": 98, "3512733": 98, "3516449": 98, "3529962": 98, "3533884": 98, "3546910": 98, "3547070": 98, "3559807": 98, "3559933": 98, "3562851": 98, "3564039": 98, "3600735": 98, "3601290": 98, "3602908": 98, "3603337": 98, "3605744": 98, "3606406": 98, "3608345": 98, "3608517": 98, "3611844": 98, "3611941": 98, "3618317": 98, "3618888": 98, "3619693": 98, "3620536": 98, "3625570": 98, "3628245": 98, "3636485": 98, "3637352": 98, "3638824": 98, "3638851": 98, "3638924": 98, "3639647": 98, "3641347": 98, "3641650": 98, "3647082": 98, "3651235": 98, "3652702": 98, "3653996": 98, "3655265": 98, "3655412": 98, "3662183": 98, "3666489": 98, "3671700": 98, "3680179": 98, "3680927": 98, "3682889": 98, "3684086": 98, "3684780": 98, "3694021": 98, "3694295": 98, "3697551": 98, "3697595": 98, "3697616": 98, "3698101": 98, "3699300": 98, "3703541": 98, "3704956": 98, "3706029": 98, "3709435": 98, "3710089": 98, "3713201": 98, "3713448": 98, "3721157": 98, "3727026": 98, "3731179": 98, "3731351": 98, "3740485": 98, "3741450": 98, "3742647": 98, "3745501": 98, "3745522": 98, "3745588": 98, "3748145": 98, "3748522": 98, "3753958": 98, "3755487": 98, "3759039": 98, "3769671": 98, "3774500": 98, "3774633": 98, "3777948": 98, "3778088": 98, "3781690": 98, "3782117": 98, "3783294": 98, "3783906": 98, "3784226": 98, "3786587": 98, "3787496": 98, "3788035": 98, "3788896": 98, "3789308": 98, "3792797": 98, "3794555": 98, "3798068": 98, "3798395": 98, "3805739": 98, "3807455": 98, "3816809": 98, "3818073": 98, "3821496": 98, "3821655": 98, "3821990": 98, "3822882": 98, "3826514": 98, "3827218": 98, "3828126": 98, "3828238": 98, "3829327": 98, "3829514": 98, "3837807": 98, "3838236": 98, "3839673": 98, "3839800": 98, "3841561": 98, "3853846": 98, "3859292": 98, "3859368": 98, "3862733": 98, "3862832": 98, "3865938": 98, "3867540": 98, "3869109": 98, "3869213": 98, "3870114": 98, "3870641": 98, "3871267": 98, "3871473": 98, "3873402": 98, "3873443": 98, "3876716": 98, "3877062": 98, "3880743": 98, "3881815": 98, "3891598": 98, "3892331": 98, "3895271": 98, "3895763": 98, "3897397": 98, "3898044": 98, "3899802": 98, "3900406": 98, "3905208": 98, "3908746": 98, "3910544": 98, "3910711": 98, "3912482": 98, "3912634": 98, "3915308": 98, "3916063": 98, "3916391": 98, "3917796": 98, "3925162": 98, "3925433": 98, "3927891": 98, "3930813": 98, "3931740": 98, "3932209": 98, "3934813": 98, "3935271": 98, "3953991": 98, "3956074": 98, "3956137": 98, "3960967": 98, "3962249": 98, "3963087": 98, "3964177": 98, "3964369": 98, "3965314": 98, "3965737": 98, "3967279": 98, "3968109": 98, "3970010": 98, "3970373": 98, "3971302": 98, "3972161": 98, "3973703": 98, "3974058": 98, "3977424": 98, "3978750": 98, "3979538": 98, "3983182": 98, "3986581": 98, "3987939": 98, "3988699": 98, "3995724": 98, "3996402": 98, "3999299": 98, "4031739": 98, "4035701": 98, "4090885": 98, "4094159": 98, "4098330": 98, "4103697": 98, "4108167": 98, "4109406": 98, "4112385": 98, "4114860": 98, "4116370": 98, "4116850": 98, "4118164": 98, "4120406": 98, "4123036": 98, "4123480": 98, "4124764": 98, "4126055": 98, "4129310": 98, "4129564": 98, "4132224": 98, "4132361": 98, "4137074": 98, "4137160": 98, "4138952": 98, "4139510": 98, "4144583": 98, "4145314": 98, "4147121": 98, "4147272": 98, "4148292": 98, "4148831": 98, "4149415": 98, "4149980": 98, "4150638": 98, "4151102": 98, "4151761": 98, "4153965": 98, "4154452": 98, "4155541": 98, "4158718": 98, "4159013": 98, "4161113": 98, "4162034": 98, "4165025": 98, "4165074": 98, "4167056": 98, "4168983": 98, "4171589": 98, "4172203": 98, "4172315": 98, "4172437": 98, "4173624": 98, "4173757": 98, "4174774": 98, "4175318": 98, "4177271": 98, "4177304": 98, "4178447": 98, "4178811": 98, "4182129": 98, "4182220": 98, "4184992": 98, "4185173": 98, "4189956": 98, "4190157": 98, "4193129": 98, "4193240": 98, "4203303": 98, "4203457": 98, "4210341": 98, "4210978": 98, "4215768": 98, "4229569": 98, "4236115": 98, "4236953": 98, "4238619": 98, "4239090": 98, "4242727": 98, "4242820": 98, "4247582": 98, "4247752": 98, "4249415": 98, "4249492": 98, "4253170": 98, "4253241": 98, "4254139": 98, "4254196": 98, "4264699": 98, "4265106": 98, "4267967": 98, "4268069": 98, "4270287": 98, "4270665": 98, "4273336": 98, "4273895": 98, "4274742": 98, "4275887": 98, "4276967": 98, "4277829": 98, "4279622": 98, "4295023": 98, "4296741": 98, "4298183": 98, "4302245": 98, "4303929": 98, "4308244": 98, "4311815": 98, "4311888": 98, "4318032": 98, "4359092": 98, "4359206": 98, "4362548": 98, "4363274": 98, "4364077": 98, "4364902": 98, "4367907": 98, "4368088": 98, "4372138": 98, "4372254": 98, "4373018": 98, "4373655": 98, "4381814": 98, "4382564": 98, "4385218": 98, "4386784": 98, "4401907": 98, "4401955": 98, "4404611": 98, "4409688": 98, "4426188": 98, "4427023": 98, "4428042": 98, "4428448": 98, "4444349": 98, "4444718": 98, "4448461": 98, "4448584": 98, "4449774": 98, "4449878": 98, "4450927": 98, "4451193": 98, "4456805": 98, "4457374": 98, "4469460": 98, "4479638": 98, "4479659": 98, "4481197": 98, "4511126": 98, "4511437": 98, "4516089": 98, "4517259": 98, "4518491": 98, "4521534": 98, "4522813": 98, "4525960": 98, "4534805": 98, "4537446": 98, "4539729": 98, "4539888": 98, "4540026": 98, "4549680": 98, "4552785": 98, "4552884": 98, "4553121": 98, "4554125": 98, "4555322": 98, "4555342": 98, "4556826": 98, "4557652": 98, "4563759": 98, "4564034": 98, "4565982": 98, "4566429": 98, "4568398": 98, "4568764": 98, "4570027": 98, "4571191": 98, "4575038": 98, "4575100": 98, "4577204": 98, "4578605": 98, "4579740": 98, "4579963": 98, "4580601": 98, "4580707": 98, "4583810": 98, "4583912": 98, "4584505": 98, "4584767": 98, "4584932": 98, "4585114": 98, "4586176": 98, "4586272": 98, "4589450": 98, "4589599": 98, "4589899": 98, "4597922": 98, "4602666": 98, "4603216": 98, "4604196": 98, "4604402": 98, "4605380": 98, "4605654": 98, "4633347": 98, "4634102": 98, "4635615": 98, "4635742": 98, "4637328": 98, "4637431": 98, "4640882": 98, "4641002": 98, "4644069": 98, "4644641": 98, "4645659": 98, "4645661": 98, "4646963": 98, "4647423": 98, "4650777": 98, "4652144": 98, "4652906": 98, "4653466": 98, "4660153": 98, "4660520": 98, "4660713": 98, "4660827": 98, "4662445": 98, "4664507": 98, "4665348": 98, "4665932": 98, "4671738": 98, "4675132": 98, "4679448": 98, "4679664": 98, "4682856": 98, "4683181": 98, "4683865": 98, "4684315": 98, "4684414": 98, "4685864": 98, "4698575": 98, "4699609": 98, "4702866": 98, "4704603": 98, "4705885": 98, "4706575": 98, "4708883": 98, "4709258": 98, "4710712": 98, "4711413": 98, "4713576": 98, "4714319": 98, "4715483": 98, "4716969": 98, "4719609": 98, "4719757": 98, "4720658": 98, "4721130": 98, "4723982": 98, "4724064": 98, "4726771": 98, "4727279": 98, "4730366": 98, "4731605": 98, "4738102": 98, "4738170": 98, "4744321": 98, "4745314": 98, "4745455": 98, "4746463": 98, "4746903": 98, "4746969": 98, "4747116": 98, "4747623": 98, "4759603": 98, "4759819": 98, "4761321": 98, "4761930": 98, "4762359": 98, "4763195": 98, "4765313": 98, "4766132": 98, "4767657": 98, "4768330": 98, "4769063": 98, "4770291": 98, "4773070": 98, "4773818": 98, "4788358": 98, "4789189": 98, "4789592": 98, "4790291": 98, "4790642": 98, "4790643": 98, "4792483": 98, "4799980": 98, "4804396": 98, "4805606": 98, "4809674": 98, "4821928": 98, "4826639": 98, "4827071": 98, "4829791": 98, "4830134": 98, "4835622": 98, "4836186": 98, "4847972": 98, "4848424": 98, "4867825": 98, "4868170": 98, "4868280": 98, "4876142": 98, "4876275": 98, "4884902": 98, "4895516": 98, "4895920": 98, "4900974": 98, "4901917": 98, "4903264": 98, "4903451": 98, "4905173": 98, "4906838": 98, "4914047": 98, "4918371": 98, "4926486": 98, "4926634": 98, "4932178": 98, "4934258": 98, "4950546": 98, "4950582": 98, "4951481": 98, "4951570": 98, "4957667": 98, "4957774": 98, "4958309": 98, "4959216": 98, "4961526": 98, "4962450": 98, "4964390": 98, "4964666": 98, "4967089": 98, "4967993": 98, "4972226": 98, "4975374": 98, "4975508": 98, "4980306": 98, "4983959": 98, "4984087": 98, "4986739": 98, "4986888": 98, "4989454": 98, "4989547": 98, "4994675": 98, "4996834": 98, "5003202": 98, "5003449": 98, "5006057": 98, "5006705": 98, "5008050": 98, "5008769": 98, "5013624": 98, "5014350": 98, "5016260": 98, "5018782": 98, "5020358": 98, "5020779": 98, "5023210": 98, "5027154": 98, "5041160": 98, "5041369": 98, "5042092": 98, "5042101": 98, "5043064": 98, "5044197": 98, "5045720": 98, "5046393": 98, "5048003": 98, "5050039": 98, "5055000": 98, "5055685": 98, "5056039": 98, "5058250": 98, "5068831": 98, "5073578": 98, "5079303": 98, "5079909": 98, "5082279": 98, "5084897": 98, "5085028": 98, "5086309": 98, "5093903": 98, "5096597": 98, "5100707": 98, "5100750": 98, "5103476": 98, "5103580": 98, "5104911": 98, "5104968": 98, "5105103": 98, "5105109": 98, "5106048": 98, "5106203": 98, "5107625": 98, "5107842": 98, "5113752": 98, "5114121": 98, "5118852": 98, "5119215": 98, "5127201": 98, "5127827": 98, "5129611": 98, "5129744": 98, "5131065": 98, "5131519": 98, "5134105": 98, "5134738": 98, "5137971": 98, "5138249": 98, "5139679": 98, "5141672": 98, "5149226": 98, "5154513": 98, "5158500": 98, "5158510": 98, "5162232": 98, "5162601": 98, "5164884": 98, "5165147": 98, "5176654": 98, "5176828": 98, "5186236": 98, "5186925": 98, "5189240": 98, "5190137": 98, "5195243": 98, "5196072": 98, "5203504": 98, "5204529": 98, "5219815": 98, "5230548": 98, "5241914": 98, "5244282": 98, "5245402": 98, "5245742": 98, "5263424": 98, "5263693": 98, "5268380": 98, "5268418": 98, "5269485": 98, "5269544": 98, "5270941": 98, "5271264": 98, "5272041": 98, "5272845": 98, "5274270": 98, "5274692": 98, "5278708": 98, "5278802": 98, "5281519": 98, "5282082": 98, "5283944": 98, "5284025": 98, "5291604": 98, "5292778": 98, "5292837": 98, "5298754": 98, "5300331": 98, "5300851": 98, "5317392": 98, "5317490": 98, "5318124": 98, "5318219": 98, "5319301": 98, "5319711": 98, "5321151": 98, "5325548": 98, "5330230": 98, "5330474": 98, "5330495": 98, "5330577": 98, "5332169": 98, "5332248": 98, "5332780": 98, "5333778": 98, "5334919": 98, "5335191": 98, "5338027": 98, "5338921": 98, "5340266": 98, "5340828": 98, "5342045": 98, "5342179": 98, "5344724": 98, "5344871": 98, "5345013": 98, "5345275": 98, "5345425": 98, "5345926": 98, "5353774": 98, "5354180": 98, "5357029": 98, "5357540": 98, "5357785": 98, "5358145": 98, "5358293": 98, "5358368": 98, "5358507": 98, "5358511": 98, "5365174": 98, "5365262": 98, "5366880": 98, "5366943": 98, "5367986": 98, "5368477": 98, "5372643": 98, "5372850": 98, "5384508": 98, "5388899": 98, "5388920": 98, "5401756": 98, "5412400": 98, "5412496": 98, "5412640": 98, "5412840": 98, "5415629": 98, "5416652": 98, "5420731": 98, "5421309": 98, "5428457": 98, "5428532": 98, "5429908": 98, "5429931": 98, "5430054": 98, "5430156": 98, "5431450": 98, "5431491": 98, "5431512": 98, "5432196": 98, "5433051": 98, "5433904": 98, "5443026": 98, "5443877": 98, "5446855": 98, "5450435": 98, "5450456": 98, "5452326": 98, "5459523": 98, "5460530": 98, "5460551": 98, "5463116": 98, "5469639": 98, "5472324": 98, "5479438": 98, "5479487": 98, "5484661": 98, "5484778": 98, "5486354": 98, "5486718": 98, "5487150": 98, "5487365": 98, "5488241": 98, "5488339": 98, "5490631": 98, "5491423": 98, "5493263": 98, "5494416": 98, "5494474": 98, "5497678": 98, "5507023": 98, "5507115": 98, "5509177": 98, "5509466": 98, "5511705": 98, "5512047": 98, "5514556": 98, "5514650": 98, "5516025": 98, "5516069": 98, "5518567": 98, "5518809": 98, "5518898": 98, "5520388": 98, "5529763": 98, "5530613": 98, "5534649": 98, "5540543": 98, "5540564": 98, "5546117": 98, "5561689": 98, "5563826": 98, "5566269": 98, "5566342": 98, "5570085": 98, "5571795": 98, "5572949": 98, "5573213": 98, "5576749": 98, "5577069": 98, "5579194": 98, "5579665": 98, "5581993": 98, "5582095": 98, "5607529": 98, "5607825": 98, "5608841": 98, "5609340": 98, "5610270": 98, "5610373": 98, "5616402": 98, "5616597": 98, "5618551": 98, "5619568": 98, "5620669": 98, "5620778": 98, "5624475": 98, "5624600": 98, "5626288": 98, "5627812": 98, "5637621": 98, "5643309": 98, "5644057": 98, "5644728": 98, "5649656": 98, "5649755": 98, "5653648": 98, "5653827": 98, "5655857": 98, "5655949": 98, "5658712": 98, "5659444": 98, "5661273": 98, "5662142": 98, "5669737": 98, "5669944": 98, "5673352": 98, "5674303": 98, "5676609": 98, "5676826": 98, "5677646": 98, "5678637": 98, "5691503": 98, "5692263": 98, "5697500": 98, "5702155": 98, "5705553": 98, "5707044": 98, "5707124": 98, "5716573": 98, "5725809": 98, "5726307": 98, "5729310": 98, "5729792": 98, "5735253": 98, "5735549": 98, "5739421": 98, "5739478": 98, "5740283": 98, "5741185": 98, "5741622": 98, "5741867": 98, "5743571": 98, "5744179": 98, "5745617": 98, "5746632": 98, "5754306": 98, "5754311": 98, "5760799": 98, "5760895": 98, "5762435": 98, "5764029": 98, "5768450": 98, "5768918": 98, "5773627": 98, "5774584": 98, "5775610": 98, "5776092": 98, "5788611": 98, "5788633": 98, "5791752": 98, "5792320": 98, "5795114": 98, "5795399": 98, "5803734": 98, "5803955": 98, "5807291": 98, "5807708": 98, "5818132": 98, "5818473": 98, "5821134": 98, "5822976": 98, "5826148": 98, "5829390": 98, "5837392": 98, "5838094": 98, "5838850": 98, "5840281": 98, "5841940": 98, "5842708": 98, "5844050": 98, "5844835": 98, "5846466": 98, "5847476": 98, "5849424": 98, "5850033": 98, "5851893": 98, "5852022": 98, "5852962": 98, "5854198": 98, "5855040": 98, "5857544": 98, "5862557": 98, "5862643": 98, "5866431": 98, "5866561": 98, "5868139": 98, "5868265": 98, "5869954": 98, "5871393": 98, "5871512": 98, "5872173": 98, "5874343": 98, "5874415": 98, "5878958": 98, "5879138": 98, "5879554": 98, "5883857": 98, "5883989": 98, "5886612": 98, "5895973": 98, "5896617": 98, "5897405": 98, "5898302": 98, "5904695": 98, "5906657": 98, "5918157": 98, "5918269": 98, "5918445": 98, "5919054": 98, "5936957": 98, "5937194": 98, "5938881": 98, "5942389": 98, "5947640": 98, "5949395": 98, "5949448": 98, "5949858": 98, "5957013": 98, "5957440": 98, "5958457": 98, "5959007": 98, "5959532": 98, "5962952": 98, "5964183": 98, "5964400": 98, "5967211": 98, "5967246": 98, "5973326": 98, "5981765": 98, "5985871": 98, "5986487": 98, "5990589": 98, "5990740": 98, "6003379": 98, "6004656": 98, "6007595": 98, "6008136": 98, "6009524": 98, "6009781": 98, "6011586": 98, "6011976": 98, "6026877": 98, "6027193": 98, "6028370": 98, "6028485": 98, "6033458": 98, "6035447": 98, "6037884": 98, "6038402": 98, "6041267": 98, "6041671": 98, "6046018": 98, "6046787": 98, "6050451": 98, "6051144": 98, "6051282": 98, "6053784": 98, "6055821": 98, "6056130": 98, "6058424": 98, "6058547": 98, "6060953": 98, "6061731": 98, "6068040": 98, "6068525": 98, "6070122": 98, "6070231": 98, "6078896": 98, "6081781": 98, "6086006": 98, "6087429": 98, "6087729": 98, "6090008": 98, "6091385": 98, "6092685": 98, "6092811": 98, "6093306": 98, "6094437": 98, "6095059": 98, "6096589": 98, "6097578": 98, "6097791": 98, "6098926": 98, "6099731": 98, "6100034": 98, "6100055": 98, "6100260": 98, "6101789": 98, "6102066": 98, "6102396": 98, "6104804": 98, "6105754": 98, "6105758": 98, "6105820": 98, "6105862": 98, "6107715": 98, "6107816": 98, "6109655": 98, "6110133": 98, "6114549": 98, "6123119": 98, "6126875": 98, "6133006": 98, "6133129": 98, "6133244": 98, "6137977": 98, "6138500": 98, "6139211": 98, "6139420": 98, "6140883": 98, "6141352": 98, "6144375": 98, "6145454": 98, "6147102": 98, "6148141": 98, "6148836": 98, "6149196": 98, "6150491": 98, "6153644": 98, "6153753": 98, "6154074": 98, "6157440": 98, "6157447": 98, "6159264": 98, "6159880": 98, "6161665": 98, "6162290": 98, "6162387": 98, "6163379": 98, "6163599": 98, "6164190": 98, "6164264": 98, "6164718": 98, "6166539": 98, "6167945": 98, "6168642": 98, "6169083": 98, "6169195": 98, "6171594": 98, "6171658": 98, "6172661": 98, "6172796": 98, "6172998": 98, "6173139": 98, "6174994": 98, "6175138": 98, "6175194": 98, "6180840": 98, "6181313": 98, "6183856": 98, "6184071": 98, "6185368": 98, "6185461": 98, "6194897": 98, "6196173": 98, "6196194": 98, "6199672": 98, "6200193": 98, "6200797": 98, "6202076": 98, "6203973": 98, "6206927": 98, "6206954": 98, "6211155": 98, "6211269": 98, "6211885": 98, "6211980": 98, "6219912": 98, "6220092": 98, "6220764": 98, "6221244": 98, "6223115": 98, "6224877": 98, "6226099": 98, "6231495": 98, "6232129": 98, "6232776": 98, "6234280": 98, "6234707": 98, "6235391": 98, "6236133": 98, "6250197": 98, "6250474": 98, "6252876": 98, "6253081": 98, "6253584": 98, "6253700": 98, "6254947": 98, "6255034": 98, "6257620": 98, "6260248": 98, "6264520": 98, "6264564": 98, "6264709": 98, "6265677": 98, "6269069": 98, "6269419": 98, "6271533": 98, "6271865": 98, "6273785": 98, "6274529": 98, "6275291": 98, "6280455": 98, "6280583": 98, "6283495": 98, "6283672": 98, "6284972": 98, "6289340": 98, "6289432": 98, "6294068": 98, "6295066": 98, "6297636": 98, "6297766": 98, "6299729": 98, "6300492": 98, "6302298": 98, "6302412": 98, "6304296": 98, "6304915": 98, "6306384": 98, "6307302": 98, "6308636": 98, "6309113": 98, "6310808": 98, "6311228": 98, "6312416": 98, "6312749": 98, "6314624": 98, "6315232": 98, "6317262": 98, "6317696": 98, "6324019": 98, "6326620": 98, "6327968": 98, "6329535": 98, "6330181": 98, "6342223": 98, "6358411": 98, "6358584": 98, "6360457": 98, "6360837": 98, "6364172": 98, "6365030": 98, "6366224": 98, "6366330": 98, "6368078": 98, "6368269": 98, "6369596": 98, "6369747": 98, "6394350": 98, "6402648": 98, "6402806": 98, "6404586": 98, "6405705": 98, "6405856": 98, "6406936": 98, "6407525": 98, "6416812": 98, "6418564": 98, "6418840": 98, "6420659": 98, "6421889": 98, "6422060": 98, "6428942": 98, "6429526": 98, "6431586": 98, "6432138": 98, "6432212": 98, "6436111": 98, "6441192": 98, "6441643": 98, "6446465": 98, "6447303": 98, "6456984": 98, "6457281": 98, "6458479": 98, "6459476": 98, "6459596": 98, "6460877": 98, "6467519": 98, "6468112": 98, "6471922": 98, "6473206": 98, "6488977": 98, "6490715": 98, "6496109": 98, "6497435": 98, "6499560": 98, "6499981": 98, "6501410": 98, "6502166": 98, "6503909": 98, "6507893": 98, "6513830": 98, "6513927": 98, "6517507": 98, "6517528": 98, "6520918": 98, "6521784": 98, "6523442": 98, "6525044": 98, "6528689": 98, "6529165": 98, "6530099": 98, "6530130": 98, "6531963": 98, "6531982": 98, "6533071": 98, "6534083": 98, "6541062": 98, "6542115": 98, "6544966": 98, "6545109": 98, "6546593": 98, "6546614": 98, "6550436": 98, "6550535": 98, "6552625": 98, "6552833": 98, "6553379": 98, "6553480": 98, "6554290": 98, "6554503": 98, "6554709": 98, "6554728": 98, "6558665": 98, "6558693": 98, "6562346": 98, "6562648": 98, "6562669": 98, "6562698": 98, "6564451": 98, "6564748": 98, "6565852": 98, "6566124": 98, "6568954": 98, "6569556": 98, "6572600": 98, "6574003": 98, "6587902": 98, "6592081": 98, "6592231": 98, "6592468": 98, "6598927": 98, "6598981": 98, "6607520": 98, "6608340": 98, "6608517": 98, "6612187": 98, "6615990": 98, "6616303": 98, "6618560": 98, "6620664": 98, "6621295": 98, "6621623": 98, "6624918": 98, "6625065": 98, "6626788": 98, "6627044": 98, "6627917": 98, "6629568": 98, "6637429": 98, "6640650": 98, "6642636": 98, "6642720": 98, "6643509": 98, "6651219": 98, "6655430": 98, "6655607": 98, "6658371": 98, "6659271": 98, "6659356": 98, "6660435": 98, "6662315": 98, "6663160": 98, "6673830": 98, "6682299": 98, "6683740": 98, "6686723": 98, "6686776": 98, "6687348": 98, "6691671": 98, "6695367": 98, "6695424": 98, "6705545": 98, "6706404": 98, "6706756": 98, "6708919": 98, "6710215": 98, "6710543": 98, "6710849": 98, "6712431": 98, "6715966": 98, "6716990": 98, "6717818": 98, "6723059": 98, "6724866": 98, "6729376": 98, "6730056": 98, "6730959": 98, "6731266": 98, "6732276": 98, "6734027": 98, "6736161": 98, "6736679": 98, "6741176": 98, "6741275": 98, "6741876": 98, "6741983": 98, "6745329": 98, "6745990": 98, "6753031": 98, "6753218": 98, "6756348": 98, "6757174": 98, "6757233": 98, "6757762": 98, "6758178": 98, "6758180": 98, "6760179": 98, "6760415": 98, "6767797": 98, "6768384": 98, "6768545": 98, "6773972": 98, "6780151": 98, "6780798": 98, "6784397": 98, "6784867": 98, "6787139": 98, "6788031": 98, "6789002": 98, "6789038": 98, "6789738": 98, "6790697": 98, "6790838": 98, "6790977": 98, "6798161": 98, "6798226": 98, "6799608": 98, "6800385": 98, "6801973": 98, "6802199": 98, "6810571": 98, "6812659": 98, "6814249": 98, "6814510": 98, "6834699": 98, "6835505": 98, "6835631": 98, "6836468": 98, "6838140": 98, "6838353": 98, "6843343": 98, "6843588": 98, "6845142": 98, "6845176": 98, "6846959": 98, "6847133": 98, "6847308": 98, "6847510": 98, "6849923": 98, "6850408": 98, "6851253": 98, "6851371": 98, "6854140": 98, "6854477": 98, "6857536": 98, "6860394": 98, "6861997": 98, "6862312": 98, "6870951": 98, "6871133": 98, "6872142": 98, "6872606": 98, "6873757": 98, "6874311": 98, "6877038": 98, "6877058": 98, "6892143": 98, "6893302": 98, "6893447": 98, "6897734": 98, "6900619": 98, "6900948": 98, "6913579": 98, "6915042": 98, "6916593": 98, "6916765": 98, "6917561": 98, "6917699": 98, "6922973": 98, "6923068": 98, "6923693": 98, "6924281": 98, "6929665": 98, "6931137": 98, "6936928": 98, "6937463": 98, "6939672": 98, "6940214": 98, "6943077": 98, "6943175": 98, "6945358": 98, "6945597": 98, "6950499": 98, "6951134": 98, "6954252": 98, "6954413": 98, "6961139": 98, "6967669": 98, "6970145": 98, "6970362": 98, "6971888": 98, "6972156": 98, "6973696": 98, "6974557": 98, "6977071": 98, "6979628": 98, "6979773": 98, "6989066": 98, "6999706": 98, "7002869": 98, "7003481": 98, "7005442": 98, "7015223": 98, "7015907": 98, "7020797": 98, "7021294": 98, "7021584": 98, "7021971": 98, "7029076": 98, "7029887": 98, "7030001": 98, "7033810": 98, "7033950": 98, "7034158": 98, "7034366": 98, "7035350": 98, "7035371": 98, "7038899": 98, "7048832": 98, "7050041": 98, "7051712": 98, "7053687": 98, "7056385": 98, "7057191": 98, "7059351": 98, "7059891": 98, "7061254": 98, "7065251": 98, "7069186": 98, "7069439": 98, "7074721": 98, "7075917": 98, "7082040": 98, "7088029": 98, "7090062": 98, "7090739": 98, "7094723": 98, "7095485": 98, "7098400": 98, "7098648": 98, "7099866": 98, "7100002": 98, "7101775": 98, "7102215": 98, "7103363": 98, "7103811": 98, "7104136": 98, "7105301": 98, "7106926": 98, "7110233": 98, "7112443": 98, "7112866": 98, "7115055": 98, "7116328": 98, "7116655": 98, "7116734": 98, "7116830": 98, "7117807": 98, "7121545": 98, "7121656": 98, "7122194": 98, "7122613": 98, "7128246": 98, "7132746": 98, "7134370": 98, "7134737": 98, "7147578": 98, "7149889": 98, "7151844": 98, "7152461": 98, "7156786": 98, "7159713": 98, "7160917": 98, "7160935": 98, "7166523": 98, "7166917": 98, "7169089": 98, "7169996": 98, "7172192": 98, "7172462": 98, "7174124": 98, "7175509": 98, "7176442": 98, "7176695": 98, "7176842": 98, "7177903": 98, "7179430": 98, "7181233": 98, "7181382": 98, "7183052": 98, "7185650": 98, "7185694": 98, "7188298": 98, "7188464": 98, "7190581": 98, "7190787": 98, "7193920": 98, "7201775": 98, "7201829": 98, "7202204": 98, "7203533": 98, "7204540": 98, "7207717": 98, "7208021": 98, "7209866": 98, "7210270": 98, "7212522": 98, "7214744": 98, "7221299": 98, "7222290": 98, "7224481": 98, "7224655": 98, "7227765": 98, "7227788": 98, "7233121": 98, "7233392": 98, "7234501": 98, "7235351": 98, "7235372": 98, "7235383": 98, "7238792": 98, "7238992": 98, "7243967": 98, "7244936": 98, "7246811": 98, "7246903": 98, "7248689": 98, "7248826": 98, "7251282": 98, "7251940": 98, "7255223": 98, "7255379": 98, "7258700": 98, "7258945": 98, "7267057": 98, "7267094": 98, "7267226": 98, "7269118": 98, "7273008": 98, "7274281": 98, "7278573": 98, "7278734": 98, "7279623": 98, "7279665": 98, "7282924": 98, "7282963": 98, "7283762": 98, "7283901": 98, "7285772": 98, "7286300": 98, "7286321": 98, "7290711": 98, "7290859": 98, "7290945": 98, "7291013": 98, "7291271": 98, "7292991": 98, "7294037": 98, "7299983": 98, "7300060": 98, "7300913": 98, "7300998": 98, "7302975": 98, "7303299": 98, "7304690": 98, "7304917": 98, "7307012": 98, "7307116": 98, "7308626": 98, "7308642": 98, "7311915": 98, "7312796": 98, "7313525": 98, "7313624": 98, "7314279": 98, "7317645": 98, "7321085": 98, "7322264": 98, "7324415": 98, "7327967": 98, "7327988": 98, "7333034": 98, "7334533": 98, "7339231": 98, "7352235": 98, "7352414": 98, "7353703": 98, "7354490": 98, "7359100": 98, "7360225": 98, "7371534": 98, "7372295": 98, "7372529": 98, "7376603": 98, "7383197": 98, "7384397": 98, "7388795": 98, "7389053": 98, "7395918": 98, "7398709": 98, "7401023": 98, "7401131": 98, "7402761": 98, "7403290": 98, "7404374": 98, "7404949": 98, "7408511": 98, "7422784": 98, "7454116": 98, "7454659": 98, "7456953": 98, "7457151": 98, "7460756": 98, "7460855": 98, "7466429": 98, "7472619": 98, "7476946": 98, "7480107": 98, "7483505": 98, "7484061": 98, "7486293": 98, "7486647": 98, "7494736": 98, "7495435": 98, "7505642": 98, "7505950": 98, "7506693": 98, "7509568": 98, "7513728": 98, "7514075": 98, "7515126": 98, "7518821": 98, "7519001": 98, "7519239": 98, "7519339": 98, "7522115": 98, "7526716": 98, "7527223": 98, "7531715": 98, "7532046": 98, "7542159": 98, "7544617": 98, "7544730": 98, "7553843": 98, "7554553": 98, "7554854": 98, "7562349": 98, "7564583": 98, "7567719": 98, "7567826": 98, "7570553": 98, "7574239": 98, "7580833": 98, "7580943": 98, "7581628": 98, "7582105": 98, "7583333": 98, "7583809": 98, "7588367": 98, "7588579": 98, "7591206": 98, "7591287": 98, "7595372": 98, "7595775": 98, "7602221": 98, "7602306": 98, "7608245": 98, "7611208": 98, "7611315": 98, "7614175": 98, "7634143": 98, "7634491": 98, "7639785": 98, "7640347": 98, "7641767": 98, "7641884": 98, "7643328": 98, "7643430": 98, "7649777": 98, "7650340": 98, "7656338": 98, "7656453": 98, "7656474": 98, "7656977": 98, "7658291": 98, "7667728": 98, "7669900": 98, "7670154": 98, "7672714": 98, "7674728": 98, "7676402": 98, "7676667": 98, "7679046": 98, "7679447": 98, "7683045": 98, "7683340": 98, "7694210": 98, "7694319": 98, "7695232": 98, "7695680": 98, "7698222": 98, "7698300": 98, "7699284": 98, "7699681": 98, "7700958": 98, "7701176": 98, "7701348": 98, "7701364": 98, "7702053": 98, "7702428": 98, "7718639": 98, "7718881": 98, "7718958": 98, "7722083": 98, "7723116": 98, "7723755": 98, "7724656": 98, "7725018": 98, "7727112": 98, "7727256": 98, "7729092": 98, "7729183": 98, "7729878": 98, "7731120": 98, "7737995": 98, "7738670": 98, "7738691": 98, "7755777": 98, "7756353": 98, "7766531": 98, "7772231": 98, "7773415": 98, "7777655": 98, "7777669": 98, "7778011": 98, "7779418": 98, "7785798": 98, "7785877": 98, "7793614": 98, "7798812": 98, "7798947": 98, "7800454": 98, "7801822": 98, "7813761": 98, "7819413": 98, "7819578": 98, "7820478": 98, "7820830": 98, "7826378": 98, "7826441": 98, "7831629": 98, "7832662": 98, "7835453": 98, "7835812": 98, "7836967": 98, "7837062": 98, "7840022": 98, "7840438": 98, "7853640": 98, "7853749": 98, "7859417": 98, "7859939": 98, "7860105": 98, "7862528": 98, "7863569": 98, "7866135": 98, "7875554": 98, "7884188": 98, "7885769": 98, "7887213": 98, "7887335": 98, "7887370": 98, "7887467": 98, "7889309": 98, "7894864": 98, "7896124": 98, "7897725": 98, "7898433": 98, "7903334": 98, "7906825": 98, "7918341": 98, "7918437": 98, "7926503": 98, "7926622": 98, "7934577": 98, "7936263": 98, "7938487": 98, "7938559": 98, "7940728": 98, "7940892": 98, "7941994": 98, "7942718": 98, "7945551": 98, "7946192": 98, "7951593": 98, "7951654": 98, "7952140": 98, "7952462": 98, "7952648": 98, "7952884": 98, "7953125": 98, "7954819": 98, "7955081": 98, "7955976": 98, "7958474": 98, "7958646": 98, "7960158": 98, "7960266": 98, "7961474": 98, "7962051": 98, "7972443": 98, "7972472": 98, "7977078": 98, "7980230": 98, "7984758": 98, "7984888": 98, "7993161": 98, "7993294": 98, "7993579": 98, "7995733": 98, "8003179": 98, "8004132": 98, "8004187": 98, "8005126": 98, "8006448": 98, "8006634": 98, "8009116": 98, "8010206": 98, "8010366": 98, "8014405": 98, "8024422": 98, "8024879": 98, "8026525": 98, "8026600": 98, "8028752": 98, "8028816": 98, "8028996": 98, "8030958": 98, "8035696": 98, "8035797": 98, "8039831": 98, "8039878": 98, "8040526": 98, "8040798": 98, "8043278": 98, "8043343": 98, "8044175": 98, "8046556": 98, "8046749": 98, "8047344": 98, "8049340": 98, "8050036": 98, "8057029": 98, "8059803": 98, "8060478": 98, "8060788": 98, "8061967": 98, "8062006": 98, "8081671": 98, "8083575": 98, "8095610": 98, "8095739": 98, "8098444": 98, "8103595": 98, "8109228": 98, "8109745": 98, "8119316": 98, "8125800": 98, "8130039": 98, "8134114": 98, "8135051": 98, "8135839": 98, "8135955": 98, "8137255": 98, "8137276": 98, "8138867": 98, "8138888": 98, "8139467": 98, "8142537": 98, "8147426": 98, "8149651": 98, "8150354": 98, "8151371": 98, "8151861": 98, "8159798": 98, "8160467": 98, "8168711": 98, "8172720": 98, "8173491": 98, "8174887": 98, "8210703": 98, "8210901": 98, "8218324": 98, "8219997": 98, "8223954": 98, "8224473": 98, "8226297": 98, "8226493": 98, "8240637": 98, "8242133": 98, "8243572": 98, "8243693": 98, "8244963": 98, "8245504": 98, "8250948": 98, "8253455": 98, "8254926": 98, "8255347": 98, "8258939": 98, "8259436": 98, "8259498": 98, "8262038": 98, "8268990": 98, "8270303": 98, "8288124": 98, "8288948": 98, "8291005": 98, "8291298": 98, "8293640": 98, "8294873": 98, "8307566": 98, "8307642": 98, "8307733": 98, "8312099": 98, "8312120": 98, "8313120": 98, "8315432": 98, "8315902": 98, "8318250": 98, "8318346": 98, "8323987": 98, "8324285": 98, "8328859": 98, "8329061": 98, "8329647": 98, "8330449": 98, "8332784": 98, "8333081": 98, "8336727": 98, "8336965": 98, "8346023": 98, "8353381": 98, "8363858": 98, "8363953": 98, "8369562": 98, "8375489": 98, "8392758": 98, "8394725": 98, "8398626": 98, "8398917": 98, "8400504": 98, "8401371": 98, "8403939": 98, "8404546": 98, "8405968": 98, "8406827": 98, "8410804": 98, "8412421": 98, "8416197": 98, "8416815": 98, "8426092": 98, "8427086": 98, "8429832": 98, "8429925": 98, "8435865": 98, "8435957": 98, "8438608": 98, "8439970": 98, "8440488": 98, "8441542": 98, "8442452": 98, "8442694": 98, "8444969": 98, "8445346": 98, "8451001": 98, "8451035": 98, "8451254": 98, "8452152": 98, "8452312": 98, "8459040": 98, "8459331": 98, "8460224": 98, "8463015": 98, "8463128": 98, "8463149": 98, "8463322": 98, "8467283": 98, "8467487": 98, "8469351": 98, "8469858": 98, "8471852": 98, "8472463": 98, "8473481": 98, "8474059": 98, "8474767": 98, "8474846": 98, "8476288": 98, "8479438": 98, "8479492": 98, "8481151": 98, "8482538": 98, "8482758": 98, "8484414": 98, "8484595": 98, "8487062": 98, "8487617": 98, "8490938": 98, "8491290": 98, "8495833": 98, "8498111": 98, "8502604": 98, "8503350": 98, "8503449": 98, "8503993": 98, "8505566": 98, "8509040": 98, "8511315": 98, "8511592": 98, "8512505": 98, "8513899": 98, "8526621": 98, "8526757": 98, "8529271": 98, "8529375": 98, "8531342": 98, "8531683": 98, "8534527": 98, "8539938": 98, "8544409": 98, "8546062": 98, "8546725": 98, "8549512": 98, "8570998": 98, "8571555": 98, "8573749": 98, "8573851": 98, "8580205": 98, "8584423": 98, "8587507": 98, "8591214": 98, "8591978": 98, "8592091": 98, "8592928": 98, "8593026": 98, "8596225": 98, "8596332": 98, "8598551": 98, "8598657": 98, "8600875": 98, "8601354": 98, "8602035": 98, "8602124": 98, "8605162": 98, "8605262": 98, "8608631": 98, "8608953": 98, "8609101": 98, "8609920": 98, "8612604": 98, "8612724": 98, "8615193": 98, "8615387": 98, "8616948": 98, "8617056": 98, "8618936": 98, "8623011": 98, "8631202": 98, "8631878": 98, "8632030": 98, "8633298": 98, "8633403": 98, "8633896": 98, "8637943": 98, "8638513": 98, "8640236": 98, "8640507": 98, "8644399": 98, "8644459": 98, "8646304": 98, "8646450": 98, "8651671": 98, "8658898": 98, "8659967": 98, "8660830": 98, "8664445": 98, "8664975": 98, "8666497": 98, "8666594": 98, "8669797": 98, "8669802": 98, "8673623": 98, "8676665": 98, "8681325": 98, "8683196": 98, "8687217": 98, "8687633": 98, "8692622": 98, "8692945": 98, "8696301": 98, "8696602": 98, "8701973": 98, "8702465": 98, "8724279": 98, "8727217": 98, "8728487": 98, "8728587": 98, "8728708": 98, "8728763": 98, "8730054": 98, "8730155": 98, "8731722": 98, "8732218": 98, "8735717": 98, "8736212": 98, "8737038": 98, "8737071": 98, "8742548": 98, "8743848": 98, "8746985": 98, "8749615": 98, "8751358": 98, "8752228": 98, "8755680": 98, "8755845": 98, "8757603": 98, "8758155": 98, "8758996": 98, "8759205": 98, "8759788": 98, "8763040": 98, "8765631": 98, "8765744": 98, "8777518": 98, "8779730": 98, "8785415": 98, "8790295": 98, "8790456": 98, "8791353": 98, "8791426": 98, "8792472": 98, "8792618": 98, "8792963": 98, "8797295": 98, "8797455": 98, "8804697": 98, "8804798": 98, "8808081": 98, "8808655": 98, "8813300": 98, "8813760": 98, "8814979": 98, "8815571": 98, "8816193": 98, "8816973": 98, "8821362": 98, "8822187": 98, "8823636": 98, "8824400": 98, "8825603": 98, "8826166": 98, "8826670": 98, "8828009": 98, "8838719": 98, "8840167": 98, "8841212": 98, "8841769": 98, "8842309": 98, "8842551": 98, "8845481": 98, "8845808": 98, "8851116": 98, "8852704": 98, "8852765": 98, "8852825": 98, "8852917": 98, "8853588": 98, "8861278": 98, "8864019": 98, "8865549": 98, "8865944": 98, "8866624": 98, "8866807": 98, "8866973": 98, "8867939": 98, "8868296": 98, "8869714": 98, "8871531": 98, "8871790": 98, "8875257": 98, "8876318": 98, "8894137": 98, "8897631": 98, "8901435": 98, "8901647": 98, "8901794": 98, "8902740": 98, "8905447": 98, "8905647": 98, "8916805": 98, "8917851": 98, "8918001": 98, "8919328": 98, "8920504": 98, "8921347": 98, "8925306": 98, "8928749": 98, "8942292": 98, "8945532": 98, "8946244": 98, "8946685": 98, "8947201": 98, "8947303": 98, "8948711": 98, "8948777": 98, "8954390": 98, "8954558": 98, "8957394": 98, "8957455": 98, "8957650": 98, "8958007": 98, "8960882": 98, "8962321": 98, "8970081": 98, "8970290": 98, "8971031": 98, "8971138": 98, "8974585": 98, "8974864": 98, "8975116": 98, "8975365": 98, "8986540": 98, "8987094": 98, "8987231": 98, "8989930": 98, "8993683": 98, "8994001": 98, "8999575": 98, "9000096": 98, "9001742": 98, "9001844": 98, "9003963": 98, "9004496": 98, "9008708": 98, "9009011": 98, "9013885": 98, "9015315": 98, "9016179": 98, "9016754": 98, "9017994": 98, "9018669": 98, "9020304": 98, "9020944": 98, "9025608": 98, "9025778": 98, "9031232": 98, "9031234": 98, "9036695": 98, "9039223": 98, "9039351": 98, "9039578": 98, "9039723": 98, "9039989": 98, "9040126": 98, "9041319": 98, "9042007": 98, "9042395": 98, "9042578": 98, "9043320": 98, "9046575": 98, "9048187": 98, "9049349": 98, "9049459": 98, "9055457": 98, "9056292": 98, "9057824": 98, "9057889": 98, "9057999": 98, "9058143": 98, "9063160": 98, "9063277": 98, "9064403": 98, "9065078": 98, "9077325": 98, "9077564": 98, "9080024": 98, "9085350": 98, "9085848": 98, "9087742": 98, "9087883": 98, "9089011": 98, "9089228": 98, "9095956": 98, "9108140": 98, "9108172": 98, "9110918": 98, "9118114": 98, "9124472": 98, "9124663": 98, "9127101": 98, "9132537": 98, "9135753": 98, "9135763": 98, "9138365": 98, "9138405": 98, "9145632": 98, "9149672": 98, "9153252": 98, "9154227": 98, "9154812": 98, "9155463": 98, "9157462": 98, "9158800": 98, "9158986": 98, "9159120": 98, "9159522": 98, "9159895": 98, "9163266": 98, "9163530": 98, "9166952": 98, "9168431": 98, "9177488": 98, "9177663": 98, "9178703": 98, "9179940": 98, "9181119": 98, "9181809": 98, "9220728": 98, "9221817": 98, "9226390": 98, "9226904": 98, "9233560": 98, "9234169": 98, "9245926": 98, "9246027": 98, "9249358": 98, "9249541": 98, "9250495": 98, "9250605": 98, "9251828": 98, "9251837": 98, "9261669": 98, "9265950": 98, "9271058": 98, "9271478": 98, "9278689": 98, "9280922": 98, "9286576": 98, "9287442": 98, "9303928": 98, "9305750": 98, "9306844": 98, "9308441": 98, "9310221": 98, "9310318": 98, "9314891": 98, "9317712": 98, "9327279": 98, "9327423": 98, "9327495": 98, "9327636": 98, "9327708": 98, "9327856": 98, "9330928": 98, "9332533": 98, "9332649": 98, "9332945": 98, "9333043": 98, "9334799": 98, "9342496": 98, "9344723": 98, "9349576": 98, "9350268": 98, "9352700": 98, "9352846": 98, "9354612": 98, "9355024": 98, "9357079": 98, "9359066": 98, "9389982": 98, "9390832": 98, "9393095": 98, "9393760": 98, "9404039": 98, "9407173": 98, "9408282": 98, "9408340": 98, "9410094": 98, "9410612": 98, "9411454": 98, "9412305": 98, "9413222": 98, "9414549": 98, "9418885": 98, "9419456": 98, "9420813": 98, "9420911": 98, "9421992": 98, "9422555": 98, "9431120": 98, "9431248": 98, "9433828": 98, "9435159": 98, "9435327": 98, "9435464": 98, "9444227": 98, "9447361": 98, "9447421": 98, "9448541": 98, "9448669": 98, "9454330": 98, "9454383": 98, "9456828": 98, "9456977": 98, "9457455": 98, "9458842": 98, "9459286": 98, "9460550": 98, "9463750": 98, "9468898": 98, "9469653": 98, "9470637": 98, "9471549": 98, "9474801": 98, "9476596": 98, "9477181": 98, "9477458": 98, "9478151": 98, "9478469": 98, "9479091": 98, "9479100": 98, "9480912": 98, "9481658": 98, "9482275": 98, "9482742": 98, "9483591": 98, "9483981": 98, "9486540": 98, "9486644": 98, "9488029": 98, "9488487": 98, "9494555": 98, "9500623": 98, "9500823": 98, "9501265": 98, "9505768": 98, "9506546": 98, "9512236": 98, "9512306": 98, "9512416": 98, "9512451": 98, "9514637": 98, "9514997": 98, "9516776": 98, "9517025": 98, "9518736": 98, "9518890": 98, "9518911": 98, "9519243": 98, "9521275": 98, "9522549": 98, "9531132": 98, "9531626": 98, "9532869": 98, "9533420": 98, "9540966": 98, "9541167": 98, "9541223": 98, "9543728": 98, "9543951": 98, "9544399": 98, "9544549": 98, "9544732": 98, "9558099": 98, "9558791": 98, "9558874": 98, "9561440": 98, "9561573": 98, "9562352": 98, "9562437": 98, "9563842": 98, "9563927": 98, "9565388": 98, "9574377": 98, "9574758": 98, "9576326": 98, "9576356": 98, "9577889": 98, "9578525": 98, "9581267": 98, "9581785": 98, "9582583": 98, "9582680": 98, "9583533": 98, "9583868": 98, "9584735": 98, "9585416": 98, "9588153": 98, "9588661": 98, "9589244": 98, "9589283": 98, "9589931": 98, "9590505": 98, "9591825": 98, "9591938": 98, "9593103": 98, "9595275": 98, "9598363": 98, "9600444": 98, "9601015": 98, "9604809": 98, "9605179": 98, "9605750": 98, "9605844": 98, "9605895": 98, "9611534": 98, "9611812": 98, "9615082": 98, "9615191": 98, "9616333": 98, "9616515": 98, "9618107": 98, "9618195": 98, "9619760": 98, "9620226": 98, "9622377": 98, "9622612": 98, "9624724": 98, "9625048": 98, "9625796": 98, "9626240": 98, "9630848": 98, "9631387": 98, "9632401": 98, "9633182": 98, "9635945": 98, "9638855": 98, "9641736": 98, "9642343": 98, "9643834": 98, "9644415": 98, "9644728": 98, "9645637": 98, "9649238": 98, "9650498": 98, "9652946": 98, "9653020": 98, "9658023": 98, "9658273": 98, "9660080": 98, "9660173": 98, "9664915": 98, "9665250": 98, "9670726": 98, "9673663": 98, "9678557": 98, "9679643": 98, "9679718": 98, "9685397": 98, "9688653": 98, "9689196": 98, "9690557": 98, "9692700": 98, "9693781": 98, "9694621": 98, "9695035": 98, "9695419": 98, "9695440": 98, "9695706": 98, "9696762": 98, "9697236": 98, "9699566": 98, "9703076": 98, "9703323": 98, "9704869": 98, "9705517": 98, "9708610": 98, "9708753": 98, "9710087": 98, "9710745": 98, "9711065": 98, "9712719": 98, "9712810": 98, "9715232": 98, "9715320": 98, "9728034": 98, "9731347": 98, "9731631": 98, "9734085": 98, "9734369": 98, "9736635": 98, "9736785": 98, "9737815": 98, "9744146": 98, "9744208": 98, "9747923": 98, "9748516": 98, "9749921": 98, "9751181": 98, "9751336": 98, "9751342": 98, "9751469": 98, "9752384": 98, "9752527": 98, "9752600": 98, "9752742": 98, "9754121": 98, "9760787": 98, "9762363": 98, "9767846": 98, "9768813": 98, "9772565": 98, "9773171": 98, "9774012": 98, "9774073": 98, "9779542": 98, "9780348": 98, "9785724": 98, "9785780": 98, "9787624": 98, "9788724": 98, "9790050": 98, "9793755": 98, "9796675": 98, "9797852": 98, "9797912": 98, "9806794": 98, "9806960": 98, "9808903": 98, "9815907": 98, "9829761": 98, "9830569": 98, "9839597": 98, "9844809": 98, "9847405": 98, "9851791": 98, "9852611": 98, "9852799": 98, "9853653": 98, "9863495": 98, "9863583": 98, "9869064": 98, "9869650": 98, "9874680": 98, "9874697": 98, "9881504": 98, "9883695": 98, "9883767": 98, "9884710": 98, "9884731": 98, "9886188": 98, "9888224": 98, "9888355": 98, "9892223": 98, "9893620": 98, "9900817": 98, "9901075": 98, "9902950": 98, "9904302": 98, "9910545": 98, "9914275": 98, "9914497": 98, "9914946": 98, "9915096": 98, "9916864": 98, "9916947": 98, "9919579": 98, "9919708": 98, "9921210": 98, "9921930": 98, "9923609": 98, "9924280": 98, "9925694": 98, "9925715": 98, "9925977": 98, "9930885": 98, "9930987": 98, "9934290": 98, "9934636": 98, "9936022": 98, "9936124": 98, "9938301": 98, "9940976": 98, "9941032": 98, "9942322": 98, "9942758": 98, "9942955": 98, "9943165": 98, "9947803": 98, "9953391": 98, "9953408": 98, "9955873": 98, "9956149": 98, "9958357": 98, "9958781": 98, "9960095": 98, "9960426": 98, "9961977": 98, "9962712": 98, "9962855": 98, "9965573": 98, "9973177": 98, "9973380": 98, "9976315": 98, "9976425": 98, "9979662": 98, "9980062": 98, "9984794": 98, "9986342": 98, "9986413": 98, "9988451": 98, "9988763": 98, "9989131": 98, "9989515": 98, "9989801": 98, "9999928": 98, "10001313": 98, "10001534": 98, "10005522": 98, "10005544": 98, "10011504": 98, "10011836": 98, "10014546": 98, "10015495": 98, "10016764": 98, "10018121": 98, "10019642": 98, "10021090": 98, "10021701": 98, "10022872": 98, "10023797": 98, "10025838": 98, "10026187": 98, "10030059": 98, "10030173": 98, "10047977": 98, "10048084": 98, "10062026": 98, "10062219": 98, "10062354": 98, "10066792": 98, "10066869": 98, "10070882": 98, "10071900": 98, "10072577": 98, "10074399": 98, "10074993": 98, "10077749": 98, "10080158": 98, "10085765": 98, "10086264": 98, "10102012": 98, "10102229": 98, "10102353": 98, "10103209": 98, "10103353": 98, "10103537": 98, "10103626": 98, "10107348": 98, "10108778": 98, "10110981": 98, "10111916": 98, "10112082": 98, "10117124": 98, "10117158": 98, "10122171": 98, "10122458": 98, "10130215": 98, "10133589": 98, "10133671": 98, "10134404": 98, "10134524": 98, "10147324": 98, "10149888": 98, "10150279": 98, "10155105": 98, "10155160": 98, "10158884": 98, "10158950": 98, "10161883": 98, "10162374": 98, "10165132": 98, "10169440": 98, "10169580": 98, "10169638": 98, "10172603": 98, "10174454": 98, "10175591": 98, "10177180": 98, "10178915": 98, "10179017": 98, "10179747": 98, "10179844": 98, "10185520": 98, "10185854": 98, "10190896": 98, "10191272": 98, "10192832": 98, "10193241": 98, "10196997": 98, "10197320": 98, "10197596": 98, "10198218": 98, "10200440": 98, "10200767": 98, "10201808": 98, "10203436": 98, "10203743": 98, "10220454": 98, "10221252": 98, "10221641": 98, "10222778": 98, "10222880": 98, "10233386": 98, "10235230": 98, "10235407": 98, "10237461": 98, "10237682": 98, "10244351": 98, "10244462": 98, "10246502": 98, "10246653": 98, "10248287": 98, "10255327": 98, "10255545": 98, "10262250": 98, "10264305": 98, "10279234": 98, "10290910": 98, "10297927": 98, "10298139": 98, "10327870": 98, "10328983": 98, "10330400": 98, "10330878": 98, "10331808": 98, "10331978": 98, "10333082": 98, "10333470": 98, "10334590": 98, "10334660": 98, "10336130": 98, "10336394": 98, "10345654": 98, "10345737": 98, "10349369": 98, "10356250": 98, "10360898": 98, "10366620": 98, "10371697": 98, "10373372": 98, "10373862": 98, "10374151": 98, "10374172": 98, "10374802": 98, "10379634": 98, "10380096": 98, "10380986": 98, "10381081": 98, "10382025": 98, "10382740": 98, "10391388": 98, "10398620": 98, "10398759": 98, "10398907": 98, "10400177": 98, "10400396": 98, "10400619": 98, "10400693": 98, "10400840": 98, "10401063": 98, "10402762": 98, "10406128": 98, "10406272": 98, "10407457": 98, "10407585": 98, "10409301": 98, "10414773": 98, "10418233": 98, "10421858": 98, "10422894": 98, "10429034": 98, "10429628": 98, "10432371": 98, "10432629": 98, "10432761": 98, "10432855": 98, "10435876": 98, "10436253": 98, "10436888": 98, "10436894": 98, "10437779": 98, "10438074": 98, "10443563": 98, "10443666": 98, "10446043": 98, "10446656": 98, "10452075": 98, "10452177": 98, "10452895": 98, "10454188": 98, "10455678": 98, "10457827": 98, "10459047": 98, "10464288": 98, "10471056": 98, "10471510": 98, "10471927": 98, "10472195": 98, "10473389": 98, "10473512": 98, "10474435": 98, "10474821": 98, "10478129": 98, "10479304": 98, "10484969": 98, "10486698": 98, "10487341": 98, "10488451": 98, "10489585": 98, "10491195": 98, "10491339": 98, "10493661": 98, "10493885": 98, "10494333": 98, "10494548": 98, "10497961": 98, "10498106": 98, "10501121": 98, "10501264": 98, "10501584": 98, "10505949": 98, "10506416": 98, "10506638": 98, "10506997": 98, "10515586": 98, "10516101": 98, "10516428": 98, "10516873": 98, "10516950": 98, "10516977": 98, "10517150": 98, "10517320": 98, "10518055": 98, "10518378": 98, "10519258": 98, "10519359": 98, "10520761": 98, "10520862": 98, "10522027": 98, "10522090": 98, "10523996": 98, "10524446": 98, "10525509": 98, "10526601": 98, "10530095": 98, "10530338": 98, "10531547": 98, "10532666": 98, "10534484": 98, "10536114": 98, "10538088": 98, "10543023": 98, "10546429": 98, "10547720": 98, "10549876": 98, "10551971": 98, "10553047": 98, "10553115": 98, "10553913": 98, "10554365": 98, "10557838": 98, "10558322": 98, "10560006": 98, "10562969": 98, "10564903": 98, "10565265": 98, "10565443": 98, "10566349": 98, "10567300": 98, "10567893": 98, "10569017": 98, "10569084": 98, "10571920": 98, "10571953": 98, "10577147": 98, "10579412": 98, "10580799": 98, "10581537": 98, "10582615": 98, "10588500": 98, "10590465": 98, "10590702": 98, "10593968": 98, "10594331": 98, "10598489": 98, "10598672": 98, "10606621": 98, "10608465": 98, "10621435": 98, "10623172": 98, "10624361": 98, "10624463": 98, "10628387": 98, "10628742": 98, "10631674": 98, "10631684": 98, "10633150": 98, "10633278": 98, "10634078": 98, "10634567": 98, "10636028": 98, "10636291": 98, "10636441": 98, "10636691": 98, "10638966": 98, "10639075": 98, "10640233": 98, "10640464": 98, "10642281": 98, "10643028": 98, "10643705": 98, "10644244": 98, "10645617": 98, "10646477": 98, "10647841": 98, "10648599": 98, "10654237": 98, "10654298": 98, "10666945": 98, "10667807": 98, "10671357": 98, "10671417": 98, "10672614": 98, "10672736": 98, "10674864": 98, "10675167": 98, "10676811": 98, "10676921": 98, "10682374": 98, "10682471": 98, "10683048": 98, "10683269": 98, "10685587": 98, "10685824": 98, "10687058": 98, "10687362": 98, "10688060": 98, "10688331": 98, "10690770": 98, "10691344": 98, "10696783": 98, "10699567": 98, "10705131": 98, "10708372": 98, "10710378": 98, "10713504": 98, "10718201": 98, "10720812": 98, "10723496": 98, "10724160": 98, "10727386": 98, "10727754": 98, "10728808": 98, "10728897": 98, "10730233": 98, "10730462": 98, "10732424": 98, "10732542": 98, "10733666": 98, "10734021": 98, "10736615": 98, "10736696": 98, "10739914": 98, "10740296": 98, "10740395": 98, "10741367": 98, "10744415": 98, "10750029": 98, "10750293": 98, "10750497": 98, "10776703": 98, "10781277": 98, "10781400": 98, "10782114": 98, "10782890": 98, "10784186": 98, "10784831": 98, "10785127": 98, "10787863": 98, "10789129": 98, "10793152": 98, "10793400": 98, "10798059": 98, "10799622": 98, "10808240": 98, "10808589": 98, "10810489": 98, "10810647": 98, "10812923": 98, "10813811": 98, "10814937": 98, "10817341": 98, "10820843": 98, "10823362": 98, "10828421": 98, "10830320": 98, "10830446": 98, "10831873": 98, "10834814": 98, "10836978": 98, "10839012": 98, "10841097": 98, "10844666": 98, "10844771": 98, "10845972": 98, "10846771": 98, "10850103": 98, "10850404": 98, "10851268": 98, "10855508": 98, "10855799": 98, "10855934": 98, "10857689": 98, "10858077": 98, "10860800": 98, "10861193": 98, "10863559": 98, "10863879": 98, "10866495": 98, "10866960": 98, "10867014": 98, "10867529": 98, "10868455": 98, "10869369": 98, "10869474": 98, "10869955": 98, "10875050": 98, "10876199": 98, "10877741": 98, "10878104": 98, "10878326": 98, "10879137": 98, "10879572": 98, "10879768": 98, "10894237": 98, "10899088": 98, "10902220": 98, "10904369": 98, "10912192": 98, "10912370": 98, "10915684": 98, "10917049": 98, "10919139": 98, "10919376": 98, "10919777": 98, "10921407": 98, "10923927": 98, "10924239": 98, "10925750": 98, "10926880": 98, "10933706": 98, "10933809": 98, "10935559": 98, "10936324": 98, "10936741": 98, "10936814": 98, "10940521": 98, "10940677": 98, "10944203": 98, "10944209": 98, "10945687": 98, "10945820": 98, "10945893": 98, "10952933": 98, "10955204": 98, "10958296": 98, "10959906": 98, "10964471": 98, "10970177": 98, "10970486": 98, "11004283": 98, "11011434": 98, "11014745": 98, "11015482": 98, "11017537": 98, "11018495": 98, "11024593": 98, "11032337": 98, "11038827": 98, "11039055": 98, "11052497": 98, "11059298": 98, "11061435": 98, "11063471": 98, "11065939": 98, "11067529": 98, "11070012": 98, "11075754": 98, "11134667": 98, "11142109": 98, "11144135": 98, "11145335": 98, "11145925": 98, "11146447": 98, "11148318": 98, "11148972": 98, "11150303": 98, "11151223": 98, "11151975": 98, "11152703": 98, "11155369": 98, "11156727": 98, "11158833": 98, "11159524": 98, "11162661": 98, "11163787": 98, "11177728": 98, "11177847": 98, "11182063": 98, "11182794": 98, "11186206": 98, "11198965": 98, "11199146": 98, "11206921": 98, "11211905": 98, "11212306": 98, "11215094": 98, "11216117": 98, "11221995": 98, "11222398": 98, "11224163": 98, "11224835": 98, "11233332": 98, "11234301": 98, "11235176": 98, "11235384": 98, "11235594": 98, "11235850": 98, "11236784": 98, "11237816": 98, "11237980": 98, "11238116": 98, "11238227": 98, "11239683": 98, "11240478": 98, "11241224": 98, "11241970": 98, "11242736": 98, "11243524": 98, "11243835": 98, "11245003": 98, "11245822": 98, "11246765": 98, "11248269": 98, "11250018": 98, "11250138": 98, "11251602": 98, "11252237": 98, "11252981": 98, "11253255": 98, "11255927": 98, "11256525": 98, "11259233": 98, "11260921": 98, "11262120": 98, "11263065": 98, "11263665": 98, "11264684": 98, "11264987": 98, "11265104": 98, "11265407": 98, "11265522": 98, "11265714": 98, "11266069": 98, "11266474": 98, "11268029": 98, "11268409": 98, "11268618": 98, "11268958": 98, "11269924": 98, "11271289": 98, "11271687": 98, "11272385": 98, "11272476": 98, "11273482": 98, "11274891": 98, "11276346": 98, "11276447": 98, "11280018": 98, "11282425": 98, "11286561": 98, "11287434": 98, "11287511": 98, "11287747": 98, "11287818": 98, "11289040": 98, "11291977": 98, "11292661": 98, "11294164": 98, "11294575": 98, "11297206": 98, "11300742": 98, "11301466": 98, "11302285": 98, "11305218": 98, "11306252": 98, "11307450": 98, "11308120": 98, "11311053": 98, "11311523": 98, "11323110": 98, "11323526": 98, "11333154": 98, "11334055": 98, "11338112": 98, "11338634": 98, "11338836": 98, "11339786": 98, "11341521": 98, "11342084": 98, "11347288": 98, "11355235": 98, "11356370": 98, "11358077": 98, "11359305": 98, "11361084": 98, "11362946": 98, "11364325": 98, "11374334": 98, "11374619": 98, "11380127": 98, "11380230": 98, "11396662": 98, "11400142": 98, "11416433": 98, "11417007": 98, "11421269": 98, "11422179": 98, "11423600": 98, "11423992": 98, "11426054": 98, "11428654": 98, "11428747": 98, "11429013": 98, "11432156": 98, "11433120": 98, "11433422": 98, "11433670": 98, "11436018": 98, "11436781": 98, "11437407": 98, "11439288": 98, "11440709": 98, "11443451": 98, "11446644": 98, "11449855": 98, "11451972": 98, "11453899": 98, "11454604": 98, "11454779": 98, "11455539": 98, "11456466": 98, "11459953": 98, "11460965": 98, "11463074": 98, "11465141": 98, "11467612": 98, "11469461": 98, "11471584": 98, "11473217": 98, "11475662": 98, "11477743": 98, "11480071": 98, "11483356": 98, "11484640": 98, "11484777": 98, "11486598": 98, "11486894": 98, "11488471": 98, "11489157": 98, "11490578": 98, "11492334": 98, "11492773": 98, "11493035": 98, "11495080": 98, "11495520": 98, "11496245": 98, "11498449": 98, "11498715": 98, "11498859": 98, "11499655": 98, "11501617": 98, "11507172": 98, "11510022": 98, "11513853": 98, "11515126": 98, "11517108": 98, "11517557": 98, "11526797": 98, "11526917": 98, "11557851": 98, "11557985": 98, "11558683": 98, "11559445": 98, "11560565": 98, "11560619": 98, "11564387": 98, "11565188": 98, "11570871": 98, "11570885": 98, "11571166": 98, "11572092": 98, "11577488": 98, "11578640": 98, "11579612": 98, "11579705": 98, "11579778": 98, "11579855": 98, "11581989": 98, "11582742": 98, "11587337": 98, "11587695": 98, "11587757": 98, "11592245": 98, "11601712": 98, "11601861": 98, "11602018": 98, "11604026": 98, "11611314": 98, "11611671": 98, "11616244": 98, "11616815": 98, "11620263": 98, "11621154": 98, "11621273": 98, "11621575": 98, "11621899": 98, "11623114": 98, "11626562": 98, "11628148": 98, "11628355": 98, "11628597": 98, "11628666": 98, "11629640": 98, "11629932": 98, "11631643": 98, "11632918": 98, "11632982": 98, "11640414": 98, "11640686": 98, "11642206": 98, "11643020": 98, "11645420": 98, "11646524": 98, "11647020": 98, "11647752": 98, "11648428": 98, "11648759": 98, "11649206": 98, "11649502": 98, "11649687": 98, "11649981": 98, "11651825": 98, "11652788": 98, "11654313": 98, "11655003": 98, "11655123": 98, "11666411": 98, "11666470": 98, "11667910": 98, "11667969": 98, "11668081": 98, "11668145": 98, "11668388": 98, "11668438": 98, "11669984": 98, "11670094": 98, "11670497": 98, "11670549": 98, "11675940": 98, "11682441": 98, "11686088": 98, "11686948": 98, "11687810": 98, "11688522": 98, "11688672": 98, "11690836": 98, "11694576": 98, "11697943": 98, "11699168": 98, "11701178": 98, "11701630": 98, "11703698": 98, "11703717": 98, "11706612": 98, "11707807": 98, "11712197": 98, "11714955": 98, "11717616": 98, "11718863": 98, "11722936": 98, "11723399": 98, "11726326": 98, "11731057": 98, "11733478": 98, "11733939": 98, "11735964": 98, "11736580": 98, "11737699": 98, "11738655": 98, "11740762": 98, "11741602": 98, "11743966": 98, "11744168": 98, "11804991": 98, "11809131": 98, "11811266": 98, "11813778": 98, "11814451": 98, "11815907": 98, "11819280": 98, "11819538": 98, "11820051": 98, "11820661": 98, "11822646": 98, "11824975": 98, "11825787": 98, "11827548": 98, "11828459": 98, "11830984": 98, "11833183": 98, "11836459": 98, "11849258": 98, "11851553": 98, "11868105": 98, "11877802": 98, "11887278": 98, "11888500": 98, "11890558": 98, "11891575": 98, "11893727": 98, "11893930": 98, "11896284": 98, "11896673": 98, "11898521": 98, "11898788": 98, "11901476": 98, "11901659": 98, "11903310": 98, "11903733": 98, "11905148": 98, "11905956": 98, "11907484": 98, "11907524": 98, "11909280": 98, "11909365": 98, "11909991": 98, "11910327": 98, "11911021": 98, "11911319": 98, "11912677": 98, "11912792": 98, "11917712": 98, "11917805": 98, "11923915": 98, "11924540": 98, "11929516": 98, "11930764": 98, "11931757": 98, "11933351": 98, "11933416": 98, "11933464": 98, "11933575": 98, "11943665": 98, "11943815": 98, "11947000": 98, "11953154": 98, "11953506": 98, "11963085": 98, "11966270": 98, "11967591": 98, "11968021": 98, "11969847": 98, "11971178": 98, "11971802": 98, "11977176": 98, "11977276": 98, "11977977": 98, "11978084": 98, "11978756": 98, "11978847": 98, "11979400": 98, "11985619": 98, "11996975": 98, "11997030": 98, "11998780": 98, "12004947": 98, "12005176": 98, "12006296": 98, "12006910": 98, "12008040": 98, "12008624": 98, "12009625": 98, "12011194": 98, "12018684": 98, "12020755": 98, "12022676": 98, "12024795": 98, "12028298": 98, "12029045": 98, "12029504": 98, "12029921": 98, "12032203": 98, "12032284": 98, "12033737": 98, "12034071": 98, "12037079": 98, "12041034": 98, "12046618": 98, "12047341": 98, "12059798": 98, "12060270": 98, "12064897": 98, "12065864": 98, "12065937": 98, "12065942": 98, "12069084": 98, "12069805": 98, "12072904": 98, "12073071": 98, "12084225": 98, "12084294": 98, "12087856": 98, "12088118": 98, "12090062": 98, "12091565": 98, "12094726": 98, "12095481": 98, "12097987": 98, "12098663": 98, "12106112": 98, "12107043": 98, "12108503": 98, "12108587": 98, "12112505": 98, "12113016": 98, "12113596": 98, "12114063": 98, "12116290": 98, "12116948": 98, "12117128": 98, "12117996": 98, "12118384": 98, "12119110": 98, "12119586": 98, "12120140": 98, "12121333": 98, "12121710": 98, "12122060": 98, "12122810": 98, "12125586": 98, "12126454": 98, "12128965": 98, "12130069": 98, "12131381": 98, "12132552": 98, "12133639": 98, "12134267": 98, "12136465": 98, "12140559": 98, "12142757": 98, "12142910": 98, "12142982": 98, "12144006": 98, "12146977": 98, "12148079": 98, "12154333": 98, "12155123": 98, "12156391": 98, "12157132": 98, "12158733": 98, "12160099": 98, "12162091": 98, "12162391": 98, "12163703": 98, "12165408": 98, "12177782": 98, "12181053": 98, "12183254": 98, "12183687": 98, "12189008": 98, "12189520": 98, "12190224": 98, "12195267": 98, "12195334": 98, "12198599": 98, "12198685": 98, "12202231": 98, "12203720": 98, "12203838": 98, "12205809": 98, "12207096": 98, "12212689": 98, "12213105": 98, "12215198": 98, "12215537": 98, "12217772": 98, "12218431": 98, "12222298": 98, "12223552": 98, "12223605": 98, "12225425": 98, "12225497": 98, "12229308": 98, "12229380": 98, "12230417": 98, "12232303": 98, "12232711": 98, "12235193": 98, "12236017": 98, "12238252": 98, "12239159": 98, "12241808": 98, "12245455": 98, "12246778": 98, "12247770": 98, "12250210": 98, "12251905": 98, "12253636": 98, "12254484": 98, "12257180": 98, "12258602": 98, "12258803": 98, "12259911": 98, "12262848": 98, "12263701": 98, "12264276": 98, "12264464": 98, "12266420": 98, "12266804": 98, "12268128": 98, "12269254": 98, "12272190": 98, "12272948": 98, "12275342": 98, "12276741": 98, "12276807": 98, "12276892": 98, "12278775": 98, "12279751": 98, "12280434": 98, "12281220": 98, "12282615": 98, "12283267": 98, "12285397": 98, "12285745": 98, "12285932": 98, "12286527": 98, "12289316": 98, "12290448": 98, "12293936": 98, "12294299": 98, "12296348": 98, "12297733": 98, "12300817": 98, "12301423": 98, "12303157": 98, "12303598": 98, "12306820": 98, "12307730": 98, "12310431": 98, "12312324": 98, "12314962": 98, "12315192": 98, "12316688": 98, "12317320": 98, "12318735": 98, "12319349": 98, "12320854": 98, "12321936": 98, "12324062": 98, "12324757": 98, "12324945": 98, "12326342": 98, "12327025": 98, "12327981": 98, "12329494": 98, "12331084": 98, "12333454": 98, "12335034": 98, "12336605": 98, "12337967": 98, "12339239": 98, "12341144": 98, "12342826": 98, "12344166": 98, "12345702": 98, "12345818": 98, "12347265": 98, "12347699": 98, "12349819": 98, "12350934": 98, "12352724": 98, "12353505": 98, "12356337": 98, "12356941": 98, "12359341": 98, "12359941": 98, "12363416": 98, "12364717": 98, "12365950": 98, "12366334": 98, "12368619": 98, "12369188": 98, "12370607": 98, "12371349": 98, "12372647": 98, "12374204": 98, "12376135": 98, "12376903": 98, "12378674": 98, "12379334": 98, "12381032": 98, "12381807": 98, "12383259": 98, "12384276": 98, "12385731": 98, "12387704": 98, "12388791": 98, "12389759": 98, "12390979": 98, "12392008": 98, "12393312": 98, "12394119": 98, "12396278": 98, "12396643": 98, "12398267": 98, "12399289": 98, "12401206": 98, "12403143": 98, "12404489": 98, "12405524": 98, "12406946": 98, "12407563": 98, "12411435": 98, "12413808": 98, "12415745": 98, "12417385": 98, "12418800": 98, "12421238": 98, "12426850": 98, "12427387": 98, "12429094": 98, "12430027": 98, "12431500": 98, "12433247": 98, "12434944": 98, "12435725": 98, "12437095": 98, "12439935": 98, "12441253": 98, "12442298": 98, "12443780": 98, "12444581": 98, "12446512": 98, "12447166": 98, "12448240": 98, "12449976": 98, "12452034": 98, "12453388": 98, "12454764": 98, "12454852": 98, "12455826": 98, "12456925": 98, "12457174": 98, "12458016": 98, "12460903": 98, "12461655": 98, "12461895": 98, "12462175": 98, "12465816": 98, "12470619": 98, "12473424": 98, "12474619": 98, "12475934": 98, "12476652": 98, "12478594": 98, "12483808": 98, "12486235": 98, "12486943": 98, "12494538": 98, "12494825": 98, "12497357": 98, "12497437": 98, "12505010": 98, "12505113": 98, "12507569": 98, "12508298": 98, "12513420": 98, "12513515": 98, "12518694": 98, "12518786": 98, "12532135": 98, "12532741": 98, "12534404": 98, "12535313": 98, "12537671": 98, "12537902": 98, "12538986": 98, "12551536": 98, "12552375": 98, "12557163": 98, "12557543": 98, "12558546": 98, "12558944": 98, "12559364": 98, "12559658": 98, "12560411": 98, "12560672": 98, "12561039": 98, "12561560": 98, "12562755": 98, "12564210": 98, "12564355": 98, "12572801": 98, "12577953": 98, "12579226": 98, "12579896": 98, "12580957": 98, "12581765": 98, "12585139": 98, "12585381": 98, "12586006": 98, "12587241": 98, "12591091": 98, "12591115": 98, "12592351": 98, "12594143": 98, "12594204": 98, "12594568": 98, "12594657": 98, "12595689": 98, "12595773": 98, "12596529": 98, "12598916": 98, "12601777": 98, "12601845": 98, "12601897": 98, "12602957": 98, "12603757": 98, "12606248": 98, "12608618": 98, "12608708": 98, "12615920": 98, "12625238": 98, "12626673": 98, "12629082": 98, "12629308": 98, "12630701": 98, "12631184": 98, "12632555": 98, "12635171": 98, "12636542": 98, "12637025": 98, "12638418": 98, "12638684": 98, "12640622": 98, "12640719": 98, "12641501": 98, "12641602": 98, "12642187": 98, "12642402": 98, "12642900": 98, "12643007": 98, "12644321": 98, "12647379": 98, "12652087": 98, "12652276": 98, "12654655": 98, "12655013": 98, "12656760": 98, "12657761": 98, "12659446": 98, "12659728": 98, "12660647": 98, "12661253": 98, "12661732": 98, "12662811": 98, "12663833": 98, "12665066": 98, "12668893": 98, "12669379": 98, "12674449": 98, "12674491": 98, "12674544": 98, "12677524": 98, "12677597": 98, "12679206": 98, "12681812": 98, "12681844": 98, "12682702": 98, "12683219": 98, "12684386": 98, "12685386": 98, "12685569": 98, "12686115": 98, "12688206": 98, "12688726": 98, "12690572": 98, "12691317": 98, "12691762": 98, "12692168": 98, "12693724": 98, "12694405": 98, "12695934": 98, "12696557": 98, "12698214": 98, "12698903": 98, "12699200": 98, "12699429": 98, "12701031": 98, "12701438": 98, "12702886": 98, "12703434": 98, "12704727": 98, "12705096": 98, "12706983": 98, "12707512": 98, "12708691": 98, "12708832": 98, "12711596": 98, "12712078": 98, "12714730": 98, "12715647": 98, "12716583": 98, "12718295": 98, "12719837": 98, "12720204": 98, "12722889": 98, "12724750": 98, "12726206": 98, "12727763": 98, "12727929": 98, "12728002": 98, "12729898": 98, "12730025": 98, "12732722": 98, "12733286": 98, "12741275": 98, "12741587": 98, "12749562": 98, "12750035": 98, "12752105": 98, "12754090": 98, "12755126": 98, "12758185": 98, "12759577": 98, "12759586": 98, "12764960": 98, "12773658": 98, "12782257": 98, "12783282": 98, "12784281": 98, "12787942": 98, "12806581": 98, "12807530": 98, "12811814": 98, "12815903": 98, "12816558": 98, "12819215": 98, "12825602": 98, "12825663": 98, "12834163": 98, "12835114": 98, "12843331": 98, "12844268": 98, "12858281": 98, "12859492": 98, "12861293": 98, "12861950": 98, "12863544": 98, "12864229": 98, "12865350": 98, "12866097": 98, "12866911": 98, "12866987": 98, "12869576": 98, "12878638": 98, "12902806": 98, "12903158": 98, "12903449": 98, "12904469": 98, "12906040": 98, "12906461": 98, "12907754": 98, "12908303": 98, "12909436": 98, "12915165": 98, "12918131": 98, "12918721": 98, "12919280": 98, "12922003": 98, "12923548": 98, "12927894": 98, "12928456": 98, "12929371": 98, "12931115": 98, "12932036": 98, "12933753": 98, "12934763": 98, "12937362": 98, "12938554": 98, "12942227": 98, "12942279": 98, "12946588": 98, "12946931": 98, "12951099": 98, "12951133": 98, "12955322": 98, "12955324": 98, "12958051": 98, "12958639": 98, "12959932": 98, "12960312": 98, "12961619": 98, "12962037": 98, "12964579": 98, "12964673": 98, "12966795": 98, "12967215": 98, "12968280": 98, "12968945": 98, "12978787": 98, "12978838": 98, "12983974": 98, "12988230": 98, "12995475": 98, "12995802": 98, "13023624": 98, "13033482": 98, "13045541": 98, "13050444": 98, "13062122": 98, "13066623": 98, "13069046": 98, "13069520": 98, "13071190": 98, "13072228": 98, "13073057": 98, "13073836": 98, "13075381": 98, "13076269": 98, "13077020": 98, "13077072": 98, "13077941": 98, "13077993": 98, "13078880": 98, "13078920": 98, "13079690": 98, "13079741": 98, "13080633": 98, "13081411": 98, "13082166": 98, "13082680": 98, "13082966": 98, "13083320": 98, "13103119": 98, "13104250": 98, "13106465": 98, "13107135": 98, "13107453": 98, "13107491": 98, "13116434": 98, "13117628": 98, "13120324": 98, "13121091": 98, "13123513": 98, "13124167": 98, "13126650": 98, "13127151": 98, "13127876": 98, "13128469": 98, "13130387": 98, "13130812": 98, "13132466": 98, "13133647": 98, "13136156": 98, "13136389": 98, "13138544": 98, "13139121": 98, "13141898": 98, "13143194": 98, "13144623": 98, "13144911": 98, "13146453": 98, "13152568": 98, "13153734": 98, "13155223": 98, "13161508": 98, "13162491": 98, "13182726": 98, "13183451": 98, "13183772": 98, "13184851": 98, "13188192": 98, "13189791": 98, "13190583": 98, "13191088": 98, "13194645": 98, "13197127": 98, "13198376": 98, "13199349": 98, "13201037": 98, "13201709": 98, "13204293": 98, "13204496": 98, "13205403": 98, "13205611": 98, "13207835": 98, "13208440": 98, "13210462": 98, "13210584": 98, "13211352": 98, "13211825": 98, "13213806": 98, "13214094": 98, "13216230": 98, "13216589": 98, "13218852": 98, "13219140": 98, "13219464": 98, "13221858": 98, "13221978": 98, "13224429": 98, "13225473": 98, "13227994": 98, "13229701": 98, "13232170": 98, "13234686": 98, "13235347": 98, "13236663": 98, "13237053": 98, "13238304": 98, "13238537": 98, "13240733": 98, "13241654": 98, "13244730": 98, "13246852": 98, "13249778": 98, "13250518": 98, "13252902": 98, "13254140": 98, "13257729": 98, "13258380": 98, "13260217": 98, "13260865": 98, "13262733": 98, "13263802": 98, "13265570": 98, "13269983": 98, "13272781": 98, "13274110": 98, "13276464": 98, "13277615": 98, "13280175": 98, "13280845": 98, "13286504": 98, "13287552": 98, "13289542": 98, "13292505": 98, "13297558": 98, "13297658": 98, "13297746": 98, "13297876": 98, "13297985": 98, "13298203": 98, "13300716": 98, "13302758": 98, "13304311": 98, "13307050": 98, "13308685": 98, "13309987": 98, "13310711": 98, "13310886": 98, "13318716": 98, "13324168": 98, "13324254": 98, "13324994": 98, "13325066": 98, "13325229": 98, "13336146": 98, "13337046": 98, "13337212": 98, "13337429": 98, "13338931": 98, "13339396": 98, "13340224": 98, "13340326": 98, "13343952": 98, "13344067": 98, "13346963": 98, "13347065": 98, "13359643": 98, "13360052": 98, "13366888": 98, "13369998": 98, "13370080": 98, "13370684": 98, "13370819": 98, "13376838": 98, "13377349": 98, "13381391": 98, "13384371": 98, "13384751": 98, "13387084": 98, "13387818": 98, "13391205": 98, "13392117": 98, "13394001": 98, "13397269": 98, "13398631": 98, "13402447": 98, "13404106": 98, "13408673": 98, "13408697": 98, "13409896": 98, "13411554": 98, "13411659": 98, "13413172": 98, "13414272": 98, "13414465": 98, "13418457": 98, "13423377": 98, "13423996": 98, "13425148": 98, "13426450": 98, "13428471": 98, "13428912": 98, "13434611": 98, "13435488": 98, "13437963": 98, "13438057": 98, "13450218": 98, "13451462": 98, "13452845": 98, "13455355": 98, "13470371": 98, "13470591": 98, "13474185": 98, "13477151": 98, "13487368": 98, "13489586": 98, "13491120": 98, "13491380": 98, "13507068": 98, "13508813": 98, "13512024": 98, "13512312": 98, "13514290": 98, "13514549": 98, "13526247": 98, "13527365": 98, "13527963": 98, "13528689": 98, "13531462": 98, "13534736": 98, "13542395": 98, "13543067": 98, "13545188": 98, "13548073": 98, "13559361": 98, "13560090": 98, "13563465": 98, "13564566": 98, "13572047": 98, "13572378": 98, "13575805": 98, "13576147": 98, "13581611": 98, "13581697": 98, "13585295": 98, "13586036": 98, "13588831": 98, "13589177": 98, "13598505": 98, "13598608": 98, "13603393": 98, "13603905": 98, "13626225": 98, "13626517": 98, "13628447": 98, "13629226": 98, "13633492": 98, "13635041": 98, "13635958": 98, "13637211": 98, "13637277": 98, "13637844": 98, "13639311": 98, "13640304": 98, "13648405": 98, "13652523": 98, "13652727": 98, "13652948": 98, "13653704": 98, "13654008": 98, "13658167": 98, "13658170": 98, "13659128": 98, "13659430": 98, "13662332": 98, "13663351": 98, "13674997": 98, "13676254": 98, "13677792": 98, "13680414": 98, "13681366": 98, "13682136": 98, "13684547": 98, "13685298": 98, "13687586": 98, "13692684": 98, "13702954": 98, "13709778": 98, "13714128": 98, "13714297": 98, "13716916": 98, "13720124": 98, "13724453": 98, "13724576": 98, "13732046": 98, "13734957": 98, "13751124": 98, "13751233": 98, "13756354": 98, "13756729": 98, "13771773": 98, "13773066": 98, "13778784": 98, "13778894": 98, "13792249": 98, "13792636": 98, "13797272": 98, "13797344": 98, "13802223": 98, "13802392": 98, "13806801": 98, "13806916": 98, "13814322": 98, "13814755": 98, "13827988": 98, "13828101": 98, "13832147": 98, "13834875": 98, "13834941": 98, "13835339": 98, "13840047": 98, "13840703": 98, "13843996": 98, "13844738": 98, "13846957": 98, "13849500": 98, "13850893": 98, "13852385": 98, "13854047": 98, "13854637": 98, "13859699": 98, "13861467": 98, "13887640": 98, "13890341": 98, "13891406": 98, "13893132": 98, "13894249": 98, "13899084": 98, "13914008": 98, "13915663": 98, "13917809": 98, "13919374": 98, "13922122": 98, "13922584": 98, "13922659": 98, "13923060": 98, "13923763": 98, "13926735": 98, "13927556": 98, "13927945": 98, "13928792": 98, "13938809": 98, "13942016": 98, "13942543": 98, "13951630": 98, "13951749": 98, "13952052": 98, "13952160": 98, "13953203": 98, "13957198": 98, "13960612": 98, "13961010": 98, "13969571": 98, "13969843": 98, "13970877": 98, "13971282": 98, "13971419": 98, "13972616": 98, "13973412": 98, "13978429": 98, "13980130": 98, "13980857": 98, "13980954": 98, "13983225": 98, "13989668": 98, "13992993": 98, "13996221": 98, "13997362": 98, "14002972": 98, "14004427": 98, "14008484": 98, "14009870": 98, "14011531": 98, "14012368": 98, "14013629": 98, "14015753": 98, "14018267": 98, "14018798": 98, "14019759": 98, "14020360": 98, "14021312": 98, "14027235": 98, "14027588": 98, "14027779": 98, "14029212": 98, "14029278": 98, "14029364": 98, "14031146": 98, "14031667": 98, "14034953": 98, "14036057": 98, "14037150": 98, "14037777": 98, "14041626": 98, "14043478": 98, "14043530": 98, "14045694": 98, "14046131": 98, "14048022": 98, "14048093": 98, "14051010": 98, "14052135": 98, "14054154": 98, "14054592": 98, "14056894": 98, "14058838": 98, "14058910": 98, "14059311": 98, "14062314": 98, "14062748": 98, "14068803": 98, "14070555": 98, "14070619": 98, "14075066": 98, "14075163": 98, "14075836": 98, "14082582": 98, "14083044": 98, "14084207": 98, "14084511": 98, "14085525": 98, "14085687": 98, "14086685": 98, "14088086": 98, "14089858": 98, "14090729": 98, "14096348": 98, "14097491": 98, "14101090": 98, "14101321": 98, "14104470": 98, "14104514": 98, "14113108": 98, "14113635": 98, "14114085": 98, "14114193": 98, "14118650": 98, "14118750": 98, "14127202": 98, "14128590": 98, "14142207": 98, "14150627": 98, "14151067": 98, "14151840": 98, "14152282": 98, "14153227": 98, "14154195": 98, "14154768": 98, "14155296": 98, "14155428": 98, "14156336": 98, "14157610": 98, "14158078": 98, "14158507": 98, "14161664": 98, "14162845": 98, "14162939": 98, "14163529": 98, "14168307": 98, "14171053": 98, "14179360": 98, "14182594": 98, "14196295": 98, "14198610": 98, "14199136": 98, "14200019": 98, "14204687": 98, "14205716": 98, "14208726": 98, "14209147": 98, "14212501": 98, "14213448": 98, "14213515": 98, "14213680": 98, "14215850": 98, "14216700": 98, "14220624": 98, "14220692": 98, "14231360": 98, "14233034": 98, "14235948": 98, "14236394": 98, "14241181": 98, "14241897": 98, "14244452": 98, "14245499": 98, "14245555": 98, "14246227": 98, "14247314": 98, "14251082": 98, "14252416": 98, "14252956": 98, "14254513": 98, "14255683": 98, "14257016": 98, "14263296": 98, "14271321": 98, "14271892": 98, "14277653": 98, "14278780": 98, "14278828": 98, "14282074": 98, "14282140": 98, "14283469": 98, "14285325": 98, "14285933": 98, "14287089": 98, "14287825": 98, "14295954": 98, "14297286": 98, "14298325": 98, "14298754": 98, "14299780": 98, "14305069": 98, "14307220": 98, "14311756": 98, "14312842": 98, "14316649": 98, "14318522": 98, "14319113": 98, "14319913": 98, "14320341": 98, "14320592": 98, "14322236": 98, "14328965": 98, "14331084": 98, "14339839": 98, "14340790": 98, "14343815": 98, "14347548": 98, "14358326": 98, "14358561": 98, "14367594": 98, "14367615": 98, "14369773": 98, "14371137": 98, "14376086": 98, "14376094": 98, "14376115": 98, "14378385": 98, "14379425": 98, "14381359": 98, "14384737": 98, "14390332": 98, "14400226": 98, "14400682": 98, "14405649": 98, "14406027": 98, "14417934": 98, "14418196": 98, "14431913": 98, "14432790": 98, "14433750": 98, "14434641": 98, "14435706": 98, "14436809": 98, "14451889": 98, "14461037": 98, "14465145": 98, "14465379": 98, "14468214": 98, "14468331": 98, "14469103": 98, "14469499": 98, "14486767": 98, "14486876": 98, "14496560": 98, "14496815": 98, "14498295": 98, "14499734": 98, "14510552": 98, "14511430": 98, "14518719": 98, "14529528": 98, "14546870": 98, "14552029": 98, "14565853": 98, "14566306": 98, "14566783": 98, "14567168": 98, "14616523": 98, "14620182": 98, "14620637": 98, "14621168": 98, "14631094": 98, "14634452": 98, "14642568": 98, "14642713": 98, "14646601": 98, "14647781": 98, "14651288": 98, "14652115": 98, "14657275": 98, "14657354": 98, "14661495": 98, "14662523": 98, "14663141": 98, "14664448": 98, "14674841": 98, "14675599": 98, "14682566": 98, "14688626": 98, "14692144": 98, "14694153": 98, "14700392": 98, "14701121": 98, "14706522": 98, "14707058": 98, "14707875": 98, "14708194": 98, "14719027": 98, "14719166": 98, "14720477": 98, "14720587": 98, "14726131": 98, "14726280": 98, "14730738": 98, "14732930": 98, "14733669": 98, "14735222": 98, "14737195": 98, "14737701": 98, "14738796": 98, "14738881": 98, "14742671": 98, "14742764": 98, "14747789": 98, "14748617": 98, "14753777": 98, "14755153": 98, "14756412": 98, "14756903": 98, "14759473": 98, "14759929": 98, "14760626": 98, "14760637": 98, "14768989": 98, "14770688": 98, "14775007": 98, "14775183": 98, "14776663": 98, "14777136": 98, "14787804": 98, "14788124": 98, "14789517": 98, "14790243": 98, "14790934": 98, "14791039": 98, "14797167": 98, "14797659": 98, "14798705": 98, "14806328": 98, "14806473": 98, "14807461": 98, "14820235": 98, "14820404": 98, "14821651": 98, "14822049": 98, "14823996": 98, "14824492": 98, "14825952": 98, "14826557": 98, "14827779": 98, "14828199": 98, "14829594": 98, "14829731": 98, "14834841": 98, "14838916": 98, "14839138": 98, "14839855": 98, "14843128": 98, "14846475": 98, "14855827": 98, "14855900": 98, "14863482": 98, "14867923": 98, "14871365": 98, "14872111": 98, "14875436": 98, "14875822": 98, "14900322": 98, "14906269": 98, "14906399": 98, "14906791": 98, "14913083": 98, "14913765": 98, "14952226": 98, "14953489": 98, "14955492": 98, "14955635": 98, "14957097": 98, "14961496": 98, "14965361": 98, "14967300": 98, "14968540": 98, "14975418": 98, "14980596": 98, "14984177": 98, "14990016": 98, "14993823": 98, "14993959": 98, "14994580": 98, "15001691": 98, "15001852": 98, "15013904": 98, "15014836": 98, "15016595": 98, "15017282": 98, "15022990": 98, "15023167": 98, "15030708": 98, "15031140": 98, "15033039": 98, "15034514": 98, "15035467": 98, "15036008": 98, "15041274": 98, "15041432": 98, "15050700": 98, "15050796": 98, "15052420": 98, "15053009": 98, "15058994": 98, "15060298": 98, "15061159": 98, "15062082": 98, "15063836": 98, "15064300": 98, "15064453": 98, "15064837": 98, "15068355": 98, "15069279": 98, "15071033": 98, "15072265": 98, "15072426": 98, "igcctaagcctaagcctaagcctaagcctaagcctaagcctaagcctaagcctaagcctaa": [98, 118], "no_cd": 98, "2575800": 98, "2575900": 98, "tttttta": 98, "ittttttaaactcctgtagcaattttatttaaattacttac": 98, "cccaaaaagggaa": 98, "ttttg": 98, "gone": 98, "aaaaag": 98, "aaaaagggaa": 98, "ttccctttttg": 98, "caaaa": 98, "xttccctttttggg": 98, "yaa": 98, "persist": 98, "ttcccttttt": 98, "xttcccttttt": 98, "16793": 98, "16833": 98, "15102": 98, "aaaaaaaaa": 98, "despit": 98, "cccccccccccccccccccc": 98, "match_exon": 98, "li": 98, "lost": 98, "unifi": 98, "cccccaaaaaaaaaattttttttttaaagg": 98, "plus_rpt": 98, "blah": 98, "aaaaaaa": 98, "noneaaaaaaaaaaaaa": 98, "minu": [98, 116, 136], "cctttaa": 98, "nonecctttaaaaaaaaaattttttttttggggg": 98, "minus_rpt": 98, "gctcatgccagctctttacagcatgagaaca": 99, "s2": [99, 116], "actcatgccaactcattacagcatgagaacagcagt": 99, "s3": 99, "actcatgccagctcattacagcatgagaacagcagt": 99, "s4": 99, "s5": 99, "actcatgccagctcagtacagcatgagaacagcagt": 99, "nt_seq": 99, "gctcatgccag": 99, "actcatgccaa": 99, "actcatgccag": 99, "s2actcatgccaactcattacagcatgagaacagcagt": 99, "s1g": 99, "ahasslqhen": 99, "thanslqhen": 99, "thasslqhen": 99, "s2thanslqhenss": 99, "s1a": 99, "standard_cod": [99, 105], "tttgcaaac": [99, 105], "fan": [99, 105], "atgctaacataaa": 99, "mlt": 99, "hk": 99, "fmla": 99, "lc": 99, "yv": 99, "stops_frame1": 99, "stop_index": 99, "nonetaa": 99, "flat_list": 99, "atgcactggtaa": 99, "mhw": 99, "my_genemhw": 99, "atgtgatggtaa": 99, "nucleicacidsequ": 99, "orig_codon": 99, "motif_set": 99, "unresolv": 99, "tran": 99, "s1m": 99, "snippet": 100, "menu": 100, "taagtta": 101, "076": 101, "sequencetaagttattatttagttaatacttttaacaatattattaaggtatttaaaaaatactatt": 101, "bat": [101, 104, 111, 117], "flyingfoxtgtggcacaaatgctcatgccagctctttacagcatgagaac": 101, "agtttattatacact": 101, "githubusercont": [101, 102, 107], "com": [101, 102, 107, 147], "overridden": 101, "protein_seq": 101, "dekql": 101, "rg": 101, "ddk": 101, "srg": 101, "proteins_load": 101, "seq1dekql": 101, "make_": 101, "aatcg": 101, "aatcgga": 101, "seqs_load": 101, "seq2aatcgga": 101, "molecul": 101, "accomplish": 101, "whitespac": 101, "dna_seq": 101, "sample1": 101, "musculu": 101, "aacctgc": 101, "sample2": 101, "gallu": 101, "tgcaac": 101, "sample2aac": 101, "aatca": 101, "0x7f939540f2d0": 101, "minimalfastapars": 101, "pars": [101, 102, 107, 117, 131, 134], "tgtggcacaaatactcatgccagctcattacagcatgagaacagcagtttattactcactaaagacagaatgaatgtagaaaaggctgaattctgtaataaaagcaaacagcctggcttagcaaggagccaacataacagatgggctggaagtaaggaaacatgtaatgataggcggactcccagcgaaaaaaaggtagatctgaatgctgatcccctgtgtgagagaaaagaatggaataagcagaaactgccatgctcagagaatcctagagatactgaagatgttccttggataacactaaatagcagcattcagaaagttaatgagtggttttccagaagtgatgaactgttaggttctgatgactcacatgatggggagtctgaatcaaatgccttggacgttctaaatgaggtagatgaatattctggttcttcagagaaaatagacttactggccagtgatcctcatgaggctttaatatgtgaaagagttcactccaaatcagtagagagtaatattgaagacaaaatatttgggaaaacctatcggaagaaggcaagcctccccaacttaagccatgtaactgaaattataggagcatttgttactgagccacagataatacaagagcgtcccctcacaaataaattaaagcgtaaaaggacatcaggccttcatcctgaggattttatcaagaaagcagatttggcagttcaaaagactcctgaaatgataaatcagggaactaaccaaacggagcagaatggtcaagtgatgaatattactaatagtggtcatgagaataaaacaaaaggtgattctattcagaatgagaaaaatcctaacccaatagaatcactcgaaaaagaatctttcaaaacgaaagctgaacctataagcagcagtataagcaatatggaactcgaattaaatatccacaattcaaaagcacctaaaaagaatctgaggaggaagtctaccaggcatattcatgcgcttgaactagtcagtagaaatctaagcccacctaattgtactgaattgcaaattgatagttgttctagcagtgaagagataaagaaaaaaaagtacaaccaaatgccagtcaggcacagcagaaacctacaactcatggaaggtaaagaacctgcaactggagccaagaagaacaagccaaatgaacagacaagtaaaagacatgacagcgatactttcccagagctgaagaatgcacctggttcttttactaagtgttcaaataccagtgaacttaaagaatttaatcctagccttccaagagaagaaaaagagaaactagaaacagttaaagtgtctaataatgctgaagaccccaaagatctcatgttaagtggagaaagggttttgcaaactgaaagatctgtagagagtagcagtatttcattggtacctggtactgattatggcactcaggaaagtatctcgttactggaagttagcactctagggaaggcaaaaacagaaccaaataaatgtgtgagtcagtgtgcagcatttgaaaaccccaagggactaattcatggttccaaagataatagaaatgacacagaaggctttaagtatccattgggacatgaagttaaccactcaaatccagaagaggaatgtgcacactctgggtccttaaagaaacaaagtccaaaagtcacttttgaatgtgaacaaaaggaaaatcaaggaaagaatgagtctaataagcctgtacagacagttaatatcactgcaggctttcctgtggttggtcagaaagataagccagttgataatgccaaatgtaaaggaggctctaggttttgtctatcatctcagttcagaggcaacgaaactggactcattactccaaataaacatggacttttacaaaacccatatcgtataccaccactttttcccatcaagtcatttgttaaaactaaatgtaagaaaaatctgctagaggaaaactttgaggaacattcaatgtcacctgaaagagaaatgggaaatgagaacattccaagtacagtgagcacaattagccgtaataacagagaaaatgtttttaaagaagccagctcaagcaatattaatgaagtaggttccagtgatgaaaacattcaagcagaactaggtagaaacagagggccaaaattgaatgctatgcttagattaggggttttgcaacctgaggtctataaacaaagtcttcctggaagtaataagcatcctgaaataaaaaagcaagaagttcagactgttaatacagatttctctccactgatttcagataacttagaacagcctatgagtagtcatgcatctcaggtttgttctgagacacctgatgacctgttagatgatggtgaaataaaggaagatactagttttgctgaaaatgacattaaggaaagttctgctgtttttagcaaaagcgtccagaaaggagagcttagcaggagtcctagccctttcacccatacacatttggctcagggttaccgaagaggg": 101, "tgtggcacaaatactcatgccagctcattacagcatgagaacagcagtttgttactcactaaagacacactgaatgtagaaaaggctgaattctgtaataaaagcaaacagcctggcttagcaaggagccaacataacagatgggctgaaagtgaggaaacatgtaatgataggcagactcccagcgagaaaaaggtagatgtggatgctgatcccctgcatgggagaaaagaatggaataagcagaaacctccgtgctctgagaatcctagagatactgaagatgttgcttggataatgctaaatagcagcattcagaaagttaatgagtggttttccagaagtgatgaactgttaacttctgatgactcacatgatggggggtctgaatcaaatgccttggaagttctaaatgaggtagatggatattctagttcttcagagaaaatagacttactggccagtgatcctcatgatcatttgatatgtgaaagagttcactgcaaatcagtagagagtagtattgaagataaaatatttgggaaaacctatcggaggaaggcaagcctccctaacttgagccacgtaactgaaattataggagcatttgttactgagccacagataatacaagagcatcctctcacaaataaattaaagcgtaaaaggacatcaggacttcatcctgaggattttatcaagaaagcagatttggcagttcaaaagactcctgaaaagataaatcagggaactaaccaaacagagcggaatgatcaagtgatgaatattactaacagtggtcatgagaataaaacaaaaggtgattctattcagaatgagaacaatcctaacccagtagaatcactggaaaaagaatcattcaaaagtaaagctgaacctataagcagtagtataagcaatatggaattagaattgaatgtccacaattccaaagcatctaaaaagaatctgagaaggaagtctaccaggcatattcatgagcttgaactagtcagtagaaatctaagcccacctaattatactgaagtacaaattgatagttgttctagcagtgaagagataaagaaaaaaaattacaaccaaatgccagtcaggcacagcagaaagctacaactcatggaagataaagaacgtgcagctagagccaaaaagagcaagccaaatgaacaaacaagtaaaagacatgccagtgatactttcccagaactgaggaacatacctggttcttttactaactgttcaaatactaatgaatttaaagaatttaatcctagccttccaagagaacaaacagagaaactagaaacagttaaactgtctaataatgccaaagaccccaaagatctcatgttaagtggagaaagtgttttgcaaattgaaagatctgtagagagtagcagtattttgttgatacctggtactgattatggcactcaggaaagtatctcattactggaagttagcactctggggaaggcaaaaacagaaccaaataaatgtgtgagtcagtgtgcagcatttgaaaaccccaaggaactaattcatggttctaaagatactagaaatggcacagaaggcttgaagtatccattgggacctgaagttaactactcaaatccagaaaaggaatgtgcatgctctaggtccttaaagaaacaaagtccaaaggtcactcctgaatgtgaacaaaaggaaaatcaaggagagaaagagtctaatgagcttgtagagacagttaataccactgcaggctttcctatggtttgtcagaaagataagccagttgattatgccagatgtgaaggaggctctaggctttgtctatcatctcagttcagaggcaacgaaactggactcattattccaaataaacatggacttttacagaacccatatcatatgtcaccgcttattcccaccaggtcatttgttaaaactaaatgtaagaaaaacctgctagaagaaaactctgaggaacattcaatgtcacctgaaagagcaatgggaaacaagaacattccaagtacagtgagcacaattagccataataacagagaaaatgcttttaaagaaaccagctcaagcagtatttatgaagtaggttccagtgatgaaaacattcaagcagagctaggtagaaacagaaggccaaaattgaatgctatgcttagattagggcttctgcaacctgagatttgtaagcaaagtcttcctataagtgataaacatcctgaaattaaaaagcaagaagttcagactgttaatacagacgtctctctactgatttcatataacctagaacagcatatgagcagtcatacatctcaggtttgttctgagacacctgacaacctgttagatgatggtgaaataaaggaagatactagttttgctgaatatggcattaaggagacttctactgtttttagcaaaagtgtccagagaggagagctcagcaggagccctagccctttcacccatacacatttggctcaggtttaccaaagaggg": 101, "tgtggcacagatgctcatgccagctcattacagcctgagaccagcagtttattgctcattgaagacagaatgaatgcagaaaaggctgaattctgtaataaaagcaaacagcctggcatagcagtgagccagcagagcagatgggctgcaagtaaaggaacatgtaacgacaggcaggttcccagcggggaaaaggtaggtccaaacgctgactcccttagtgatagagagaagtggactcacccgcaaagtctgtgccctgagaattctggagctaccaccgatgttccttggataacactaaatagcagcgttcagaaagttaatgagtggttttccagaactggtgaaatgttaacttctgacagcgcatctgccaggaggcacgagtcaaatgctttggaagtttcaaacgaagtggatgggggttttagttcttcaaggaaaacagacttagtaacccccgacccccatcatactttaatgtgtggaagagacttctccaaaccagtagaggataatatcagtgataaaatatttgggaaatcctatcagagaaagggaagccgccctcacctgaaccatgtgactgaaattataggcacatttattacagaaccacagataacacaagagcagcccttcacaaataaattaaaacgtaagagaagtacatcccttcaacctgaggacttcatcaagaaagcagattcagcaggtcaaaggactcctgacaacataaatcagggaactgacctaatggagccaaatgagcaagcagtgagtactaccagtaactgtcaggagaacaaaatagcaggtagtaatctccagaaagagaaaagcgctcatccaactgaatcattgagaaaggaaccttccacagcaggagccaaatctataagcaacagtgtaagtgatttggaggtagaattaaacgtccacagttcaaaagcacctaagaaaaatctgaggaggaagtctatcaggtgtgctcttccacttgaaccaatcagtagaaatccaagcccacctacttgtgctgagcttcaaatcgatagttgtggtagcagtgaagaaacaaagaaaaaccattccaaccaacagccagccgggcaccttagagagcctcaactcatcgaagacactgaacctgcagcggatgccaagaagaacgagccaaatgaacacataaggaagagacgtgccagcgatgctttcccagaagagaaaaacaaagctggtttattaactagctgttcaagtcctagaaaatctcaagggcctaatcccagccctcagagaacaggaacagagcaacttgaaacacgccaaatgtctgacagtgccaaagaactcggggatcgggtcctaggaggagagcccagtggcaaaactgaccgatctgaggagagcaccagcgtatccttggtacctgacactgactacgacactcagaacagtgtctcagtcctggacgctcacactgtcagatatgcaagaacaggatccgctcagtgtatgactcagtttgtagcaagcgaaaaccccaaggaactcgtccatggctctaacaatgctgggagtggcacagagggtctcaagccccccttgagacacgcgcttaacctctcaaaacctcaaaaggactgtgctcactctgtgccctcaaaggaactgagtccaaaggtgacagctaaaggtaaacaaaaagaacgtcagggacaggaagaatttgaaagtcacgtacaagcagttgcggccacagtgggcttacctgtgccctgtcaagaaggtaagctagctgctgatacaatgtgtgatagaggttgtaggctttgtccatcatctcattacagaagcggggagaatggactcagcgccacaggtaaatcaggaatttcacaaaactcacattttaaacaatcagtttctcccatcaggtcatctataaaaactgacaataggaaacctctgacagagggacgatttgagagacatacatcatcaactgagatggcggtgggaaatgagaaccttcagagtacagtgcacacagttagcctgaataacagaggaaatgcttgtcaagaagccggctcgggcagtattcatgaagtatgttccactggtgactccttcccaggacaactaggtagaaacagagggcctaaggtgaacactgtgcctccattagatagtatgcagcctggtgtctgtcagcaaagtgttcctgtaagtgataagtatcttgaaataaaaaagcaggagggtgaggctgtctgtgcagacttctctccactattctcagaccatcttgagcaatctatgagtggtaaggtttttcaggtttgctctgagacacctgatgacctgctggatgatgttgaaatacagggacatactagctttggtgaaggtgacataatggagagatctgctgtctttaacggaagcatcctgagaagggagtccagtaggagccctagtcctgtaacccatgcatcgaagtctcagagtctccacagagcg": 101, "tgtggcacaaatactcatgccaacttattacagcatgagaacagcagtttattactcactaaagacagaatgaatgtagaaaaggctgaattctgtaataaaagcaaacagcctggcttagcaaggcgccaacagagcagatgggctgaaagtaaggaaacatgtaatgataggcagactcccagcgagaaaaaggtagatgtggatgctgatcccctgtatgggcgaaaagaactgaataagcagaaacctccatgctctgagagtcatagagatacccaagatattccttggataatgctgaatagtagcattcagaaagttaacgagtggttttccagaggtgatgacatattaacttctgatgactcacacgatagggggtctgaattaaatgcattgaaagtttcaaaagaagtagatgaatattctagtttttcagagaagatagacttaatggccattaatcctcatgatactttacaatttgaaagagtccaattgaaaccagcagagagtaacatcaaagataaaatatttgggaaaacctatcataggaaggcaagcctccctaacttgagccacataacccgatttataggagctattgctgcagagcccaagataacacaagagcattccctccaaaataaaataaagcgtaaaagggcatcaggccttcgtcctgaggatttatccaagaaagtagatttgacagttcaaaaaacccctgaaaagataaatcagggaactgaccaaatggagcagaatgatccagtgatgaatattgctaatagtggtcatgagaatgaaacaaaaggtgattgtgttcagaaagagaaaaatgctaatccgacagaatcattgggaaaagaatctttcagaactaaaggcgaacctataagcagcagtataagcaatatggaactagaattaaatattttaaattcaaaagcatctaagaagaatccgaagaggatgtccaccaggcatattcatgcacttgaactaggcagtagaaatccaagcccacctaatcatactgaactacaaattgatagttgttctagcattgaagagatagagaaaataaattctaaccaaaagccaatcagacacaacagaatgcttcaactcacgaaagaaaaagaaaccacaactggagccaaaaagaataagccaaatgaacaaataagtgaaagacatgccagtgatgctttcctagaacttaaaaatgtaactgattttcttcctaaatgttcaagttctgataaacttcaaaaatttaattctagcctgcaaggagaagtagcagagaacctagaaacaattcaagtgtctgatagtaccagggaccctgaagatctggtggtaagtggagaaaagtgtttgcaaactgaaagatctgcagagagtaccggtatttcagtggtacctgatactgattatggcactcaagacagtatctcattactggaagctgacaccctggggaaggcaaaaacagcactaaatcaacatgtgagtcagtatgtagcaattagaaatgccactgaactttcccatggttctaaagacactagaaatgacactgaagattttaaggattcattgagacatgaagttaaccactcgaatccagaaaatgaatgtgcacactccaggttcttagggaaacaaagtccaaaagtcacctttgaatgtagacataaagaaaatcaggggaagaaagagtctaaaaaacatgtgcaggtaattcacacaactgcaggctttcctatagtttgtcagaaagataagccaggtgattatgccaaaggtcaaggagtctctaggctttgtcagtcctctcaggccagaggcaatgaatctgaactcattaattcaaatgaacatgaaatttcacaaaacccagatcaaatgccatcactttctcacatgaagtcatctgttaaaactaaatgtaaggaaaacctgtcagaggaaaagtttgaggaacttacagtgtcacttgaaagaacaatggtaaatgagaacattcaaagtacagtaagcacaattagccacagtaacagagaaaacacttttaaagaagccagctcaagcagtattaatgaagtagggtccagtgatgagaacattcaagcagaagtaggtagaaacagagcacctaaattaaatgctatgctcagattaggtcttatgcaacctgaagtctataagcaaagtcttcctataaccaataaatatcctgaaataaaaagtcaaggaattcgggctgttgatatagacttctctccactaatttcagataacctacaactacctatgaatagttgtgcttcccagatttgttctgagacacctgatgacttgttagatgatgatgaaataaaggaaaataactgctttgctgaaagtgacattaaggaaagatctgctatttttagcaaaactgtccagaaaagagagttcagaaggagccctagccctttagtccatacaagttttgctcagggtcaccaaagaaag": 101, "tgtggcacaaatactcatgccaactcattacagcatgagaacagcagtttattatacactaaagacagaatgaatgtagaaaagactgacttctgtaataaaagcaaacagcctggcttagcaaggagccagcagaacagatgggttgaaactaaggaaacatgtaatgataggcagacttccagcgagaaaaaggtagttctgaatgctgatcccctgaatggaagaataaaactgaataagcagaaacctccatgctctgacagtcctagagattccaaagatattccttggataacacggaatagtagcatacagaaagttaatgagtggttttccagacgtgatgaaacattaacttctgatgtcttacttgatgagaggtctgaatcaaatgtggtagaagttccaaatgaagtagatggatactctggtgcttcagaggaaatagccttaaaggccagtgatcctcatggtgctttaatatgtgaaagagttcactccaaattgatagaaagtaatattgaagataaaatatttgggaaaacatatcggaggaaagcaagcctccctaacttaagccacataactgaaattacaagagcatctgctacagaacctcagataacacaagagtgccccctcacaaataaactaaaacgtaaaagaacatcaggccttcatcctgaggattttatcaagaaaatagatttgacaactcaaaaaacttctgaaaatataattgagggaactgaccaaatagagcagaatggtcatgtgatgaatagttctaatgatggtcatgagaatgaaacaaaaggtgattatgttcagaagaagaaaaatacaaacccaacagaatcattggaaaaagaatctttcagaactaaagttgagtctgtacccaacaacataagcaatgtggaactagaattaaatattcacggttcaaaagcactcaagaagaatctgaggaggaagtccaccaggcatattcatgcacttgaactagtcaatagaaattcaagcccacctaatcatactgaactacaaattgatagttgttccagcagtgaagaactgaaggaaaaaaattctgaccgaatgccagacagacacagcaaaaaacttcagttcgtagaagataaagaatctgcaactggagccaagaagaacatgccaaatgaggcaataaataaaagactttccagtgaagcttttcccgaattaaataacgtacctggtttttttactaatggttcaagttctaataaacgtcaagagtttaatcctagccttcaaggagaagaaatagagaatctacgaacaattcaagtgtctaatagcaccaaagaccccaaaattctaatctttggtgaaggaagaggttcacaaactgatcgatctacagagagtaccagtattttattgggacctgaaacggattatggcactcaagatagtatctcattactggaatctgacatcccagggagggcaaagacagcaccaaaccaacatgcagatctgtgtgcagcaattgaaaaccccagagaacttattcatgattttaaagaaactagaaatgacacagagagctttaaagatccattgagacatgaagttaactcctcagacccagaaaaggaatgtgcacactccaggtccttgataaaacaaagtccaaaagtcactcttgaatgtgaccgaaaaggaaatcagggaaagaaagagtctaacgagcatgtgcaggcagtttatacaactataggctttcctggggtttctgagaaagacaaaccaggagattatgccagatataaagaagtctctaggctttgtcagtcatttcagtctagaagaaatgaaactgagctcactattgcaaataaacttggactttcacaaaacccatatcatatgccatccatttctcccatcaagtcatctgttaaaactatatgtaagaaaaatctgtcagaggaaaagtttgaagaacattcaatattccctgaaagagcaataggaaatgagaccattcaaagtacagtgggcacaattagccaaaataacagagaaagcacttttaaagaaggcagctcaagcggtatttatgaagcaggttccagtggtgaaaacattcaagcagaactaagtagaaacagaggaccaaaattaaatgctgtgcttcagttgggtctcatgcagcctgaagtctatgagcaaagccttcctctaagtaataaacattctgaaataaaaaggcaaggagttcaggctgttaatgcagatgtctctccacaaatttcagataacttagagcaacctatgaacagtaatatttctcaggtttgttctgagacaccggatgacctgttaaatgatgacaaaataaaggacaatatcagctttgatgaaagtggcattcaggaaagatctgctgtttttagcaaaaatgtccagaaaggagaattcagaaggagccctagtcccttagcccatgcaagtttgtctcaaggtcgcccaagaagg": 101, "flexibli": 101, "labelpars": 101, "latin_to_common": 101, "latin": 101, "homo": 101, "sapien": 101, "pan": 101, "troglodty": 101, "label_pars": 101, "split_with": 101, "abcd": [101, 102, 107, 109], "richlabel": 101, "fasta_data": 101, "gi": 101, "10047090": 101, "np_055147": 101, "muscl": 101, "mnmskqpvsnvraiqaninipmgafrpgagqpprrkectpeveegvpptsdeekkpipgakklpgpavnl": 101, "seiqnikselkyvpkaeq": 101, "10047092": 101, "np_037391": 101, "neuron": 101, "manrgpsyglsrevqekieqkydadlenklvdwiilqcaediehpppgrahfqkwlmdgtvlcklinsli": 101, "ppgqepipkiseskmafkqmeqisqflkaaetygvrttdifqtvdlwegkdmaavqrtlmalgsvavtkd": 101, "locu": [102, 107, 145], "np_003077": [102, 107], "con": [102, 107], "5386": [102, 107], "np_004893": [102, 107], "121351": [102, 107], "4264": [102, 107], "np_005079": [102, 107], "9516594": [102, 107], "9789": [102, 107], "np_005500": [102, 107], "noncon": [102, 107], "np_055852": [102, 107], "10933217": [102, 107], "7090": [102, 107], "locusregionratio": [102, 107], "np_003077con2": [102, 107], "np_004893con121351": [102, 107], "np_005079con9516594": [102, 107], "np_005500noncon0": [102, 107], "np_055852noncon10933217": [102, 107], "pkl": [102, 107], "cerebellumdukednaseseq": [102, 107, 111], "pk": [102, 107, 111], "chr1": [102, 107], "29214": [102, 107], "29566": [102, 107], "89933": [102, 107], "90118": [102, 107], "0313": [102, 107], "545979": [102, 107], "546193": [102, 107], "0428": [102, 107], "713797": [102, 107], "714639": [102, 107], "3215": [102, 107], "9516595": [102, 107], "np_005079con9516595": [102, 107], "locusratio": [102, 107], "np_0030772": [102, 107], "np_004893121351": [102, 107], "np_0050799516594": [102, 107], "np_0055000": [102, 107], "np_05585210933217": [102, 107], "5386013224378985": [102, 107], "abc": [102, 107, 109], "91011": [102, 107], "cab": [102, 107], "ab": [102, 104, 107, 109, 138], "0a": [102, 107], "3c": [102, 107], "d2d": [102, 107], "parentxlength": [102, 107], "root1": [102, 107], "00004": [102, 107], "abcddata": [102, 107], "x5": [102, 107], "ynone": [102, 107], "overload": 103, "bulk": 103, "annotationdb": 103, "verifi": 103, "recod": [104, 129, 130], "maintain": [104, 109], "protein_with_stop": 104, "abbreviationnumb": 104, "statesmoltyp": 104, "2moltyp": 104, "4moltyp": 104, "21moltyp": 104, "22moltyp": 104, "52moltyp": 104, "256moltyp": 104, "statement": [104, 129, 149], "aggctt": 104, "seq1aggctt": 104, "customis": 104, "mt": 104, "dnagap": 104, "iupac_dna_char": 104, "iupac_dna_ambigu": 104, "iupac_dna_ambiguities_compl": 104, "dnastandardpair": 104, "noneacg": 104, "builtin": [104, 109, 136], "thisisaprqtein": 105, "myprotein": 105, "thisisa": 105, "myproteinthisisaprqtein": 105, "nonefan": 105, "abglobin_aa": [105, 111, 131], "tr": 106, "temp": 106, "names_nod": 106, "hu": 106, "0311054096183": 106, "0415847131449": 106, "277353608988": 106, "0939768158209": 106, "113211053859": 106, "human_dist": 106, "0726901227632": 106, "3467553610937": 106, "18310641816450002": 106, "2023406562026": 106, "4102925130849": 106, "0382963424874": 106, "0197278502379": 106, "splitlin": 106, "sub_tre": 106, "simple_tree_str": [106, 134], "simple_tre": [106, 134], "tr1": 106, "tr2": 106, "fewer": 106, "tree_str": 106, "tipdist": 106, "perfectli": [106, 130], "08352668213457076": 106, "my": [107, 128], "u9": 107, "u6": 107, "float64": 107, "regionratio": 107, "con2": 107, "con121351": 107, "5e": 107, "2e": 107, "4e": 107, "08": [107, 129], "np_004893con1": 107, "np_005079con9": 107, "np_005500noncon7": 107, "np_055852noncon1": 107, "neat": 107, "tardigrad": 107, "0425": 107, "wrap_tabl": 107, "namea": 107, "tardigrade0": 107, "04250": 107, "largecon": 107, "r_v": 107, "locusregionratiolargecon": 107, "5386fals": 107, "4264true": 107, "9789true": 107, "0000fals": 107, "7090fals": 107, "42635634111": 107, "978886133": 107, "382703020266491e": 107, "708952725": 107, "dictat": 107, "538601e": 107, "213514e": 107, "516595e": 107, "382703e": 107, "093322e": 107, "chisquar": 107, "tv": 107, "syn": 107, "nsyn": 107, "tstv": 107, "syn3136": 107, "nsyn58138": 107, "6730": 107, "3270": 107, "7488": 107, "0225": 107, "7312": 107, "syn22": 107, "673044": 107, "nsyn66": 107, "3270129": 107, "syn1": 107, "02250": 107, "g_test": 107, "g_independ": 107, "william": 107, "gdfpvalu": 107, "97310": 107, "table1": 107, "table2": 107, "data1": 107, "data2": 107, "data1np_003077con2": 107, "data1np_004893con121351": 107, "data1np_005079con9516594": 107, "data1np_005500noncon0": 107, "data1np_055852noncon10933217": 107, "data2np_003077con2": 107, "data2np_004893con121351": 107, "data2np_005079con9516594": 107, "data2np_005500noncon0": 107, "data2np_055852noncon10933217": 107, "20571166": 107, "652796596": 107, "all_numer": 107, "extern": [107, 149, 151], "sub_tabl": 107, "syntax": [107, 139], "big_numer": 107, "math": [107, 109, 136, 138, 149, 151], "keycount": 107, "restrict": [107, 132], "region_typ": 107, "stats_tabl": 107, "right_largecon": 107, "locusregionratioright_largecon": 107, "prefix": 107, "cartesian": 107, "14sk041": 107, "14sk802": 107, "2920": 107, "id14sk04114sk802": 107, "2920332294": 107, "1606302229": 107, "393141125": 107, "2109138120": 107, "tp": 107, "14sk041332302141138": 107, "14sk802294229125120": 107, "finer": 107, "tex": 107, "htp": 107, "hline": 107, "bf": 107, "ccr": 107, "browser": [107, 111], "bigger": 107, "bgraph": 107, "chromstartendvalu": 107, "11001011": 107, "11011021": 107, "11021031": 107, "11031041": 107, "11041051": 107, "straight_html": 107, "known_format": 107, "stats_tab": 107, "implicitli": 107, "txt": 107, "union_dict": [108, 109], "bitwis": [108, 109], "attributeerror": [108, 109], "__getattr__": [108, 109], "super": [108, 109], "minimis": 109, "lie": 109, "simulatedann": 109, "standardis": 109, "deviat": 109, "diffomega": 109, "omega_from_": 109, "omega_est": 109, "xinit": 109, "6150": 109, "multidimension": 109, "my_var": 109, "cookbook": [109, 146], "carri": 109, "foo": 109, "__doc__": 109, "is_iter": 109, "can_it": 109, "cannot_it": 109, "is_char": 109, "recursive_flatten": 109, "not_list_tupl": 109, "add_lowercas": 109, "classcheck": 109, "not_okai": 109, "okai": 109, "my_dict": 109, "asasa": 109, "assur": [109, 142], "listandstr": 109, "ab_cd": 109, "isn": 109, "functionwrapp": 109, "0x7fb48d14c410": 109, "constrainedcontain": 109, "constrainedstr": 109, "constrainedlist": 109, "constraineddict": 109, "stai": 109, "light": 109, "constrainterror": 109, "__setitem__": 109, "item_is_valid": 109, "value_mask": 109, "vertebr": [110, 136], "yeast": 110, "mold": 110, "protozoan": 110, "coelenter": 110, "spiroplasma": 110, "invertebr": 110, "ciliat": 110, "nuclear": 110, "dasycladacean": 110, "hexamita": 110, "echinoderm": 110, "flatworm": 110, "euplotid": 110, "archaeal": 110, "plant": 110, "plastid": 110, "ascidian": 110, "blepharisma": 110, "macronuclear": 110, "chlorophycean": 110, "trematod": 110, "scenedesmu": 110, "obliquu": 110, "thraustochytrium": 110, "rhabdopleurida": 110, "candid": 110, "sr1": 110, "gracilibacteria": 110, "pachysolen": 110, "tannophilu": 110, "karyorelict": 110, "condylostoma": 110, "mesodinium": 110, "peritrich": 110, "blastocrithidia": 110, "balanophoracea": 110, "cephalodiscida": 110, "idnam": 110, "1standard": 110, "2vertebr": 110, "3yeast": 110, "4mold": 110, "5invertebr": 110, "6ciliat": 110, "9echinoderm": 110, "10euplotid": 110, "11bacteri": 110, "12altern": 110, "13ascidian": 110, "14altern": 110, "15blepharisma": 110, "16chlorophycean": 110, "21trematod": 110, "22scenedesmu": 110, "23thraustochytrium": 110, "24rhabdopleurida": 110, "25candid": 110, "26pachysolen": 110, "27karyorelict": 110, "28condylostoma": 110, "29mesodinium": 110, "30peritrich": 110, "31blastocrithidia": 110, "32balanophoracea": 110, "33cephalodiscida": 110, "alanin": 110, "cystein": 110, "aspart": 110, "glutam": 110, "phenylalanin": 110, "glycin": 110, "histidin": 110, "isoleucin": 110, "lysin": 110, "leucin": 110, "methionin": 110, "asparagin": 110, "prolin": 110, "glutamin": 110, "arginin": 110, "serin": 110, "threonin": 110, "valin": 110, "tryptophan": 110, "tyrosin": 110, "aaiupac": 110, "codecodon": 110, "alanineagct": 110, "cysteinectgt": 110, "aciddgat": 110, "acidegaa": 110, "phenylalaninefttt": 110, "glycinegggt": 110, "histidinehcat": 110, "isoleucineiatt": 110, "lysinekaaa": 110, "leucineltta": 110, "methioninematg": 110, "asparaginenaat": 110, "prolinepcct": 110, "glutamineqcaa": 110, "argininercgt": 110, "serinestct": 110, "threoninetact": 110, "valinevgtt": 110, "tryptophanwtga": 110, "tyrosineytat": 110, "click": [111, 113, 116, 149, 151], "trna_profil": 111, "inseq": 111, "inseqs_protein": 111, "f9": 111, "tbp": [111, 117], "fast": [112, 116], "citat": [112, 113, 152], "coevo": 112, "techniqu": [113, 138], "gibb": 113, "mcintyr": 113, "tp53": 114, "ensembl": [114, 149, 151, 153], "ortholog": [114, 136], "marmoset": 114, "write_json": 114, "load_json": [114, 120, 121, 122, 123, 124], "dp": 114, "remove_track": 114, "left_track": 114, "bottom_track": 114, "visualis": [115, 119, 149, 151, 152], "highli": 115, "diverg": 115, "pangolin": 115, "dog": 115, "llama": 115, "pig": [115, 130], "cow": [115, 131], "hippo": 115, "spermwhal": 115, "humpbackw": 115, "mole": 115, "pangolincatdogllamapigcowhippospermwhalehumpbackwmol": 115, "0000030000": 115, "pointer": 115, "tgatgtaaggtagtt": 116, "ctggaagggt": 116, "disappear": 116, "factor": 117, "tata": 117, "pwm": 117, "freqarr": 117, "to_freq_arrai": 117, "0797": 117, "3728": 117, "3907": 117, "0463": 117, "0900": [117, 132], "9049": 117, "9614": 117, "0257": 117, "0771": 117, "9100": 117, "0129": 117, "07970": 117, "37280": 117, "15680": 117, "79430": 117, "11830": 117, "09000": 117, "90490": 117, "96140": 117, "02570": 117, "07710": 117, "91000": 117, "bear": 117, "mind": 117, "render": 117, "scheme": 117, "repeat": 118, "classif": [118, 129, 132], "experiment": [118, 149, 151], "polymorph": 118, "10kbp": 118, "backend": 119, "excel": 119, "graph": 119, "ens_tre": [120, 121, 122, 123], "placement": [121, 123], "label_pad": [121, 122], "africanel": [121, 123], "manate": [121, 123], "legendgroup": [121, 123], "afrotheria": [121, 123], "magenta": [121, 123], "show_support": 124, "support_xshift": 124, "support_yshift": 124, "yshift": 124, "xshift": 124, "author": [125, 126, 127, 128, 129, 130, 131, 132, 134, 135, 137, 138, 139, 140, 141, 142, 143, 144, 145, 151], "paradigm": [125, 129], "artifici": 125, "0x7f0c9cdba490": 125, "unaligned_aa": 125, "0x7f0c9cbcbd10": 125, "serv": 125, "won": [125, 139, 142], "catherin": 126, "lozupon": [126, 151], "own": [126, 127, 128, 135, 145], "myclust": 126, "test_upgma": 126, "phylo": [127, 139], "nj": 127, "mytre": 127, "test_nj": 127, "4022": 128, "0730": 128, "3487": 128, "3363": 128, "namesdogfacedhowlermonhumanmousenineband": 128, "dogfaced0": 128, "19720": 128, "40220": 128, "07300": 128, "34870": 128, "33630": 128, "mouse0": 128, "ninebande0": 128, "20190": 128, "18650": 128, "18040": 128, "38130": 128, "cpu": [128, 136], "master": [128, 136], "wb": 128, "dump": 128, "sake": 129, "nf": 129, "ii": [129, 132], "tf": 129, "iv": 129, "cnf": 129, "mprob_model": 129, "overhead": 129, "argument_nam": 129, "argument_valu": 129, "prefac": 129, "optimiser_arg": 129, "6767": 129, "0980": 129, "04": [129, 132, 141, 142], "03": [129, 132, 135, 141, 142], "070": 129, "060": [129, 135, 142], "040": 129, "080": 129, "mle": 129, "nearli": [129, 132], "procedur": [129, 134], "neutral_lnl": 129, "get_log_likelihood": [129, 132, 135, 141], "neutral_nfp": 129, "get_num_free_param": [129, 132, 135, 141], "non_neutral_lnl": 129, "non_neutral_nfp": 129, "6762": 129, "5761": 129, "083": 129, "0026357631766536875": 129, "surprisingli": 129, "ask": [129, 132], "chimp_human_clade_lnl": 129, "chimp_human_clade_nfp": 129, "028426324903289023": 129, "consum": 129, "richer": 129, "previou": 129, "annot_tre": 129, "get_annotated_tre": [129, 135], "omega_ml": 129, "rate_lf": 129, "epsilon": [129, 132], "rate_lnl": 129, "rate_nfp": 129, "6755": 129, "4520": 129, "073": 129, "adaptive0": 129, "000805443124399728": 129, "unfortun": [129, 149, 151], "ugli": 129, "bug": 129, "bin_param": 129, "rate_class_omega": 129, "rate_class_prob": 129, "rate_branch_lf": 129, "6753": 129, "4561": 129, "greg": 130, "caporaso": [130, 151], "poorli": 130, "mislead": 130, "coupl": 130, "strategi": 130, "validate_align": 130, "coevolve_pair": 130, "coevolve_pair_funct": 130, "pos1": 130, "pos2": 130, "31127812445913294": 130, "sca": 130, "980536895536287": 130, "coevolve_posit": 130, "coevolve_position_funct": 130, "81127812": 130, "31127812": 130, "coevolve_align": 130, "coevolve_alignment_funct": 130, "dict_kei": 130, "intermolecular": 130, "consider": 130, "briefli": 130, "chicken": 130, "echidna": 130, "protein1": 130, "weird_db_identifi": 130, "protein2": 130, "aaai": 130, "ctai": 130, "ctcf": 130, "tcf": 130, "12255625": 130, "globin": 131, "substitution_model": [131, 132, 140], "empiricalproteinmatrix": 131, "paml_matrix": 131, "pamlmatrixpars": 131, "rabbit": 131, "goat": 131, "marsupi": 131, "matrix_fil": 131, "half": [131, 145], "white": 131, "empirical_matrix": 131, "empirical_frequ": 131, "unscal": 131, "0785": 131, "0545": 131, "0269": 131, "0972": 131, "0871": 131, "0335": 131, "0469": 131, "0495": 131, "0398": 131, "0886": 131, "0336": 131, "0369": 131, "0805": 131, "0854": 131, "0507": 131, "0383": 131, "0696": 131, "0585": 131, "0647": 131, "0299": 131, "rabbitedg": 131, "ratedg": 131, "1root0": [131, 132, 135, 141, 142], "cowroot0": 131, "marsupialroot0": 131, "acdefghikl": 131, "08710": 131, "03350": 131, "04690": 131, "04950": 131, "03980": 131, "08860": 131, "03360": 131, "03690": 131, "08050": 131, "mnpqrstvwy": 131, "04040": 131, "05070": 131, "03830": 131, "04090": 131, "06960": 131, "05850": 131, "06470": 131, "postul": 132, "assumpt": 132, "question": 132, "throughout": 132, "fact": [132, 142], "tend": 132, "cluster": [132, 133], "priori": 132, "basi": 132, "classifi": [132, 153], "post": 132, "compon": [132, 134, 135, 137, 139, 141], "assess": [132, 138, 142], "motifchang": 132, "treat_gap": 132, "model_gap": 132, "alias": 132, "lf_one": 132, "lnl_one": 132, "df_one": 132, "5889": [132, 141], "howlermonedg": [132, 135, 141, 142], "mouseedg": [132, 135, 141, 142], "ninebanderoot0": [132, 135, 141, 142], "dogfacedroot0": [132, 135, 141, 142], "bin_submod": 132, "ordered_param": [132, 140], "lf_bin": 132, "lnl_bin": 132, "df_bin": 132, "8739": 132, "rate_shap": 132, "bin0": [132, 140], "bin1": [132, 140], "kapparate_shap": 132, "binbprobsr": [132, 140], "bin00": [132, 140], "bin10": [132, 140], "switch": [132, 135, 151], "sole": 132, "lf_patch": 132, "lnl_patch": 132, "df_patch": 132, "8728": 132, "bin_switch": 132, "bin_switchkapparate_shap": 132, "short": [132, 146], "997883439584257": 132, "1f": 132, "behav": [132, 136], "21st": 132, "8034881117778552": 132, "releas": [132, 148], "silli": 132, "formattedi": 132, "single_kappa": 132, "kappa_bin_submod": 132, "lf_kappa": 132, "smaller": [132, 139], "8749": 132, "8958": 132, "binbprobskappa": 132, "slow1": 132, "fast0": 132, "period": [133, 142], "signal": 133, "simplest": [133, 136], "script": [133, 136, 142, 149, 151], "loci": 133, "coevolutionari": 133, "heterogen": 133, "neighbor": 133, "upgma": 133, "toni": 134, "walter": 134, "variou": 134, "dndparser": 134, "exception": 134, "rangenod": 134, "inherit": 134, "complex_tree_str": 134, "363564": 134, "ab294167": 134, "alkalibacterium": 134, "putridalgicola": 134, "0028006": 134, "55874": 134, "ab083411": 134, "marinilactibacillu": 134, "psychrotoleran": 134, "0022089": 134, "40998": 134, "15050": 134, "y10772": 134, "facklamia": 134, "homini": 134, "32304": 134, "132509": 134, "ay707780": 134, "aerococcu": 134, "viridan": 134, "58815": 134, "143063": 134, "ay879307": 134, "abiotrophia": 134, "defectiva": 134, "5807": 134, "83619": 134, "ab042060": 134, "bacillu": 134, "schlegelii": 134, "23569": 134, "03586": 134, "169722": 134, "ab275483": 134, "fibrobact": 134, "succinogen": 134, "38272": 134, "06516": 134, "03492": 134, "14265": 134, "63594": 134, "3589": 134, "m62687": 134, "intestinali": 134, "65866": 134, "314063": 134, "cp001146": 134, "dictyoglomu": 134, "thermophilum": 134, "38791": 134, "32147": 134, "276579": 134, "eu652053": 134, "thermu": 134, "scotoductu": 134, "57336": 134, "complex_tre": 134, "a_nod": 134, "wish": 134, "alter": 134, "unbranch": 134, "With": 134, "realist": 134, "manner": 134, "genu": 134, "suppress": 134, "ungainli": 134, "suppos": 134, "tips_to_delet": 134, "aerococcus_index": 134, "prevent": 134, "influenc": 135, "toolkit": [135, 151], "earli": 135, "cours": 135, "nonsens": 135, "8636": [135, 142], "8632": 135, "033": 135, "090": [135, 142], "sq": 135, "089238556633063": 135, "23163811517953226": 135, "homologs1": 136, "serial": 136, "helper": 136, "worker": 136, "amongst": 136, "gain": 136, "stipul": 136, "prove": 136, "ineffici": 136, "concurr": [136, 151], "par_kw": 136, "undertaken": 136, "max_work": 136, "use_mpi": 136, "prime": 136, "chunk": 136, "is_prim": 136, "broken": 136, "get_rank": 136, "rank": 136, "sqrt_n": 136, "floor": 136, "112272535095293": 136, "112582705942171": 136, "115280095190773": 136, "115797848077099": 136, "117450548693743": 136, "993960000099397": 136, "world": 136, "On": 136, "mpi4pi": [136, 151], "openmpi": 136, "conda": 136, "homebrew": 136, "prefer": 136, "manag": [136, 153], "pip": [136, 147], "supercomput": 136, "facil": 136, "submit": 136, "job": 136, "queu": 136, "pb": 136, "schedul": 136, "resourc": 136, "ram": 136, "vari": 136, "care": 136, "bash": 136, "pbs_ncpu": 136, "stdout": 136, "mpiexec": 136, "pbs_cpu": 136, "migrat": 136, "runtimeerror": 136, "postprocess": 136, "__name__": 136, "__main__": 136, "readthedoc": 136, "stabl": 136, "architectur": 137, "properli": 137, "assembl": 137, "create_alt_funct": 137, "create_null_funct": 137, "howler": [137, 141], "monkei": [137, 141], "set_local_clock": [137, 141], "estimateprob": 137, "estimatep": 137, "set_num_repl": 137, "get_estimated_prob": 137, "get_observed_lnl": 137, "8751": [137, 141], "julien": 138, "epp": 138, "hua": 138, "ying": [138, 151], "scenario": 138, "nois": 138, "arang": 138, "randn": 138, "nse": 138, "convolv": 138, "exp": 138, "sig": 138, "sin": 138, "pi": 138, "dft": 138, "pwr": 138, "04081633": 138, "08333333": 138, "12765957": 138, "17391304": 138, "22222222": 138, "27272727": 138, "3255814": 138, "38095238": 138, "43902439": 138, "56410256": 138, "63157895": 138, "7027027": 138, "77777778": 138, "85714286": 138, "94117647": 138, "03030303": 138, "22580645": 138, "33333333": 138, "44827586": 138, "57142857": 138, "7037037": 138, "84615385": 138, "16666667": 138, "34782609": 138, "54545455": 138, "76190476": 138, "26315789": 138, "55555556": 138, "88235294": 138, "66666667": 138, "14285714": 138, "69230769": 138, "09090909": 138, "11111111": 138, "28571429": 138, "06015801": 138, "00000000e": 138, "00j": 138, "74686707": 138, "93971914e": 138, "02j": 138, "36784793": 138, "66370366e": 138, "04384413": 138, "86970840e": 138, "54473269": 138, "43777386e": 138, "28522968": 138, "33602932e": 138, "01j": 138, "09908167": 138, "09083592e": 138, "17082184": 138, "71376271e": 138, "89062721": 138, "28548281e": 138, "7963791": 138, "10035336e": 138, "01840271": 138, "80492960e": 138, "88651578": 138, "41151331e": 138, "19530165": 138, "51775974e": 138, "15022781": 138, "86446405e": 138, "08988438": 138, "80200034e": 138, "43529315": 138, "96947078e": 138, "02022101": 138, "21803410e": 138, "85047145": 138, "15731607e": 138, "43688846": 138, "25736906e": 138, "24122185": 138, "99636684e": 138, "07237075": 138, "52126090e": 138, "82213276": 138, "00931516e": 138, "13867235": 138, "81517725e": 138, "49837198": 138, "77574035e": 138, "46785187": 138, "22595745e": 138, "11562242": 138, "49254299e": 138, "1923063": 138, "71044818e": 138, "13909144": 138, "13690934e": 138, "25347752": 138, "74139986e": 138, "31153602": 138, "31846596e": 138, "40472419": 138, "65748222e": 138, "20432603": 138, "45226487e": 138, "7243685": 138, "04775797e": 138, "1815508": 138, "80212265e": 138, "28830449": 138, "72824059e": 138, "06062707": 138, "52301510e": 138, "02841505": 138, "00362778e": 138, "54158937": 138, "05374577e": 138, "79192147": 138, "74568790e": 138, "37803411": 138, "15026155e": 138, "9707734": 138, "07593113e": 138, "00458776": 138, "01619914e": 138, "72674876": 138, "73631881e": 138, "03109358": 138, "27252853e": 138, "07118569": 138, "66787987e": 138, "3787156": 138, "78325775e": 138, "74358583": 138, "70454093e": 138, "09857348": 138, "64330816e": 138, "58344276": 138, "46465366e": 138, "46042799": 138, "39206718e": 138, "max_pwr": 138, "max_period": 138, "768593471914606": 138, "auto_corr": 138, "63366075e": 138, "47309007e": 138, "99310414e": 138, "94779387e": 138, "02111589e": 138, "59402206e": 138, "38935958e": 138, "78082033e": 138, "67917301e": 138, "80558458e": 138, "50298023e": 138, "31498874e": 138, "58750562e": 138, "44274029e": 138, "59442269e": 138, "42494835e": 138, "23571124e": 138, "37998464e": 138, "19246214e": 138, "40423905e": 138, "37305496e": 138, "13403096e": 138, "11639561e": 138, "90121298e": 138, "19165151e": 138, "29071920e": 138, "03347404e": 138, "88866727e": 138, "61923373e": 138, "95836846e": 138, "19272046e": 138, "60842692e": 138, "70680982e": 138, "36897636e": 138, "74936245e": 138, "12432553e": 138, "85493706e": 138, "50657815e": 138, "12033008e": 138, "55562690e": 138, "03888477e": 138, "05790735e": 138, "29155248e": 138, "87540424e": 138, "35507983e": 138, "80308843e": 138, "14561492e": 138, "05380855e": 138, "57732301e": 138, "10932490e": 138, "86322889e": 138, "14559534e": 138, "80666743e": 138, "27850512e": 138, "87271137e": 138, "81441259e": 138, "36167153e": 138, "61436543e": 138, "02975923e": 138, "66247570e": 138, "05138114e": 138, "63658173e": 138, "41895898e": 138, "78396501e": 138, "46634150e": 138, "32607996e": 138, "90027551e": 138, "21450065e": 138, "54316580e": 138, "27121176e": 138, "63814161e": 138, "03866397e": 138, "82623015e": 138, "24702344e": 138, "03525898e": 138, "73098658e": 138, "24573472e": 138, "60152097e": 138, "58897479e": 138, "92571369e": 138, "56836331e": 138, "61934286e": 138, "69234791e": 138, "21888050e": 138, "98178529e": 138, "74044320e": 138, "40442056e": 138, "60242842e": 138, "64669169e": 138, "90300288e": 138, "05204196e": 138, "23056837e": 138, "50585679e": 138, "11958968e": 138, "84011202e": 138, "16394993e": 138, "59262996e": 138, "29507813e": 138, "791730073275666": 138, "atcgttgggaccggttcaagttttggaactcgcaaggggtgaatggtcttcgtctaacgctgg": 138, "ggaaccctgaatcgttgtaacgctggggtctttaaccgttctaatttaacgctggggggttct": 138, "aatttttaaccgcggaattgcgtc": 138, "seqtosymbol": 138, "seq_to_symbol": 138, "ipdft": 138, "22082108e": 138, "48683298e": 138, "74585634e": 138, "46410162e": 138, "20674669e": 138, "13171488e": 138, "21157382e": 138, "24998151e": 138, "17918725e": 138, "83176087e": 138, "68973168e": 138, "30390506e": 138, "77601816e": 138, "39581554e": 138, "80089521e": 138, "28140014e": 138, "59887450e": 138, "59868328e": 138, "51990117e": 138, "87861072e": 138, "21002402e": 138, "99221455e": 138, "02839146e": 138, "56255506e": 138, "06605556e": 138, "06350498e": 138, "87505455e": 138, "75521377e": 138, "58223742e": 138, "57383339e": 138, "86043328e": 138, "48856222e": 138, "41967659e": 138, "54831380e": 138, "74584888e": 138, "89930756e": 138, "92786864e": 138, "78419759e": 138, "45019553e": 138, "93168494e": 138, "25398249e": 138, "46051662e": 138, "62061706e": 138, "86912424e": 138, "51346882e": 138, "83960376e": 138, "57129507e": 138, "40313085e": 138, "21317980e": 138, "95053395e": 138, "58947522e": 138, "11597773e": 138, "52293480e": 138, "80798765e": 138, "97227258e": 138, "01955788e": 138, "95558284e": 138, "78752487e": 138, "52356140e": 138, "17250947e": 138, "74353209e": 138, "24590403e": 138, "68883280e": 138, "08133521e": 138, "43218310e": 138, "74997407e": 138, "04355896e": 138, "32410691e": 138, "22045261e": 138, "65309295e": 138, "00750601e": 138, "73887675e": 138, "47484570e": 138, "20342519e": 138, "91921485e": 138, "61856189e": 138, "29863885e": 138, "95716246e": 138, "59227384e": 138, "20247125e": 138, "78656372e": 138, "34363454e": 138, "87301027e": 138, "37423335e": 138, "84703756e": 138, "02913256e": 138, "07071489e": 138, "10946887e": 138, "14542396e": 138, "17861941e": 138, "20910287e": 138, "23692910e": 138, "26215890e": 138, "28485807e": 138, "30509645e": 138, "32294720e": 138, "33848600e": 138, "35179043e": 138, "36293943e": 138, "37201278e": 138, "37909065e": 138, "38425325e": 138, "38758049e": 138, "38915172e": 138, "38904543e": 138, "38733912e": 138, "38410910e": 138, "37943034e": 138, "37337637e": 138, "36601922e": 138, "35742932e": 138, "34767546e": 138, "33682480e": 138, "32494280e": 138, "31209329e": 138, "29833845e": 138, "28373882e": 138, "26835338e": 138, "25223958e": 138, "23545340e": 138, "21804940e": 138, "20008083e": 138, "18159967e": 138, "16265675e": 138, "14330180e": 138, "12358361e": 138, "10355008e": 138, "08324839e": 138, "06272504e": 138, "04202606e": 138, "02119707e": 138, "00028347e": 138, "79330530e": 138, "58383576e": 138, "37488120e": 138, "16690010e": 138, "96035593e": 138, "75571856e": 138, "55346580e": 138, "35408477e": 138, "15807318e": 138, "96594040e": 138, "77820828e": 138, "59541162e": 138, "41809819e": 138, "24682812e": 138, "08217267e": 138, "hybrid": 138, "54290319e": 138, "60000000e": 138, "04355163e": 138, "07127071e": 138, "07846097e": 138, "88607202e": 138, "89220041e": 138, "48101672e": 138, "62499076e": 138, "90751235e": 138, "71493695e": 138, "02075851e": 138, "07351455e": 138, "62081453e": 138, "82080569e": 138, "12560056e": 138, "91921215e": 138, "02238814e": 138, "56647179e": 138, "54701681e": 138, "69299309e": 138, "91987402e": 138, "65004405e": 138, "33027778e": 138, "50803983e": 138, "88754909e": 138, "50208551e": 138, "30756620e": 138, "60168337e": 138, "44647661e": 138, "93970600e": 138, "43865104e": 138, "02209421e": 138, "53958454e": 138, "96393432e": 138, "89209880e": 138, "27011732e": 138, "47950548e": 138, "50796497e": 138, "03815499e": 138, "57237024e": 138, "34562120e": 138, "05387527e": 138, "28772263e": 138, "28564753e": 138, "04187851e": 138, "37054384e": 138, "46537377e": 138, "35368513e": 138, "44639109e": 138, "21834784e": 138, "40399383e": 138, "48613629e": 138, "80782315e": 138, "47779142e": 138, "75126741e": 138, "91413684e": 138, "85175284e": 138, "29741283e": 138, "62295201e": 138, "34441640e": 138, "63253408e": 138, "37287324e": 138, "64998444e": 138, "17423584e": 138, "97232072e": 138, "86613578e": 138, "82654647e": 138, "04503603e": 138, "69438374e": 138, "89938281e": 138, "28137008e": 138, "95960742e": 138, "38556857e": 138, "64931942e": 138, "97858123e": 138, "29613692e": 138, "16074137e": 138, "55731274e": 138, "17181727e": 138, "32380616e": 138, "62454001e": 138, "90822254e": 138, "17479537e": 138, "42428932e": 138, "43787546e": 138, "43627188e": 138, "53585824e": 138, "04551433e": 138, "94771639e": 138, "52431781e": 138, "13943227e": 138, "61019291e": 138, "75895216e": 138, "17763660e": 138, "48805111e": 138, "75818129e": 138, "15275974e": 138, "93790246e": 138, "94575858e": 138, "94522714e": 138, "32403473e": 138, "92054550e": 138, "89715168e": 138, "12012911e": 138, "09805767e": 138, "07228795e": 138, "69535092e": 138, "67364959e": 138, "97482840e": 138, "62418659e": 138, "56747763e": 138, "53670676e": 138, "75671874e": 138, "94181358e": 138, "43609880e": 138, "40016166e": 138, "36319935e": 138, "48797024e": 138, "42990539e": 138, "24716721e": 138, "31065025e": 138, "goertzel": 138, "76859347191462": 138, "report": 138, "llim": 138, "period5": 138, "ipdft_pow": 138, "round": [138, 139], "486832980505154": 138, "alon": 138, "35516278555667": 138, "precomput": 138, "goertzel_calc": 138, "blockwise_bootstrap": 138, "contigu": 138, "num_rep": 138, "obs_stat": 138, "notion": 138, "quick": 138, "front": 138, "accordingli": 138, "hybrid_calcul": 138, "rb": 139, "extrem": 139, "exercis": 139, "ls_distance_matrix": 139, "ls_pairwise_matrix": 139, "hereaft": 139, "asaa": 139, "pick": 139, "graft": 139, "inspect": 139, "wls_stat": 139, "3308768548934439e": 139, "0015588630350439783": 139, "t1": 139, "t2": 139, "jackrabbit": 139, "treeshrew": 139, "literatur": 139, "seek": 139, "query_tre": 139, "evaluate_tre": 139, "893810286786861": 139, "evaluate_topologi": 139, "0084": 139, "mirror": 139, "ml": 139, "among": 140, "recov": 140, "equal_motif_prob": 140, "sequence_length": [140, 144], "10000": [140, 144], "scratch": 140, "densiti": 140, "decreas": 141, "chanc": 141, "captur": 141, "9425": 141, "707164528703288": 141, "09989841174711883": 141, "facilit": 142, "remaind": 142, "attain": 142, "9489": 142, "9506": 142, "031": 142, "041": 142, "022": 142, "092": 142, "readabl": 142, "explicit": 142, "9424": 142, "8896": 142, "042": 142, "091": 142, "9442": 142, "4271": 142, "032": 142, "combo": 142, "gradual": 142, "8640": 142, "9290": 142, "9218157685579358": 142, "8639": 142, "7171": 142, "8638": 142, "9572": 142, "9537": 143, "9589": 143, "macaqueroot0": 143, "chimproot0": 143, "24390": 143, "25810": 143, "24280": 143, "taxon": 144, "set_constant_length": 144, "set_motif_prob": 144, "4000": 144, "3000": 144, "aroot0": 144, "broot0": 144, "cedg": 144, "dedg": 144, "0root0": 144, "20000": 144, "30000": 144, "atgatatttgg": 144, "atgcttcttgg": 144, "atgattcttag": 144, "aatgatatttggtacgcgtgttggttgtattggttggttctgttttgctggttcctgctac": 144, "aagga": 144, "ctcc": 144, "piec": 145, "recalcul": 145, "loci_nam": 145, "mod": 145, "9168": 145, "3331": 145, "kappalength": 145, "locusacgt": 145, "half0": 145, "all_lnl": 145, "all_nfp": 145, "9167": 145, "locuskappa": 145, "half4": 145, "half3": 145, "each_lnl": 145, "each_nfp": 145, "fly": 145, "lrdfp": 145, "5910": 145, "yourself": 146, "recip": 146, "tutori": 146, "api": [146, 149, 151, 153], "git": 147, "egg": 147, "myenv": 147, "bsd": 148, "incorpor": 148, "emphasis": 149, "cogent": [149, 151], "pyevolv": [149, 151], "isort": 149, "rationalis": 149, "intend": 149, "rewrit": [149, 151], "massiv": [149, 151], "indirectli": [149, 151], "virtu": [149, 151], "older": [149, 151], "repositori": [149, 151], "histori": 149, "3rd": [149, 151], "parti": [149, 151], "burrito": [149, 151], "focuss": [149, 151], "ensembldb3": [149, 151, 153], "eutil": [149, 151], "biocommon": [149, 151], "struct": [149, 151], "3d": [149, 151], "seqsim": [149, 151], "evo": [149, 151], "unifrac": [149, 151], "microbiom": [149, 151], "scikit": [149, 151], "bio": [149, 151], "motiv": 151, "multitud": 151, "contribut": 151, "year": 151, "co": 151, "lab": 151, "modernis": 151, "tqdm": 151, "tox": 151, "pytest": 151, "calendar": 151, "multpl": 151, "amd": 151, "butterfield": 151, "vedagiri": 151, "lang": 151, "lawrenc": 151, "wakefield": 151, "isaev": 151, "bmc": [151, 152], "www": [151, 152], "nlm": [151, 152], "nih": [151, 152], "gov": [151, 152], "pubm": [151, 152], "14706121": 151, "maxwel": 151, "birmingham": 151, "carn": 151, "easton": 151, "eaton": 151, "hamadi": 151, "liu": 151, "mcdonald": 151, "robeson": 151, "sammut": 151, "smit": 151, "widmann": 151, "wikman": 151, "wilson": 151, "17708774": 151, "matur": 152, "endeavour": 152, "wrangl": 152, "suit": 152, "imag": 152, "galleri": 152, "invent": 152, "beginn": 152, "friendli": 152, "expert": 152, "languag": 152, "barrier": 152, "comfort": 152, "benjamin": 152, "von": 152, "bing": 152, "rongli": 152, "systemat": 152, "25503772": 152, "overestim": 152, "28175284": 152, "harold": 152, "schranz": 152, "simon": 152, "rob": 152, "patholog": 152, "pathogen": 152, "19099591": 152, "klara": 152, "verbyla": 152, "anuj": 152, "pahwa": 152, "yunli": 152, "shao": 152, "plo": 152, "ONE": 152, "e69187": 152, "23935949": 152, "pr": 153, "mysql": 153, "homologsampl": 153, "replat": 153, "mutationmotif": 153, "spectra": 153, "mutationorigin": 153, "learn": 153, "predict": 153, "geneticdist": 153, "distanxc": 153, "darwinian": 153}, "objects": {"cogent3.__init__": [[1, 0, 1, "", "available_apps"], [2, 0, 1, "", "available_codes"], [3, 0, 1, "", "available_models"], [4, 0, 1, "", "available_moltypes"], [5, 0, 1, "", "get_code"], [6, 0, 1, "", "get_model"], [7, 0, 1, "", "get_moltype"], [8, 0, 1, "", "load_aligned_seqs"], [9, 0, 1, "", "load_annotations"], [10, 0, 1, "", "load_delimited"], [11, 0, 1, "", "load_seq"], [12, 0, 1, "", "load_table"], [13, 0, 1, "", "load_tree"], [14, 0, 1, "", "load_unaligned_seqs"], [15, 0, 1, "", "make_aligned_seqs"], [16, 0, 1, "", "make_seq"], [17, 0, 1, "", "make_table"], [18, 0, 1, "", "make_tree"], [19, 0, 1, "", "make_unaligned_seqs"], [20, 0, 1, "", "open_"], [21, 0, 1, "", "open_data_store"]], "cogent3.app.composable": [[34, 0, 1, "", "define_app"]], "cogent3.app.data_store": [[35, 1, 1, "", "DataMember"], [36, 1, 1, "", "DataStoreDirectory"], [37, 1, 1, "", "ReadOnlyDataStoreZipped"]], "cogent3.app.data_store.DataMember": [[35, 2, 1, "", "data_store"], [35, 2, 1, "", "md5"], [35, 3, 1, "", "read"], [35, 2, 1, "", "unique_id"]], "cogent3.app.data_store.DataStoreDirectory": [[36, 2, 1, "", "completed"], [36, 2, 1, "", "describe"], [36, 3, 1, "", "drop_not_completed"], [36, 2, 1, "", "limit"], [36, 2, 1, "", "logs"], [36, 3, 1, "", "md5"], [36, 2, 1, "", "members"], [36, 2, 1, "", "mode"], [36, 2, 1, "", "not_completed"], [36, 3, 1, "", "read"], [36, 2, 1, "", "source"], [36, 2, 1, "", "summary_logs"], [36, 2, 1, "", "summary_not_completed"], [36, 3, 1, "", "validate"], [36, 3, 1, "", "write"], [36, 3, 1, "", "write_log"], [36, 3, 1, "", "write_not_completed"]], "cogent3.app.data_store.ReadOnlyDataStoreZipped": [[37, 2, 1, "", "completed"], [37, 2, 1, "", "describe"], [37, 3, 1, "", "drop_not_completed"], [37, 2, 1, "", "limit"], [37, 2, 1, "", "logs"], [37, 3, 1, "", "md5"], [37, 2, 1, "", "members"], [37, 2, 1, "", "mode"], [37, 2, 1, "", "not_completed"], [37, 3, 1, "", "read"], [37, 2, 1, "", "source"], [37, 2, 1, "", "summary_logs"], [37, 2, 1, "", "summary_not_completed"], [37, 3, 1, "", "validate"], [37, 3, 1, "", "write"], [37, 3, 1, "", "write_log"], [37, 3, 1, "", "write_not_completed"]], "cogent3.app.io": [[38, 0, 1, "", "register_datastore_reader"]], "cogent3.app.sqlite_data_store": [[39, 1, 1, "", "DataStoreSqlite"]], "cogent3.app.sqlite_data_store.DataStoreSqlite": [[39, 3, 1, "", "close"], [39, 2, 1, "", "completed"], [39, 2, 1, "", "db"], [39, 2, 1, "", "describe"], [39, 3, 1, "", "drop_not_completed"], [39, 2, 1, "", "limit"], [39, 3, 1, "", "lock"], [39, 2, 1, "", "locked"], [39, 2, 1, "", "logs"], [39, 3, 1, "", "md5"], [39, 2, 1, "", "members"], [39, 2, 1, "", "mode"], [39, 2, 1, "", "not_completed"], [39, 3, 1, "", "read"], [39, 2, 1, "", "record_type"], [39, 2, 1, "", "source"], [39, 4, 1, "", "store_suffix"], [39, 2, 1, "", "summary_logs"], [39, 2, 1, "", "summary_not_completed"], [39, 3, 1, "", "unlock"], [39, 3, 1, "", "validate"], [39, 3, 1, "", "write"], [39, 3, 1, "", "write_log"], [39, 3, 1, "", "write_not_completed"]], "cogent3.core.alignment": [[23, 1, 1, "", "Alignment"], [24, 1, 1, "", "ArrayAlignment"], [25, 1, 1, "", "SequenceCollection"]], "cogent3.core.alignment.Alignment": [[23, 3, 1, "", "add_feature"], [23, 3, 1, "", "add_from_ref_aln"], [23, 3, 1, "", "add_seqs"], [23, 3, 1, "", "alignment_quality"], [23, 3, 1, "", "annotate_from_gff"], [23, 2, 1, "", "annotation_db"], [23, 3, 1, "", "apply_pssm"], [23, 3, 1, "", "coevolution"], [23, 3, 1, "", "copy"], [23, 3, 1, "", "copy_annotations"], [23, 3, 1, "", "count_gaps_per_pos"], [23, 3, 1, "", "count_gaps_per_seq"], [23, 3, 1, "", "counts"], [23, 3, 1, "", "counts_per_pos"], [23, 3, 1, "", "counts_per_seq"], [23, 3, 1, "", "deepcopy"], [23, 4, 1, "", "default_gap"], [23, 3, 1, "", "degap"], [23, 3, 1, "", "distance_matrix"], [23, 3, 1, "", "dotplot"], [23, 3, 1, "", "entropy_per_pos"], [23, 3, 1, "", "entropy_per_seq"], [23, 3, 1, "", "filtered"], [23, 4, 1, "", "gap_chars"], [23, 3, 1, "", "gapped_by_map"], [23, 3, 1, "", "get_ambiguous_positions"], [23, 3, 1, "", "get_degapped_relative_to"], [23, 3, 1, "", "get_drawable"], [23, 3, 1, "", "get_drawables"], [23, 3, 1, "", "get_features"], [23, 3, 1, "", "get_gap_array"], [23, 3, 1, "", "get_gapped_seq"], [23, 3, 1, "", "get_identical_sets"], [23, 3, 1, "", "get_lengths"], [23, 3, 1, "", "get_motif_probs"], [23, 3, 1, "", "get_position_indices"], [23, 3, 1, "", "get_projected_feature"], [23, 3, 1, "", "get_projected_features"], [23, 3, 1, "", "get_seq"], [23, 3, 1, "", "get_seq_indices"], [23, 3, 1, "", "get_similar"], [23, 3, 1, "", "get_translation"], [23, 3, 1, "", "has_terminal_stop"], [23, 3, 1, "", "has_terminal_stops"], [23, 3, 1, "", "information_plot"], [23, 4, 1, "", "is_array"], [23, 3, 1, "", "is_ragged"], [23, 3, 1, "", "iter_positions"], [23, 3, 1, "", "iter_selected"], [23, 3, 1, "", "iter_seqs"], [23, 3, 1, "", "iupac_consensus"], [23, 3, 1, "", "majority_consensus"], [23, 3, 1, "", "make_feature"], [23, 3, 1, "", "matching_ref"], [23, 4, 1, "", "moltype"], [23, 3, 1, "", "no_degenerates"], [23, 2, 1, "", "num_seqs"], [23, 3, 1, "", "omit_bad_seqs"], [23, 3, 1, "", "omit_gap_pos"], [23, 3, 1, "", "omit_gap_runs"], [23, 3, 1, "", "omit_gap_seqs"], [23, 3, 1, "", "pad_seqs"], [23, 2, 1, "", "positions"], [23, 3, 1, "", "probs_per_pos"], [23, 3, 1, "", "probs_per_seq"], [23, 3, 1, "", "quick_tree"], [23, 3, 1, "", "rc"], [23, 3, 1, "", "rename_seqs"], [23, 3, 1, "", "replace_seqs"], [23, 3, 1, "", "reverse_complement"], [23, 3, 1, "", "sample"], [23, 3, 1, "", "seqlogo"], [23, 2, 1, "", "seqs"], [23, 3, 1, "", "set_repr_policy"], [23, 3, 1, "", "sliding_windows"], [23, 3, 1, "", "strand_symmetry"], [23, 3, 1, "", "take_positions"], [23, 3, 1, "", "take_positions_if"], [23, 3, 1, "", "take_seqs"], [23, 3, 1, "", "take_seqs_if"], [23, 3, 1, "", "to_dict"], [23, 3, 1, "", "to_dna"], [23, 3, 1, "", "to_fasta"], [23, 3, 1, "", "to_html"], [23, 3, 1, "", "to_json"], [23, 3, 1, "", "to_moltype"], [23, 3, 1, "", "to_nexus"], [23, 3, 1, "", "to_phylip"], [23, 3, 1, "", "to_pretty"], [23, 3, 1, "", "to_protein"], [23, 3, 1, "", "to_rich_dict"], [23, 3, 1, "", "to_rna"], [23, 3, 1, "", "to_type"], [23, 3, 1, "", "trim_stop_codons"], [23, 3, 1, "", "variable_positions"], [23, 3, 1, "", "with_gaps_from"], [23, 3, 1, "", "with_masked_annotations"], [23, 3, 1, "", "with_modified_termini"], [23, 3, 1, "", "write"]], "cogent3.core.alignment.ArrayAlignment": [[24, 3, 1, "", "add_from_ref_aln"], [24, 3, 1, "", "add_seqs"], [24, 3, 1, "", "alignment_quality"], [24, 4, 1, "", "alphabet"], [24, 2, 1, "", "annotation_db"], [24, 3, 1, "", "apply_pssm"], [24, 3, 1, "", "coevolution"], [24, 3, 1, "", "copy"], [24, 3, 1, "", "count_gaps_per_pos"], [24, 3, 1, "", "count_gaps_per_seq"], [24, 3, 1, "", "counts"], [24, 3, 1, "", "counts_per_pos"], [24, 3, 1, "", "counts_per_seq"], [24, 3, 1, "", "deepcopy"], [24, 4, 1, "", "default_gap"], [24, 3, 1, "", "degap"], [24, 3, 1, "", "distance_matrix"], [24, 3, 1, "", "dotplot"], [24, 3, 1, "", "entropy_per_pos"], [24, 3, 1, "", "entropy_per_seq"], [24, 3, 1, "", "filtered"], [24, 4, 1, "", "gap_chars"], [24, 3, 1, "", "get_ambiguous_positions"], [24, 3, 1, "", "get_degapped_relative_to"], [24, 3, 1, "", "get_gap_array"], [24, 3, 1, "", "get_gapped_seq"], [24, 3, 1, "", "get_identical_sets"], [24, 3, 1, "", "get_lengths"], [24, 3, 1, "", "get_motif_probs"], [24, 3, 1, "", "get_position_indices"], [24, 3, 1, "", "get_seq"], [24, 3, 1, "", "get_seq_indices"], [24, 3, 1, "", "get_similar"], [24, 3, 1, "", "get_sub_alignment"], [24, 3, 1, "", "get_translation"], [24, 3, 1, "", "has_terminal_stop"], [24, 3, 1, "", "has_terminal_stops"], [24, 3, 1, "", "information_plot"], [24, 4, 1, "", "is_array"], [24, 3, 1, "", "is_ragged"], [24, 3, 1, "", "iter_positions"], [24, 3, 1, "", "iter_selected"], [24, 3, 1, "", "iter_seqs"], [24, 3, 1, "", "iupac_consensus"], [24, 3, 1, "", "majority_consensus"], [24, 3, 1, "", "matching_ref"], [24, 4, 1, "", "moltype"], [24, 2, 1, "", "named_seqs"], [24, 3, 1, "", "no_degenerates"], [24, 2, 1, "", "num_seqs"], [24, 3, 1, "", "omit_bad_seqs"], [24, 3, 1, "", "omit_gap_pos"], [24, 3, 1, "", "omit_gap_runs"], [24, 3, 1, "", "omit_gap_seqs"], [24, 3, 1, "", "pad_seqs"], [24, 2, 1, "", "positions"], [24, 3, 1, "", "probs_per_pos"], [24, 3, 1, "", "probs_per_seq"], [24, 3, 1, "", "quick_tree"], [24, 3, 1, "", "rc"], [24, 3, 1, "", "rename_seqs"], [24, 3, 1, "", "replace_seqs"], [24, 3, 1, "", "reverse_complement"], [24, 3, 1, "", "sample"], [24, 3, 1, "", "seqlogo"], [24, 2, 1, "", "seqs"], [24, 3, 1, "", "set_repr_policy"], [24, 3, 1, "", "sliding_windows"], [24, 3, 1, "", "strand_symmetry"], [24, 3, 1, "", "take_positions"], [24, 3, 1, "", "take_positions_if"], [24, 3, 1, "", "take_seqs"], [24, 3, 1, "", "take_seqs_if"], [24, 3, 1, "", "to_dict"], [24, 3, 1, "", "to_dna"], [24, 3, 1, "", "to_fasta"], [24, 3, 1, "", "to_html"], [24, 3, 1, "", "to_json"], [24, 3, 1, "", "to_moltype"], [24, 3, 1, "", "to_nexus"], [24, 3, 1, "", "to_phylip"], [24, 3, 1, "", "to_pretty"], [24, 3, 1, "", "to_protein"], [24, 3, 1, "", "to_rich_dict"], [24, 3, 1, "", "to_rna"], [24, 3, 1, "", "to_type"], [24, 3, 1, "", "trim_stop_codons"], [24, 3, 1, "", "variable_positions"], [24, 3, 1, "", "with_modified_termini"], [24, 3, 1, "", "write"]], "cogent3.core.alignment.SequenceCollection": [[25, 3, 1, "", "add_feature"], [25, 3, 1, "", "add_seqs"], [25, 3, 1, "", "annotate_from_gff"], [25, 2, 1, "", "annotation_db"], [25, 3, 1, "", "apply_pssm"], [25, 3, 1, "", "copy"], [25, 3, 1, "", "copy_annotations"], [25, 3, 1, "", "counts"], [25, 3, 1, "", "counts_per_seq"], [25, 3, 1, "", "deepcopy"], [25, 3, 1, "", "degap"], [25, 3, 1, "", "distance_matrix"], [25, 3, 1, "", "dotplot"], [25, 3, 1, "", "entropy_per_seq"], [25, 3, 1, "", "get_ambiguous_positions"], [25, 3, 1, "", "get_features"], [25, 3, 1, "", "get_identical_sets"], [25, 3, 1, "", "get_lengths"], [25, 3, 1, "", "get_motif_probs"], [25, 3, 1, "", "get_seq"], [25, 3, 1, "", "get_seq_indices"], [25, 3, 1, "", "get_similar"], [25, 3, 1, "", "get_translation"], [25, 3, 1, "", "has_terminal_stop"], [25, 3, 1, "", "has_terminal_stops"], [25, 4, 1, "", "is_array"], [25, 3, 1, "", "is_ragged"], [25, 3, 1, "", "iter_selected"], [25, 3, 1, "", "iter_seqs"], [25, 3, 1, "", "make_feature"], [25, 4, 1, "", "moltype"], [25, 2, 1, "", "num_seqs"], [25, 3, 1, "", "omit_gap_runs"], [25, 3, 1, "", "omit_gap_seqs"], [25, 3, 1, "", "pad_seqs"], [25, 3, 1, "", "probs_per_seq"], [25, 3, 1, "", "rc"], [25, 3, 1, "", "rename_seqs"], [25, 3, 1, "", "reverse_complement"], [25, 2, 1, "", "seqs"], [25, 3, 1, "", "set_repr_policy"], [25, 3, 1, "", "strand_symmetry"], [25, 3, 1, "", "take_seqs"], [25, 3, 1, "", "take_seqs_if"], [25, 3, 1, "", "to_dict"], [25, 3, 1, "", "to_dna"], [25, 3, 1, "", "to_fasta"], [25, 3, 1, "", "to_json"], [25, 3, 1, "", "to_moltype"], [25, 3, 1, "", "to_nexus"], [25, 3, 1, "", "to_phylip"], [25, 3, 1, "", "to_protein"], [25, 3, 1, "", "to_rich_dict"], [25, 3, 1, "", "to_rna"], [25, 3, 1, "", "trim_stop_codons"], [25, 3, 1, "", "with_modified_termini"], [25, 3, 1, "", "write"]], "cogent3.core.alphabet": [[27, 1, 1, "", "Alphabet"]], "cogent3.core.alphabet.Alphabet": [[27, 5, 1, "", "AlphabetError"], [27, 3, 1, "", "adapt_motif_probs"], [27, 3, 1, "", "count"], [27, 3, 1, "", "counts"], [27, 3, 1, "", "from_indices"], [27, 3, 1, "", "get_gap_motif"], [27, 3, 1, "", "get_matched_array"], [27, 3, 1, "", "get_motif_len"], [27, 3, 1, "", "get_subset"], [27, 3, 1, "", "get_word_alphabet"], [27, 3, 1, "", "includes_gap_motif"], [27, 3, 1, "", "index"], [27, 3, 1, "", "is_valid"], [27, 3, 1, "", "resolve_ambiguity"], [27, 3, 1, "", "to_indices"], [27, 3, 1, "", "to_json"], [27, 3, 1, "", "to_rich_dict"], [27, 3, 1, "", "with_gap_motif"]], "cogent3.core.alphabet.Alphabet.AlphabetError": [[27, 3, 1, "", "add_note"], [27, 4, 1, "", "args"], [27, 3, 1, "", "with_traceback"]], "cogent3.core.annotation": [[29, 1, 1, "", "Feature"]], "cogent3.core.annotation.Feature": [[29, 3, 1, "", "as_one_span"], [29, 2, 1, "", "biotype"], [29, 3, 1, "", "get_children"], [29, 3, 1, "", "get_coordinates"], [29, 3, 1, "", "get_drawable"], [29, 3, 1, "", "get_parent"], [29, 3, 1, "", "get_slice"], [29, 2, 1, "", "map"], [29, 2, 1, "", "name"], [29, 2, 1, "", "parent"], [29, 3, 1, "", "remapped_to"], [29, 2, 1, "", "seqid"], [29, 3, 1, "", "shadow"], [29, 3, 1, "", "to_dict"], [29, 3, 1, "", "union"], [29, 3, 1, "", "without_lost_spans"]], "cogent3.core.annotation_db": [[31, 1, 1, "", "BasicAnnotationDb"], [32, 1, 1, "", "GenbankAnnotationDb"], [33, 1, 1, "", "GffAnnotationDb"]], "cogent3.core.annotation_db.BasicAnnotationDb": [[31, 4, 1, "", "StrOrBool"], [31, 3, 1, "", "add_feature"], [31, 3, 1, "", "add_records"], [31, 3, 1, "", "biotype_counts"], [31, 3, 1, "", "compatible"], [31, 3, 1, "", "count_distinct"], [31, 2, 1, "", "db"], [31, 2, 1, "", "describe"], [31, 3, 1, "", "from_dict"], [31, 3, 1, "", "get_feature_children"], [31, 3, 1, "", "get_feature_parent"], [31, 3, 1, "", "get_features_matching"], [31, 3, 1, "", "get_records_matching"], [31, 3, 1, "", "num_matches"], [31, 2, 1, "", "table_names"], [31, 3, 1, "", "to_json"], [31, 3, 1, "", "to_rich_dict"], [31, 3, 1, "", "union"], [31, 3, 1, "", "update"], [31, 3, 1, "", "write"]], "cogent3.core.annotation_db.GenbankAnnotationDb": [[32, 4, 1, "", "StrOrBool"], [32, 3, 1, "", "add_feature"], [32, 3, 1, "", "add_records"], [32, 3, 1, "", "biotype_counts"], [32, 3, 1, "", "compatible"], [32, 3, 1, "", "count_distinct"], [32, 2, 1, "", "db"], [32, 2, 1, "", "describe"], [32, 3, 1, "", "from_dict"], [32, 3, 1, "", "get_feature_children"], [32, 3, 1, "", "get_feature_parent"], [32, 3, 1, "", "get_features_matching"], [32, 3, 1, "", "get_records_matching"], [32, 3, 1, "", "num_matches"], [32, 2, 1, "", "table_names"], [32, 3, 1, "", "to_json"], [32, 3, 1, "", "to_rich_dict"], [32, 3, 1, "", "union"], [32, 3, 1, "", "update"], [32, 3, 1, "", "write"]], "cogent3.core.annotation_db.GffAnnotationDb": [[33, 4, 1, "", "StrOrBool"], [33, 3, 1, "", "add_feature"], [33, 3, 1, "", "add_records"], [33, 3, 1, "", "biotype_counts"], [33, 3, 1, "", "compatible"], [33, 3, 1, "", "count_distinct"], [33, 2, 1, "", "db"], [33, 2, 1, "", "describe"], [33, 3, 1, "", "from_dict"], [33, 3, 1, "", "get_feature_children"], [33, 3, 1, "", "get_feature_parent"], [33, 3, 1, "", "get_features_matching"], [33, 3, 1, "", "get_records_matching"], [33, 3, 1, "", "num_matches"], [33, 2, 1, "", "table_names"], [33, 3, 1, "", "to_json"], [33, 3, 1, "", "to_rich_dict"], [33, 3, 1, "", "union"], [33, 3, 1, "", "update"], [33, 3, 1, "", "write"]], "cogent3.core.genetic_code": [[40, 1, 1, "", "GeneticCode"]], "cogent3.core.genetic_code.GeneticCode": [[40, 2, 1, "", "blocks"], [40, 3, 1, "", "changes"], [40, 3, 1, "", "get_alphabet"], [40, 3, 1, "", "get_stop_indices"], [40, 3, 1, "", "is_start"], [40, 3, 1, "", "is_stop"], [40, 3, 1, "", "sixframes"], [40, 3, 1, "", "to_regex"], [40, 3, 1, "", "to_table"], [40, 3, 1, "", "translate"]], "cogent3.core.moltype": [[43, 1, 1, "", "MolType"]], "cogent3.core.moltype.MolType": [[43, 3, 1, "", "can_match"], [43, 3, 1, "", "can_mismatch"], [43, 3, 1, "", "can_mispair"], [43, 3, 1, "", "can_pair"], [43, 3, 1, "", "coerce_str"], [43, 3, 1, "", "complement"], [43, 3, 1, "", "count_degenerate"], [43, 3, 1, "", "count_gaps"], [43, 3, 1, "", "degap"], [43, 3, 1, "", "degenerate_from_seq"], [43, 3, 1, "", "disambiguate"], [43, 3, 1, "", "first_degenerate"], [43, 3, 1, "", "first_gap"], [43, 3, 1, "", "first_invalid"], [43, 3, 1, "", "first_non_strict"], [43, 3, 1, "", "first_not_in_alphabet"], [43, 3, 1, "", "gap_indices"], [43, 3, 1, "", "gap_maps"], [43, 3, 1, "", "gap_vector"], [43, 3, 1, "", "get_css_style"], [43, 3, 1, "", "get_degenerate_positions"], [43, 3, 1, "", "get_type"], [43, 3, 1, "", "is_ambiguity"], [43, 3, 1, "", "is_degenerate"], [43, 3, 1, "", "is_gap"], [43, 3, 1, "", "is_gapped"], [43, 3, 1, "", "is_strict"], [43, 3, 1, "", "is_valid"], [43, 3, 1, "", "make_array_seq"], [43, 3, 1, "", "make_seq"], [43, 3, 1, "", "must_match"], [43, 3, 1, "", "must_pair"], [43, 3, 1, "", "mw"], [43, 3, 1, "", "possibilities"], [43, 3, 1, "", "rc"], [43, 3, 1, "", "strand_symmetric_motifs"], [43, 3, 1, "", "to_json"], [43, 3, 1, "", "to_regex"], [43, 3, 1, "", "to_rich_dict"], [43, 3, 1, "", "valid_on_alphabet"], [43, 3, 1, "", "verify_sequence"], [43, 3, 1, "", "what_ambiguity"]], "cogent3.core.sequence": [[45, 1, 1, "", "DnaSequence"], [46, 1, 1, "", "ProteinSequence"], [47, 1, 1, "", "RnaSequence"]], "cogent3.core.sequence.DnaSequence": [[45, 3, 1, "", "add_feature"], [45, 3, 1, "", "annotate_from_gff"], [45, 3, 1, "", "annotate_matches_to"], [45, 2, 1, "", "annotation_db"], [45, 2, 1, "", "annotation_offset"], [45, 3, 1, "", "can_match"], [45, 3, 1, "", "can_mismatch"], [45, 3, 1, "", "can_mispair"], [45, 3, 1, "", "can_pair"], [45, 4, 1, "", "codon_alphabet"], [45, 3, 1, "", "complement"], [45, 3, 1, "", "copy"], [45, 3, 1, "", "copy_annotations"], [45, 3, 1, "", "count"], [45, 3, 1, "", "count_degenerate"], [45, 3, 1, "", "count_gaps"], [45, 3, 1, "", "counts"], [45, 3, 1, "", "degap"], [45, 3, 1, "", "diff"], [45, 3, 1, "", "disambiguate"], [45, 3, 1, "", "distance"], [45, 3, 1, "", "first_degenerate"], [45, 3, 1, "", "first_gap"], [45, 3, 1, "", "first_invalid"], [45, 3, 1, "", "first_non_strict"], [45, 3, 1, "", "frac_diff"], [45, 3, 1, "", "frac_diff_gaps"], [45, 3, 1, "", "frac_diff_non_gaps"], [45, 3, 1, "", "frac_same"], [45, 3, 1, "", "frac_same_gaps"], [45, 3, 1, "", "frac_same_non_gaps"], [45, 3, 1, "", "frac_similar"], [45, 3, 1, "", "gap_indices"], [45, 3, 1, "", "gap_maps"], [45, 3, 1, "", "gap_vector"], [45, 3, 1, "", "gapped_by_map"], [45, 3, 1, "", "gapped_by_map_motif_iter"], [45, 3, 1, "", "gapped_by_map_segment_iter"], [45, 3, 1, "", "get_drawable"], [45, 3, 1, "", "get_drawables"], [45, 3, 1, "", "get_features"], [45, 3, 1, "", "get_in_motif_size"], [45, 3, 1, "", "get_kmers"], [45, 3, 1, "", "get_name"], [45, 3, 1, "", "get_translation"], [45, 3, 1, "", "get_type"], [45, 3, 1, "", "has_terminal_stop"], [45, 3, 1, "", "is_annotated"], [45, 3, 1, "", "is_degenerate"], [45, 3, 1, "", "is_gap"], [45, 3, 1, "", "is_gapped"], [45, 3, 1, "", "is_strict"], [45, 3, 1, "", "is_valid"], [45, 3, 1, "", "iter_kmers"], [45, 4, 1, "", "line_wrap"], [45, 3, 1, "", "make_feature"], [45, 3, 1, "", "matrix_distance"], [45, 4, 1, "", "moltype"], [45, 3, 1, "", "must_match"], [45, 3, 1, "", "must_pair"], [45, 3, 1, "", "mw"], [45, 3, 1, "", "parse_out_gaps"], [45, 3, 1, "", "possibilities"], [45, 4, 1, "", "protein"], [45, 3, 1, "", "rc"], [45, 3, 1, "", "replace"], [45, 3, 1, "", "replace_annotation_db"], [45, 3, 1, "", "resolved_ambiguities"], [45, 3, 1, "", "reverse_complement"], [45, 3, 1, "", "shuffle"], [45, 3, 1, "", "sliding_windows"], [45, 3, 1, "", "strand_symmetry"], [45, 3, 1, "", "strip_bad"], [45, 3, 1, "", "strip_bad_and_gaps"], [45, 3, 1, "", "strip_degenerate"], [45, 3, 1, "", "to_dna"], [45, 3, 1, "", "to_fasta"], [45, 3, 1, "", "to_html"], [45, 3, 1, "", "to_json"], [45, 3, 1, "", "to_moltype"], [45, 3, 1, "", "to_rich_dict"], [45, 3, 1, "", "to_rna"], [45, 3, 1, "", "trim_stop_codon"], [45, 3, 1, "", "with_masked_annotations"], [45, 3, 1, "", "with_termini_unknown"]], "cogent3.core.sequence.ProteinSequence": [[46, 3, 1, "", "add_feature"], [46, 3, 1, "", "annotate_from_gff"], [46, 3, 1, "", "annotate_matches_to"], [46, 2, 1, "", "annotation_db"], [46, 2, 1, "", "annotation_offset"], [46, 3, 1, "", "can_match"], [46, 3, 1, "", "can_mismatch"], [46, 3, 1, "", "can_mispair"], [46, 3, 1, "", "can_pair"], [46, 3, 1, "", "complement"], [46, 3, 1, "", "copy"], [46, 3, 1, "", "copy_annotations"], [46, 3, 1, "", "count"], [46, 3, 1, "", "count_degenerate"], [46, 3, 1, "", "count_gaps"], [46, 3, 1, "", "counts"], [46, 3, 1, "", "degap"], [46, 3, 1, "", "diff"], [46, 3, 1, "", "disambiguate"], [46, 3, 1, "", "distance"], [46, 3, 1, "", "first_degenerate"], [46, 3, 1, "", "first_gap"], [46, 3, 1, "", "first_invalid"], [46, 3, 1, "", "first_non_strict"], [46, 3, 1, "", "frac_diff"], [46, 3, 1, "", "frac_diff_gaps"], [46, 3, 1, "", "frac_diff_non_gaps"], [46, 3, 1, "", "frac_same"], [46, 3, 1, "", "frac_same_gaps"], [46, 3, 1, "", "frac_same_non_gaps"], [46, 3, 1, "", "frac_similar"], [46, 3, 1, "", "gap_indices"], [46, 3, 1, "", "gap_maps"], [46, 3, 1, "", "gap_vector"], [46, 3, 1, "", "gapped_by_map"], [46, 3, 1, "", "gapped_by_map_motif_iter"], [46, 3, 1, "", "gapped_by_map_segment_iter"], [46, 3, 1, "", "get_drawable"], [46, 3, 1, "", "get_drawables"], [46, 3, 1, "", "get_features"], [46, 3, 1, "", "get_in_motif_size"], [46, 3, 1, "", "get_kmers"], [46, 3, 1, "", "get_name"], [46, 3, 1, "", "get_type"], [46, 3, 1, "", "is_annotated"], [46, 3, 1, "", "is_degenerate"], [46, 3, 1, "", "is_gap"], [46, 3, 1, "", "is_gapped"], [46, 3, 1, "", "is_strict"], [46, 3, 1, "", "is_valid"], [46, 3, 1, "", "iter_kmers"], [46, 4, 1, "", "line_wrap"], [46, 3, 1, "", "make_feature"], [46, 3, 1, "", "matrix_distance"], [46, 4, 1, "", "moltype"], [46, 3, 1, "", "must_match"], [46, 3, 1, "", "must_pair"], [46, 3, 1, "", "mw"], [46, 3, 1, "", "parse_out_gaps"], [46, 3, 1, "", "possibilities"], [46, 3, 1, "", "rc"], [46, 3, 1, "", "replace"], [46, 3, 1, "", "replace_annotation_db"], [46, 3, 1, "", "resolved_ambiguities"], [46, 3, 1, "", "shuffle"], [46, 3, 1, "", "sliding_windows"], [46, 3, 1, "", "strand_symmetry"], [46, 3, 1, "", "strip_bad"], [46, 3, 1, "", "strip_bad_and_gaps"], [46, 3, 1, "", "strip_degenerate"], [46, 3, 1, "", "to_fasta"], [46, 3, 1, "", "to_html"], [46, 3, 1, "", "to_json"], [46, 3, 1, "", "to_moltype"], [46, 3, 1, "", "to_rich_dict"], [46, 3, 1, "", "with_masked_annotations"], [46, 3, 1, "", "with_termini_unknown"]], "cogent3.core.sequence.RnaSequence": [[47, 3, 1, "", "add_feature"], [47, 3, 1, "", "annotate_from_gff"], [47, 3, 1, "", "annotate_matches_to"], [47, 2, 1, "", "annotation_db"], [47, 2, 1, "", "annotation_offset"], [47, 3, 1, "", "can_match"], [47, 3, 1, "", "can_mismatch"], [47, 3, 1, "", "can_mispair"], [47, 3, 1, "", "can_pair"], [47, 4, 1, "", "codon_alphabet"], [47, 3, 1, "", "complement"], [47, 3, 1, "", "copy"], [47, 3, 1, "", "copy_annotations"], [47, 3, 1, "", "count"], [47, 3, 1, "", "count_degenerate"], [47, 3, 1, "", "count_gaps"], [47, 3, 1, "", "counts"], [47, 3, 1, "", "degap"], [47, 3, 1, "", "diff"], [47, 3, 1, "", "disambiguate"], [47, 3, 1, "", "distance"], [47, 3, 1, "", "first_degenerate"], [47, 3, 1, "", "first_gap"], [47, 3, 1, "", "first_invalid"], [47, 3, 1, "", "first_non_strict"], [47, 3, 1, "", "frac_diff"], [47, 3, 1, "", "frac_diff_gaps"], [47, 3, 1, "", "frac_diff_non_gaps"], [47, 3, 1, "", "frac_same"], [47, 3, 1, "", "frac_same_gaps"], [47, 3, 1, "", "frac_same_non_gaps"], [47, 3, 1, "", "frac_similar"], [47, 3, 1, "", "gap_indices"], [47, 3, 1, "", "gap_maps"], [47, 3, 1, "", "gap_vector"], [47, 3, 1, "", "gapped_by_map"], [47, 3, 1, "", "gapped_by_map_motif_iter"], [47, 3, 1, "", "gapped_by_map_segment_iter"], [47, 3, 1, "", "get_drawable"], [47, 3, 1, "", "get_drawables"], [47, 3, 1, "", "get_features"], [47, 3, 1, "", "get_in_motif_size"], [47, 3, 1, "", "get_kmers"], [47, 3, 1, "", "get_name"], [47, 3, 1, "", "get_translation"], [47, 3, 1, "", "get_type"], [47, 3, 1, "", "has_terminal_stop"], [47, 3, 1, "", "is_annotated"], [47, 3, 1, "", "is_degenerate"], [47, 3, 1, "", "is_gap"], [47, 3, 1, "", "is_gapped"], [47, 3, 1, "", "is_strict"], [47, 3, 1, "", "is_valid"], [47, 3, 1, "", "iter_kmers"], [47, 4, 1, "", "line_wrap"], [47, 3, 1, "", "make_feature"], [47, 3, 1, "", "matrix_distance"], [47, 4, 1, "", "moltype"], [47, 3, 1, "", "must_match"], [47, 3, 1, "", "must_pair"], [47, 3, 1, "", "mw"], [47, 3, 1, "", "parse_out_gaps"], [47, 3, 1, "", "possibilities"], [47, 4, 1, "", "protein"], [47, 3, 1, "", "rc"], [47, 3, 1, "", "replace"], [47, 3, 1, "", "replace_annotation_db"], [47, 3, 1, "", "resolved_ambiguities"], [47, 3, 1, "", "reverse_complement"], [47, 3, 1, "", "shuffle"], [47, 3, 1, "", "sliding_windows"], [47, 3, 1, "", "strand_symmetry"], [47, 3, 1, "", "strip_bad"], [47, 3, 1, "", "strip_bad_and_gaps"], [47, 3, 1, "", "strip_degenerate"], [47, 3, 1, "", "to_dna"], [47, 3, 1, "", "to_fasta"], [47, 3, 1, "", "to_html"], [47, 3, 1, "", "to_json"], [47, 3, 1, "", "to_moltype"], [47, 3, 1, "", "to_rich_dict"], [47, 3, 1, "", "to_rna"], [47, 3, 1, "", "trim_stop_codon"], [47, 3, 1, "", "with_masked_annotations"], [47, 3, 1, "", "with_termini_unknown"]], "cogent3.core.tree": [[53, 1, 1, "", "PhyloNode"]], "cogent3.core.tree.PhyloNode": [[53, 3, 1, "", "ancestors"], [53, 3, 1, "", "append"], [53, 3, 1, "", "ascii_art"], [53, 3, 1, "", "balanced"], [53, 3, 1, "", "bifurcating"], [53, 3, 1, "", "child_groups"], [53, 3, 1, "", "child_parent_map"], [53, 3, 1, "", "compare_by_names"], [53, 3, 1, "", "compare_by_subsets"], [53, 3, 1, "", "compare_by_tip_distances"], [53, 3, 1, "", "compare_name"], [53, 3, 1, "", "copy"], [53, 3, 1, "", "copy_topology"], [53, 3, 1, "", "deepcopy"], [53, 3, 1, "", "descendant_array"], [53, 3, 1, "", "distance"], [53, 3, 1, "", "extend"], [53, 3, 1, "", "get_connecting_edges"], [53, 3, 1, "", "get_connecting_node"], [53, 3, 1, "", "get_distances"], [53, 3, 1, "", "get_edge_names"], [53, 3, 1, "", "get_edge_vector"], [53, 3, 1, "", "get_figure"], [53, 3, 1, "", "get_max_tip_tip_distance"], [53, 3, 1, "", "get_newick"], [53, 3, 1, "", "get_node_matching_name"], [53, 3, 1, "", "get_node_names"], [53, 3, 1, "", "get_nodes_dict"], [53, 3, 1, "", "get_param_value"], [53, 3, 1, "", "get_sub_tree"], [53, 3, 1, "", "get_tip_names"], [53, 3, 1, "", "get_xml"], [53, 3, 1, "", "index_in_parent"], [53, 3, 1, "", "insert"], [53, 3, 1, "", "is_root"], [53, 3, 1, "", "is_tip"], [53, 3, 1, "", "isroot"], [53, 3, 1, "", "istip"], [53, 3, 1, "", "iter_nontips"], [53, 3, 1, "", "iter_tips"], [53, 3, 1, "", "last_common_ancestor"], [53, 3, 1, "", "lca"], [53, 2, 1, "", "length"], [53, 3, 1, "", "levelorder"], [53, 3, 1, "", "lin_rajan_moret"], [53, 3, 1, "", "lowest_common_ancestor"], [53, 3, 1, "", "make_tree_array"], [53, 3, 1, "", "max_tip_tip_distance"], [53, 3, 1, "", "multifurcating"], [53, 3, 1, "", "name_unnamed_nodes"], [53, 3, 1, "", "non_tip_children"], [53, 3, 1, "", "nontips"], [53, 2, 1, "", "parent"], [53, 3, 1, "", "pop"], [53, 3, 1, "", "postorder"], [53, 3, 1, "", "pre_and_postorder"], [53, 3, 1, "", "preorder"], [53, 3, 1, "", "prune"], [53, 3, 1, "", "reassign_names"], [53, 3, 1, "", "remove"], [53, 3, 1, "", "remove_deleted"], [53, 3, 1, "", "remove_node"], [53, 3, 1, "", "root"], [53, 3, 1, "", "root_at_midpoint"], [53, 3, 1, "", "rooted_at"], [53, 3, 1, "", "rooted_with_tip"], [53, 3, 1, "", "same_shape"], [53, 3, 1, "", "same_topology"], [53, 3, 1, "", "scale_branch_lengths"], [53, 3, 1, "", "separation"], [53, 3, 1, "", "set_max_tip_tip_distance"], [53, 3, 1, "", "set_param_value"], [53, 3, 1, "", "set_tip_distances"], [53, 3, 1, "", "siblings"], [53, 3, 1, "", "sorted"], [53, 3, 1, "", "subset"], [53, 3, 1, "", "subsets"], [53, 3, 1, "", "tip_children"], [53, 3, 1, "", "tip_to_tip_distances"], [53, 3, 1, "", "tips"], [53, 3, 1, "", "tips_within_distance"], [53, 3, 1, "", "to_json"], [53, 3, 1, "", "to_rich_dict"], [53, 3, 1, "", "total_descending_branch_length"], [53, 3, 1, "", "total_length"], [53, 3, 1, "", "traverse"], [53, 3, 1, "", "unrooted"], [53, 3, 1, "", "unrooted_deepcopy"], [53, 3, 1, "", "write"]], "cogent3.parse.table": [[49, 1, 1, "", "FilteringParser"]], "cogent3.util.deserialise": [[56, 0, 1, "", "deserialise_object"], [55, 1, 1, "", "register_deserialiser"]], "cogent3.util.table": [[50, 1, 1, "", "Columns"], [51, 1, 1, "", "Table"]], "cogent3.util.table.Columns": [[50, 3, 1, "", "add_column_from_str"], [50, 2, 1, "", "array"], [50, 3, 1, "", "clear"], [50, 3, 1, "", "get"], [50, 2, 1, "", "index_name"], [50, 3, 1, "", "items"], [50, 3, 1, "", "iter_rows"], [50, 3, 1, "", "keys"], [50, 2, 1, "", "order"], [50, 3, 1, "", "pop"], [50, 3, 1, "", "popitem"], [50, 3, 1, "", "setdefault"], [50, 3, 1, "", "take_columns"], [50, 3, 1, "", "to_dict"], [50, 3, 1, "", "to_rich_dict"], [50, 3, 1, "", "update"], [50, 3, 1, "", "values"]], "cogent3.util.table.Table": [[51, 3, 1, "", "appended"], [51, 2, 1, "", "array"], [51, 3, 1, "", "count"], [51, 3, 1, "", "count_unique"], [51, 3, 1, "", "cross_join"], [51, 3, 1, "", "distinct_values"], [51, 3, 1, "", "filtered"], [51, 3, 1, "", "filtered_by_column"], [51, 2, 1, "", "format"], [51, 3, 1, "", "format_column"], [51, 3, 1, "", "get_columns"], [51, 3, 1, "", "get_row_indices"], [51, 3, 1, "", "head"], [51, 2, 1, "", "header"], [51, 2, 1, "", "index_name"], [51, 3, 1, "", "inner_join"], [51, 3, 1, "", "joined"], [51, 2, 1, "", "legend"], [51, 3, 1, "", "normalized"], [51, 3, 1, "", "set_repr_policy"], [51, 2, 1, "", "shape"], [51, 3, 1, "", "sorted"], [51, 2, 1, "", "space"], [51, 3, 1, "", "sum_columns"], [51, 3, 1, "", "sum_rows"], [51, 3, 1, "", "summed"], [51, 3, 1, "", "tail"], [51, 2, 1, "", "title"], [51, 3, 1, "", "to_categorical"], [51, 3, 1, "", "to_csv"], [51, 3, 1, "", "to_dataframe"], [51, 3, 1, "", "to_dict"], [51, 3, 1, "", "to_html"], [51, 3, 1, "", "to_json"], [51, 3, 1, "", "to_latex"], [51, 3, 1, "", "to_list"], [51, 3, 1, "", "to_markdown"], [51, 3, 1, "", "to_plotly"], [51, 3, 1, "", "to_rich_dict"], [51, 3, 1, "", "to_rst"], [51, 3, 1, "", "to_string"], [51, 3, 1, "", "to_tsv"], [51, 3, 1, "", "tolist"], [51, 3, 1, "", "transposed"], [51, 3, 1, "", "with_new_column"], [51, 3, 1, "", "with_new_header"], [51, 3, 1, "", "write"]]}, "objtypes": {"0": "py:function", "1": "py:class", "2": "py:property", "3": "py:method", "4": "py:attribute", "5": "py:exception"}, "objnames": {"0": ["py", "function", "Python function"], "1": ["py", "class", "Python class"], "2": ["py", "property", "Python property"], "3": ["py", "method", "Python method"], "4": ["py", "attribute", "Python attribute"], "5": ["py", "exception", "Python exception"]}, "titleterms": {"cogent3": [0, 42, 88, 94, 95, 109, 136, 148, 149, 151, 153], "licens": [0, 148], "available_app": 1, "available_cod": 2, "available_model": 3, "available_moltyp": 4, "get_cod": [5, 110], "get_model": [6, 97], "get_moltyp": 7, "load_aligned_seq": 8, "load_annot": 9, "load_delimit": [10, 102, 107], "load_seq": [11, 93], "load_tabl": 12, "load_tre": 13, "load_unaligned_seq": 14, "make_aligned_seq": [15, 91], "make_seq": 16, "make_t": 17, "make_tre": 18, "make_unaligned_seq": 19, "open": [20, 64, 101], "open_data_stor": 21, "align": [22, 23, 57, 58, 59, 69, 71, 80, 91, 94, 95, 96, 97, 98, 101, 103, 116, 117, 119, 125, 130, 144], "arrayalign": [24, 91], "sequencecollect": [25, 91], "alphabet": [26, 27, 92], "annot": [28, 93, 98, 114], "featur": [29, 62, 93, 98, 118], "annotation_db": 30, "basicannotationdb": [31, 93], "genbankannotationdb": 32, "gffannotationdb": 33, "define_app": 34, "datamemb": 35, "datastoredirectori": 36, "readonlydatastorezip": 37, "register_datastore_read": 38, "datastoresqlit": [39, 64], "geneticcod": 40, "genetic_cod": 41, "api": 42, "util": [42, 109, 133, 136], "function": [42, 62, 87, 88, 91, 93, 97, 109], "For": [42, 93, 97, 138], "load": [42, 93, 98, 101, 102, 105, 106, 107], "data": [42, 62, 64, 93, 98, 102, 103, 107, 111, 116, 133, 138], "from": [42, 62, 67, 90, 91, 93, 94, 95, 98, 99, 101, 102, 105, 106, 107, 109, 114, 117, 152], "file": [42, 57, 58, 59, 91, 93, 98, 101, 102, 105, 106, 107, 111], "make": [42, 64, 97, 101, 102, 104, 107, 126, 127, 152], "type": [42, 62, 64, 87, 88, 90, 93, 101, 104, 106, 109], "standard": [42, 101, 107, 129], "python": [42, 101, 102, 107], "get": [42, 60, 61, 64, 66, 73, 75, 90, 91, 97, 98, 99, 104, 106, 107, 110], "commonli": 42, "us": [42, 57, 58, 59, 62, 64, 77, 78, 91, 93, 94, 95, 96, 97, 98, 99, 101, 102, 104, 106, 107, 109, 111, 129, 131, 132, 136, 139, 147, 153], "displai": [42, 63, 98, 107, 112, 113, 115], "builtin": 42, "The": [42, 62, 64, 68, 87, 91, 97, 106, 143], "major": 42, "compos": [42, 62, 87, 88], "app": [42, 60, 61, 62, 63, 64, 65, 67, 79, 81, 82, 88, 136], "datastor": 42, "deserialis": 42, "moltyp": [43, 44, 91, 92, 104], "dnasequ": [45, 90, 99], "proteinsequ": [46, 105], "rnasequ": 47, "sequenc": [48, 69, 80, 83, 84, 88, 90, 91, 92, 93, 97, 98, 99, 101, 103, 104, 105, 114, 115, 117, 118, 119, 128, 130, 152], "filteringpars": [49, 102, 107], "column": [50, 91, 102, 107], "tabl": [51, 52, 97, 102, 107], "phylonod": 53, "tree": [54, 57, 58, 59, 66, 71, 76, 95, 97, 103, 106, 119, 127, 134, 139], "register_deserialis": 55, "deserialise_object": 56, "codon": [57, 69, 76, 77, 90, 91, 94, 97, 99, 129], "model": [57, 58, 59, 66, 69, 70, 71, 76, 77, 78, 84, 97, 129, 131, 132, 133, 142], "default": [57, 58, 59], "set": [57, 58, 59, 62, 90, 97, 102, 107, 108, 109, 113, 116, 121, 123], "specifi": [57, 58, 59, 70, 71, 97, 101, 102, 107, 138, 139, 142], "differ": [57, 58, 59, 88, 91, 93, 142], "distanc": [57, 58, 59, 95, 96, 106, 109, 128], "measur": [57, 58, 59, 138, 139], "estim": [57, 58, 59, 66, 67, 96, 97, 138], "guid": [57, 58, 59, 146], "provid": [57, 58, 97], "gap": [57, 90, 91, 94, 98, 115, 125], "paramet": [57, 66, 67, 70, 97, 113, 142], "substitut": [57, 58, 97, 129, 131, 142], "proven": [57, 58, 59], "ar": [57, 58, 59, 62, 93, 106, 107, 132], "record": [57, 58, 59, 62, 64, 87, 93], "info": [57, 58, 59], "attribut": [57, 58, 59, 68, 93, 108, 109, 113], "nucleotid": [58, 66, 69, 71, 77, 78, 91, 94, 97], "protein": [59, 90, 91, 97, 105, 117, 125, 131], "an": [60, 61, 62, 64, 69, 71, 90, 91, 93, 97, 98, 101, 102, 107, 109, 116, 131, 134, 144], "help": [61, 89], "overview": [62, 81, 97], "rule": 62, "exampl": [62, 88, 98, 116, 134], "sequenti": 62, "like": [62, 91, 108, 109], "multi": 62, "step": 62, "process": [62, 87, 132], "sever": 62, "appli": [62, 64, 66, 67, 69, 71, 76, 77, 78], "multipl": [62, 107, 117, 136, 145], "other": 62, "import": 62, "analys": 62, "log": [62, 64, 97], "failur": 62, "you": 62, "can": [62, 64, 76, 107], "track": [62, 87, 114], "progress": [62, 94], "do": [62, 64, 106, 149, 151], "parallel": [62, 136], "comput": [62, 91, 96, 136], "all": [62, 64, 75, 91, 99, 106, 118], "abov": 62, "instal": [63, 147], "store": 64, "collect": [64, 91, 101], "how": [64, 93, 97, 98, 99, 107, 149], "i": [64, 91, 106, 109, 149, 151], "structur": 64, "support": [64, 88, 89, 99, 124], "oper": [64, 108, 109], "read": 64, "onli": [64, 102, 107], "summaris": 64, "member": 64, "one": [64, 98, 99, 107], "loop": 64, "over": [64, 91, 107], "own": [64, 82, 109], "writeabl": 64, "serialis": 64, "interrog": [64, 93], "run": 64, "pull": 64, "togeth": 64, "defin": [64, 65, 97], "analysi": [64, 97, 112, 116, 130, 133, 140, 145], "creat": [64, 67, 90, 91, 92, 93, 98, 102, 105, 106, 107, 109], "inspect": 64, "outcom": 64, "reconstruct": [65, 97, 133, 139], "ancestr": [65, 97], "state": 65, "ancestral_st": 65, "discret": [66, 138], "time": [66, 68, 70, 77, 78, 97], "non": [66, 68, 69, 70, 71, 76, 91, 107, 108, 109], "stationari": [66, 68, 69, 70, 71, 76], "branch": [66, 74, 75, 76, 97, 106, 129, 142], "length": [66, 76, 97, 106], "paralinear": 66, "extract": [67, 91], "maximum": [67, 97, 106, 139], "likelihood": [67, 96, 97, 139, 145], "model_result": [67, 69], "tabulate_stat": 67, "edg": [67, 106, 121, 123, 142], "global": 67, "motif": [67, 91, 97], "test": [68, 72, 73, 74, 75, 83, 85, 90, 97, 106, 109, 129, 135, 138, 141], "hypothesi": 68, "revers": [68, 77, 78, 90, 107, 113], "hypothesis_result": 68, "ha": [68, 102, 107, 132], "kei": [68, 108, 109], "access": [68, 91, 108, 109], "statist": [68, 75, 91, 138], "null": 68, "altern": [68, 142], "save": [68, 97], "result": [68, 87, 97], "3": 69, "fit": [69, 97, 139], "separ": [69, 109], "each": [69, 106], "posit": [69, 90, 91, 98], "heterogen": [70, 73, 74, 97, 129, 132, 140], "distinct": [70, 107], "rate": [70, 97, 129, 132, 140, 141], "matrix": [70, 109], "great": 70, "ap": 70, "via": [71, 93, 95, 98], "instanc": [71, 93], "path": [71, 106], "natsel_neutr": 72, "select": [72, 85, 99, 102, 106, 107, 118], "neutral": [72, 129, 135], "natsel_sitehet": 73, "site": [73, 75, 129, 132], "individu": [73, 91, 106], "posterior": [73, 75], "probabl": [73, 75, 91, 97], "natsel_timehet": 74, "natsel_zhang": 75, "class": [75, 109, 132], "membership": 75, "tabular": [75, 107], "form": [75, 77], "gnc": 76, "we": 76, "obtain": [76, 99], "en": 76, "condit": [77, 134], "gtr": 78, "write": [82, 91, 93, 106, 107], "your": [82, 88, 97, 109], "hypothes": [83, 97], "about": 83, "evolut": [83, 84, 133], "natur": 85, "could": 87, "notcomplet": 87, "object": [87, 91, 95, 96, 99, 101, 102, 105, 106, 107, 109, 134], "fals": 87, "error": 87, "propag": 87, "turn": 88, "A": [88, 95, 132, 135, 139], "simpl": [88, 116], "renam": 88, "user": [88, 146], "output": [88, 106], "commun": 89, "contribut": 89, "ask": 89, "post": 89, "bug": 89, "citat": 89, "gener": [90, 93, 133], "molecular": [90, 101, 104], "dna": [90, 91, 99, 105, 125], "rna": [90, 91], "string": [90, 91, 101, 102, 105, 107], "convert": [90, 91, 92, 94, 99, 105], "fasta": [90, 91, 93, 101], "format": [90, 91, 101, 102, 106, 107], "name": [90, 91, 93, 98, 105, 106, 107], "chang": [90, 107, 124], "complement": [90, 104, 113], "translat": [90, 99], "complementar": 90, "join": [90, 107, 127], "two": [90, 93, 106, 132], "slice": [90, 91, 98, 107], "3rd": [90, 91], "1st": 90, "2nd": 90, "return": [90, 98], "random": [90, 107], "version": [90, 147], "remov": [90, 91, 114], "what": [91, 93, 107, 149, 151], "": [91, 106, 109], "between": [91, 106, 128, 142], "basic": [91, 113], "construct": [91, 109, 129], "ad": [91, 107], "new": [91, 107], "exist": [91, 98, 107, 108, 109], "append": [91, 107], "insert": 91, "base": [91, 96], "refer": 91, "element": [91, 102, 107, 108, 109], "list": [91, 101, 102, 107, 109], "subset": 91, "handl": [91, 101], "phylip": [91, 105], "By": [91, 95, 97], "row": [91, 102, 107], "singl": [91, 93, 99, 107, 109, 136, 139], "region": [91, 93, 98], "contigu": 91, "iter": [91, 107, 109], "filter": [91, 107], "trim": 91, "termin": 91, "stop": [91, 99], "elimin": 91, "charact": [91, 101], "variabl": [91, 109], "constant": [91, 97], "identifi": 91, "arbitrari": 91, "count": [91, 107, 115], "work": [91, 106], "calcul": [91, 96, 106, 128], "fraction": 91, "map": [91, 125, 136], "unalign": [91, 101], "e": 91, "tupl": [92, 109], "integ": [92, 106], "databas": 93, "annotationdb": [93, 98], "standalon": 93, "gff": [93, 98], "genbank": [93, 98], "summari": 93, "add": [93, 107], "custom": [93, 98, 104], "disk": 93, "effici": 93, "re": 93, "queri": [93, 98], "biotyp": [93, 98, 118], "interest": [93, 98], "extend": 93, "field": 93, "mani": [93, 99, 107], "uniqu": [93, 107, 115], "gene": 93, "given": [93, 106], "genom": 93, "find": [93, 98, 99], "children": [93, 98, 106], "parent": [93, 98], "combin": 93, "check": [93, 97, 109], "compat": 93, "take": [93, 98], "union": [93, 98], "updat": [93, 108, 109], "anoth": 93, "initialis": 93, "assign": 93, "directli": [93, 95, 96, 136], "associ": [93, 98], "build": [94, 95], "aa": 94, "seq": 94, "nuc": 94, "phylogeni": 95, "phylogenet": [95, 119, 133, 139], "pairwis": [95, 96, 128], "quick_tre": 95, "distancematrix": 95, "explicitli": 95, "phylo": [95, 97], "nj": 95, "dict": [95, 101, 102, 107, 108, 109], "least": [95, 139], "squar": [95, 123, 139], "ml": 95, "genet": [96, 99, 103, 110], "fast": [96, 132], "evolutionari": 97, "avail": [97, 98, 104, 110], "pre": [97, 139], "scope": [97, 142], "start": 97, "valu": [97, 107], "bound": 97, "optimis": [97, 109], "upper": 97, "hmm": 97, "choic": 97, "wa": 97, "success": 97, "number": [97, 102, 107], "free": 97, "aikak": 97, "inform": [97, 116], "criterion": 97, "bayesian": 97, "One": [97, 106], "just": 97, "As": 97, "ratio": 97, "parametr": [97, 137], "bootstrap": [97, 124, 137], "determin": [97, 109], "confid": 97, "interv": 97, "mle": 97, "add_featur": 98, "On": [98, 116], "within": [98, 106], "bulk": 98, "them": [98, 99], "ani": 98, "span": 98, "method": [98, 99, 106], "its": [98, 106], "coordin": 98, "shadow": 98, "intergen": 98, "mask": 98, "copi": [98, 106], "behaviour": 98, "nucleic": [98, 104, 105], "acid": [98, 99, 104, 105], "code": [99, 103, 104, 110], "six": 99, "frame": 99, "out": 99, "look": [99, 139], "up": 99, "amino": 99, "correspond": 99, "group": 99, "codonalphabet": 99, "seri": [99, 101], "contain": [99, 109], "cookbook": 100, "url": [101, 102, 107], "todo": [101, 112, 113, 128, 132], "strip": 101, "label": 101, "parser": 101, "line": [101, 102, 107], "overload": 101, "csv": [102, 107], "delimit": [102, 107], "without": [102, 107], "header": [102, 107], "part": [102, 107], "big": [102, 107], "some": [102, 107], "raw": [102, 107], "order": [102, 107], "when": [102, 107], "index": [102, 107, 150], "panda": [102, 107], "datafram": [102, 107], "2d": [102, 107], "complex": [102, 107], "empti": [102, 107], "manipul": [103, 106, 133, 134], "biolog": [103, 130], "ambigu": 104, "definit": 104, "degener": 104, "verifi": 104, "visual": 106, "ascii_art": 106, "node": [106, 134], "same": 106, "tip": [106, 120, 121, 122, 123], "connect": 106, "last": 106, "common": 106, "ancestor": 106, "lca": 106, "farthest": 106, "apart": 106, "reroot": 106, "At": 106, "midpoint": 106, "Near": 106, "represent": 106, "newick": 106, "xml": 106, "travers": 106, "preorder": 106, "postord": 106, "subtre": 106, "wai": 106, "prune": 106, "full": 106, "unroot": 106, "transform": [106, 138], "bifurc": 106, "balanc": 106, "topologi": [106, 139], "scale": 106, "place": 106, "ascii": 106, "compar": 106, "matric": 106, "titl": 107, "legend": 107, "indic": 107, "numer": [107, 138], "precis": 107, "digit": 107, "space": [107, 139], "wrap": [107, 109], "top": 107, "head": 107, "bottom": 107, "tail": 107, "repr": 107, "ones": 107, "numpi": 107, "arrai": 107, "orient": 107, "conting": 107, "sum": 107, "strictli": 107, "mix": [107, 129], "sort": 107, "involv": 107, "occurr": 107, "merg": 107, "transpos": 107, "markdown": 107, "str": 107, "latex": 107, "restructur": 107, "text": [107, 124], "grid": 107, "to_str": 107, "bedgraph": 107, "html": 107, "written": 107, "formmat": 107, "uniondict": [108, 109], "miscellan": 109, "forc": 109, "curri": 109, "see": 109, "char": 109, "flatten": 109, "deepli": 109, "nest": 109, "case": 109, "insensit": 109, "lookup": 109, "deleg": 109, "hide": 109, "constrain": 109, "document": 111, "coevolut": 112, "heatmap": 112, "score": 112, "violin": [112, 115], "plot": [112, 113, 115], "boxplot": 112, "dotplot": [113, 114], "modifi": 113, "match": 113, "reload": 114, "json": 114, "per": 115, "bar": 115, "chart": 115, "box": 115, "illustr": 116, "sampl": 116, "logo": 117, "draw": [117, 118], "tfb": 117, "segment": 118, "imag": 119, "galleri": 119, "angular": 120, "dendrogram": [120, 121, 122, 123], "style": [120, 121, 122, 123], "With": [120, 121, 122, 123], "contemporan": [120, 121, 122, 123], "circular": 121, "colour": [121, 123], "radial": 122, "show": 124, "placement": 124, "upgma": 126, "cluster": 126, "neighbor": 127, "variant": 129, "perform": [130, 137, 141], "coevolutionari": 130, "empir": 131, "evalu": 132, "hidden": 132, "markov": 132, "ho": 132, "1": 132, "gamma": 132, "distribut": 132, "independ": 132, "2": 132, "slowli": 132, "evolv": 132, "auto": [132, 138], "correl": [132, 138], "patch": 132, "kappa": 132, "tutori": 133, "modif": 134, "theori": 135, "apply_to": 136, "period": 138, "signal": 138, "continu": 138, "fourier": 138, "symbol": 138, "power": 138, "signific": 138, "permut": 138, "best": 139, "more": 139, "rigor": 139, "search": 139, "assess": 139, "rel": 141, "allow": 142, "clade": 142, "stem": 142, "argument": 142, "applic": 142, "simplest": 143, "script": 143, "simul": 144, "loci": 145, "minim": 147, "graph": 147, "tool": 147, "develop": 147, "conda": 147, "mamba": 147, "doe": 149, "relat": 149, "pycog": 149, "longer": [149, 151], "includ": [149, 151], "modul": [149, 151], "x": [149, 151], "project": [151, 153], "histori": 151, "sens": 152}, "envversion": {"sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "nbsphinx": 4, "sphinx.ext.todo": 2, "sphinxcontrib.bibtex": 9, "sphinx": 60}, "alltitles": {"Cogent3 License": [[0, "cogent3-license"], [148, "cogent3-license"]], "available_apps": [[1, "available-apps"]], "available_codes": [[2, "available-codes"]], "available_models": [[3, "available-models"]], "available_moltypes": [[4, "available-moltypes"]], "get_code": [[5, "get-code"]], "get_model": [[6, "get-model"]], "get_moltype": [[7, "get-moltype"]], "load_aligned_seqs": [[8, "load-aligned-seqs"]], "load_annotations": [[9, "load-annotations"]], "load_delimited": [[10, "load-delimited"]], "load_seq": [[11, "load-seq"]], "load_table": [[12, "load-table"]], "load_tree": [[13, "load-tree"]], "load_unaligned_seqs": [[14, "load-unaligned-seqs"]], "make_aligned_seqs": [[15, "make-aligned-seqs"]], "make_seq": [[16, "make-seq"]], "make_table": [[17, "make-table"]], "make_tree": [[18, "make-tree"]], "make_unaligned_seqs": [[19, "make-unaligned-seqs"]], "open": [[20, "open"]], "open_data_store": [[21, "open-data-store"]], "alignment": [[22, "alignment"]], "Alignment": [[23, "alignment"]], "ArrayAlignment": [[24, "arrayalignment"]], "SequenceCollection": [[25, "sequencecollection"]], "alphabet": [[26, "alphabet"]], "Alphabet": [[27, "alphabet"]], "annotation": [[28, "annotation"]], "Feature": [[29, "feature"]], "annotation_db": [[30, "annotation-db"]], "BasicAnnotationDb": [[31, "basicannotationdb"]], "GenbankAnnotationDb": [[32, "genbankannotationdb"]], "GffAnnotationDb": [[33, "gffannotationdb"]], "define_app": [[34, "define-app"]], "DataMember": [[35, "datamember"]], "DataStoreDirectory": [[36, "datastoredirectory"]], "ReadOnlyDataStoreZipped": [[37, "readonlydatastorezipped"]], "register_datastore_reader": [[38, "register-datastore-reader"]], "DataStoreSqlite": [[39, "datastoresqlite"]], "GeneticCode": [[40, "geneticcode"]], "genetic_code": [[41, "genetic-code"]], "API": [[42, "api"]], "Utility Functions For": [[42, "utility-functions-for"]], "Loading data from file": [[42, "loading-data-from-file"]], "Making cogent3 types from standard Python types": [[42, "making-cogent3-types-from-standard-python-types"]], "Getting commonly used cogent3 types": [[42, "getting-commonly-used-cogent3-types"]], "Displaying cogent3 builtins": [[42, "displaying-cogent3-builtins"]], "The Major cogent3 Data Types": [[42, "the-major-cogent3-data-types"]], "Composable Apps": [[42, "composable-apps"]], "Datastore": [[42, "datastore"]], "Deserialising": [[42, "deserialising"]], "MolType": [[43, "moltype"]], "moltype": [[44, "moltype"]], "DnaSequence": [[45, "dnasequence"]], "ProteinSequence": [[46, "proteinsequence"]], "RnaSequence": [[47, "rnasequence"]], "sequence": [[48, "sequence"]], "FilteringParser": [[49, "filteringparser"]], "Columns": [[50, "columns"]], "Table": [[51, "table"]], "table": [[52, "table"]], "PhyloNode": [[53, "phylonode"]], "tree": [[54, "tree"]], "register_deserialiser": [[55, "register-deserialiser"]], "deserialise_object": [[56, "deserialise-object"]], "Using a codon model": [[57, "using-a-codon-model"]], "Codon alignment with default settings": [[57, "codon-alignment-with-default-settings"]], "Specify a different distance measure for estimating the guide tree": [[57, "specify-a-different-distance-measure-for-estimating-the-guide-tree"], [58, "specify-a-different-distance-measure-for-estimating-the-guide-tree"], [59, "specify-a-different-distance-measure-for-estimating-the-guide-tree"]], "Providing a guide tree": [[57, "providing-a-guide-tree"], [58, "providing-a-guide-tree"]], "Specifying the gap parameters": [[57, "specifying-the-gap-parameters"]], "Specifying the substitution model and parameters": [[57, "specifying-the-substitution-model-and-parameters"]], "Alignment settings and file provenance are recorded in the info attribute": [[57, "alignment-settings-and-file-provenance-are-recorded-in-the-info-attribute"], [58, "alignment-settings-and-file-provenance-are-recorded-in-the-info-attribute"], [59, "alignment-settings-and-file-provenance-are-recorded-in-the-info-attribute"]], "Using a nucleotide model": [[58, "using-a-nucleotide-model"]], "Nucleotide alignment with default settings": [[58, "nucleotide-alignment-with-default-settings"]], "Specifying the substitution model": [[58, "specifying-the-substitution-model"]], "Using a protein model": [[59, "using-a-protein-model"]], "Protein alignment with default settings": [[59, "protein-alignment-with-default-settings"]], "Getting an app": [[60, "getting-an-app"]], "Getting help on an app": [[61, "getting-help-on-an-app"]], "Overview of using apps": [[62, "overview-of-using-apps"]], "Types of apps": [[62, "types-of-apps"]], "Composability": [[62, "composability"]], "Composability rules": [[62, "composability-rules"]], "An example": [[62, "an-example"]], "Using apps sequentially like functions": [[62, "using-apps-sequentially-like-functions"]], "Composing a multi-step process from several apps": [[62, "composing-a-multi-step-process-from-several-apps"]], "Applying a process to multiple data records": [[62, "applying-a-process-to-multiple-data-records"]], "Other important features": [[62, "other-important-features"]], "The settings and data analysed will be logged": [[62, "the-settings-and-data-analysed-will-be-logged"]], "Failures are recorded": [[62, "failures-are-recorded"]], "You can track progress": [[62, "you-can-track-progress"]], "You can do parallel computation": [[62, "you-can-do-parallel-computation"]], "All of the above": [[62, "all-of-the-above"]], "Displaying installed apps": [[63, "displaying-installed-apps"]], "Data stores \u2013 collections of data records": [[64, "data-stores-collections-of-data-records"]], "How do I use a data store?": [[64, "how-do-i-use-a-data-store"]], "Types of data store": [[64, "types-of-data-store"]], "The structure of data stores": [[64, "the-structure-of-data-stores"]], "Supported operations on a data store": [[64, "supported-operations-on-a-data-store"]], "Opening a data store": [[64, "opening-a-data-store"]], "Opening a read only data store": [[64, "opening-a-read-only-data-store"]], "Summarising the data store": [[64, "summarising-the-data-store"]], "Data store \u201cmembers\u201d": [[64, "data-store-members"]], "Get one member": [[64, "get-one-member"]], "Looping over a data store": [[64, "looping-over-a-data-store"]], "Members can read their own data": [[64, "members-can-read-their-own-data"]], "Making a writeable data store": [[64, "making-a-writeable-data-store"]], "DataStoreSqlite stores serialised data": [[64, "datastoresqlite-stores-serialised-data"]], "Interrogating run logs": [[64, "interrogating-run-logs"]], "Pulling it all together": [[64, "pulling-it-all-together"]], "Defining the data stores for analysis": [[64, "defining-the-data-stores-for-analysis"]], "Create an app and apply it": [[64, "create-an-app-and-apply-it"]], "Inspecting the outcome": [[64, "inspecting-the-outcome"]], "Reconstructing ancestral states": [[65, "reconstructing-ancestral-states"]], "Define the ancestral_states app": [[65, "define-the-ancestral-states-app"]], "Applying a discrete-time, non-stationary nucleotide model": [[66, "applying-a-discrete-time-non-stationary-nucleotide-model"]], "Get a tree with branch lengths as paralinear": [[66, "get-a-tree-with-branch-lengths-as-paralinear"]], "Getting parameter estimates": [[66, "getting-parameter-estimates"]], "Extracting maximum likelihood estimates from a model_result": [[67, "extracting-maximum-likelihood-estimates-from-a-model-result"]], "Create and apply tabulate_stats app": [[67, "create-and-apply-tabulate-stats-app"]], "Edge parameters": [[67, "edge-parameters"]], "Global parameters": [[67, "global-parameters"]], "Motif parameters": [[67, "motif-parameters"]], "Testing a hypothesis \u2013 non-stationary or time-reversible": [[68, "testing-a-hypothesis-non-stationary-or-time-reversible"]], "hypothesis_result has attributes and keys": [[68, "hypothesis-result-has-attributes-and-keys"]], "Accessing the test statistics": [[68, "accessing-the-test-statistics"]], "The null hypothesis": [[68, "the-null-hypothesis"]], "The alternate hypothesis": [[68, "the-alternate-hypothesis"]], "Saving hypothesis results": [[68, "saving-hypothesis-results"]], "Apply a non-stationary nucleotide model to an alignment with 3 sequences": [[69, "apply-a-non-stationary-nucleotide-model-to-an-alignment-with-3-sequences"]], "model_result": [[69, "model-result"]], "Fitting a separate nucleotide model to each codon position": [[69, "fitting-a-separate-nucleotide-model-to-each-codon-position"]], "Specifying a non-stationary model with time-heterogeneous parameters": [[70, "specifying-a-non-stationary-model-with-time-heterogeneous-parameters"]], "Specify a distinct rate matrix for the great apes": [[70, "specify-a-distinct-rate-matrix-for-the-great-apes"]], "Apply a non-stationary nucleotide model to an alignment with a tree": [[71, "apply-a-non-stationary-nucleotide-model-to-an-alignment-with-a-tree"]], "Specify the tree via a tree instance": [[71, "specify-the-tree-via-a-tree-instance"]], "Specify the tree via a path.": [[71, "specify-the-tree-via-a-path"]], "Apply the model to an alignment": [[71, "apply-the-model-to-an-alignment"]], "natsel_neutral \u2013 a test for selective neutrality": [[72, "natsel-neutral-a-test-for-selective-neutrality"]], "natsel_sitehet \u2013 a test of site heterogeneity": [[73, "natsel-sitehet-a-test-of-site-heterogeneity"]], "Getting the individual site posterior probabilities": [[73, "getting-the-individual-site-posterior-probabilities"]], "natsel_timehet \u2013 a test of branch heterogeneity": [[74, "natsel-timehet-a-test-of-branch-heterogeneity"]], "natsel_zhang \u2013 a branch-site test": [[75, "natsel-zhang-a-branch-site-test"]], "Getting the posterior probabilities of site-class membership": [[75, "getting-the-posterior-probabilities-of-site-class-membership"]], "Getting all the statistics in tabular form": [[75, "getting-all-the-statistics-in-tabular-form"]], "Applying GNC, a non-stationary codon model": [[76, "applying-gnc-a-non-stationary-codon-model"]], "We can obtain the tree with branch lengths as ENS": [[76, "we-can-obtain-the-tree-with-branch-lengths-as-ens"]], "Applying a time-reversible codon model": [[77, "applying-a-time-reversible-codon-model"]], "Using the conditional nucleotide form codon model": [[77, "using-the-conditional-nucleotide-form-codon-model"]], "Applying a time-reversible nucleotide model": [[78, "applying-a-time-reversible-nucleotide-model"]], "Using the GTR model": [[78, "using-the-gtr-model"]], "apps": [[79, "apps"]], "Sequence Alignment": [[80, "sequence-alignment"]], "Overview of apps": [[81, "overview-of-apps"]], "Write your own Apps": [[82, "write-your-own-apps"]], "Testing hypotheses about sequence evolution": [[83, "testing-hypotheses-about-sequence-evolution"]], "Modelling sequence evolution": [[84, "modelling-sequence-evolution"]], "Testing for natural selection": [[85, "testing-for-natural-selection"]], "Tracking records that could not be processed": [[87, "tracking-records-that-could-not-be-processed"]], "The NotCompleted object": [[87, "the-notcompleted-object"]], "NotCompleted FALSE type": [[87, "notcompleted-false-type"]], "NotCompleted ERROR type": [[87, "notcompleted-error-type"]], "Composed functions propagate NotCompleted results": [[87, "composed-functions-propagate-notcompleted-results"]], "Turn your functions into composable apps": [[88, "turn-your-functions-into-composable-apps"]], "Supported cogent3 types": [[88, "supported-cogent3-types"]], "A simple example": [[88, "a-simple-example"]], "Renaming sequences": [[88, "renaming-sequences"]], "A user app with a different output type": [[88, "a-user-app-with-a-different-output-type"]], "Community": [[89, "community"]], "Contributing": [[89, "contributing"]], "Asking for help": [[89, "asking-for-help"]], "Posting bugs": [[89, "posting-bugs"]], "Support": [[89, "support"]], "Citation": [[89, "citation"]], "Sequences": [[90, "sequences"]], "Generic molecular types": [[90, "generic-molecular-types"]], "DNA and RNA sequences": [[90, "dna-and-rna-sequences"]], "Creating a DNA sequence from a string": [[90, "creating-a-dna-sequence-from-a-string"]], "Creating a RNA sequence from a string": [[90, "creating-a-rna-sequence-from-a-string"]], "Converting to FASTA format": [[90, "converting-to-fasta-format"]], "Convert a RNA sequence to FASTA format": [[90, "convert-a-rna-sequence-to-fasta-format"]], "Creating a named sequence": [[90, "creating-a-named-sequence"]], "Setting or changing the name of a sequence": [[90, "setting-or-changing-the-name-of-a-sequence"]], "Complementing a DNA sequence": [[90, "complementing-a-dna-sequence"]], "Reverse complementing a DNA sequence": [[90, "reverse-complementing-a-dna-sequence"]], "Translate a DnaSequence to protein": [[90, "translate-a-dnasequence-to-protein"]], "Converting a DNA sequence to RNA": [[90, "converting-a-dna-sequence-to-rna"]], "Convert an RNA sequence to DNA": [[90, "convert-an-rna-sequence-to-dna"]], "Testing complementarity": [[90, "testing-complementarity"]], "Joining two DNA sequences": [[90, "joining-two-dna-sequences"]], "Slicing DNA sequences": [[90, "slicing-dna-sequences"]], "Getting 3rd positions from codons": [[90, "getting-3rd-positions-from-codons"]], "Getting 1st and 2nd positions from codons": [[90, "getting-1st-and-2nd-positions-from-codons"]], "Return a randomized version of the sequence": [[90, "return-a-randomized-version-of-the-sequence"]], "Remove gaps from a sequence": [[90, "remove-gaps-from-a-sequence"]], "Sequence Collections and Alignments": [[91, "sequence-collections-and-alignments"]], "What\u2019s the difference between Alignment and ArrayAlignment?": [[91, "what-s-the-difference-between-alignment-and-arrayalignment"]], "Basic Collection objects": [[91, "basic-collection-objects"]], "Constructing a SequenceCollection or Alignment object from strings": [[91, "constructing-a-sequencecollection-or-alignment-object-from-strings"]], "Constructing a ArrayAlignment using make_aligned_seqs": [[91, "constructing-a-arrayalignment-using-make-aligned-seqs"]], "Converting a SequenceCollection to FASTA format": [[91, "converting-a-sequencecollection-to-fasta-format"]], "Adding new sequences to an existing collection or alignment": [[91, "adding-new-sequences-to-an-existing-collection-or-alignment"]], "Appending the sequences": [[91, "appending-the-sequences"]], "Inserting the sequences": [[91, "inserting-the-sequences"]], "Inserting sequence(s) based on their alignment to a reference sequence": [[91, "inserting-sequence-s-based-on-their-alignment-to-a-reference-sequence"]], "Removing all columns with gaps in a named sequence": [[91, "removing-all-columns-with-gaps-in-a-named-sequence"]], "The elements of a collection or alignment": [[91, "the-elements-of-a-collection-or-alignment"]], "Accessing individual sequences from a collection or alignment by name": [[91, "accessing-individual-sequences-from-a-collection-or-alignment-by-name"]], "Slice the sequences from an alignment like a list": [[91, "slice-the-sequences-from-an-alignment-like-a-list"]], "Getting a subset of sequences from the alignment": [[91, "getting-a-subset-of-sequences-from-the-alignment"]], "Alignments": [[91, "alignments"]], "Creating an Alignment object from a SequenceCollection": [[91, "creating-an-alignment-object-from-a-sequencecollection"]], "Convert alignment to DNA, RNA or PROTEIN moltypes": [[91, "convert-alignment-to-dna-rna-or-protein-moltypes"]], "Handling gaps": [[91, "handling-gaps"]], "Remove all gaps from an alignment in FASTA format": [[91, "remove-all-gaps-from-an-alignment-in-fasta-format"]], "Writing sequences to file": [[91, "writing-sequences-to-file"]], "Converting an alignment to FASTA format": [[91, "converting-an-alignment-to-fasta-format"]], "Converting an alignment into Phylip format": [[91, "converting-an-alignment-into-phylip-format"]], "Converting an alignment to a list of strings": [[91, "converting-an-alignment-to-a-list-of-strings"]], "Slicing an alignment": [[91, "slicing-an-alignment"]], "By rows (sequences)": [[91, "by-rows-sequences"]], "Getting a single column from an alignment": [[91, "getting-a-single-column-from-an-alignment"]], "Getting a region of contiguous columns": [[91, "getting-a-region-of-contiguous-columns"]], "Iterating over alignment positions": [[91, "iterating-over-alignment-positions"]], "Getting codon 3rd positions from Alignment": [[91, "getting-codon-3rd-positions-from-alignment"]], "Getting codon 3rd positions from ArrayAlignment": [[91, "getting-codon-3rd-positions-from-arrayalignment"]], "Filtering positions": [[91, "filtering-positions"]], "Trim terminal stop codons": [[91, "trim-terminal-stop-codons"]], "Eliminating columns with non-nucleotide characters": [[91, "eliminating-columns-with-non-nucleotide-characters"]], "Getting all variable positions from an alignment": [[91, "getting-all-variable-positions-from-an-alignment"]], "Getting all constant positions from an alignment": [[91, "getting-all-constant-positions-from-an-alignment"]], "Getting all variable codons from an alignment": [[91, "getting-all-variable-codons-from-an-alignment"]], "Filtering sequences": [[91, "filtering-sequences"]], "Extracting sequences by sequence identifier into a new alignment object": [[91, "extracting-sequences-by-sequence-identifier-into-a-new-alignment-object"]], "Extracting sequences using an arbitrary function into a new alignment object": [[91, "extracting-sequences-using-an-arbitrary-function-into-a-new-alignment-object"]], "Computing alignment statistics": [[91, "computing-alignment-statistics"]], "Getting motif counts": [[91, "getting-motif-counts"]], "Computing motif probabilities from an alignment": [[91, "computing-motif-probabilities-from-an-alignment"]], "Working with alignment gaps": [[91, "working-with-alignment-gaps"]], "Filtering extracted columns for the gap character": [[91, "filtering-extracted-columns-for-the-gap-character"]], "Calculating the gap fraction": [[91, "calculating-the-gap-fraction"]], "Extracting maps of aligned to unaligned positions (i.e., gap maps)": [[91, "extracting-maps-of-aligned-to-unaligned-positions-i-e-gap-maps"]], "Filtering alignments based on gaps": [[91, "filtering-alignments-based-on-gaps"]], "Alphabets": [[92, "alphabets"]], "Alphabet and MolType": [[92, "alphabet-and-moltype"]], "Creating tuple alphabets": [[92, "creating-tuple-alphabets"]], "Convert a sequence into integers": [[92, "convert-a-sequence-into-integers"]], "Convert integers to a sequence": [[92, "convert-integers-to-a-sequence"]], "Annotation Databases": [[93, "annotation-databases"]], "What are the different types of AnnotationDb?": [[93, "what-are-the-different-types-of-annotationdb"]], "How to create a standalone BasicAnnotationDb": [[93, "how-to-create-a-standalone-basicannotationdb"]], "How to load an standalone AnnotationDb from a data file": [[93, "how-to-load-an-standalone-annotationdb-from-a-data-file"]], "From a GFF file": [[93, "from-a-gff-file"], [98, "from-a-gff-file"]], "From a Genbank file": [[93, "from-a-genbank-file"], [98, "from-a-genbank-file"]], "How to generate a summary of an AnnotationDb": [[93, "how-to-generate-a-summary-of-an-annotationdb"]], "How to add custom features to an AnnotationDb": [[93, "how-to-add-custom-features-to-an-annotationdb"]], "How to write an AnnotationDb to disk for efficient re-loading": [[93, "how-to-write-an-annotationdb-to-disk-for-efficient-re-loading"]], "How to query an AnnotationDb": [[93, "how-to-query-an-annotationdb"]], "Querying via Feature Name": [[93, "querying-via-feature-name"], [98, "querying-via-feature-name"]], "Querying via Feature Biotype": [[93, "querying-via-feature-biotype"], [98, "querying-via-feature-biotype"]], "Querying via region of interest": [[93, "querying-via-region-of-interest"], [98, "querying-via-region-of-interest"]], "Querying via the extended attributes field": [[93, "querying-via-the-extended-attributes-field"]], "How to interrogate an AnnotationDb": [[93, "how-to-interrogate-an-annotationdb"]], "How many unique genes are in a given genome?": [[93, "how-many-unique-genes-are-in-a-given-genome"]], "How to find the \u201cchildren\u201d of a Feature": [[93, "how-to-find-the-children-of-a-feature"], [98, "how-to-find-the-children-of-a-feature"]], "How to find the \u201cparent\u201d of a Feature": [[93, "how-to-find-the-parent-of-a-feature"], [98, "how-to-find-the-parent-of-a-feature"]], "How to combine two AnnotationDb instances": [[93, "how-to-combine-two-annotationdb-instances"]], "Checking the compatibility of two AnnotationDb instances": [[93, "checking-the-compatibility-of-two-annotationdb-instances"]], "Taking the union of two AnnotationDb instances": [[93, "taking-the-union-of-two-annotationdb-instances"]], "Updating an AnnotationDb with the record from another database": [[93, "updating-an-annotationdb-with-the-record-from-another-database"]], "Initialise a AnnotationDb with another database": [[93, "initialise-a-annotationdb-with-another-database"]], "How to assign an AnnotationDb to a sequence": [[93, "how-to-assign-an-annotationdb-to-a-sequence"]], "Directly assign an AnnotationDb to a Sequence": [[93, "directly-assign-an-annotationdb-to-a-sequence"]], "Loading an AnnotationDb and Sequence using the load_seq() function": [[93, "loading-an-annotationdb-and-sequence-using-the-load-seq-function"]], "For a single sequence Genbank file": [[93, "for-a-single-sequence-genbank-file"]], "For a single sequence FASTA file and an associated GFF annotation file": [[93, "for-a-single-sequence-fasta-file-and-an-associated-gff-annotation-file"]], "Building alignments": [[94, "building-alignments"]], "Using a cogent3 progressive aligner for nucleotides": [[94, "using-a-cogent3-progressive-aligner-for-nucleotides"]], "Using a cogent3 progressive aligner for codons": [[94, "using-a-cogent3-progressive-aligner-for-codons"]], "Converting gaps from aa-seq alignment to nuc seq alignment": [[94, "converting-gaps-from-aa-seq-alignment-to-nuc-seq-alignment"]], "Building phylogenies": [[95, "building-phylogenies"]], "Building A Phylogenetic Tree From Pairwise Distances": [[95, "building-a-phylogenetic-tree-from-pairwise-distances"]], "Directly via alignment.quick_tree()": [[95, "directly-via-alignment-quick-tree"]], "Using the DistanceMatrix object": [[95, "using-the-distancematrix-object"]], "Explicitly via DistanceMatrix and cogent3.phylo.nj.nj()`": [[95, "explicitly-via-distancematrix-and-cogent3-phylo-nj-nj"]], "Directly from a pairwise distance dict": [[95, "directly-from-a-pairwise-distance-dict"]], "By Least-squares": [[95, "by-least-squares"]], "By ML": [[95, "by-ml"]], "Genetic distance calculation": [[96, "genetic-distance-calculation"]], "Fast pairwise distance estimation": [[96, "fast-pairwise-distance-estimation"]], "Computing genetic distances using the Alignment object": [[96, "computing-genetic-distances-using-the-alignment-object"]], "Using the distance calculator directly": [[96, "using-the-distance-calculator-directly"]], "Likelihood based pairwise distance estimation": [[96, "likelihood-based-pairwise-distance-estimation"]], "Evolutionary Analysis Using Likelihood": [[97, "evolutionary-analysis-using-likelihood"]], "Specifying substitution models": [[97, "specifying-substitution-models"]], "The available pre-defined substitution models": [[97, "the-available-pre-defined-substitution-models"]], "Getting a substitution model with get_model()": [[97, "getting-a-substitution-model-with-get-model"]], "Rate heterogeneity models": [[97, "rate-heterogeneity-models"]], "For nucleotide": [[97, "for-nucleotide"]], "For codon": [[97, "for-codon"]], "For protein": [[97, "for-protein"]], "Making a likelihood function": [[97, "making-a-likelihood-function"]], "Providing an alignment to a likelihood function": [[97, "providing-an-alignment-to-a-likelihood-function"]], "Scoping parameters on trees \u2013 time heterogeneous models": [[97, "scoping-parameters-on-trees-time-heterogeneous-models"]], "Specifying a parameter as constant": [[97, "specifying-a-parameter-as-constant"]], "Providing a starting value for a parameter": [[97, "providing-a-starting-value-for-a-parameter"]], "Setting parameter bounds for optimisation": [[97, "setting-parameter-bounds-for-optimisation"]], "Setting an upper bound for branch length": [[97, "setting-an-upper-bound-for-branch-length"]], "Specifying rate heterogeneity functions": [[97, "specifying-rate-heterogeneity-functions"]], "Specifying Phylo-HMMs": [[97, "specifying-phylo-hmms"]], "Fitting likelihood functions - Choice of optimisers": [[97, "fitting-likelihood-functions-choice-of-optimisers"]], "How to check your optimisation was successful": [[97, "how-to-check-your-optimisation-was-successful"]], "Overview of the fitted likelihood function": [[97, "overview-of-the-fitted-likelihood-function"]], "Log likelihood and number of free parameters": [[97, "log-likelihood-and-number-of-free-parameters"]], "Aikake Information Criterion": [[97, "aikake-information-criterion"]], "Bayesian Information Criterion": [[97, "bayesian-information-criterion"]], "Getting maximum likelihood estimates": [[97, "getting-maximum-likelihood-estimates"]], "One at a time": [[97, "one-at-a-time"]], "Just the motif probabilities": [[97, "just-the-motif-probabilities"]], "As tables": [[97, "as-tables"]], "Testing Hypotheses - Using Likelihood Ratio Tests": [[97, "testing-hypotheses-using-likelihood-ratio-tests"]], "Testing Hypotheses - By parametric bootstrapping": [[97, "testing-hypotheses-by-parametric-bootstrapping"]], "Determining confidence intervals on MLEs": [[97, "determining-confidence-intervals-on-mles"]], "Saving results": [[97, "saving-results"]], "Reconstructing ancestral sequences": [[97, "reconstructing-ancestral-sequences"]], "Features": [[98, "features"]], "How to create a custom Feature": [[98, "how-to-create-a-custom-feature"]], "Via add_feature": [[98, "via-add-feature"]], "On a Sequence": [[98, "on-a-sequence"]], "On a Sequence within an Alignment": [[98, "on-a-sequence-within-an-alignment"]], "On an Alignment": [[98, "on-an-alignment"]], "Via an AnnotationDb": [[98, "via-an-annotationdb"]], "How to load bulk Features from a File": [[98, "how-to-load-bulk-features-from-a-file"]], "How to load features and sequence data": [[98, "how-to-load-features-and-sequence-data"], [98, "id1"]], "How to load features and associate them with an existing sequence": [[98, "how-to-load-features-and-associate-them-with-an-existing-sequence"]], "How to load features and associate them with sequences in an existing alignment": [[98, "how-to-load-features-and-associate-them-with-sequences-in-an-existing-alignment"]], "How to query a Sequence or Alignment for Features": [[98, "how-to-query-a-sequence-or-alignment-for-features"]], "Querying a Sequence for Features": [[98, "querying-a-sequence-for-features"]], "Querying a Sequence (via an Alignment) for Features": [[98, "querying-a-sequence-via-an-alignment-for-features"]], "Querying an Alignment for Features": [[98, "querying-an-alignment-for-features"]], "Querying for features on any Sequence in an Alignment": [[98, "querying-for-features-on-any-sequence-in-an-alignment"]], "Querying for features on an Alignment": [[98, "querying-for-features-on-an-alignment"]], "Querying features that span gaps in alignments": [[98, "querying-features-that-span-gaps-in-alignments"]], "Examples using the methods available on Features": [[98, "examples-using-the-methods-available-on-features"]], "How to slice a Sequence or Alignment by its features": [[98, "how-to-slice-a-sequence-or-alignment-by-its-features"]], "How to display the features of a Sequence": [[98, "how-to-display-the-features-of-a-sequence"]], "How to find the coordinates of a feature": [[98, "how-to-find-the-coordinates-of-a-feature"]], "How to take the union of features": [[98, "how-to-take-the-union-of-features"]], "How to get the shadow of a Feature": [[98, "how-to-get-the-shadow-of-a-feature"]], "How to use the shadow of a Feature to return the intergenic sequence": [[98, "how-to-use-the-shadow-of-a-feature-to-return-the-intergenic-sequence"]], "How to mask annotated regions": [[98, "how-to-mask-annotated-regions"]], "Masking annotated regions on a sequence": [[98, "masking-annotated-regions-on-a-sequence"]], "Masking annotated regions on an Alignment": [[98, "masking-annotated-regions-on-an-alignment"]], "How to copy features": [[98, "how-to-copy-features"]], "How to get the positions of a feature as one span": [[98, "how-to-get-the-positions-of-a-feature-as-one-span"]], "Behaviour of annotations on nucleic acid sequences": [[98, "behaviour-of-annotations-on-nucleic-acid-sequences"]], "Using genetic codes": [[99, "using-genetic-codes"]], "Selecting codes in methods that support them": [[99, "selecting-codes-in-methods-that-support-them"]], "Translate DNA sequences": [[99, "translate-dna-sequences"]], "Translate all six frames": [[99, "translate-all-six-frames"]], "Find out how many stops in a frame": [[99, "find-out-how-many-stops-in-a-frame"]], "Translate a codon": [[99, "translate-a-codon"]], "Look up the amino acid corresponding to a single codon": [[99, "look-up-the-amino-acid-corresponding-to-a-single-codon"]], "Get all the codons for one amino acid": [[99, "get-all-the-codons-for-one-amino-acid"]], "Get all the codons for a group of amino acids": [[99, "get-all-the-codons-for-a-group-of-amino-acids"]], "Converting the CodonAlphabet to codon series": [[99, "converting-the-codonalphabet-to-codon-series"]], "Obtaining the codons from a DnaSequence object": [[99, "obtaining-the-codons-from-a-dnasequence-object"]], "Translating a DNA sequence": [[99, "translating-a-dna-sequence"]], "Translating a DNA sequence containing stop codons": [[99, "translating-a-dna-sequence-containing-stop-codons"]], "Cookbook": [[100, "cookbook"]], "Loading a sequence from a file": [[101, "loading-a-sequence-from-a-file"]], "Loading an alignment from a file or url": [[101, "loading-an-alignment-from-a-file-or-url"]], "Loading aligned sequences": [[101, "loading-aligned-sequences"]], "Todo": [[101, "id1"], [112, "id1"], [113, "id1"], [128, "id1"], [132, "id1"]], "Loading unaligned sequences": [[101, "loading-unaligned-sequences"]], "Loading from a url": [[101, "loading-from-a-url"], [102, "loading-from-a-url"], [107, "loading-from-a-url"]], "Specifying the file format": [[101, "specifying-the-file-format"]], "Specifying the sequence molecular type": [[101, "specifying-the-sequence-molecular-type"]], "Making an alignment from standard python objects": [[101, "making-an-alignment-from-standard-python-objects"]], "From a dict of strings": [[101, "from-a-dict-of-strings"]], "From a series of strings": [[101, "from-a-series-of-strings"]], "Stripping label characters on loading": [[101, "stripping-label-characters-on-loading"]], "Making a sequence collection from standard python objects": [[101, "making-a-sequence-collection-from-standard-python-objects"]], "Loading sequences using format parsers": [[101, "loading-sequences-using-format-parsers"]], "Loading FASTA sequences from an open file or list of lines": [[101, "loading-fasta-sequences-from-an-open-file-or-list-of-lines"]], "Handling overloaded FASTA sequence labels": [[101, "handling-overloaded-fasta-sequence-labels"]], "Loading a csv file": [[102, "loading-a-csv-file"], [107, "loading-a-csv-file"]], "Loading delimited specifying the format": [[102, "loading-delimited-specifying-the-format"], [107, "loading-delimited-specifying-the-format"]], "Loading delimited data without a header line": [[102, "loading-delimited-data-without-a-header-line"], [107, "loading-delimited-data-without-a-header-line"]], "Using load_delimited()": [[102, "using-load-delimited"], [107, "using-load-delimited"]], "Using FilteringParser": [[102, "using-filteringparser"], [107, "using-filteringparser"]], "Selectively loading parts of a big file": [[102, "selectively-loading-parts-of-a-big-file"], [107, "selectively-loading-parts-of-a-big-file"]], "Loading a set number of lines from a file": [[102, "loading-a-set-number-of-lines-from-a-file"], [107, "loading-a-set-number-of-lines-from-a-file"]], "Loading only some rows": [[102, "loading-only-some-rows"], [107, "loading-only-some-rows"]], "Loading only some columns": [[102, "loading-only-some-columns"], [107, "loading-only-some-columns"]], "Load raw data as a list of lists of strings": [[102, "load-raw-data-as-a-list-of-lists-of-strings"], [107, "load-raw-data-as-a-list-of-lists-of-strings"]], "Make a table from header and rows": [[102, "make-a-table-from-header-and-rows"], [107, "make-a-table-from-header-and-rows"]], "Make a table from a dict": [[102, "make-a-table-from-a-dict"], [107, "make-a-table-from-a-dict"]], "Specify the column order when creating from a dict.": [[102, "specify-the-column-order-when-creating-from-a-dict"], [107, "specify-the-column-order-when-creating-from-a-dict"]], "Create the table with an index": [[102, "create-the-table-with-an-index"], [107, "create-the-table-with-an-index"]], "Create a table from a pandas.DataFrame": [[102, "create-a-table-from-a-pandas-dataframe"], [107, "create-a-table-from-a-pandas-dataframe"]], "Create a table from header and rows": [[102, "create-a-table-from-header-and-rows"], [107, "create-a-table-from-header-and-rows"]], "Create a table from dict": [[102, "create-a-table-from-dict"], [107, "create-a-table-from-dict"]], "Create a table from a 2D dict": [[102, "create-a-table-from-a-2d-dict"], [107, "create-a-table-from-a-2d-dict"]], "Create a table that has complex python objects as elements": [[102, "create-a-table-that-has-complex-python-objects-as-elements"], [107, "create-a-table-that-has-complex-python-objects-as-elements"]], "Create an empty table": [[102, "create-an-empty-table"], [107, "create-an-empty-table"]], "Manipulating biological data": [[103, "manipulating-biological-data"]], "Sequences and Alignments": [[103, "sequences-and-alignments"]], "Genetic code": [[103, "genetic-code"]], "Trees": [[103, "trees"], [106, "trees"]], "Molecular types": [[104, "molecular-types"]], "Available molecular types": [[104, "available-molecular-types"]], "Getting a MolType": [[104, "getting-a-moltype"]], "Using a MolType to get ambiguity codes": [[104, "using-a-moltype-to-get-ambiguity-codes"]], "MolType definition of degenerate codes": [[104, "moltype-definition-of-degenerate-codes"]], "Nucleic acid MolType and complementing": [[104, "nucleic-acid-moltype-and-complementing"]], "Making sequences": [[104, "making-sequences"]], "Verify sequences": [[104, "verify-sequences"]], "Making a custom MolType": [[104, "making-a-custom-moltype"]], "Protein sequences": [[105, "protein-sequences"]], "Creating a ProteinSequence with a name": [[105, "creating-a-proteinsequence-with-a-name"]], "Converting a DNA sequence string to protein sequence string": [[105, "converting-a-dna-sequence-string-to-protein-sequence-string"]], "Converting a nucleic acid sequence object to protein": [[105, "converting-a-nucleic-acid-sequence-object-to-protein"]], "Loading protein sequences from a Phylip file": [[105, "loading-protein-sequences-from-a-phylip-file"]], "Loading a tree from a file and visualizing it with ascii_art()": [[106, "loading-a-tree-from-a-file-and-visualizing-it-with-ascii-art"]], "Writing a tree to a file": [[106, "writing-a-tree-to-a-file"]], "Getting the individual nodes of a tree by name": [[106, "getting-the-individual-nodes-of-a-tree-by-name"]], "Getting the name of a node (or a tree)": [[106, "getting-the-name-of-a-node-or-a-tree"]], "The object type of a tree and its nodes is the same": [[106, "the-object-type-of-a-tree-and-its-nodes-is-the-same"]], "Working with the nodes of a tree": [[106, "working-with-the-nodes-of-a-tree"]], "Getting the path between two tips or edges (connecting edges)": [[106, "getting-the-path-between-two-tips-or-edges-connecting-edges"]], "Getting the distance between two nodes": [[106, "getting-the-distance-between-two-nodes"]], "Getting the last common ancestor (LCA) for two nodes": [[106, "getting-the-last-common-ancestor-lca-for-two-nodes"]], "Getting all the ancestors for a node": [[106, "getting-all-the-ancestors-for-a-node"]], "Getting all the children for a node": [[106, "getting-all-the-children-for-a-node"]], "Getting all the distances for a tree": [[106, "getting-all-the-distances-for-a-tree"]], "Getting the two nodes that are farthest apart": [[106, "getting-the-two-nodes-that-are-farthest-apart"]], "Get the nodes within a given distance": [[106, "get-the-nodes-within-a-given-distance"]], "Rerooting trees": [[106, "rerooting-trees"]], "At a named node": [[106, "at-a-named-node"]], "At the midpoint": [[106, "at-the-midpoint"]], "Near a given tip": [[106, "near-a-given-tip"]], "Tree representations": [[106, "tree-representations"]], "Newick format": [[106, "newick-format"]], "XML format": [[106, "xml-format"]], "Tree traversal": [[106, "tree-traversal"]], "Preorder": [[106, "preorder"]], "Postorder": [[106, "postorder"]], "Selecting subtrees": [[106, "selecting-subtrees"]], "One way to do it": [[106, "one-way-to-do-it"]], "Tree manipulation methods": [[106, "tree-manipulation-methods"]], "Pruning the tree": [[106, "pruning-the-tree"]], "Create a full unrooted copy of the tree": [[106, "create-a-full-unrooted-copy-of-the-tree"]], "Transform tree into a bifurcating tree": [[106, "transform-tree-into-a-bifurcating-tree"]], "Transform tree into a balanced tree": [[106, "transform-tree-into-a-balanced-tree"]], "Test two trees for same topology": [[106, "test-two-trees-for-same-topology"]], "Calculate each node\u2019s maximum distance to a tip": [[106, "calculate-each-node-s-maximum-distance-to-a-tip"]], "Scale branch lengths in place to integers for ascii output": [[106, "scale-branch-lengths-in-place-to-integers-for-ascii-output"]], "Get tip-to-tip distances": [[106, "get-tip-to-tip-distances"]], "Compare two trees using tip-to-tip distance matrices": [[106, "compare-two-trees-using-tip-to-tip-distance-matrices"]], "Tabular data": [[107, "tabular-data"]], "Adding a new column": [[107, "adding-a-new-column"], [107, "id1"]], "Add a title and a legend to a table": [[107, "add-a-title-and-a-legend-to-a-table"]], "Iterating over table rows": [[107, "iterating-over-table-rows"]], "How many rows are there?": [[107, "how-many-rows-are-there"]], "How many columns are there?": [[107, "how-many-columns-are-there"]], "Iterating over table columns": [[107, "iterating-over-table-columns"]], "Table slicing using column names": [[107, "table-slicing-using-column-names"]], "Table slicing using indices": [[107, "table-slicing-using-indices"]], "Changing displayed numerical precision": [[107, "changing-displayed-numerical-precision"]], "Change digits or column spacing": [[107, "change-digits-or-column-spacing"]], "Wrapping tables for display": [[107, "wrapping-tables-for-display"]], "Display the top of a table using head()": [[107, "display-the-top-of-a-table-using-head"]], "Display the bottom of a table using tail()": [[107, "display-the-bottom-of-a-table-using-tail"]], "Display random rows from a table": [[107, "display-random-rows-from-a-table"]], "Change the number of rows displayed by repr()": [[107, "change-the-number-of-rows-displayed-by-repr"]], "Changing column headings": [[107, "changing-column-headings"]], "Create a new column from existing ones": [[107, "create-a-new-column-from-existing-ones"]], "Get table data as a numpy array": [[107, "get-table-data-as-a-numpy-array"]], "Get a table column as a list": [[107, "get-a-table-column-as-a-list"]], "Get multiple table columns as a list": [[107, "get-multiple-table-columns-as-a-list"]], "Get the table as a row oriented dict": [[107, "get-the-table-as-a-row-oriented-dict"]], "Get the table as a column oriented dict": [[107, "get-the-table-as-a-column-oriented-dict"]], "Get the table as a pandas.DataFrame": [[107, "get-the-table-as-a-pandas-dataframe"]], "Get a table of counts as a contingency table": [[107, "get-a-table-of-counts-as-a-contingency-table"]], "Appending tables": [[107, "appending-tables"]], "Summing a single column": [[107, "summing-a-single-column"]], "Summing multiple columns or rows - strictly numerical data": [[107, "summing-multiple-columns-or-rows-strictly-numerical-data"]], "Summing multiple columns or rows with mixed non-numeric/numeric data": [[107, "summing-multiple-columns-or-rows-with-mixed-non-numeric-numeric-data"]], "Filtering table rows": [[107, "filtering-table-rows"]], "Filtering table columns": [[107, "filtering-table-columns"]], "Standard sorting": [[107, "standard-sorting"]], "Reverse sorting": [[107, "reverse-sorting"]], "Sorting involving multiple columns, one reversed": [[107, "sorting-involving-multiple-columns-one-reversed"]], "Getting raw data for a single column": [[107, "getting-raw-data-for-a-single-column"]], "Getting raw data for multiple columns": [[107, "getting-raw-data-for-multiple-columns"]], "Getting distinct values": [[107, "getting-distinct-values"]], "Counting occurrences of values": [[107, "counting-occurrences-of-values"]], "Counting unique values": [[107, "counting-unique-values"]], "Joining or merging tables": [[107, "joining-or-merging-tables"]], "Transpose a table": [[107, "transpose-a-table"]], "Specify markdown as the str() format": [[107, "specify-markdown-as-the-str-format"]], "Specify latex as the str() format": [[107, "specify-latex-as-the-str-format"]], "Get a table as a markdown formatted string": [[107, "get-a-table-as-a-markdown-formatted-string"]], "Get a table as a latex formatted string": [[107, "get-a-table-as-a-latex-formatted-string"]], "Get a table as a restructured text csv-table": [[107, "get-a-table-as-a-restructured-text-csv-table"]], "Get a table as a restructured text grid table": [[107, "get-a-table-as-a-restructured-text-grid-table"]], "Getting a latex format table with to_string()": [[107, "getting-a-latex-format-table-with-to-string"]], "Getting a bedGraph format with to_string()": [[107, "getting-a-bedgraph-format-with-to-string"]], "Getting a table as html": [[107, "getting-a-table-as-html"]], "What formats can be written?": [[107, "what-formats-can-be-written"]], "Writing a latex formmated file": [[107, "writing-a-latex-formmated-file"]], "Writing delimited formats": [[107, "writing-delimited-formats"]], "UnionDict \u2013 a dict with set like operations and keys as attributes": [[108, "uniondict-a-dict-with-set-like-operations-and-keys-as-attributes"], [109, "uniondict-a-dict-with-set-like-operations-and-keys-as-attributes"]], "Accessing elements of a UnionDict": [[108, "accessing-elements-of-a-uniondict"], [109, "accessing-elements-of-a-uniondict"]], "Updating a UnionDict": [[108, "updating-a-uniondict"], [109, "updating-a-uniondict"]], "Accessing a non-existent UnionDict key": [[108, "accessing-a-non-existent-uniondict-key"], [109, "accessing-a-non-existent-uniondict-key"]], "Useful Utilities": [[109, "useful-utilities"]], "Using Cogent3\u2019s optimisers for your own functions": [[109, "using-cogent3-s-optimisers-for-your-own-functions"]], "Miscellaneous functions": [[109, "miscellaneous-functions"]], "Force a variable to be iterable": [[109, "force-a-variable-to-be-iterable"]], "Curry a function": [[109, "curry-a-function"]], "Test to see if an object is iterable": [[109, "test-to-see-if-an-object-is-iterable"]], "Test to see if an object is a single char": [[109, "test-to-see-if-an-object-is-a-single-char"]], "Flatten a deeply nested iterable": [[109, "flatten-a-deeply-nested-iterable"]], "Test to determine if list of tuple": [[109, "test-to-determine-if-list-of-tuple"]], "Create a case-insensitive iterable": [[109, "create-a-case-insensitive-iterable"]], "Construct a distance matrix lookup function": [[109, "construct-a-distance-matrix-lookup-function"]], "Check class types": [[109, "check-class-types"]], "Delegate to a separate object": [[109, "delegate-to-a-separate-object"]], "Wrap a function to hide from a class": [[109, "wrap-a-function-to-hide-from-a-class"]], "Construct a constrained container": [[109, "construct-a-constrained-container"]], "Available genetic codes": [[110, "available-genetic-codes"]], "Getting a genetic code with get_code()": [[110, "getting-a-genetic-code-with-get-code"]], "Data Files Used in the Documentation": [[111, "data-files-used-in-the-documentation"]], "Coevolution analysis": [[112, "coevolution-analysis"]], "Display coevolution as a heatmap": [[112, "display-coevolution-as-a-heatmap"]], "Display coevolution scores as a Violin plot": [[112, "display-coevolution-scores-as-a-violin-plot"]], "Display coevolution scores as a Boxplot": [[112, "display-coevolution-scores-as-a-boxplot"]], "Dotplot basics": [[113, "dotplot-basics"]], "Modifying the matching parameters": [[113, "modifying-the-matching-parameters"]], "Displaying dotplot for the reverse complement": [[113, "displaying-dotplot-for-the-reverse-complement"]], "Setting plot attributes": [[113, "setting-plot-attributes"]], "Dotplot with annotated sequences": [[114, "dotplot-with-annotated-sequences"]], "Reloading from json": [[114, "reloading-from-json"]], "Removing annotation tracks": [[114, "removing-annotation-tracks"]], "Counting gaps per sequence": [[115, "counting-gaps-per-sequence"]], "Plotting counts of unique gaps": [[115, "plotting-counts-of-unique-gaps"]], "Displaying unique gaps as a bar chart": [[115, "displaying-unique-gaps-as-a-bar-chart"]], "Displaying unique gaps as a violin plot": [[115, "displaying-unique-gaps-as-a-violin-plot"]], "Displaying unique gaps as a box plot": [[115, "displaying-unique-gaps-as-a-box-plot"]], "Information analysis of an alignment": [[116, "information-analysis-of-an-alignment"]], "Illustrated with a simple example": [[116, "illustrated-with-a-simple-example"]], "On a sample data set": [[116, "on-a-sample-data-set"]], "Sequence logos": [[117, "sequence-logos"]], "Drawing logo for a TFBS": [[117, "drawing-logo-for-a-tfbs"]], "Drawing a sequence logo from a multiple sequence alignment": [[117, "drawing-a-sequence-logo-from-a-multiple-sequence-alignment"]], "Sequence logo of protein alignment": [[117, "sequence-logo-of-protein-alignment"]], "Sequence Features": [[118, "sequence-features"]], "Drawing all features on a sequence segment": [[118, "drawing-all-features-on-a-sequence-segment"]], "Drawing selected feature biotypes": [[118, "drawing-selected-feature-biotypes"]], "Image Gallery": [[119, "image-gallery"]], "Alignments & Sequences": [[119, "alignments-sequences"]], "Phylogenetic Trees": [[119, "phylogenetic-trees"]], "Angular Dendrogram Style": [[120, "angular-dendrogram-style"]], "With Contemporaneous Tips": [[120, "with-contemporaneous-tips"], [121, "with-contemporaneous-tips"], [122, "with-contemporaneous-tips"], [123, "with-contemporaneous-tips"]], "Circular Dendrogram Style": [[121, "circular-dendrogram-style"]], "Colouring a set of edges": [[121, "colouring-a-set-of-edges"], [123, "colouring-a-set-of-edges"]], "Radial Dendrogram Style": [[122, "radial-dendrogram-style"]], "Square Dendrogram Style": [[123, "square-dendrogram-style"]], "Showing Bootstrap Support": [[124, "showing-bootstrap-support"]], "Change the placement of support text": [[124, "change-the-placement-of-support-text"]], "Map protein alignment gaps to DNA alignment gaps": [[125, "map-protein-alignment-gaps-to-dna-alignment-gaps"]], "Make a UPGMA cluster": [[126, "make-a-upgma-cluster"]], "Make a neighbor joining tree": [[127, "make-a-neighbor-joining-tree"]], "Calculate pairwise distances between sequences": [[128, "calculate-pairwise-distances-between-sequences"]], "Using codon models": [[129, "using-codon-models"]], "Constructing the codon substitution model": [[129, "constructing-the-codon-substitution-model"]], "Standard test of neutrality": [[129, "standard-test-of-neutrality"]], "Rate-heterogeneity model variants": [[129, "rate-heterogeneity-model-variants"]], "Mixing branch and site-heterogeneity": [[129, "mixing-branch-and-site-heterogeneity"]], "Perform a coevolutionary analysis on biological sequence alignments": [[130, "perform-a-coevolutionary-analysis-on-biological-sequence-alignments"]], "Use an empirical protein substitution model": [[131, "use-an-empirical-protein-substitution-model"]], "Evaluate process heterogeneity using a Hidden Markov Model": [[132, "evaluate-process-heterogeneity-using-a-hidden-markov-model"]], "Model Ho: no rate heterogeneity": [[132, "model-ho-no-rate-heterogeneity"]], "Model Ha(1): two classes of gamma distributed but independent sites": [[132, "model-ha-1-two-classes-of-gamma-distributed-but-independent-sites"]], "Model Ha(2): fast and slowly evolving sites are auto-correlated": [[132, "model-ha-2-fast-and-slowly-evolving-sites-are-auto-correlated"]], "A model with patches of kappa": [[132, "a-model-with-patches-of-kappa"]], "Tutorials": [[133, "tutorials"]], "Data manipulation": [[133, "data-manipulation"]], "General data analysis": [[133, "general-data-analysis"]], "Modelling Evolution": [[133, "modelling-evolution"]], "Phylogenetic Reconstruction": [[133, "phylogenetic-reconstruction"]], "Utilities": [[133, "utilities"]], "Manipulation of Tree Node Objects": [[134, "manipulation-of-tree-node-objects"]], "An Example of Conditional Tree Node Modifications": [[134, "an-example-of-conditional-tree-node-modifications"]], "A test of the neutral theory": [[135, "a-test-of-the-neutral-theory"]], "Parallel computations": [[136, "parallel-computations"]], "Parallel computation on a single computer": [[136, "parallel-computation-on-a-single-computer"]], "Using app.apply_to()": [[136, "using-app-apply-to"]], "Directly using cogent3.util.parallel.map()": [[136, "directly-using-cogent3-util-parallel-map"]], "Parallel computation on multiple computers": [[136, "parallel-computation-on-multiple-computers"]], "Performing a parametric bootstrap": [[137, "performing-a-parametric-bootstrap"]], "Estimating periodic signals": [[138, "estimating-periodic-signals"]], "Estimating the periods in a signal": [[138, "estimating-the-periods-in-a-signal"]], "For numerical (continuous) data": [[138, "for-numerical-continuous-data"], [138, "id1"]], "Discrete Fourier transform": [[138, "discrete-fourier-transform"]], "Auto-correlation": [[138, "auto-correlation"]], "For symbolic data": [[138, "for-symbolic-data"], [138, "id2"], [138, "id4"]], "Estimating power for specified period": [[138, "estimating-power-for-specified-period"]], "Measuring statistical significance of periodic signals": [[138, "measuring-statistical-significance-of-periodic-signals"]], "For numerical (continuous data)": [[138, "id3"]], "Permutation testing": [[138, "permutation-testing"]], "Phylogenetic reconstruction by least squares": [[139, "phylogenetic-reconstruction-by-least-squares"]], "Look for the single best tree": [[139, "look-for-the-single-best-tree"]], "A more rigorous tree space search": [[139, "a-more-rigorous-tree-space-search"]], "Assessing the fit for a pre-specified tree topology": [[139, "assessing-the-fit-for-a-pre-specified-tree-topology"]], "Using maximum likelihood for measuring tree fit": [[139, "using-maximum-likelihood-for-measuring-tree-fit"]], "Analysis of rate heterogeneity": [[140, "analysis-of-rate-heterogeneity"]], "Performing a relative rate test": [[141, "performing-a-relative-rate-test"]], "Allowing substitution model parameters to differ between branches": [[142, "allowing-substitution-model-parameters-to-differ-between-branches"]], "Specifying a clade": [[142, "specifying-a-clade"]], "Specifying a stem": [[142, "specifying-a-stem"]], "Specifying clade and stem": [[142, "specifying-clade-and-stem"]], "Alternate arguments for specifying edges": [[142, "alternate-arguments-for-specifying-edges"]], "Applications of scoped parameters": [[142, "applications-of-scoped-parameters"]], "The simplest script": [[143, "the-simplest-script"]], "Simulate an alignment": [[144, "simulate-an-alignment"]], "Likelihood analysis of multiple loci": [[145, "likelihood-analysis-of-multiple-loci"]], "User Guides": [[146, "user-guides"]], "Installation": [[147, "installation"]], "Minimal installation": [[147, "minimal-installation"]], "Install with graphing tools": [[147, "install-with-graphing-tools"]], "Install with developer tools": [[147, "install-with-developer-tools"]], "Installing the development version": [[147, "installing-the-development-version"]], "Installing using conda / mamba": [[147, "installing-using-conda-mamba"]], "License": [[148, "license"]], "How does cogent3 relate to PyCogent?": [[149, "how-does-cogent3-relate-to-pycogent"]], "cogent3 no longer includes module x, what do I do?": [[149, "cogent3-no-longer-includes-module-x-what-do-i-do"], [151, "cogent3-no-longer-includes-module-x-what-do-i-do"]], "Index": [[150, "index"]], "Project History": [[151, "project-history"]], "Making Sense from Sequence": [[152, "making-sense-from-sequence"]], "Projects using cogent3": [[153, "projects-using-cogent3"]]}, "indexentries": {"available_apps() (in module cogent3.__init__)": [[1, "cogent3.__init__.available_apps"]], "available_codes() (in module cogent3.__init__)": [[2, "cogent3.__init__.available_codes"]], "available_models() (in module cogent3.__init__)": [[3, "cogent3.__init__.available_models"]], "available_moltypes() (in module cogent3.__init__)": [[4, "cogent3.__init__.available_moltypes"]], "get_code() (in module cogent3.__init__)": [[5, "cogent3.__init__.get_code"]], "get_model() (in module cogent3.__init__)": [[6, "cogent3.__init__.get_model"]], "get_moltype() (in module cogent3.__init__)": [[7, "cogent3.__init__.get_moltype"]], "load_aligned_seqs() (in module cogent3.__init__)": [[8, "cogent3.__init__.load_aligned_seqs"]], "load_annotations() (in module cogent3.__init__)": [[9, "cogent3.__init__.load_annotations"]], "load_delimited() (in module cogent3.__init__)": [[10, "cogent3.__init__.load_delimited"]], "load_seq() (in module cogent3.__init__)": [[11, "cogent3.__init__.load_seq"]], "load_table() (in module cogent3.__init__)": [[12, "cogent3.__init__.load_table"]], "load_tree() (in module cogent3.__init__)": [[13, "cogent3.__init__.load_tree"]], "load_unaligned_seqs() (in module cogent3.__init__)": [[14, "cogent3.__init__.load_unaligned_seqs"]], "make_aligned_seqs() (in module cogent3.__init__)": [[15, "cogent3.__init__.make_aligned_seqs"]], "make_seq() (in module cogent3.__init__)": [[16, "cogent3.__init__.make_seq"]], "make_table() (in module cogent3.__init__)": [[17, "cogent3.__init__.make_table"]], "make_tree() (in module cogent3.__init__)": [[18, "cogent3.__init__.make_tree"]], "make_unaligned_seqs() (in module cogent3.__init__)": [[19, "cogent3.__init__.make_unaligned_seqs"]], "open_() (in module cogent3.__init__)": [[20, "cogent3.__init__.open_"]], "open_data_store() (in module cogent3.__init__)": [[21, "cogent3.__init__.open_data_store"]], "alignment (class in cogent3.core.alignment)": [[23, "cogent3.core.alignment.Alignment"]], "add_feature() (alignment method)": [[23, "cogent3.core.alignment.Alignment.add_feature"]], "add_from_ref_aln() (alignment method)": [[23, "cogent3.core.alignment.Alignment.add_from_ref_aln"]], "add_seqs() (alignment method)": [[23, "cogent3.core.alignment.Alignment.add_seqs"]], "alignment_quality() (alignment method)": [[23, "cogent3.core.alignment.Alignment.alignment_quality"]], "annotate_from_gff() (alignment method)": [[23, "cogent3.core.alignment.Alignment.annotate_from_gff"]], "annotation_db (alignment property)": [[23, "cogent3.core.alignment.Alignment.annotation_db"]], "apply_pssm() (alignment method)": [[23, "cogent3.core.alignment.Alignment.apply_pssm"]], "coevolution() (alignment method)": [[23, "cogent3.core.alignment.Alignment.coevolution"]], "copy() (alignment method)": [[23, "cogent3.core.alignment.Alignment.copy"]], "copy_annotations() (alignment method)": [[23, "cogent3.core.alignment.Alignment.copy_annotations"]], "count_gaps_per_pos() (alignment method)": [[23, "cogent3.core.alignment.Alignment.count_gaps_per_pos"]], "count_gaps_per_seq() (alignment method)": [[23, "cogent3.core.alignment.Alignment.count_gaps_per_seq"]], "counts() (alignment method)": [[23, "cogent3.core.alignment.Alignment.counts"]], "counts_per_pos() (alignment method)": [[23, "cogent3.core.alignment.Alignment.counts_per_pos"]], "counts_per_seq() (alignment method)": [[23, "cogent3.core.alignment.Alignment.counts_per_seq"]], "deepcopy() (alignment method)": [[23, "cogent3.core.alignment.Alignment.deepcopy"]], "default_gap (alignment attribute)": [[23, "cogent3.core.alignment.Alignment.default_gap"]], "degap() (alignment method)": [[23, "cogent3.core.alignment.Alignment.degap"]], "distance_matrix() (alignment method)": [[23, "cogent3.core.alignment.Alignment.distance_matrix"]], "dotplot() (alignment method)": [[23, "cogent3.core.alignment.Alignment.dotplot"]], "entropy_per_pos() (alignment method)": [[23, "cogent3.core.alignment.Alignment.entropy_per_pos"]], "entropy_per_seq() (alignment method)": [[23, "cogent3.core.alignment.Alignment.entropy_per_seq"]], "filtered() (alignment method)": [[23, "cogent3.core.alignment.Alignment.filtered"]], "gap_chars (alignment attribute)": [[23, "cogent3.core.alignment.Alignment.gap_chars"]], "gapped_by_map() (alignment method)": [[23, "cogent3.core.alignment.Alignment.gapped_by_map"]], "get_ambiguous_positions() (alignment method)": [[23, "cogent3.core.alignment.Alignment.get_ambiguous_positions"]], "get_degapped_relative_to() (alignment method)": [[23, "cogent3.core.alignment.Alignment.get_degapped_relative_to"]], "get_drawable() (alignment method)": [[23, "cogent3.core.alignment.Alignment.get_drawable"]], "get_drawables() (alignment method)": [[23, "cogent3.core.alignment.Alignment.get_drawables"]], "get_features() (alignment method)": [[23, "cogent3.core.alignment.Alignment.get_features"]], "get_gap_array() (alignment method)": [[23, "cogent3.core.alignment.Alignment.get_gap_array"]], "get_gapped_seq() (alignment method)": [[23, "cogent3.core.alignment.Alignment.get_gapped_seq"]], "get_identical_sets() (alignment method)": [[23, "cogent3.core.alignment.Alignment.get_identical_sets"]], "get_lengths() (alignment method)": [[23, "cogent3.core.alignment.Alignment.get_lengths"]], "get_motif_probs() (alignment method)": [[23, "cogent3.core.alignment.Alignment.get_motif_probs"]], "get_position_indices() (alignment method)": [[23, "cogent3.core.alignment.Alignment.get_position_indices"]], "get_projected_feature() (alignment method)": [[23, "cogent3.core.alignment.Alignment.get_projected_feature"]], "get_projected_features() (alignment method)": [[23, "cogent3.core.alignment.Alignment.get_projected_features"]], "get_seq() (alignment method)": [[23, "cogent3.core.alignment.Alignment.get_seq"]], "get_seq_indices() (alignment method)": [[23, "cogent3.core.alignment.Alignment.get_seq_indices"]], "get_similar() (alignment method)": [[23, "cogent3.core.alignment.Alignment.get_similar"]], "get_translation() (alignment method)": [[23, "cogent3.core.alignment.Alignment.get_translation"]], "has_terminal_stop() (alignment method)": [[23, "cogent3.core.alignment.Alignment.has_terminal_stop"]], "has_terminal_stops() (alignment method)": [[23, "cogent3.core.alignment.Alignment.has_terminal_stops"]], "information_plot() (alignment method)": [[23, "cogent3.core.alignment.Alignment.information_plot"]], "is_array (alignment attribute)": [[23, "cogent3.core.alignment.Alignment.is_array"]], "is_ragged() (alignment method)": [[23, "cogent3.core.alignment.Alignment.is_ragged"]], "iter_positions() (alignment method)": [[23, "cogent3.core.alignment.Alignment.iter_positions"]], "iter_selected() (alignment method)": [[23, "cogent3.core.alignment.Alignment.iter_selected"]], "iter_seqs() (alignment method)": [[23, "cogent3.core.alignment.Alignment.iter_seqs"]], "iupac_consensus() (alignment method)": [[23, "cogent3.core.alignment.Alignment.iupac_consensus"]], "majority_consensus() (alignment method)": [[23, "cogent3.core.alignment.Alignment.majority_consensus"]], "make_feature() (alignment method)": [[23, "cogent3.core.alignment.Alignment.make_feature"]], "matching_ref() (alignment method)": [[23, "cogent3.core.alignment.Alignment.matching_ref"]], "moltype (alignment attribute)": [[23, "cogent3.core.alignment.Alignment.moltype"]], "no_degenerates() (alignment method)": [[23, "cogent3.core.alignment.Alignment.no_degenerates"]], "num_seqs (alignment property)": [[23, "cogent3.core.alignment.Alignment.num_seqs"]], "omit_bad_seqs() (alignment method)": [[23, "cogent3.core.alignment.Alignment.omit_bad_seqs"]], "omit_gap_pos() (alignment method)": [[23, "cogent3.core.alignment.Alignment.omit_gap_pos"]], "omit_gap_runs() (alignment method)": [[23, "cogent3.core.alignment.Alignment.omit_gap_runs"]], "omit_gap_seqs() (alignment method)": [[23, "cogent3.core.alignment.Alignment.omit_gap_seqs"]], "pad_seqs() (alignment method)": [[23, "cogent3.core.alignment.Alignment.pad_seqs"]], "positions (alignment property)": [[23, "cogent3.core.alignment.Alignment.positions"]], "probs_per_pos() (alignment method)": [[23, "cogent3.core.alignment.Alignment.probs_per_pos"]], "probs_per_seq() (alignment method)": [[23, "cogent3.core.alignment.Alignment.probs_per_seq"]], "quick_tree() (alignment method)": [[23, "cogent3.core.alignment.Alignment.quick_tree"]], "rc() (alignment method)": [[23, "cogent3.core.alignment.Alignment.rc"]], "rename_seqs() (alignment method)": [[23, "cogent3.core.alignment.Alignment.rename_seqs"]], "replace_seqs() (alignment method)": [[23, "cogent3.core.alignment.Alignment.replace_seqs"]], "reverse_complement() (alignment method)": [[23, "cogent3.core.alignment.Alignment.reverse_complement"]], "sample() (alignment method)": [[23, "cogent3.core.alignment.Alignment.sample"]], "seqlogo() (alignment method)": [[23, "cogent3.core.alignment.Alignment.seqlogo"]], "seqs (alignment property)": [[23, "cogent3.core.alignment.Alignment.seqs"]], "set_repr_policy() (alignment method)": [[23, "cogent3.core.alignment.Alignment.set_repr_policy"]], "sliding_windows() (alignment method)": [[23, "cogent3.core.alignment.Alignment.sliding_windows"]], "strand_symmetry() (alignment method)": [[23, "cogent3.core.alignment.Alignment.strand_symmetry"]], "take_positions() (alignment method)": [[23, "cogent3.core.alignment.Alignment.take_positions"]], "take_positions_if() (alignment method)": [[23, "cogent3.core.alignment.Alignment.take_positions_if"]], "take_seqs() (alignment method)": [[23, "cogent3.core.alignment.Alignment.take_seqs"]], "take_seqs_if() (alignment method)": [[23, "cogent3.core.alignment.Alignment.take_seqs_if"]], "to_dict() (alignment method)": [[23, "cogent3.core.alignment.Alignment.to_dict"]], "to_dna() (alignment method)": [[23, "cogent3.core.alignment.Alignment.to_dna"]], "to_fasta() (alignment method)": [[23, "cogent3.core.alignment.Alignment.to_fasta"]], "to_html() (alignment method)": [[23, "cogent3.core.alignment.Alignment.to_html"]], "to_json() (alignment method)": [[23, "cogent3.core.alignment.Alignment.to_json"]], "to_moltype() (alignment method)": [[23, "cogent3.core.alignment.Alignment.to_moltype"]], "to_nexus() (alignment method)": [[23, "cogent3.core.alignment.Alignment.to_nexus"]], "to_phylip() (alignment method)": [[23, "cogent3.core.alignment.Alignment.to_phylip"]], "to_pretty() (alignment method)": [[23, "cogent3.core.alignment.Alignment.to_pretty"]], "to_protein() (alignment method)": [[23, "cogent3.core.alignment.Alignment.to_protein"]], "to_rich_dict() (alignment method)": [[23, "cogent3.core.alignment.Alignment.to_rich_dict"]], "to_rna() (alignment method)": [[23, "cogent3.core.alignment.Alignment.to_rna"]], "to_type() (alignment method)": [[23, "cogent3.core.alignment.Alignment.to_type"]], "trim_stop_codons() (alignment method)": [[23, "cogent3.core.alignment.Alignment.trim_stop_codons"]], "variable_positions() (alignment method)": [[23, "cogent3.core.alignment.Alignment.variable_positions"]], "with_gaps_from() (alignment method)": [[23, "cogent3.core.alignment.Alignment.with_gaps_from"]], "with_masked_annotations() (alignment method)": [[23, "cogent3.core.alignment.Alignment.with_masked_annotations"]], "with_modified_termini() (alignment method)": [[23, "cogent3.core.alignment.Alignment.with_modified_termini"]], "write() (alignment method)": [[23, "cogent3.core.alignment.Alignment.write"]], "arrayalignment (class in cogent3.core.alignment)": [[24, "cogent3.core.alignment.ArrayAlignment"]], "add_from_ref_aln() (arrayalignment method)": [[24, "cogent3.core.alignment.ArrayAlignment.add_from_ref_aln"]], "add_seqs() (arrayalignment method)": [[24, "cogent3.core.alignment.ArrayAlignment.add_seqs"]], "alignment_quality() (arrayalignment method)": [[24, "cogent3.core.alignment.ArrayAlignment.alignment_quality"]], "alphabet (arrayalignment attribute)": [[24, "cogent3.core.alignment.ArrayAlignment.alphabet"]], "annotation_db (arrayalignment property)": [[24, "cogent3.core.alignment.ArrayAlignment.annotation_db"]], "apply_pssm() (arrayalignment method)": [[24, "cogent3.core.alignment.ArrayAlignment.apply_pssm"]], "coevolution() (arrayalignment method)": [[24, "cogent3.core.alignment.ArrayAlignment.coevolution"]], "copy() (arrayalignment method)": [[24, "cogent3.core.alignment.ArrayAlignment.copy"]], "count_gaps_per_pos() (arrayalignment method)": [[24, "cogent3.core.alignment.ArrayAlignment.count_gaps_per_pos"]], "count_gaps_per_seq() (arrayalignment method)": [[24, "cogent3.core.alignment.ArrayAlignment.count_gaps_per_seq"]], "counts() (arrayalignment method)": [[24, "cogent3.core.alignment.ArrayAlignment.counts"]], "counts_per_pos() (arrayalignment method)": [[24, "cogent3.core.alignment.ArrayAlignment.counts_per_pos"]], "counts_per_seq() (arrayalignment method)": [[24, "cogent3.core.alignment.ArrayAlignment.counts_per_seq"]], "deepcopy() (arrayalignment method)": [[24, "cogent3.core.alignment.ArrayAlignment.deepcopy"]], "default_gap (arrayalignment attribute)": [[24, "cogent3.core.alignment.ArrayAlignment.default_gap"]], "degap() (arrayalignment method)": [[24, "cogent3.core.alignment.ArrayAlignment.degap"]], "distance_matrix() (arrayalignment method)": [[24, "cogent3.core.alignment.ArrayAlignment.distance_matrix"]], "dotplot() (arrayalignment method)": [[24, "cogent3.core.alignment.ArrayAlignment.dotplot"]], "entropy_per_pos() (arrayalignment method)": [[24, "cogent3.core.alignment.ArrayAlignment.entropy_per_pos"]], "entropy_per_seq() (arrayalignment method)": [[24, "cogent3.core.alignment.ArrayAlignment.entropy_per_seq"]], "filtered() (arrayalignment method)": [[24, "cogent3.core.alignment.ArrayAlignment.filtered"]], "gap_chars (arrayalignment attribute)": [[24, "cogent3.core.alignment.ArrayAlignment.gap_chars"]], "get_ambiguous_positions() (arrayalignment method)": [[24, "cogent3.core.alignment.ArrayAlignment.get_ambiguous_positions"]], "get_degapped_relative_to() (arrayalignment method)": [[24, "cogent3.core.alignment.ArrayAlignment.get_degapped_relative_to"]], "get_gap_array() (arrayalignment method)": [[24, "cogent3.core.alignment.ArrayAlignment.get_gap_array"]], "get_gapped_seq() (arrayalignment method)": [[24, "cogent3.core.alignment.ArrayAlignment.get_gapped_seq"]], "get_identical_sets() (arrayalignment method)": [[24, "cogent3.core.alignment.ArrayAlignment.get_identical_sets"]], "get_lengths() (arrayalignment method)": [[24, "cogent3.core.alignment.ArrayAlignment.get_lengths"]], "get_motif_probs() (arrayalignment method)": [[24, "cogent3.core.alignment.ArrayAlignment.get_motif_probs"]], "get_position_indices() (arrayalignment method)": [[24, "cogent3.core.alignment.ArrayAlignment.get_position_indices"]], "get_seq() (arrayalignment method)": [[24, "cogent3.core.alignment.ArrayAlignment.get_seq"]], "get_seq_indices() (arrayalignment method)": [[24, "cogent3.core.alignment.ArrayAlignment.get_seq_indices"]], "get_similar() (arrayalignment method)": [[24, "cogent3.core.alignment.ArrayAlignment.get_similar"]], "get_sub_alignment() (arrayalignment method)": [[24, "cogent3.core.alignment.ArrayAlignment.get_sub_alignment"]], "get_translation() (arrayalignment method)": [[24, "cogent3.core.alignment.ArrayAlignment.get_translation"]], "has_terminal_stop() (arrayalignment method)": [[24, "cogent3.core.alignment.ArrayAlignment.has_terminal_stop"]], "has_terminal_stops() (arrayalignment method)": [[24, "cogent3.core.alignment.ArrayAlignment.has_terminal_stops"]], "information_plot() (arrayalignment method)": [[24, "cogent3.core.alignment.ArrayAlignment.information_plot"]], "is_array (arrayalignment attribute)": [[24, "cogent3.core.alignment.ArrayAlignment.is_array"]], "is_ragged() (arrayalignment method)": [[24, "cogent3.core.alignment.ArrayAlignment.is_ragged"]], "iter_positions() (arrayalignment method)": [[24, "cogent3.core.alignment.ArrayAlignment.iter_positions"]], "iter_selected() (arrayalignment method)": [[24, "cogent3.core.alignment.ArrayAlignment.iter_selected"]], "iter_seqs() (arrayalignment method)": [[24, "cogent3.core.alignment.ArrayAlignment.iter_seqs"]], "iupac_consensus() (arrayalignment method)": [[24, "cogent3.core.alignment.ArrayAlignment.iupac_consensus"]], "majority_consensus() (arrayalignment method)": [[24, "cogent3.core.alignment.ArrayAlignment.majority_consensus"]], "matching_ref() (arrayalignment method)": [[24, "cogent3.core.alignment.ArrayAlignment.matching_ref"]], "moltype (arrayalignment attribute)": [[24, "cogent3.core.alignment.ArrayAlignment.moltype"]], "named_seqs (arrayalignment property)": [[24, "cogent3.core.alignment.ArrayAlignment.named_seqs"]], "no_degenerates() (arrayalignment method)": [[24, "cogent3.core.alignment.ArrayAlignment.no_degenerates"]], "num_seqs (arrayalignment property)": [[24, "cogent3.core.alignment.ArrayAlignment.num_seqs"]], "omit_bad_seqs() (arrayalignment method)": [[24, "cogent3.core.alignment.ArrayAlignment.omit_bad_seqs"]], "omit_gap_pos() (arrayalignment method)": [[24, "cogent3.core.alignment.ArrayAlignment.omit_gap_pos"]], "omit_gap_runs() (arrayalignment method)": [[24, "cogent3.core.alignment.ArrayAlignment.omit_gap_runs"]], "omit_gap_seqs() (arrayalignment method)": [[24, "cogent3.core.alignment.ArrayAlignment.omit_gap_seqs"]], "pad_seqs() (arrayalignment method)": [[24, "cogent3.core.alignment.ArrayAlignment.pad_seqs"]], "positions (arrayalignment property)": [[24, "cogent3.core.alignment.ArrayAlignment.positions"]], "probs_per_pos() (arrayalignment method)": [[24, "cogent3.core.alignment.ArrayAlignment.probs_per_pos"]], "probs_per_seq() (arrayalignment method)": [[24, "cogent3.core.alignment.ArrayAlignment.probs_per_seq"]], "quick_tree() (arrayalignment method)": [[24, "cogent3.core.alignment.ArrayAlignment.quick_tree"]], "rc() (arrayalignment method)": [[24, "cogent3.core.alignment.ArrayAlignment.rc"]], "rename_seqs() (arrayalignment method)": [[24, "cogent3.core.alignment.ArrayAlignment.rename_seqs"]], "replace_seqs() (arrayalignment method)": [[24, "cogent3.core.alignment.ArrayAlignment.replace_seqs"]], "reverse_complement() (arrayalignment method)": [[24, "cogent3.core.alignment.ArrayAlignment.reverse_complement"]], "sample() (arrayalignment method)": [[24, "cogent3.core.alignment.ArrayAlignment.sample"]], "seqlogo() (arrayalignment method)": [[24, "cogent3.core.alignment.ArrayAlignment.seqlogo"]], "seqs (arrayalignment property)": [[24, "cogent3.core.alignment.ArrayAlignment.seqs"]], "set_repr_policy() (arrayalignment method)": [[24, "cogent3.core.alignment.ArrayAlignment.set_repr_policy"]], "sliding_windows() (arrayalignment method)": [[24, "cogent3.core.alignment.ArrayAlignment.sliding_windows"]], "strand_symmetry() (arrayalignment method)": [[24, "cogent3.core.alignment.ArrayAlignment.strand_symmetry"]], "take_positions() (arrayalignment method)": [[24, "cogent3.core.alignment.ArrayAlignment.take_positions"]], "take_positions_if() (arrayalignment method)": [[24, "cogent3.core.alignment.ArrayAlignment.take_positions_if"]], "take_seqs() (arrayalignment method)": [[24, "cogent3.core.alignment.ArrayAlignment.take_seqs"]], "take_seqs_if() (arrayalignment method)": [[24, "cogent3.core.alignment.ArrayAlignment.take_seqs_if"]], "to_dict() (arrayalignment method)": [[24, "cogent3.core.alignment.ArrayAlignment.to_dict"]], "to_dna() (arrayalignment method)": [[24, "cogent3.core.alignment.ArrayAlignment.to_dna"]], "to_fasta() (arrayalignment method)": [[24, "cogent3.core.alignment.ArrayAlignment.to_fasta"]], "to_html() (arrayalignment method)": [[24, "cogent3.core.alignment.ArrayAlignment.to_html"]], "to_json() (arrayalignment method)": [[24, "cogent3.core.alignment.ArrayAlignment.to_json"]], "to_moltype() (arrayalignment method)": [[24, "cogent3.core.alignment.ArrayAlignment.to_moltype"]], "to_nexus() (arrayalignment method)": [[24, "cogent3.core.alignment.ArrayAlignment.to_nexus"]], "to_phylip() (arrayalignment method)": [[24, "cogent3.core.alignment.ArrayAlignment.to_phylip"]], "to_pretty() (arrayalignment method)": [[24, "cogent3.core.alignment.ArrayAlignment.to_pretty"]], "to_protein() (arrayalignment method)": [[24, "cogent3.core.alignment.ArrayAlignment.to_protein"]], "to_rich_dict() (arrayalignment method)": [[24, "cogent3.core.alignment.ArrayAlignment.to_rich_dict"]], "to_rna() (arrayalignment method)": [[24, "cogent3.core.alignment.ArrayAlignment.to_rna"]], "to_type() (arrayalignment method)": [[24, "cogent3.core.alignment.ArrayAlignment.to_type"]], "trim_stop_codons() (arrayalignment method)": [[24, "cogent3.core.alignment.ArrayAlignment.trim_stop_codons"]], "variable_positions() (arrayalignment method)": [[24, "cogent3.core.alignment.ArrayAlignment.variable_positions"]], "with_modified_termini() (arrayalignment method)": [[24, "cogent3.core.alignment.ArrayAlignment.with_modified_termini"]], "write() (arrayalignment method)": [[24, "cogent3.core.alignment.ArrayAlignment.write"]], "sequencecollection (class in cogent3.core.alignment)": [[25, "cogent3.core.alignment.SequenceCollection"]], "add_feature() (sequencecollection method)": [[25, "cogent3.core.alignment.SequenceCollection.add_feature"]], "add_seqs() (sequencecollection method)": [[25, "cogent3.core.alignment.SequenceCollection.add_seqs"]], "annotate_from_gff() (sequencecollection method)": [[25, "cogent3.core.alignment.SequenceCollection.annotate_from_gff"]], "annotation_db (sequencecollection property)": [[25, "cogent3.core.alignment.SequenceCollection.annotation_db"]], "apply_pssm() (sequencecollection method)": [[25, "cogent3.core.alignment.SequenceCollection.apply_pssm"]], "copy() (sequencecollection method)": [[25, "cogent3.core.alignment.SequenceCollection.copy"]], "copy_annotations() (sequencecollection method)": [[25, "cogent3.core.alignment.SequenceCollection.copy_annotations"]], "counts() (sequencecollection method)": [[25, "cogent3.core.alignment.SequenceCollection.counts"]], "counts_per_seq() (sequencecollection method)": [[25, "cogent3.core.alignment.SequenceCollection.counts_per_seq"]], "deepcopy() (sequencecollection method)": [[25, "cogent3.core.alignment.SequenceCollection.deepcopy"]], "degap() (sequencecollection method)": [[25, "cogent3.core.alignment.SequenceCollection.degap"]], "distance_matrix() (sequencecollection method)": [[25, "cogent3.core.alignment.SequenceCollection.distance_matrix"]], "dotplot() (sequencecollection method)": [[25, "cogent3.core.alignment.SequenceCollection.dotplot"]], "entropy_per_seq() (sequencecollection method)": [[25, "cogent3.core.alignment.SequenceCollection.entropy_per_seq"]], "get_ambiguous_positions() (sequencecollection method)": [[25, "cogent3.core.alignment.SequenceCollection.get_ambiguous_positions"]], "get_features() (sequencecollection method)": [[25, "cogent3.core.alignment.SequenceCollection.get_features"]], "get_identical_sets() (sequencecollection method)": [[25, "cogent3.core.alignment.SequenceCollection.get_identical_sets"]], "get_lengths() (sequencecollection method)": [[25, "cogent3.core.alignment.SequenceCollection.get_lengths"]], "get_motif_probs() (sequencecollection method)": [[25, "cogent3.core.alignment.SequenceCollection.get_motif_probs"]], "get_seq() (sequencecollection method)": [[25, "cogent3.core.alignment.SequenceCollection.get_seq"]], "get_seq_indices() (sequencecollection method)": [[25, "cogent3.core.alignment.SequenceCollection.get_seq_indices"]], "get_similar() (sequencecollection method)": [[25, "cogent3.core.alignment.SequenceCollection.get_similar"]], "get_translation() (sequencecollection method)": [[25, "cogent3.core.alignment.SequenceCollection.get_translation"]], "has_terminal_stop() (sequencecollection method)": [[25, "cogent3.core.alignment.SequenceCollection.has_terminal_stop"]], "has_terminal_stops() (sequencecollection method)": [[25, "cogent3.core.alignment.SequenceCollection.has_terminal_stops"]], "is_array (sequencecollection attribute)": [[25, "cogent3.core.alignment.SequenceCollection.is_array"]], "is_ragged() (sequencecollection method)": [[25, "cogent3.core.alignment.SequenceCollection.is_ragged"]], "iter_selected() (sequencecollection method)": [[25, "cogent3.core.alignment.SequenceCollection.iter_selected"]], "iter_seqs() (sequencecollection method)": [[25, "cogent3.core.alignment.SequenceCollection.iter_seqs"]], "make_feature() (sequencecollection method)": [[25, "cogent3.core.alignment.SequenceCollection.make_feature"]], "moltype (sequencecollection attribute)": [[25, "cogent3.core.alignment.SequenceCollection.moltype"]], "num_seqs (sequencecollection property)": [[25, "cogent3.core.alignment.SequenceCollection.num_seqs"]], "omit_gap_runs() (sequencecollection method)": [[25, "cogent3.core.alignment.SequenceCollection.omit_gap_runs"]], "omit_gap_seqs() (sequencecollection method)": [[25, "cogent3.core.alignment.SequenceCollection.omit_gap_seqs"]], "pad_seqs() (sequencecollection method)": [[25, "cogent3.core.alignment.SequenceCollection.pad_seqs"]], "probs_per_seq() (sequencecollection method)": [[25, "cogent3.core.alignment.SequenceCollection.probs_per_seq"]], "rc() (sequencecollection method)": [[25, "cogent3.core.alignment.SequenceCollection.rc"]], "rename_seqs() (sequencecollection method)": [[25, "cogent3.core.alignment.SequenceCollection.rename_seqs"]], "reverse_complement() (sequencecollection method)": [[25, "cogent3.core.alignment.SequenceCollection.reverse_complement"]], "seqs (sequencecollection property)": [[25, "cogent3.core.alignment.SequenceCollection.seqs"]], "set_repr_policy() (sequencecollection method)": [[25, "cogent3.core.alignment.SequenceCollection.set_repr_policy"]], "strand_symmetry() (sequencecollection method)": [[25, "cogent3.core.alignment.SequenceCollection.strand_symmetry"]], "take_seqs() (sequencecollection method)": [[25, "cogent3.core.alignment.SequenceCollection.take_seqs"]], "take_seqs_if() (sequencecollection method)": [[25, "cogent3.core.alignment.SequenceCollection.take_seqs_if"]], "to_dict() (sequencecollection method)": [[25, "cogent3.core.alignment.SequenceCollection.to_dict"]], "to_dna() (sequencecollection method)": [[25, "cogent3.core.alignment.SequenceCollection.to_dna"]], "to_fasta() (sequencecollection method)": [[25, "cogent3.core.alignment.SequenceCollection.to_fasta"]], "to_json() (sequencecollection method)": [[25, "cogent3.core.alignment.SequenceCollection.to_json"]], "to_moltype() (sequencecollection method)": [[25, "cogent3.core.alignment.SequenceCollection.to_moltype"]], "to_nexus() (sequencecollection method)": [[25, "cogent3.core.alignment.SequenceCollection.to_nexus"]], "to_phylip() (sequencecollection method)": [[25, "cogent3.core.alignment.SequenceCollection.to_phylip"]], "to_protein() (sequencecollection method)": [[25, "cogent3.core.alignment.SequenceCollection.to_protein"]], "to_rich_dict() (sequencecollection method)": [[25, "cogent3.core.alignment.SequenceCollection.to_rich_dict"]], "to_rna() (sequencecollection method)": [[25, "cogent3.core.alignment.SequenceCollection.to_rna"]], "trim_stop_codons() (sequencecollection method)": [[25, "cogent3.core.alignment.SequenceCollection.trim_stop_codons"]], "with_modified_termini() (sequencecollection method)": [[25, "cogent3.core.alignment.SequenceCollection.with_modified_termini"]], "write() (sequencecollection method)": [[25, "cogent3.core.alignment.SequenceCollection.write"]], "alphabet (class in cogent3.core.alphabet)": [[27, "cogent3.core.alphabet.Alphabet"]], "alphabet.alphabeterror": [[27, "cogent3.core.alphabet.Alphabet.AlphabetError"]], "adapt_motif_probs() (alphabet method)": [[27, "cogent3.core.alphabet.Alphabet.adapt_motif_probs"]], "add_note() (alphabet.alphabeterror method)": [[27, "cogent3.core.alphabet.Alphabet.AlphabetError.add_note"]], "args (alphabet.alphabeterror attribute)": [[27, "cogent3.core.alphabet.Alphabet.AlphabetError.args"]], "count() (alphabet method)": [[27, "cogent3.core.alphabet.Alphabet.count"]], "counts() (alphabet method)": [[27, "cogent3.core.alphabet.Alphabet.counts"]], "from_indices() (alphabet method)": [[27, "cogent3.core.alphabet.Alphabet.from_indices"]], "get_gap_motif() (alphabet method)": [[27, "cogent3.core.alphabet.Alphabet.get_gap_motif"]], "get_matched_array() (alphabet method)": [[27, "cogent3.core.alphabet.Alphabet.get_matched_array"]], "get_motif_len() (alphabet method)": [[27, "cogent3.core.alphabet.Alphabet.get_motif_len"]], "get_subset() (alphabet method)": [[27, "cogent3.core.alphabet.Alphabet.get_subset"]], "get_word_alphabet() (alphabet method)": [[27, "cogent3.core.alphabet.Alphabet.get_word_alphabet"]], "includes_gap_motif() (alphabet method)": [[27, "cogent3.core.alphabet.Alphabet.includes_gap_motif"]], "index() (alphabet method)": [[27, "cogent3.core.alphabet.Alphabet.index"]], "is_valid() (alphabet method)": [[27, "cogent3.core.alphabet.Alphabet.is_valid"]], "resolve_ambiguity() (alphabet method)": [[27, "cogent3.core.alphabet.Alphabet.resolve_ambiguity"]], "to_indices() (alphabet method)": [[27, "cogent3.core.alphabet.Alphabet.to_indices"]], "to_json() (alphabet method)": [[27, "cogent3.core.alphabet.Alphabet.to_json"]], "to_rich_dict() (alphabet method)": [[27, "cogent3.core.alphabet.Alphabet.to_rich_dict"]], "with_gap_motif() (alphabet method)": [[27, "cogent3.core.alphabet.Alphabet.with_gap_motif"]], "with_traceback() (alphabet.alphabeterror method)": [[27, "cogent3.core.alphabet.Alphabet.AlphabetError.with_traceback"]], "feature (class in cogent3.core.annotation)": [[29, "cogent3.core.annotation.Feature"]], "as_one_span() (feature method)": [[29, "cogent3.core.annotation.Feature.as_one_span"]], "biotype (feature property)": [[29, "cogent3.core.annotation.Feature.biotype"]], "get_children() (feature method)": [[29, "cogent3.core.annotation.Feature.get_children"]], "get_coordinates() (feature method)": [[29, "cogent3.core.annotation.Feature.get_coordinates"]], "get_drawable() (feature method)": [[29, "cogent3.core.annotation.Feature.get_drawable"]], "get_parent() (feature method)": [[29, "cogent3.core.annotation.Feature.get_parent"]], "get_slice() (feature method)": [[29, "cogent3.core.annotation.Feature.get_slice"]], "map (feature property)": [[29, "cogent3.core.annotation.Feature.map"]], "name (feature property)": [[29, "cogent3.core.annotation.Feature.name"]], "parent (feature property)": [[29, "cogent3.core.annotation.Feature.parent"]], "remapped_to() (feature method)": [[29, "cogent3.core.annotation.Feature.remapped_to"]], "seqid (feature property)": [[29, "cogent3.core.annotation.Feature.seqid"]], "shadow() (feature method)": [[29, "cogent3.core.annotation.Feature.shadow"]], "to_dict() (feature method)": [[29, "cogent3.core.annotation.Feature.to_dict"]], "union() (feature method)": [[29, "cogent3.core.annotation.Feature.union"]], "without_lost_spans() (feature method)": [[29, "cogent3.core.annotation.Feature.without_lost_spans"]], "basicannotationdb (class in cogent3.core.annotation_db)": [[31, "cogent3.core.annotation_db.BasicAnnotationDb"]], "strorbool (basicannotationdb attribute)": [[31, "cogent3.core.annotation_db.BasicAnnotationDb.StrOrBool"]], "add_feature() (basicannotationdb method)": [[31, "cogent3.core.annotation_db.BasicAnnotationDb.add_feature"]], "add_records() (basicannotationdb method)": [[31, "cogent3.core.annotation_db.BasicAnnotationDb.add_records"]], "biotype_counts() (basicannotationdb method)": [[31, "cogent3.core.annotation_db.BasicAnnotationDb.biotype_counts"]], "compatible() (basicannotationdb method)": [[31, "cogent3.core.annotation_db.BasicAnnotationDb.compatible"]], "count_distinct() (basicannotationdb method)": [[31, "cogent3.core.annotation_db.BasicAnnotationDb.count_distinct"]], "db (basicannotationdb property)": [[31, "cogent3.core.annotation_db.BasicAnnotationDb.db"]], "describe (basicannotationdb property)": [[31, "cogent3.core.annotation_db.BasicAnnotationDb.describe"]], "from_dict() (basicannotationdb class method)": [[31, "cogent3.core.annotation_db.BasicAnnotationDb.from_dict"]], "get_feature_children() (basicannotationdb method)": [[31, "cogent3.core.annotation_db.BasicAnnotationDb.get_feature_children"]], "get_feature_parent() (basicannotationdb method)": [[31, "cogent3.core.annotation_db.BasicAnnotationDb.get_feature_parent"]], "get_features_matching() (basicannotationdb method)": [[31, "cogent3.core.annotation_db.BasicAnnotationDb.get_features_matching"]], "get_records_matching() (basicannotationdb method)": [[31, "cogent3.core.annotation_db.BasicAnnotationDb.get_records_matching"]], "num_matches() (basicannotationdb method)": [[31, "cogent3.core.annotation_db.BasicAnnotationDb.num_matches"]], "table_names (basicannotationdb property)": [[31, "cogent3.core.annotation_db.BasicAnnotationDb.table_names"]], "to_json() (basicannotationdb method)": [[31, "cogent3.core.annotation_db.BasicAnnotationDb.to_json"]], "to_rich_dict() (basicannotationdb method)": [[31, "cogent3.core.annotation_db.BasicAnnotationDb.to_rich_dict"]], "union() (basicannotationdb method)": [[31, "cogent3.core.annotation_db.BasicAnnotationDb.union"]], "update() (basicannotationdb method)": [[31, "cogent3.core.annotation_db.BasicAnnotationDb.update"]], "write() (basicannotationdb method)": [[31, "cogent3.core.annotation_db.BasicAnnotationDb.write"]], "genbankannotationdb (class in cogent3.core.annotation_db)": [[32, "cogent3.core.annotation_db.GenbankAnnotationDb"]], "strorbool (genbankannotationdb attribute)": [[32, "cogent3.core.annotation_db.GenbankAnnotationDb.StrOrBool"]], "add_feature() (genbankannotationdb method)": [[32, "cogent3.core.annotation_db.GenbankAnnotationDb.add_feature"]], "add_records() (genbankannotationdb method)": [[32, "cogent3.core.annotation_db.GenbankAnnotationDb.add_records"]], "biotype_counts() (genbankannotationdb method)": [[32, "cogent3.core.annotation_db.GenbankAnnotationDb.biotype_counts"]], "compatible() (genbankannotationdb method)": [[32, "cogent3.core.annotation_db.GenbankAnnotationDb.compatible"]], "count_distinct() (genbankannotationdb method)": [[32, "cogent3.core.annotation_db.GenbankAnnotationDb.count_distinct"]], "db (genbankannotationdb property)": [[32, "cogent3.core.annotation_db.GenbankAnnotationDb.db"]], "describe (genbankannotationdb property)": [[32, "cogent3.core.annotation_db.GenbankAnnotationDb.describe"]], "from_dict() (genbankannotationdb class method)": [[32, "cogent3.core.annotation_db.GenbankAnnotationDb.from_dict"]], "get_feature_children() (genbankannotationdb method)": [[32, "cogent3.core.annotation_db.GenbankAnnotationDb.get_feature_children"]], "get_feature_parent() (genbankannotationdb method)": [[32, "cogent3.core.annotation_db.GenbankAnnotationDb.get_feature_parent"]], "get_features_matching() (genbankannotationdb method)": [[32, "cogent3.core.annotation_db.GenbankAnnotationDb.get_features_matching"]], "get_records_matching() (genbankannotationdb method)": [[32, "cogent3.core.annotation_db.GenbankAnnotationDb.get_records_matching"]], "num_matches() (genbankannotationdb method)": [[32, "cogent3.core.annotation_db.GenbankAnnotationDb.num_matches"]], "table_names (genbankannotationdb property)": [[32, "cogent3.core.annotation_db.GenbankAnnotationDb.table_names"]], "to_json() (genbankannotationdb method)": [[32, "cogent3.core.annotation_db.GenbankAnnotationDb.to_json"]], "to_rich_dict() (genbankannotationdb method)": [[32, "cogent3.core.annotation_db.GenbankAnnotationDb.to_rich_dict"]], "union() (genbankannotationdb method)": [[32, "cogent3.core.annotation_db.GenbankAnnotationDb.union"]], "update() (genbankannotationdb method)": [[32, "cogent3.core.annotation_db.GenbankAnnotationDb.update"]], "write() (genbankannotationdb method)": [[32, "cogent3.core.annotation_db.GenbankAnnotationDb.write"]], "gffannotationdb (class in cogent3.core.annotation_db)": [[33, "cogent3.core.annotation_db.GffAnnotationDb"]], "strorbool (gffannotationdb attribute)": [[33, "cogent3.core.annotation_db.GffAnnotationDb.StrOrBool"]], "add_feature() (gffannotationdb method)": [[33, "cogent3.core.annotation_db.GffAnnotationDb.add_feature"]], "add_records() (gffannotationdb method)": [[33, "cogent3.core.annotation_db.GffAnnotationDb.add_records"]], "biotype_counts() (gffannotationdb method)": [[33, "cogent3.core.annotation_db.GffAnnotationDb.biotype_counts"]], "compatible() (gffannotationdb method)": [[33, "cogent3.core.annotation_db.GffAnnotationDb.compatible"]], "count_distinct() (gffannotationdb method)": [[33, "cogent3.core.annotation_db.GffAnnotationDb.count_distinct"]], "db (gffannotationdb property)": [[33, "cogent3.core.annotation_db.GffAnnotationDb.db"]], "describe (gffannotationdb property)": [[33, "cogent3.core.annotation_db.GffAnnotationDb.describe"]], "from_dict() (gffannotationdb class method)": [[33, "cogent3.core.annotation_db.GffAnnotationDb.from_dict"]], "get_feature_children() (gffannotationdb method)": [[33, "cogent3.core.annotation_db.GffAnnotationDb.get_feature_children"]], "get_feature_parent() (gffannotationdb method)": [[33, "cogent3.core.annotation_db.GffAnnotationDb.get_feature_parent"]], "get_features_matching() (gffannotationdb method)": [[33, "cogent3.core.annotation_db.GffAnnotationDb.get_features_matching"]], "get_records_matching() (gffannotationdb method)": [[33, "cogent3.core.annotation_db.GffAnnotationDb.get_records_matching"]], "num_matches() (gffannotationdb method)": [[33, "cogent3.core.annotation_db.GffAnnotationDb.num_matches"]], "table_names (gffannotationdb property)": [[33, "cogent3.core.annotation_db.GffAnnotationDb.table_names"]], "to_json() (gffannotationdb method)": [[33, "cogent3.core.annotation_db.GffAnnotationDb.to_json"]], "to_rich_dict() (gffannotationdb method)": [[33, "cogent3.core.annotation_db.GffAnnotationDb.to_rich_dict"]], "union() (gffannotationdb method)": [[33, "cogent3.core.annotation_db.GffAnnotationDb.union"]], "update() (gffannotationdb method)": [[33, "cogent3.core.annotation_db.GffAnnotationDb.update"]], "write() (gffannotationdb method)": [[33, "cogent3.core.annotation_db.GffAnnotationDb.write"]], "define_app() (in module cogent3.app.composable)": [[34, "cogent3.app.composable.define_app"]], "datamember (class in cogent3.app.data_store)": [[35, "cogent3.app.data_store.DataMember"]], "data_store (datamember property)": [[35, "cogent3.app.data_store.DataMember.data_store"]], "md5 (datamember property)": [[35, "cogent3.app.data_store.DataMember.md5"]], "read() (datamember method)": [[35, "cogent3.app.data_store.DataMember.read"]], "unique_id (datamember property)": [[35, "cogent3.app.data_store.DataMember.unique_id"]], "datastoredirectory (class in cogent3.app.data_store)": [[36, "cogent3.app.data_store.DataStoreDirectory"]], "completed (datastoredirectory property)": [[36, "cogent3.app.data_store.DataStoreDirectory.completed"]], "describe (datastoredirectory property)": [[36, "cogent3.app.data_store.DataStoreDirectory.describe"]], "drop_not_completed() (datastoredirectory method)": [[36, "cogent3.app.data_store.DataStoreDirectory.drop_not_completed"]], "limit (datastoredirectory property)": [[36, "cogent3.app.data_store.DataStoreDirectory.limit"]], "logs (datastoredirectory property)": [[36, "cogent3.app.data_store.DataStoreDirectory.logs"]], "md5() (datastoredirectory method)": [[36, "cogent3.app.data_store.DataStoreDirectory.md5"]], "members (datastoredirectory property)": [[36, "cogent3.app.data_store.DataStoreDirectory.members"]], "mode (datastoredirectory property)": [[36, "cogent3.app.data_store.DataStoreDirectory.mode"]], "not_completed (datastoredirectory property)": [[36, "cogent3.app.data_store.DataStoreDirectory.not_completed"]], "read() (datastoredirectory method)": [[36, "cogent3.app.data_store.DataStoreDirectory.read"]], "source (datastoredirectory property)": [[36, "cogent3.app.data_store.DataStoreDirectory.source"]], "summary_logs (datastoredirectory property)": [[36, "cogent3.app.data_store.DataStoreDirectory.summary_logs"]], "summary_not_completed (datastoredirectory property)": [[36, "cogent3.app.data_store.DataStoreDirectory.summary_not_completed"]], "validate() (datastoredirectory method)": [[36, "cogent3.app.data_store.DataStoreDirectory.validate"]], "write() (datastoredirectory method)": [[36, "cogent3.app.data_store.DataStoreDirectory.write"]], "write_log() (datastoredirectory method)": [[36, "cogent3.app.data_store.DataStoreDirectory.write_log"]], "write_not_completed() (datastoredirectory method)": [[36, "cogent3.app.data_store.DataStoreDirectory.write_not_completed"]], "readonlydatastorezipped (class in cogent3.app.data_store)": [[37, "cogent3.app.data_store.ReadOnlyDataStoreZipped"]], "completed (readonlydatastorezipped property)": [[37, "cogent3.app.data_store.ReadOnlyDataStoreZipped.completed"]], "describe (readonlydatastorezipped property)": [[37, "cogent3.app.data_store.ReadOnlyDataStoreZipped.describe"]], "drop_not_completed() (readonlydatastorezipped method)": [[37, "cogent3.app.data_store.ReadOnlyDataStoreZipped.drop_not_completed"]], "limit (readonlydatastorezipped property)": [[37, "cogent3.app.data_store.ReadOnlyDataStoreZipped.limit"]], "logs (readonlydatastorezipped property)": [[37, "cogent3.app.data_store.ReadOnlyDataStoreZipped.logs"]], "md5() (readonlydatastorezipped method)": [[37, "cogent3.app.data_store.ReadOnlyDataStoreZipped.md5"]], "members (readonlydatastorezipped property)": [[37, "cogent3.app.data_store.ReadOnlyDataStoreZipped.members"]], "mode (readonlydatastorezipped property)": [[37, "cogent3.app.data_store.ReadOnlyDataStoreZipped.mode"]], "not_completed (readonlydatastorezipped property)": [[37, "cogent3.app.data_store.ReadOnlyDataStoreZipped.not_completed"]], "read() (readonlydatastorezipped method)": [[37, "cogent3.app.data_store.ReadOnlyDataStoreZipped.read"]], "source (readonlydatastorezipped property)": [[37, "cogent3.app.data_store.ReadOnlyDataStoreZipped.source"]], "summary_logs (readonlydatastorezipped property)": [[37, "cogent3.app.data_store.ReadOnlyDataStoreZipped.summary_logs"]], "summary_not_completed (readonlydatastorezipped property)": [[37, "cogent3.app.data_store.ReadOnlyDataStoreZipped.summary_not_completed"]], "validate() (readonlydatastorezipped method)": [[37, "cogent3.app.data_store.ReadOnlyDataStoreZipped.validate"]], "write() (readonlydatastorezipped method)": [[37, "cogent3.app.data_store.ReadOnlyDataStoreZipped.write"]], "write_log() (readonlydatastorezipped method)": [[37, "cogent3.app.data_store.ReadOnlyDataStoreZipped.write_log"]], "write_not_completed() (readonlydatastorezipped method)": [[37, "cogent3.app.data_store.ReadOnlyDataStoreZipped.write_not_completed"]], "register_datastore_reader() (in module cogent3.app.io)": [[38, "cogent3.app.io.register_datastore_reader"]], "datastoresqlite (class in cogent3.app.sqlite_data_store)": [[39, "cogent3.app.sqlite_data_store.DataStoreSqlite"]], "close() (datastoresqlite method)": [[39, "cogent3.app.sqlite_data_store.DataStoreSqlite.close"]], "completed (datastoresqlite property)": [[39, "cogent3.app.sqlite_data_store.DataStoreSqlite.completed"]], "db (datastoresqlite property)": [[39, "cogent3.app.sqlite_data_store.DataStoreSqlite.db"]], "describe (datastoresqlite property)": [[39, "cogent3.app.sqlite_data_store.DataStoreSqlite.describe"]], "drop_not_completed() (datastoresqlite method)": [[39, "cogent3.app.sqlite_data_store.DataStoreSqlite.drop_not_completed"]], "limit (datastoresqlite property)": [[39, "cogent3.app.sqlite_data_store.DataStoreSqlite.limit"]], "lock() (datastoresqlite method)": [[39, "cogent3.app.sqlite_data_store.DataStoreSqlite.lock"]], "locked (datastoresqlite property)": [[39, "cogent3.app.sqlite_data_store.DataStoreSqlite.locked"]], "logs (datastoresqlite property)": [[39, "cogent3.app.sqlite_data_store.DataStoreSqlite.logs"]], "md5() (datastoresqlite method)": [[39, "cogent3.app.sqlite_data_store.DataStoreSqlite.md5"]], "members (datastoresqlite property)": [[39, "cogent3.app.sqlite_data_store.DataStoreSqlite.members"]], "mode (datastoresqlite property)": [[39, "cogent3.app.sqlite_data_store.DataStoreSqlite.mode"]], "not_completed (datastoresqlite property)": [[39, "cogent3.app.sqlite_data_store.DataStoreSqlite.not_completed"]], "read() (datastoresqlite method)": [[39, "cogent3.app.sqlite_data_store.DataStoreSqlite.read"]], "record_type (datastoresqlite property)": [[39, "cogent3.app.sqlite_data_store.DataStoreSqlite.record_type"]], "source (datastoresqlite property)": [[39, "cogent3.app.sqlite_data_store.DataStoreSqlite.source"]], "store_suffix (datastoresqlite attribute)": [[39, "cogent3.app.sqlite_data_store.DataStoreSqlite.store_suffix"]], "summary_logs (datastoresqlite property)": [[39, "cogent3.app.sqlite_data_store.DataStoreSqlite.summary_logs"]], "summary_not_completed (datastoresqlite property)": [[39, "cogent3.app.sqlite_data_store.DataStoreSqlite.summary_not_completed"]], "unlock() (datastoresqlite method)": [[39, "cogent3.app.sqlite_data_store.DataStoreSqlite.unlock"]], "validate() (datastoresqlite method)": [[39, "cogent3.app.sqlite_data_store.DataStoreSqlite.validate"]], "write() (datastoresqlite method)": [[39, "cogent3.app.sqlite_data_store.DataStoreSqlite.write"]], "write_log() (datastoresqlite method)": [[39, "cogent3.app.sqlite_data_store.DataStoreSqlite.write_log"]], "write_not_completed() (datastoresqlite method)": [[39, "cogent3.app.sqlite_data_store.DataStoreSqlite.write_not_completed"]], "geneticcode (class in cogent3.core.genetic_code)": [[40, "cogent3.core.genetic_code.GeneticCode"]], "blocks (geneticcode property)": [[40, "cogent3.core.genetic_code.GeneticCode.blocks"]], "changes() (geneticcode method)": [[40, "cogent3.core.genetic_code.GeneticCode.changes"]], "get_alphabet() (geneticcode method)": [[40, "cogent3.core.genetic_code.GeneticCode.get_alphabet"]], "get_stop_indices() (geneticcode method)": [[40, "cogent3.core.genetic_code.GeneticCode.get_stop_indices"]], "is_start() (geneticcode method)": [[40, "cogent3.core.genetic_code.GeneticCode.is_start"]], "is_stop() (geneticcode method)": [[40, "cogent3.core.genetic_code.GeneticCode.is_stop"]], "sixframes() (geneticcode method)": [[40, "cogent3.core.genetic_code.GeneticCode.sixframes"]], "to_regex() (geneticcode method)": [[40, "cogent3.core.genetic_code.GeneticCode.to_regex"]], "to_table() (geneticcode method)": [[40, "cogent3.core.genetic_code.GeneticCode.to_table"]], "translate() (geneticcode method)": [[40, "cogent3.core.genetic_code.GeneticCode.translate"]], "moltype (class in cogent3.core.moltype)": [[43, "cogent3.core.moltype.MolType"]], "can_match() (moltype method)": [[43, "cogent3.core.moltype.MolType.can_match"]], "can_mismatch() (moltype method)": [[43, "cogent3.core.moltype.MolType.can_mismatch"]], "can_mispair() (moltype method)": [[43, "cogent3.core.moltype.MolType.can_mispair"]], "can_pair() (moltype method)": [[43, "cogent3.core.moltype.MolType.can_pair"]], "coerce_str() (moltype method)": [[43, "cogent3.core.moltype.MolType.coerce_str"]], "complement() (moltype method)": [[43, "cogent3.core.moltype.MolType.complement"]], "count_degenerate() (moltype method)": [[43, "cogent3.core.moltype.MolType.count_degenerate"]], "count_gaps() (moltype method)": [[43, "cogent3.core.moltype.MolType.count_gaps"]], "degap() (moltype method)": [[43, "cogent3.core.moltype.MolType.degap"]], "degenerate_from_seq() (moltype method)": [[43, "cogent3.core.moltype.MolType.degenerate_from_seq"]], "disambiguate() (moltype method)": [[43, "cogent3.core.moltype.MolType.disambiguate"]], "first_degenerate() (moltype method)": [[43, "cogent3.core.moltype.MolType.first_degenerate"]], "first_gap() (moltype method)": [[43, "cogent3.core.moltype.MolType.first_gap"]], "first_invalid() (moltype method)": [[43, "cogent3.core.moltype.MolType.first_invalid"]], "first_non_strict() (moltype method)": [[43, "cogent3.core.moltype.MolType.first_non_strict"]], "first_not_in_alphabet() (moltype method)": [[43, "cogent3.core.moltype.MolType.first_not_in_alphabet"]], "gap_indices() (moltype method)": [[43, "cogent3.core.moltype.MolType.gap_indices"]], "gap_maps() (moltype method)": [[43, "cogent3.core.moltype.MolType.gap_maps"]], "gap_vector() (moltype method)": [[43, "cogent3.core.moltype.MolType.gap_vector"]], "get_css_style() (moltype method)": [[43, "cogent3.core.moltype.MolType.get_css_style"]], "get_degenerate_positions() (moltype method)": [[43, "cogent3.core.moltype.MolType.get_degenerate_positions"]], "get_type() (moltype method)": [[43, "cogent3.core.moltype.MolType.get_type"]], "is_ambiguity() (moltype method)": [[43, "cogent3.core.moltype.MolType.is_ambiguity"]], "is_degenerate() (moltype method)": [[43, "cogent3.core.moltype.MolType.is_degenerate"]], "is_gap() (moltype method)": [[43, "cogent3.core.moltype.MolType.is_gap"]], "is_gapped() (moltype method)": [[43, "cogent3.core.moltype.MolType.is_gapped"]], "is_strict() (moltype method)": [[43, "cogent3.core.moltype.MolType.is_strict"]], "is_valid() (moltype method)": [[43, "cogent3.core.moltype.MolType.is_valid"]], "make_array_seq() (moltype method)": [[43, "cogent3.core.moltype.MolType.make_array_seq"]], "make_seq() (moltype method)": [[43, "cogent3.core.moltype.MolType.make_seq"]], "must_match() (moltype method)": [[43, "cogent3.core.moltype.MolType.must_match"]], "must_pair() (moltype method)": [[43, "cogent3.core.moltype.MolType.must_pair"]], "mw() (moltype method)": [[43, "cogent3.core.moltype.MolType.mw"]], "possibilities() (moltype method)": [[43, "cogent3.core.moltype.MolType.possibilities"]], "rc() (moltype method)": [[43, "cogent3.core.moltype.MolType.rc"]], "strand_symmetric_motifs() (moltype method)": [[43, "cogent3.core.moltype.MolType.strand_symmetric_motifs"]], "to_json() (moltype method)": [[43, "cogent3.core.moltype.MolType.to_json"]], "to_regex() (moltype method)": [[43, "cogent3.core.moltype.MolType.to_regex"]], "to_rich_dict() (moltype method)": [[43, "cogent3.core.moltype.MolType.to_rich_dict"]], "valid_on_alphabet() (moltype method)": [[43, "cogent3.core.moltype.MolType.valid_on_alphabet"]], "verify_sequence() (moltype method)": [[43, "cogent3.core.moltype.MolType.verify_sequence"]], "what_ambiguity() (moltype method)": [[43, "cogent3.core.moltype.MolType.what_ambiguity"]], "dnasequence (class in cogent3.core.sequence)": [[45, "cogent3.core.sequence.DnaSequence"]], "add_feature() (dnasequence method)": [[45, "cogent3.core.sequence.DnaSequence.add_feature"]], "annotate_from_gff() (dnasequence method)": [[45, "cogent3.core.sequence.DnaSequence.annotate_from_gff"]], "annotate_matches_to() (dnasequence method)": [[45, "cogent3.core.sequence.DnaSequence.annotate_matches_to"]], "annotation_db (dnasequence property)": [[45, "cogent3.core.sequence.DnaSequence.annotation_db"]], "annotation_offset (dnasequence property)": [[45, "cogent3.core.sequence.DnaSequence.annotation_offset"]], "can_match() (dnasequence method)": [[45, "cogent3.core.sequence.DnaSequence.can_match"]], "can_mismatch() (dnasequence method)": [[45, "cogent3.core.sequence.DnaSequence.can_mismatch"]], "can_mispair() (dnasequence method)": [[45, "cogent3.core.sequence.DnaSequence.can_mispair"]], "can_pair() (dnasequence method)": [[45, "cogent3.core.sequence.DnaSequence.can_pair"]], "codon_alphabet (dnasequence attribute)": [[45, "cogent3.core.sequence.DnaSequence.codon_alphabet"]], "complement() (dnasequence method)": [[45, "cogent3.core.sequence.DnaSequence.complement"]], "copy() (dnasequence method)": [[45, "cogent3.core.sequence.DnaSequence.copy"]], "copy_annotations() (dnasequence method)": [[45, "cogent3.core.sequence.DnaSequence.copy_annotations"]], "count() (dnasequence method)": [[45, "cogent3.core.sequence.DnaSequence.count"]], "count_degenerate() (dnasequence method)": [[45, "cogent3.core.sequence.DnaSequence.count_degenerate"]], "count_gaps() (dnasequence method)": [[45, "cogent3.core.sequence.DnaSequence.count_gaps"]], "counts() (dnasequence method)": [[45, "cogent3.core.sequence.DnaSequence.counts"]], "degap() (dnasequence method)": [[45, "cogent3.core.sequence.DnaSequence.degap"]], "diff() (dnasequence method)": [[45, "cogent3.core.sequence.DnaSequence.diff"]], "disambiguate() (dnasequence method)": [[45, "cogent3.core.sequence.DnaSequence.disambiguate"]], "distance() (dnasequence method)": [[45, "cogent3.core.sequence.DnaSequence.distance"]], "first_degenerate() (dnasequence method)": [[45, "cogent3.core.sequence.DnaSequence.first_degenerate"]], "first_gap() (dnasequence method)": [[45, "cogent3.core.sequence.DnaSequence.first_gap"]], "first_invalid() (dnasequence method)": [[45, "cogent3.core.sequence.DnaSequence.first_invalid"]], "first_non_strict() (dnasequence method)": [[45, "cogent3.core.sequence.DnaSequence.first_non_strict"]], "frac_diff() (dnasequence method)": [[45, "cogent3.core.sequence.DnaSequence.frac_diff"]], "frac_diff_gaps() (dnasequence method)": [[45, "cogent3.core.sequence.DnaSequence.frac_diff_gaps"]], "frac_diff_non_gaps() (dnasequence method)": [[45, "cogent3.core.sequence.DnaSequence.frac_diff_non_gaps"]], "frac_same() (dnasequence method)": [[45, "cogent3.core.sequence.DnaSequence.frac_same"]], "frac_same_gaps() (dnasequence method)": [[45, "cogent3.core.sequence.DnaSequence.frac_same_gaps"]], "frac_same_non_gaps() (dnasequence method)": [[45, "cogent3.core.sequence.DnaSequence.frac_same_non_gaps"]], "frac_similar() (dnasequence method)": [[45, "cogent3.core.sequence.DnaSequence.frac_similar"]], "gap_indices() (dnasequence method)": [[45, "cogent3.core.sequence.DnaSequence.gap_indices"]], "gap_maps() (dnasequence method)": [[45, "cogent3.core.sequence.DnaSequence.gap_maps"]], "gap_vector() (dnasequence method)": [[45, "cogent3.core.sequence.DnaSequence.gap_vector"]], "gapped_by_map() (dnasequence method)": [[45, "cogent3.core.sequence.DnaSequence.gapped_by_map"]], "gapped_by_map_motif_iter() (dnasequence method)": [[45, "cogent3.core.sequence.DnaSequence.gapped_by_map_motif_iter"]], "gapped_by_map_segment_iter() (dnasequence method)": [[45, "cogent3.core.sequence.DnaSequence.gapped_by_map_segment_iter"]], "get_drawable() (dnasequence method)": [[45, "cogent3.core.sequence.DnaSequence.get_drawable"]], "get_drawables() (dnasequence method)": [[45, "cogent3.core.sequence.DnaSequence.get_drawables"]], "get_features() (dnasequence method)": [[45, "cogent3.core.sequence.DnaSequence.get_features"]], "get_in_motif_size() (dnasequence method)": [[45, "cogent3.core.sequence.DnaSequence.get_in_motif_size"]], "get_kmers() (dnasequence method)": [[45, "cogent3.core.sequence.DnaSequence.get_kmers"]], "get_name() (dnasequence method)": [[45, "cogent3.core.sequence.DnaSequence.get_name"]], "get_translation() (dnasequence method)": [[45, "cogent3.core.sequence.DnaSequence.get_translation"]], "get_type() (dnasequence method)": [[45, "cogent3.core.sequence.DnaSequence.get_type"]], "has_terminal_stop() (dnasequence method)": [[45, "cogent3.core.sequence.DnaSequence.has_terminal_stop"]], "is_annotated() (dnasequence method)": [[45, "cogent3.core.sequence.DnaSequence.is_annotated"]], "is_degenerate() (dnasequence method)": [[45, "cogent3.core.sequence.DnaSequence.is_degenerate"]], "is_gap() (dnasequence method)": [[45, "cogent3.core.sequence.DnaSequence.is_gap"]], "is_gapped() (dnasequence method)": [[45, "cogent3.core.sequence.DnaSequence.is_gapped"]], "is_strict() (dnasequence method)": [[45, "cogent3.core.sequence.DnaSequence.is_strict"]], "is_valid() (dnasequence method)": [[45, "cogent3.core.sequence.DnaSequence.is_valid"]], "iter_kmers() (dnasequence method)": [[45, "cogent3.core.sequence.DnaSequence.iter_kmers"]], "line_wrap (dnasequence attribute)": [[45, "cogent3.core.sequence.DnaSequence.line_wrap"]], "make_feature() (dnasequence method)": [[45, "cogent3.core.sequence.DnaSequence.make_feature"]], "matrix_distance() (dnasequence method)": [[45, "cogent3.core.sequence.DnaSequence.matrix_distance"]], "moltype (dnasequence attribute)": [[45, "cogent3.core.sequence.DnaSequence.moltype"]], "must_match() (dnasequence method)": [[45, "cogent3.core.sequence.DnaSequence.must_match"]], "must_pair() (dnasequence method)": [[45, "cogent3.core.sequence.DnaSequence.must_pair"]], "mw() (dnasequence method)": [[45, "cogent3.core.sequence.DnaSequence.mw"]], "parse_out_gaps() (dnasequence method)": [[45, "cogent3.core.sequence.DnaSequence.parse_out_gaps"]], "possibilities() (dnasequence method)": [[45, "cogent3.core.sequence.DnaSequence.possibilities"]], "protein (dnasequence attribute)": [[45, "cogent3.core.sequence.DnaSequence.protein"]], "rc() (dnasequence method)": [[45, "cogent3.core.sequence.DnaSequence.rc"]], "replace() (dnasequence method)": [[45, "cogent3.core.sequence.DnaSequence.replace"]], "replace_annotation_db() (dnasequence method)": [[45, "cogent3.core.sequence.DnaSequence.replace_annotation_db"]], "resolved_ambiguities() (dnasequence method)": [[45, "cogent3.core.sequence.DnaSequence.resolved_ambiguities"]], "reverse_complement() (dnasequence method)": [[45, "cogent3.core.sequence.DnaSequence.reverse_complement"]], "shuffle() (dnasequence method)": [[45, "cogent3.core.sequence.DnaSequence.shuffle"]], "sliding_windows() (dnasequence method)": [[45, "cogent3.core.sequence.DnaSequence.sliding_windows"]], "strand_symmetry() (dnasequence method)": [[45, "cogent3.core.sequence.DnaSequence.strand_symmetry"]], "strip_bad() (dnasequence method)": [[45, "cogent3.core.sequence.DnaSequence.strip_bad"]], "strip_bad_and_gaps() (dnasequence method)": [[45, "cogent3.core.sequence.DnaSequence.strip_bad_and_gaps"]], "strip_degenerate() (dnasequence method)": [[45, "cogent3.core.sequence.DnaSequence.strip_degenerate"]], "to_dna() (dnasequence method)": [[45, "cogent3.core.sequence.DnaSequence.to_dna"]], "to_fasta() (dnasequence method)": [[45, "cogent3.core.sequence.DnaSequence.to_fasta"]], "to_html() (dnasequence method)": [[45, "cogent3.core.sequence.DnaSequence.to_html"]], "to_json() (dnasequence method)": [[45, "cogent3.core.sequence.DnaSequence.to_json"]], "to_moltype() (dnasequence method)": [[45, "cogent3.core.sequence.DnaSequence.to_moltype"]], "to_rich_dict() (dnasequence method)": [[45, "cogent3.core.sequence.DnaSequence.to_rich_dict"]], "to_rna() (dnasequence method)": [[45, "cogent3.core.sequence.DnaSequence.to_rna"]], "trim_stop_codon() (dnasequence method)": [[45, "cogent3.core.sequence.DnaSequence.trim_stop_codon"]], "with_masked_annotations() (dnasequence method)": [[45, "cogent3.core.sequence.DnaSequence.with_masked_annotations"]], "with_termini_unknown() (dnasequence method)": [[45, "cogent3.core.sequence.DnaSequence.with_termini_unknown"]], "proteinsequence (class in cogent3.core.sequence)": [[46, "cogent3.core.sequence.ProteinSequence"]], "add_feature() (proteinsequence method)": [[46, "cogent3.core.sequence.ProteinSequence.add_feature"]], "annotate_from_gff() (proteinsequence method)": [[46, "cogent3.core.sequence.ProteinSequence.annotate_from_gff"]], "annotate_matches_to() (proteinsequence method)": [[46, "cogent3.core.sequence.ProteinSequence.annotate_matches_to"]], "annotation_db (proteinsequence property)": [[46, "cogent3.core.sequence.ProteinSequence.annotation_db"]], "annotation_offset (proteinsequence property)": [[46, "cogent3.core.sequence.ProteinSequence.annotation_offset"]], "can_match() (proteinsequence method)": [[46, "cogent3.core.sequence.ProteinSequence.can_match"]], "can_mismatch() (proteinsequence method)": [[46, "cogent3.core.sequence.ProteinSequence.can_mismatch"]], "can_mispair() (proteinsequence method)": [[46, "cogent3.core.sequence.ProteinSequence.can_mispair"]], "can_pair() (proteinsequence method)": [[46, "cogent3.core.sequence.ProteinSequence.can_pair"]], "complement() (proteinsequence method)": [[46, "cogent3.core.sequence.ProteinSequence.complement"]], "copy() (proteinsequence method)": [[46, "cogent3.core.sequence.ProteinSequence.copy"]], "copy_annotations() (proteinsequence method)": [[46, "cogent3.core.sequence.ProteinSequence.copy_annotations"]], "count() (proteinsequence method)": [[46, "cogent3.core.sequence.ProteinSequence.count"]], "count_degenerate() (proteinsequence method)": [[46, "cogent3.core.sequence.ProteinSequence.count_degenerate"]], "count_gaps() (proteinsequence method)": [[46, "cogent3.core.sequence.ProteinSequence.count_gaps"]], "counts() (proteinsequence method)": [[46, "cogent3.core.sequence.ProteinSequence.counts"]], "degap() (proteinsequence method)": [[46, "cogent3.core.sequence.ProteinSequence.degap"]], "diff() (proteinsequence method)": [[46, "cogent3.core.sequence.ProteinSequence.diff"]], "disambiguate() (proteinsequence method)": [[46, "cogent3.core.sequence.ProteinSequence.disambiguate"]], "distance() (proteinsequence method)": [[46, "cogent3.core.sequence.ProteinSequence.distance"]], "first_degenerate() (proteinsequence method)": [[46, "cogent3.core.sequence.ProteinSequence.first_degenerate"]], "first_gap() (proteinsequence method)": [[46, "cogent3.core.sequence.ProteinSequence.first_gap"]], "first_invalid() (proteinsequence method)": [[46, "cogent3.core.sequence.ProteinSequence.first_invalid"]], "first_non_strict() (proteinsequence method)": [[46, "cogent3.core.sequence.ProteinSequence.first_non_strict"]], "frac_diff() (proteinsequence method)": [[46, "cogent3.core.sequence.ProteinSequence.frac_diff"]], "frac_diff_gaps() (proteinsequence method)": [[46, "cogent3.core.sequence.ProteinSequence.frac_diff_gaps"]], "frac_diff_non_gaps() (proteinsequence method)": [[46, "cogent3.core.sequence.ProteinSequence.frac_diff_non_gaps"]], "frac_same() (proteinsequence method)": [[46, "cogent3.core.sequence.ProteinSequence.frac_same"]], "frac_same_gaps() (proteinsequence method)": [[46, "cogent3.core.sequence.ProteinSequence.frac_same_gaps"]], "frac_same_non_gaps() (proteinsequence method)": [[46, "cogent3.core.sequence.ProteinSequence.frac_same_non_gaps"]], "frac_similar() (proteinsequence method)": [[46, "cogent3.core.sequence.ProteinSequence.frac_similar"]], "gap_indices() (proteinsequence method)": [[46, "cogent3.core.sequence.ProteinSequence.gap_indices"]], "gap_maps() (proteinsequence method)": [[46, "cogent3.core.sequence.ProteinSequence.gap_maps"]], "gap_vector() (proteinsequence method)": [[46, "cogent3.core.sequence.ProteinSequence.gap_vector"]], "gapped_by_map() (proteinsequence method)": [[46, "cogent3.core.sequence.ProteinSequence.gapped_by_map"]], "gapped_by_map_motif_iter() (proteinsequence method)": [[46, "cogent3.core.sequence.ProteinSequence.gapped_by_map_motif_iter"]], "gapped_by_map_segment_iter() (proteinsequence method)": [[46, "cogent3.core.sequence.ProteinSequence.gapped_by_map_segment_iter"]], "get_drawable() (proteinsequence method)": [[46, "cogent3.core.sequence.ProteinSequence.get_drawable"]], "get_drawables() (proteinsequence method)": [[46, "cogent3.core.sequence.ProteinSequence.get_drawables"]], "get_features() (proteinsequence method)": [[46, "cogent3.core.sequence.ProteinSequence.get_features"]], "get_in_motif_size() (proteinsequence method)": [[46, "cogent3.core.sequence.ProteinSequence.get_in_motif_size"]], "get_kmers() (proteinsequence method)": [[46, "cogent3.core.sequence.ProteinSequence.get_kmers"]], "get_name() (proteinsequence method)": [[46, "cogent3.core.sequence.ProteinSequence.get_name"]], "get_type() (proteinsequence method)": [[46, "cogent3.core.sequence.ProteinSequence.get_type"]], "is_annotated() (proteinsequence method)": [[46, "cogent3.core.sequence.ProteinSequence.is_annotated"]], "is_degenerate() (proteinsequence method)": [[46, "cogent3.core.sequence.ProteinSequence.is_degenerate"]], "is_gap() (proteinsequence method)": [[46, "cogent3.core.sequence.ProteinSequence.is_gap"]], "is_gapped() (proteinsequence method)": [[46, "cogent3.core.sequence.ProteinSequence.is_gapped"]], "is_strict() (proteinsequence method)": [[46, "cogent3.core.sequence.ProteinSequence.is_strict"]], "is_valid() (proteinsequence method)": [[46, "cogent3.core.sequence.ProteinSequence.is_valid"]], "iter_kmers() (proteinsequence method)": [[46, "cogent3.core.sequence.ProteinSequence.iter_kmers"]], "line_wrap (proteinsequence attribute)": [[46, "cogent3.core.sequence.ProteinSequence.line_wrap"]], "make_feature() (proteinsequence method)": [[46, "cogent3.core.sequence.ProteinSequence.make_feature"]], "matrix_distance() (proteinsequence method)": [[46, "cogent3.core.sequence.ProteinSequence.matrix_distance"]], "moltype (proteinsequence attribute)": [[46, "cogent3.core.sequence.ProteinSequence.moltype"]], "must_match() (proteinsequence method)": [[46, "cogent3.core.sequence.ProteinSequence.must_match"]], "must_pair() (proteinsequence method)": [[46, "cogent3.core.sequence.ProteinSequence.must_pair"]], "mw() (proteinsequence method)": [[46, "cogent3.core.sequence.ProteinSequence.mw"]], "parse_out_gaps() (proteinsequence method)": [[46, "cogent3.core.sequence.ProteinSequence.parse_out_gaps"]], "possibilities() (proteinsequence method)": [[46, "cogent3.core.sequence.ProteinSequence.possibilities"]], "rc() (proteinsequence method)": [[46, "cogent3.core.sequence.ProteinSequence.rc"]], "replace() (proteinsequence method)": [[46, "cogent3.core.sequence.ProteinSequence.replace"]], "replace_annotation_db() (proteinsequence method)": [[46, "cogent3.core.sequence.ProteinSequence.replace_annotation_db"]], "resolved_ambiguities() (proteinsequence method)": [[46, "cogent3.core.sequence.ProteinSequence.resolved_ambiguities"]], "shuffle() (proteinsequence method)": [[46, "cogent3.core.sequence.ProteinSequence.shuffle"]], "sliding_windows() (proteinsequence method)": [[46, "cogent3.core.sequence.ProteinSequence.sliding_windows"]], "strand_symmetry() (proteinsequence method)": [[46, "cogent3.core.sequence.ProteinSequence.strand_symmetry"]], "strip_bad() (proteinsequence method)": [[46, "cogent3.core.sequence.ProteinSequence.strip_bad"]], "strip_bad_and_gaps() (proteinsequence method)": [[46, "cogent3.core.sequence.ProteinSequence.strip_bad_and_gaps"]], "strip_degenerate() (proteinsequence method)": [[46, "cogent3.core.sequence.ProteinSequence.strip_degenerate"]], "to_fasta() (proteinsequence method)": [[46, "cogent3.core.sequence.ProteinSequence.to_fasta"]], "to_html() (proteinsequence method)": [[46, "cogent3.core.sequence.ProteinSequence.to_html"]], "to_json() (proteinsequence method)": [[46, "cogent3.core.sequence.ProteinSequence.to_json"]], "to_moltype() (proteinsequence method)": [[46, "cogent3.core.sequence.ProteinSequence.to_moltype"]], "to_rich_dict() (proteinsequence method)": [[46, "cogent3.core.sequence.ProteinSequence.to_rich_dict"]], "with_masked_annotations() (proteinsequence method)": [[46, "cogent3.core.sequence.ProteinSequence.with_masked_annotations"]], "with_termini_unknown() (proteinsequence method)": [[46, "cogent3.core.sequence.ProteinSequence.with_termini_unknown"]], "rnasequence (class in cogent3.core.sequence)": [[47, "cogent3.core.sequence.RnaSequence"]], "add_feature() (rnasequence method)": [[47, "cogent3.core.sequence.RnaSequence.add_feature"]], "annotate_from_gff() (rnasequence method)": [[47, "cogent3.core.sequence.RnaSequence.annotate_from_gff"]], "annotate_matches_to() (rnasequence method)": [[47, "cogent3.core.sequence.RnaSequence.annotate_matches_to"]], "annotation_db (rnasequence property)": [[47, "cogent3.core.sequence.RnaSequence.annotation_db"]], "annotation_offset (rnasequence property)": [[47, "cogent3.core.sequence.RnaSequence.annotation_offset"]], "can_match() (rnasequence method)": [[47, "cogent3.core.sequence.RnaSequence.can_match"]], "can_mismatch() (rnasequence method)": [[47, "cogent3.core.sequence.RnaSequence.can_mismatch"]], "can_mispair() (rnasequence method)": [[47, "cogent3.core.sequence.RnaSequence.can_mispair"]], "can_pair() (rnasequence method)": [[47, "cogent3.core.sequence.RnaSequence.can_pair"]], "codon_alphabet (rnasequence attribute)": [[47, "cogent3.core.sequence.RnaSequence.codon_alphabet"]], "complement() (rnasequence method)": [[47, "cogent3.core.sequence.RnaSequence.complement"]], "copy() (rnasequence method)": [[47, "cogent3.core.sequence.RnaSequence.copy"]], "copy_annotations() (rnasequence method)": [[47, "cogent3.core.sequence.RnaSequence.copy_annotations"]], "count() (rnasequence method)": [[47, "cogent3.core.sequence.RnaSequence.count"]], "count_degenerate() (rnasequence method)": [[47, "cogent3.core.sequence.RnaSequence.count_degenerate"]], "count_gaps() (rnasequence method)": [[47, "cogent3.core.sequence.RnaSequence.count_gaps"]], "counts() (rnasequence method)": [[47, "cogent3.core.sequence.RnaSequence.counts"]], "degap() (rnasequence method)": [[47, "cogent3.core.sequence.RnaSequence.degap"]], "diff() (rnasequence method)": [[47, "cogent3.core.sequence.RnaSequence.diff"]], "disambiguate() (rnasequence method)": [[47, "cogent3.core.sequence.RnaSequence.disambiguate"]], "distance() (rnasequence method)": [[47, "cogent3.core.sequence.RnaSequence.distance"]], "first_degenerate() (rnasequence method)": [[47, "cogent3.core.sequence.RnaSequence.first_degenerate"]], "first_gap() (rnasequence method)": [[47, "cogent3.core.sequence.RnaSequence.first_gap"]], "first_invalid() (rnasequence method)": [[47, "cogent3.core.sequence.RnaSequence.first_invalid"]], "first_non_strict() (rnasequence method)": [[47, "cogent3.core.sequence.RnaSequence.first_non_strict"]], "frac_diff() (rnasequence method)": [[47, "cogent3.core.sequence.RnaSequence.frac_diff"]], "frac_diff_gaps() (rnasequence method)": [[47, "cogent3.core.sequence.RnaSequence.frac_diff_gaps"]], "frac_diff_non_gaps() (rnasequence method)": [[47, "cogent3.core.sequence.RnaSequence.frac_diff_non_gaps"]], "frac_same() (rnasequence method)": [[47, "cogent3.core.sequence.RnaSequence.frac_same"]], "frac_same_gaps() (rnasequence method)": [[47, "cogent3.core.sequence.RnaSequence.frac_same_gaps"]], "frac_same_non_gaps() (rnasequence method)": [[47, "cogent3.core.sequence.RnaSequence.frac_same_non_gaps"]], "frac_similar() (rnasequence method)": [[47, "cogent3.core.sequence.RnaSequence.frac_similar"]], "gap_indices() (rnasequence method)": [[47, "cogent3.core.sequence.RnaSequence.gap_indices"]], "gap_maps() (rnasequence method)": [[47, "cogent3.core.sequence.RnaSequence.gap_maps"]], "gap_vector() (rnasequence method)": [[47, "cogent3.core.sequence.RnaSequence.gap_vector"]], "gapped_by_map() (rnasequence method)": [[47, "cogent3.core.sequence.RnaSequence.gapped_by_map"]], "gapped_by_map_motif_iter() (rnasequence method)": [[47, "cogent3.core.sequence.RnaSequence.gapped_by_map_motif_iter"]], "gapped_by_map_segment_iter() (rnasequence method)": [[47, "cogent3.core.sequence.RnaSequence.gapped_by_map_segment_iter"]], "get_drawable() (rnasequence method)": [[47, "cogent3.core.sequence.RnaSequence.get_drawable"]], "get_drawables() (rnasequence method)": [[47, "cogent3.core.sequence.RnaSequence.get_drawables"]], "get_features() (rnasequence method)": [[47, "cogent3.core.sequence.RnaSequence.get_features"]], "get_in_motif_size() (rnasequence method)": [[47, "cogent3.core.sequence.RnaSequence.get_in_motif_size"]], "get_kmers() (rnasequence method)": [[47, "cogent3.core.sequence.RnaSequence.get_kmers"]], "get_name() (rnasequence method)": [[47, "cogent3.core.sequence.RnaSequence.get_name"]], "get_translation() (rnasequence method)": [[47, "cogent3.core.sequence.RnaSequence.get_translation"]], "get_type() (rnasequence method)": [[47, "cogent3.core.sequence.RnaSequence.get_type"]], "has_terminal_stop() (rnasequence method)": [[47, "cogent3.core.sequence.RnaSequence.has_terminal_stop"]], "is_annotated() (rnasequence method)": [[47, "cogent3.core.sequence.RnaSequence.is_annotated"]], "is_degenerate() (rnasequence method)": [[47, "cogent3.core.sequence.RnaSequence.is_degenerate"]], "is_gap() (rnasequence method)": [[47, "cogent3.core.sequence.RnaSequence.is_gap"]], "is_gapped() (rnasequence method)": [[47, "cogent3.core.sequence.RnaSequence.is_gapped"]], "is_strict() (rnasequence method)": [[47, "cogent3.core.sequence.RnaSequence.is_strict"]], "is_valid() (rnasequence method)": [[47, "cogent3.core.sequence.RnaSequence.is_valid"]], "iter_kmers() (rnasequence method)": [[47, "cogent3.core.sequence.RnaSequence.iter_kmers"]], "line_wrap (rnasequence attribute)": [[47, "cogent3.core.sequence.RnaSequence.line_wrap"]], "make_feature() (rnasequence method)": [[47, "cogent3.core.sequence.RnaSequence.make_feature"]], "matrix_distance() (rnasequence method)": [[47, "cogent3.core.sequence.RnaSequence.matrix_distance"]], "moltype (rnasequence attribute)": [[47, "cogent3.core.sequence.RnaSequence.moltype"]], "must_match() (rnasequence method)": [[47, "cogent3.core.sequence.RnaSequence.must_match"]], "must_pair() (rnasequence method)": [[47, "cogent3.core.sequence.RnaSequence.must_pair"]], "mw() (rnasequence method)": [[47, "cogent3.core.sequence.RnaSequence.mw"]], "parse_out_gaps() (rnasequence method)": [[47, "cogent3.core.sequence.RnaSequence.parse_out_gaps"]], "possibilities() (rnasequence method)": [[47, "cogent3.core.sequence.RnaSequence.possibilities"]], "protein (rnasequence attribute)": [[47, "cogent3.core.sequence.RnaSequence.protein"]], "rc() (rnasequence method)": [[47, "cogent3.core.sequence.RnaSequence.rc"]], "replace() (rnasequence method)": [[47, "cogent3.core.sequence.RnaSequence.replace"]], "replace_annotation_db() (rnasequence method)": [[47, "cogent3.core.sequence.RnaSequence.replace_annotation_db"]], "resolved_ambiguities() (rnasequence method)": [[47, "cogent3.core.sequence.RnaSequence.resolved_ambiguities"]], "reverse_complement() (rnasequence method)": [[47, "cogent3.core.sequence.RnaSequence.reverse_complement"]], "shuffle() (rnasequence method)": [[47, "cogent3.core.sequence.RnaSequence.shuffle"]], "sliding_windows() (rnasequence method)": [[47, "cogent3.core.sequence.RnaSequence.sliding_windows"]], "strand_symmetry() (rnasequence method)": [[47, "cogent3.core.sequence.RnaSequence.strand_symmetry"]], "strip_bad() (rnasequence method)": [[47, "cogent3.core.sequence.RnaSequence.strip_bad"]], "strip_bad_and_gaps() (rnasequence method)": [[47, "cogent3.core.sequence.RnaSequence.strip_bad_and_gaps"]], "strip_degenerate() (rnasequence method)": [[47, "cogent3.core.sequence.RnaSequence.strip_degenerate"]], "to_dna() (rnasequence method)": [[47, "cogent3.core.sequence.RnaSequence.to_dna"]], "to_fasta() (rnasequence method)": [[47, "cogent3.core.sequence.RnaSequence.to_fasta"]], "to_html() (rnasequence method)": [[47, "cogent3.core.sequence.RnaSequence.to_html"]], "to_json() (rnasequence method)": [[47, "cogent3.core.sequence.RnaSequence.to_json"]], "to_moltype() (rnasequence method)": [[47, "cogent3.core.sequence.RnaSequence.to_moltype"]], "to_rich_dict() (rnasequence method)": [[47, "cogent3.core.sequence.RnaSequence.to_rich_dict"]], "to_rna() (rnasequence method)": [[47, "cogent3.core.sequence.RnaSequence.to_rna"]], "trim_stop_codon() (rnasequence method)": [[47, "cogent3.core.sequence.RnaSequence.trim_stop_codon"]], "with_masked_annotations() (rnasequence method)": [[47, "cogent3.core.sequence.RnaSequence.with_masked_annotations"]], "with_termini_unknown() (rnasequence method)": [[47, "cogent3.core.sequence.RnaSequence.with_termini_unknown"]], "filteringparser (class in cogent3.parse.table)": [[49, "cogent3.parse.table.FilteringParser"]], "columns (class in cogent3.util.table)": [[50, "cogent3.util.table.Columns"]], "add_column_from_str() (columns method)": [[50, "cogent3.util.table.Columns.add_column_from_str"]], "array (columns property)": [[50, "cogent3.util.table.Columns.array"]], "clear() (columns method)": [[50, "cogent3.util.table.Columns.clear"]], "get() (columns method)": [[50, "cogent3.util.table.Columns.get"]], "index_name (columns property)": [[50, "cogent3.util.table.Columns.index_name"]], "items() (columns method)": [[50, "cogent3.util.table.Columns.items"]], "iter_rows() (columns method)": [[50, "cogent3.util.table.Columns.iter_rows"]], "keys() (columns method)": [[50, "cogent3.util.table.Columns.keys"]], "order (columns property)": [[50, "cogent3.util.table.Columns.order"]], "pop() (columns method)": [[50, "cogent3.util.table.Columns.pop"]], "popitem() (columns method)": [[50, "cogent3.util.table.Columns.popitem"]], "setdefault() (columns method)": [[50, "cogent3.util.table.Columns.setdefault"]], "take_columns() (columns method)": [[50, "cogent3.util.table.Columns.take_columns"]], "to_dict() (columns method)": [[50, "cogent3.util.table.Columns.to_dict"]], "to_rich_dict() (columns method)": [[50, "cogent3.util.table.Columns.to_rich_dict"]], "update() (columns method)": [[50, "cogent3.util.table.Columns.update"]], "values() (columns method)": [[50, "cogent3.util.table.Columns.values"]], "table (class in cogent3.util.table)": [[51, "cogent3.util.table.Table"]], "appended() (table method)": [[51, "cogent3.util.table.Table.appended"]], "array (table property)": [[51, "cogent3.util.table.Table.array"]], "count() (table method)": [[51, "cogent3.util.table.Table.count"]], "count_unique() (table method)": [[51, "cogent3.util.table.Table.count_unique"]], "cross_join() (table method)": [[51, "cogent3.util.table.Table.cross_join"]], "distinct_values() (table method)": [[51, "cogent3.util.table.Table.distinct_values"]], "filtered() (table method)": [[51, "cogent3.util.table.Table.filtered"]], "filtered_by_column() (table method)": [[51, "cogent3.util.table.Table.filtered_by_column"]], "format (table property)": [[51, "cogent3.util.table.Table.format"]], "format_column() (table method)": [[51, "cogent3.util.table.Table.format_column"]], "get_columns() (table method)": [[51, "cogent3.util.table.Table.get_columns"]], "get_row_indices() (table method)": [[51, "cogent3.util.table.Table.get_row_indices"]], "head() (table method)": [[51, "cogent3.util.table.Table.head"]], "header (table property)": [[51, "cogent3.util.table.Table.header"]], "index_name (table property)": [[51, "cogent3.util.table.Table.index_name"]], "inner_join() (table method)": [[51, "cogent3.util.table.Table.inner_join"]], "joined() (table method)": [[51, "cogent3.util.table.Table.joined"]], "legend (table property)": [[51, "cogent3.util.table.Table.legend"]], "normalized() (table method)": [[51, "cogent3.util.table.Table.normalized"]], "set_repr_policy() (table method)": [[51, "cogent3.util.table.Table.set_repr_policy"]], "shape (table property)": [[51, "cogent3.util.table.Table.shape"]], "sorted() (table method)": [[51, "cogent3.util.table.Table.sorted"]], "space (table property)": [[51, "cogent3.util.table.Table.space"]], "sum_columns() (table method)": [[51, "cogent3.util.table.Table.sum_columns"]], "sum_rows() (table method)": [[51, "cogent3.util.table.Table.sum_rows"]], "summed() (table method)": [[51, "cogent3.util.table.Table.summed"]], "tail() (table method)": [[51, "cogent3.util.table.Table.tail"]], "title (table property)": [[51, "cogent3.util.table.Table.title"]], "to_categorical() (table method)": [[51, "cogent3.util.table.Table.to_categorical"]], "to_csv() (table method)": [[51, "cogent3.util.table.Table.to_csv"]], "to_dataframe() (table method)": [[51, "cogent3.util.table.Table.to_dataframe"]], "to_dict() (table method)": [[51, "cogent3.util.table.Table.to_dict"]], "to_html() (table method)": [[51, "cogent3.util.table.Table.to_html"]], "to_json() (table method)": [[51, "cogent3.util.table.Table.to_json"]], "to_latex() (table method)": [[51, "cogent3.util.table.Table.to_latex"]], "to_list() (table method)": [[51, "cogent3.util.table.Table.to_list"]], "to_markdown() (table method)": [[51, "cogent3.util.table.Table.to_markdown"]], "to_plotly() (table method)": [[51, "cogent3.util.table.Table.to_plotly"]], "to_rich_dict() (table method)": [[51, "cogent3.util.table.Table.to_rich_dict"]], "to_rst() (table method)": [[51, "cogent3.util.table.Table.to_rst"]], "to_string() (table method)": [[51, "cogent3.util.table.Table.to_string"]], "to_tsv() (table method)": [[51, "cogent3.util.table.Table.to_tsv"]], "tolist() (table method)": [[51, "cogent3.util.table.Table.tolist"]], "transposed() (table method)": [[51, "cogent3.util.table.Table.transposed"]], "with_new_column() (table method)": [[51, "cogent3.util.table.Table.with_new_column"]], "with_new_header() (table method)": [[51, "cogent3.util.table.Table.with_new_header"]], "write() (table method)": [[51, "cogent3.util.table.Table.write"]], "phylonode (class in cogent3.core.tree)": [[53, "cogent3.core.tree.PhyloNode"]], "ancestors() (phylonode method)": [[53, "cogent3.core.tree.PhyloNode.ancestors"]], "append() (phylonode method)": [[53, "cogent3.core.tree.PhyloNode.append"]], "ascii_art() (phylonode method)": [[53, "cogent3.core.tree.PhyloNode.ascii_art"]], "balanced() (phylonode method)": [[53, "cogent3.core.tree.PhyloNode.balanced"]], "bifurcating() (phylonode method)": [[53, "cogent3.core.tree.PhyloNode.bifurcating"]], "child_groups() (phylonode method)": [[53, "cogent3.core.tree.PhyloNode.child_groups"]], "child_parent_map() (phylonode method)": [[53, "cogent3.core.tree.PhyloNode.child_parent_map"]], "compare_by_names() (phylonode method)": [[53, "cogent3.core.tree.PhyloNode.compare_by_names"]], "compare_by_subsets() (phylonode method)": [[53, "cogent3.core.tree.PhyloNode.compare_by_subsets"]], "compare_by_tip_distances() (phylonode method)": [[53, "cogent3.core.tree.PhyloNode.compare_by_tip_distances"]], "compare_name() (phylonode method)": [[53, "cogent3.core.tree.PhyloNode.compare_name"]], "copy() (phylonode method)": [[53, "cogent3.core.tree.PhyloNode.copy"]], "copy_topology() (phylonode method)": [[53, "cogent3.core.tree.PhyloNode.copy_topology"]], "deepcopy() (phylonode method)": [[53, "cogent3.core.tree.PhyloNode.deepcopy"]], "descendant_array() (phylonode method)": [[53, "cogent3.core.tree.PhyloNode.descendant_array"]], "distance() (phylonode method)": [[53, "cogent3.core.tree.PhyloNode.distance"]], "extend() (phylonode method)": [[53, "cogent3.core.tree.PhyloNode.extend"]], "get_connecting_edges() (phylonode method)": [[53, "cogent3.core.tree.PhyloNode.get_connecting_edges"]], "get_connecting_node() (phylonode method)": [[53, "cogent3.core.tree.PhyloNode.get_connecting_node"]], "get_distances() (phylonode method)": [[53, "cogent3.core.tree.PhyloNode.get_distances"]], "get_edge_names() (phylonode method)": [[53, "cogent3.core.tree.PhyloNode.get_edge_names"]], "get_edge_vector() (phylonode method)": [[53, "cogent3.core.tree.PhyloNode.get_edge_vector"]], "get_figure() (phylonode method)": [[53, "cogent3.core.tree.PhyloNode.get_figure"]], "get_max_tip_tip_distance() (phylonode method)": [[53, "cogent3.core.tree.PhyloNode.get_max_tip_tip_distance"]], "get_newick() (phylonode method)": [[53, "cogent3.core.tree.PhyloNode.get_newick"]], "get_node_matching_name() (phylonode method)": [[53, "cogent3.core.tree.PhyloNode.get_node_matching_name"]], "get_node_names() (phylonode method)": [[53, "cogent3.core.tree.PhyloNode.get_node_names"]], "get_nodes_dict() (phylonode method)": [[53, "cogent3.core.tree.PhyloNode.get_nodes_dict"]], "get_param_value() (phylonode method)": [[53, "cogent3.core.tree.PhyloNode.get_param_value"]], "get_sub_tree() (phylonode method)": [[53, "cogent3.core.tree.PhyloNode.get_sub_tree"]], "get_tip_names() (phylonode method)": [[53, "cogent3.core.tree.PhyloNode.get_tip_names"]], "get_xml() (phylonode method)": [[53, "cogent3.core.tree.PhyloNode.get_xml"]], "index_in_parent() (phylonode method)": [[53, "cogent3.core.tree.PhyloNode.index_in_parent"]], "insert() (phylonode method)": [[53, "cogent3.core.tree.PhyloNode.insert"]], "is_root() (phylonode method)": [[53, "cogent3.core.tree.PhyloNode.is_root"]], "is_tip() (phylonode method)": [[53, "cogent3.core.tree.PhyloNode.is_tip"]], "isroot() (phylonode method)": [[53, "cogent3.core.tree.PhyloNode.isroot"]], "istip() (phylonode method)": [[53, "cogent3.core.tree.PhyloNode.istip"]], "iter_nontips() (phylonode method)": [[53, "cogent3.core.tree.PhyloNode.iter_nontips"]], "iter_tips() (phylonode method)": [[53, "cogent3.core.tree.PhyloNode.iter_tips"]], "last_common_ancestor() (phylonode method)": [[53, "cogent3.core.tree.PhyloNode.last_common_ancestor"]], "lca() (phylonode method)": [[53, "cogent3.core.tree.PhyloNode.lca"]], "length (phylonode property)": [[53, "cogent3.core.tree.PhyloNode.length"]], "levelorder() (phylonode method)": [[53, "cogent3.core.tree.PhyloNode.levelorder"]], "lin_rajan_moret() (phylonode method)": [[53, "cogent3.core.tree.PhyloNode.lin_rajan_moret"]], "lowest_common_ancestor() (phylonode method)": [[53, "cogent3.core.tree.PhyloNode.lowest_common_ancestor"]], "make_tree_array() (phylonode method)": [[53, "cogent3.core.tree.PhyloNode.make_tree_array"]], "max_tip_tip_distance() (phylonode method)": [[53, "cogent3.core.tree.PhyloNode.max_tip_tip_distance"]], "multifurcating() (phylonode method)": [[53, "cogent3.core.tree.PhyloNode.multifurcating"]], "name_unnamed_nodes() (phylonode method)": [[53, "cogent3.core.tree.PhyloNode.name_unnamed_nodes"]], "non_tip_children() (phylonode method)": [[53, "cogent3.core.tree.PhyloNode.non_tip_children"]], "nontips() (phylonode method)": [[53, "cogent3.core.tree.PhyloNode.nontips"]], "parent (phylonode property)": [[53, "cogent3.core.tree.PhyloNode.parent"]], "pop() (phylonode method)": [[53, "cogent3.core.tree.PhyloNode.pop"]], "postorder() (phylonode method)": [[53, "cogent3.core.tree.PhyloNode.postorder"]], "pre_and_postorder() (phylonode method)": [[53, "cogent3.core.tree.PhyloNode.pre_and_postorder"]], "preorder() (phylonode method)": [[53, "cogent3.core.tree.PhyloNode.preorder"]], "prune() (phylonode method)": [[53, "cogent3.core.tree.PhyloNode.prune"]], "reassign_names() (phylonode method)": [[53, "cogent3.core.tree.PhyloNode.reassign_names"]], "remove() (phylonode method)": [[53, "cogent3.core.tree.PhyloNode.remove"]], "remove_deleted() (phylonode method)": [[53, "cogent3.core.tree.PhyloNode.remove_deleted"]], "remove_node() (phylonode method)": [[53, "cogent3.core.tree.PhyloNode.remove_node"]], "root() (phylonode method)": [[53, "cogent3.core.tree.PhyloNode.root"]], "root_at_midpoint() (phylonode method)": [[53, "cogent3.core.tree.PhyloNode.root_at_midpoint"]], "rooted_at() (phylonode method)": [[53, "cogent3.core.tree.PhyloNode.rooted_at"]], "rooted_with_tip() (phylonode method)": [[53, "cogent3.core.tree.PhyloNode.rooted_with_tip"]], "same_shape() (phylonode method)": [[53, "cogent3.core.tree.PhyloNode.same_shape"]], "same_topology() (phylonode method)": [[53, "cogent3.core.tree.PhyloNode.same_topology"]], "scale_branch_lengths() (phylonode method)": [[53, "cogent3.core.tree.PhyloNode.scale_branch_lengths"]], "separation() (phylonode method)": [[53, "cogent3.core.tree.PhyloNode.separation"]], "set_max_tip_tip_distance() (phylonode method)": [[53, "cogent3.core.tree.PhyloNode.set_max_tip_tip_distance"]], "set_param_value() (phylonode method)": [[53, "cogent3.core.tree.PhyloNode.set_param_value"]], "set_tip_distances() (phylonode method)": [[53, "cogent3.core.tree.PhyloNode.set_tip_distances"]], "siblings() (phylonode method)": [[53, "cogent3.core.tree.PhyloNode.siblings"]], "sorted() (phylonode method)": [[53, "cogent3.core.tree.PhyloNode.sorted"]], "subset() (phylonode method)": [[53, "cogent3.core.tree.PhyloNode.subset"]], "subsets() (phylonode method)": [[53, "cogent3.core.tree.PhyloNode.subsets"]], "tip_children() (phylonode method)": [[53, "cogent3.core.tree.PhyloNode.tip_children"]], "tip_to_tip_distances() (phylonode method)": [[53, "cogent3.core.tree.PhyloNode.tip_to_tip_distances"]], "tips() (phylonode method)": [[53, "cogent3.core.tree.PhyloNode.tips"]], "tips_within_distance() (phylonode method)": [[53, "cogent3.core.tree.PhyloNode.tips_within_distance"]], "to_json() (phylonode method)": [[53, "cogent3.core.tree.PhyloNode.to_json"]], "to_rich_dict() (phylonode method)": [[53, "cogent3.core.tree.PhyloNode.to_rich_dict"]], "total_descending_branch_length() (phylonode method)": [[53, "cogent3.core.tree.PhyloNode.total_descending_branch_length"]], "total_length() (phylonode method)": [[53, "cogent3.core.tree.PhyloNode.total_length"]], "traverse() (phylonode method)": [[53, "cogent3.core.tree.PhyloNode.traverse"]], "unrooted() (phylonode method)": [[53, "cogent3.core.tree.PhyloNode.unrooted"]], "unrooted_deepcopy() (phylonode method)": [[53, "cogent3.core.tree.PhyloNode.unrooted_deepcopy"]], "write() (phylonode method)": [[53, "cogent3.core.tree.PhyloNode.write"]], "register_deserialiser (class in cogent3.util.deserialise)": [[55, "cogent3.util.deserialise.register_deserialiser"]], "deserialise_object() (in module cogent3.util.deserialise)": [[56, "cogent3.util.deserialise.deserialise_object"]], "completed members": [[64, "index-1"]], "data store": [[64, "index-0"]], "open_data_store()": [[64, "index-2"]], "cogent3.util.misc": [[109, "index-0"]], "cogent.app": [[149, "term-cogent.app"], [151, "term-cogent.app"]], "cogent.db.ensembl": [[149, "term-cogent.db.ensembl"], [151, "term-cogent.db.ensembl"]], "cogent.db.eutils": [[149, "term-cogent.db.eutils"], [151, "term-cogent.db.eutils"]], "cogent.maths.unifrac": [[149, "term-cogent.maths.unifrac"], [151, "term-cogent.maths.unifrac"]], "cogent.motif": [[149, "term-cogent.motif"], [151, "term-cogent.motif"]], "cogent.seqsim": [[149, "term-cogent.seqsim"], [151, "term-cogent.seqsim"]], "cogent.struct": [[149, "term-cogent.struct"], [151, "term-cogent.struct"]]}})