Search.setIndex({"docnames": ["doc/COGENT3_LICENSE", "doc/api/__init__/cogent3.__init__.available_apps", "doc/api/__init__/cogent3.__init__.available_codes", "doc/api/__init__/cogent3.__init__.available_models", "doc/api/__init__/cogent3.__init__.available_moltypes", "doc/api/__init__/cogent3.__init__.get_code", "doc/api/__init__/cogent3.__init__.get_model", "doc/api/__init__/cogent3.__init__.get_moltype", "doc/api/__init__/cogent3.__init__.load_aligned_seqs", "doc/api/__init__/cogent3.__init__.load_annotations", "doc/api/__init__/cogent3.__init__.load_delimited", "doc/api/__init__/cogent3.__init__.load_seq", "doc/api/__init__/cogent3.__init__.load_table", "doc/api/__init__/cogent3.__init__.load_tree", "doc/api/__init__/cogent3.__init__.load_unaligned_seqs", "doc/api/__init__/cogent3.__init__.make_aligned_seqs", "doc/api/__init__/cogent3.__init__.make_seq", "doc/api/__init__/cogent3.__init__.make_table", "doc/api/__init__/cogent3.__init__.make_tree", "doc/api/__init__/cogent3.__init__.make_unaligned_seqs", "doc/api/__init__/cogent3.__init__.open_", "doc/api/__init__/cogent3.__init__.open_data_store", "doc/api/alignment/alignment", "doc/api/alignment/classes/cogent3.core.alignment.Alignment", "doc/api/alignment/classes/cogent3.core.alignment.ArrayAlignment", "doc/api/alignment/classes/cogent3.core.alignment.SequenceCollection", "doc/api/alphabet/alphabet", "doc/api/alphabet/classes/cogent3.core.alphabet.Alphabet", "doc/api/annotation/annotation", "doc/api/annotation/classes/cogent3.core.annotation.Feature", "doc/api/annotation_db/annotation_db", "doc/api/annotation_db/classes/cogent3.core.annotation_db.BasicAnnotationDb", "doc/api/annotation_db/classes/cogent3.core.annotation_db.GenbankAnnotationDb", "doc/api/annotation_db/classes/cogent3.core.annotation_db.GffAnnotationDb", "doc/api/app/composable/define_app", "doc/api/app/data_store/classes/cogent3.app.data_store.DataMember", "doc/api/app/data_store/classes/cogent3.app.data_store.DataStoreDirectory", "doc/api/app/data_store/classes/cogent3.app.data_store.ReadOnlyDataStoreZipped", "doc/api/app/io/classes/cogent3.app.io.register_datastore_reader", "doc/api/app/sqlite_data_store/classes/cogent3.app.sqlite_data_store.DataStoreSqlite", "doc/api/genetic_code/classes/cogent3.core.genetic_code.GeneticCode", "doc/api/genetic_code/genetic_code", "doc/api/index", "doc/api/moltype/classes/cogent3.core.moltype.MolType", "doc/api/moltype/moltype", "doc/api/sequence/classes/cogent3.core.sequence.DnaSequence", "doc/api/sequence/classes/cogent3.core.sequence.ProteinSequence", "doc/api/sequence/classes/cogent3.core.sequence.RnaSequence", "doc/api/sequence/sequence", "doc/api/table/classes/cogent3.parse.table.FilteringParser", "doc/api/table/classes/cogent3.util.table.Columns", "doc/api/table/classes/cogent3.util.table.Table", "doc/api/table/table", "doc/api/tree/classes/cogent3.core.tree.PhyloNode", "doc/api/tree/tree", "doc/api/util/deserialise/classes/cogent3.util.deserialise.register_deserialiser", "doc/api/util/deserialise/deserialise_object", "doc/app/align-codon", "doc/app/align-nucleotide", "doc/app/align-protein", "doc/app/app-get", "doc/app/app-help", "doc/app/app-overview", "doc/app/available-apps", "doc/app/dstore", "doc/app/evo-ancestral-states", "doc/app/evo-dt-nuc-model", "doc/app/evo-extract-model-stats", "doc/app/evo-hypothesis", "doc/app/evo-model", "doc/app/evo-model-timehet", "doc/app/evo-model-with-tree", "doc/app/evo-natsel_neutral", "doc/app/evo-natsel_sitehet", "doc/app/evo-natsel_timehet", "doc/app/evo-natsel_zhang", "doc/app/evo-nstat-codon-model", "doc/app/evo-tr-codon-model", "doc/app/evo-tr-nuc-model", "doc/app/index", "doc/app/index-align", "doc/app/index-app", "doc/app/index-custom", "doc/app/index-evo-hypothesis", "doc/app/index-evo-model", "doc/app/index-evo-natsel", "doc/app/index-help", "doc/app/not-completed", "doc/app/user_function", "doc/cookbook/DNA_and_RNA_sequences", "doc/cookbook/alignments", "doc/cookbook/alphabet", "doc/cookbook/annotation_db", "doc/cookbook/building_alignments", "doc/cookbook/building_phylogenies", "doc/cookbook/calc_genetic_distance", "doc/cookbook/evo_modelling", "doc/cookbook/features", "doc/cookbook/genetic_code", "doc/cookbook/index", "doc/cookbook/loading_sequences", "doc/cookbook/loading_tabular", "doc/cookbook/manipulating_biological_data", "doc/cookbook/moltypes", "doc/cookbook/protein_sequences", "doc/cookbook/simple_trees", "doc/cookbook/tables", "doc/cookbook/union_dict", "doc/cookbook/useful_utilities", "doc/cookbook/what_codes", "doc/data_file_links", "doc/draw/aln/plot_aln-coevolution", "doc/draw/aln/plot_aln-dotplot-1", "doc/draw/aln/plot_aln-dotplot-2", "doc/draw/aln/plot_aln-gaps-per-seq", "doc/draw/aln/plot_aln-info-plot", "doc/draw/aln/plot_aln-seqlogo", "doc/draw/aln/plot_seq-features", "doc/draw/index", "doc/draw/tree/plot_tree-angular", "doc/draw/tree/plot_tree-circular", "doc/draw/tree/plot_tree-radial", "doc/draw/tree/plot_tree-square", "doc/draw/tree/plot_tree-support", "doc/examples/align_codons_to_protein", "doc/examples/calculate_UPGMA_cluster", "doc/examples/calculate_neigbourjoining_tree", "doc/examples/calculate_pairwise_distances", "doc/examples/codon_models", "doc/examples/coevolution", "doc/examples/empirical_protein_models", "doc/examples/hmm_par_heterogeneity", "doc/examples/index", "doc/examples/manipulating_tree_nodes", "doc/examples/neutral_test", "doc/examples/parallel", "doc/examples/parametric_bootstrap", "doc/examples/period_estimation", "doc/examples/phylo_by_ls", "doc/examples/rate_heterogeneity", "doc/examples/relative_rate", "doc/examples/scope_model_params_on_trees", "doc/examples/simple", "doc/examples/simulate_alignment", "doc/examples/testing_multi_loci", "doc/general", "doc/index", "doc/install", "doc/licenses", "doc/pycogent", "genindex", "history", "index", "projects"], "filenames": ["doc/COGENT3_LICENSE.rst", "doc/api/__init__/cogent3.__init__.available_apps.rst", "doc/api/__init__/cogent3.__init__.available_codes.rst", "doc/api/__init__/cogent3.__init__.available_models.rst", "doc/api/__init__/cogent3.__init__.available_moltypes.rst", "doc/api/__init__/cogent3.__init__.get_code.rst", "doc/api/__init__/cogent3.__init__.get_model.rst", "doc/api/__init__/cogent3.__init__.get_moltype.rst", "doc/api/__init__/cogent3.__init__.load_aligned_seqs.rst", "doc/api/__init__/cogent3.__init__.load_annotations.rst", "doc/api/__init__/cogent3.__init__.load_delimited.rst", "doc/api/__init__/cogent3.__init__.load_seq.rst", "doc/api/__init__/cogent3.__init__.load_table.rst", "doc/api/__init__/cogent3.__init__.load_tree.rst", "doc/api/__init__/cogent3.__init__.load_unaligned_seqs.rst", "doc/api/__init__/cogent3.__init__.make_aligned_seqs.rst", "doc/api/__init__/cogent3.__init__.make_seq.rst", "doc/api/__init__/cogent3.__init__.make_table.rst", "doc/api/__init__/cogent3.__init__.make_tree.rst", "doc/api/__init__/cogent3.__init__.make_unaligned_seqs.rst", "doc/api/__init__/cogent3.__init__.open_.rst", "doc/api/__init__/cogent3.__init__.open_data_store.rst", "doc/api/alignment/alignment.rst", "doc/api/alignment/classes/cogent3.core.alignment.Alignment.rst", "doc/api/alignment/classes/cogent3.core.alignment.ArrayAlignment.rst", "doc/api/alignment/classes/cogent3.core.alignment.SequenceCollection.rst", "doc/api/alphabet/alphabet.rst", "doc/api/alphabet/classes/cogent3.core.alphabet.Alphabet.rst", "doc/api/annotation/annotation.rst", "doc/api/annotation/classes/cogent3.core.annotation.Feature.rst", "doc/api/annotation_db/annotation_db.rst", "doc/api/annotation_db/classes/cogent3.core.annotation_db.BasicAnnotationDb.rst", "doc/api/annotation_db/classes/cogent3.core.annotation_db.GenbankAnnotationDb.rst", "doc/api/annotation_db/classes/cogent3.core.annotation_db.GffAnnotationDb.rst", "doc/api/app/composable/define_app.rst", "doc/api/app/data_store/classes/cogent3.app.data_store.DataMember.rst", "doc/api/app/data_store/classes/cogent3.app.data_store.DataStoreDirectory.rst", "doc/api/app/data_store/classes/cogent3.app.data_store.ReadOnlyDataStoreZipped.rst", "doc/api/app/io/classes/cogent3.app.io.register_datastore_reader.rst", "doc/api/app/sqlite_data_store/classes/cogent3.app.sqlite_data_store.DataStoreSqlite.rst", "doc/api/genetic_code/classes/cogent3.core.genetic_code.GeneticCode.rst", "doc/api/genetic_code/genetic_code.rst", "doc/api/index.rst", "doc/api/moltype/classes/cogent3.core.moltype.MolType.rst", "doc/api/moltype/moltype.rst", "doc/api/sequence/classes/cogent3.core.sequence.DnaSequence.rst", "doc/api/sequence/classes/cogent3.core.sequence.ProteinSequence.rst", "doc/api/sequence/classes/cogent3.core.sequence.RnaSequence.rst", "doc/api/sequence/sequence.rst", "doc/api/table/classes/cogent3.parse.table.FilteringParser.rst", "doc/api/table/classes/cogent3.util.table.Columns.rst", "doc/api/table/classes/cogent3.util.table.Table.rst", "doc/api/table/table.rst", "doc/api/tree/classes/cogent3.core.tree.PhyloNode.rst", "doc/api/tree/tree.rst", "doc/api/util/deserialise/classes/cogent3.util.deserialise.register_deserialiser.rst", "doc/api/util/deserialise/deserialise_object.rst", "doc/app/align-codon.rst", "doc/app/align-nucleotide.rst", "doc/app/align-protein.rst", "doc/app/app-get.rst", "doc/app/app-help.rst", "doc/app/app-overview.rst", "doc/app/available-apps.rst", "doc/app/dstore.rst", "doc/app/evo-ancestral-states.rst", "doc/app/evo-dt-nuc-model.rst", "doc/app/evo-extract-model-stats.rst", "doc/app/evo-hypothesis.rst", "doc/app/evo-model.rst", "doc/app/evo-model-timehet.rst", "doc/app/evo-model-with-tree.rst", "doc/app/evo-natsel_neutral.rst", "doc/app/evo-natsel_sitehet.rst", "doc/app/evo-natsel_timehet.rst", "doc/app/evo-natsel_zhang.rst", "doc/app/evo-nstat-codon-model.rst", "doc/app/evo-tr-codon-model.rst", "doc/app/evo-tr-nuc-model.rst", "doc/app/index.rst", "doc/app/index-align.rst", "doc/app/index-app.rst", "doc/app/index-custom.rst", "doc/app/index-evo-hypothesis.rst", "doc/app/index-evo-model.rst", "doc/app/index-evo-natsel.rst", "doc/app/index-help.rst", "doc/app/not-completed.rst", "doc/app/user_function.rst", "doc/cookbook/DNA_and_RNA_sequences.rst", "doc/cookbook/alignments.rst", "doc/cookbook/alphabet.rst", "doc/cookbook/annotation_db.rst", "doc/cookbook/building_alignments.rst", "doc/cookbook/building_phylogenies.rst", "doc/cookbook/calc_genetic_distance.rst", "doc/cookbook/evo_modelling.rst", "doc/cookbook/features.rst", "doc/cookbook/genetic_code.rst", "doc/cookbook/index.rst", "doc/cookbook/loading_sequences.rst", "doc/cookbook/loading_tabular.rst", "doc/cookbook/manipulating_biological_data.rst", "doc/cookbook/moltypes.rst", "doc/cookbook/protein_sequences.rst", "doc/cookbook/simple_trees.rst", "doc/cookbook/tables.rst", "doc/cookbook/union_dict.rst", "doc/cookbook/useful_utilities.rst", "doc/cookbook/what_codes.rst", "doc/data_file_links.rst", "doc/draw/aln/plot_aln-coevolution.rst", "doc/draw/aln/plot_aln-dotplot-1.rst", "doc/draw/aln/plot_aln-dotplot-2.rst", "doc/draw/aln/plot_aln-gaps-per-seq.rst", "doc/draw/aln/plot_aln-info-plot.rst", "doc/draw/aln/plot_aln-seqlogo.rst", "doc/draw/aln/plot_seq-features.rst", "doc/draw/index.rst", "doc/draw/tree/plot_tree-angular.rst", "doc/draw/tree/plot_tree-circular.rst", "doc/draw/tree/plot_tree-radial.rst", "doc/draw/tree/plot_tree-square.rst", "doc/draw/tree/plot_tree-support.rst", "doc/examples/align_codons_to_protein.rst", "doc/examples/calculate_UPGMA_cluster.rst", "doc/examples/calculate_neigbourjoining_tree.rst", "doc/examples/calculate_pairwise_distances.rst", "doc/examples/codon_models.rst", "doc/examples/coevolution.rst", "doc/examples/empirical_protein_models.rst", "doc/examples/hmm_par_heterogeneity.rst", "doc/examples/index.rst", "doc/examples/manipulating_tree_nodes.rst", "doc/examples/neutral_test.rst", "doc/examples/parallel.rst", "doc/examples/parametric_bootstrap.rst", "doc/examples/period_estimation.rst", "doc/examples/phylo_by_ls.rst", "doc/examples/rate_heterogeneity.rst", "doc/examples/relative_rate.rst", "doc/examples/scope_model_params_on_trees.rst", "doc/examples/simple.rst", "doc/examples/simulate_alignment.rst", "doc/examples/testing_multi_loci.rst", "doc/general.rst", "doc/index.rst", "doc/install.rst", "doc/licenses.rst", "doc/pycogent.rst", "genindex.rst", "history.rst", "index.rst", "projects.rst"], "titles": ["Cogent3 License", "available_apps", "available_codes", "available_models", "available_moltypes", "get_code", "get_model", "get_moltype", "load_aligned_seqs", "load_annotations", "load_delimited", "load_seq", "load_table", "load_tree", "load_unaligned_seqs", "make_aligned_seqs", "make_seq", "make_table", "make_tree", "make_unaligned_seqs", "open", "open_data_store", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">alignment</span></code>", "Alignment", "ArrayAlignment", "SequenceCollection", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">alphabet</span></code>", "Alphabet", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">annotation</span></code>", "Feature", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">annotation_db</span></code>", "BasicAnnotationDb", "GenbankAnnotationDb", "GffAnnotationDb", "define_app", "DataMember", "DataStoreDirectory", "ReadOnlyDataStoreZipped", "register_datastore_reader", "DataStoreSqlite", "GeneticCode", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">genetic_code</span></code>", "API", "MolType", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">moltype</span></code>", "DnaSequence", "ProteinSequence", "RnaSequence", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">sequence</span></code>", "FilteringParser", "Columns", "Table", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">table</span></code>", "PhyloNode", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">tree</span></code>", "register_deserialiser", "deserialise_object", "Using a codon model", "Using a nucleotide model", "Using a protein model", "Getting an app", "Getting help on an app", "Overview of using apps", "Displaying installed apps", "Data stores \u2013 collections of data records", "Reconstructing ancestral states", "Applying a discrete-time, non-stationary nucleotide model", "Extracting maximum likelihood estimates from a <code class=\"docutils literal notranslate\"><span class=\"pre\">model_result</span></code>", "Testing a hypothesis \u2013 non-stationary or time-reversible", "Apply a non-stationary nucleotide model to an alignment with 3 sequences", "Specifying a non-stationary model with time-heterogeneous parameters", "Apply a non-stationary nucleotide model to an alignment with a tree", "<code class=\"docutils literal notranslate\"><span class=\"pre\">natsel_neutral</span></code> \u2013 a test for selective neutrality", "<code class=\"docutils literal notranslate\"><span class=\"pre\">natsel_sitehet</span></code> \u2013 a test of site heterogeneity", "<code class=\"docutils literal notranslate\"><span class=\"pre\">natsel_timehet</span></code> \u2013 a test of branch heterogeneity", "<code class=\"docutils literal notranslate\"><span class=\"pre\">natsel_zhang</span></code> \u2013 a branch-site test", "Applying GNC, a non-stationary codon model", "Applying a time-reversible codon model", "Applying a time-reversible nucleotide model", "apps", "Sequence Alignment", "Overview of apps", "Write your own Apps", "Testing hypotheses about sequence evolution", "Modelling sequence evolution", "Testing for natural selection", "&lt;no title&gt;", "Tracking records that could not be processed", "Turn your functions into composable apps", "Sequences", "Sequence Collections and Alignments", "Alphabets", "Annotation Databases", "Building alignments", "Building phylogenies", "Genetic distance calculation", "Evolutionary Analysis Using Likelihood", "Features", "Using genetic codes", "Cookbook", "Loading a sequence from a file", "Loading a csv file", "Manipulating biological data", "Molecular types", "Protein sequences", "Trees", "Tabular data", "<code class=\"docutils literal notranslate\"><span class=\"pre\">UnionDict</span></code> \u2013 a dict with set like operations and keys as attributes", "Useful Utilities", "Available genetic codes", "Data Files Used in the Documentation", "Coevolution analysis", "Dotplot basics", "Dotplot with annotated sequences", "Counting gaps per sequence", "Information analysis of an alignment", "Sequence logos", "Sequence Features", "Image Gallery", "Angular Dendrogram Style", "Circular Dendrogram Style", "Radial Dendrogram Style", "Square Dendrogram Style", "Showing Bootstrap Support", "Map protein alignment gaps to DNA alignment gaps", "Make a UPGMA cluster", "Make a neighbor joining tree", "Calculate pairwise distances between sequences", "Using codon models", "Perform a coevolutionary analysis on biological sequence alignments", "Use an empirical protein substitution model", "Evaluate process heterogeneity using a Hidden Markov Model", "Tutorials", "Manipulation of Tree Node Objects", "A test of the neutral theory", "Parallel computations", "Performing a parametric bootstrap", "Estimating periodic signals", "Phylogenetic reconstruction by least squares", "Analysis of rate heterogeneity", "Performing a relative rate test", "Allowing substitution model parameters to differ between branches", "The simplest script", "Simulate an alignment", "Likelihood analysis of multiple loci", "Community", "User Guides", "Installation", "License", "How does <code class=\"docutils literal notranslate\"><span class=\"pre\">cogent3</span></code> relate to PyCogent?", "Index", "Project History", "Making Sense from Sequence", "Projects using <code class=\"docutils literal notranslate\"><span class=\"pre\">cogent3</span></code>"], "terms": {"copyright": [0, 148], "c": [0, 23, 24, 25, 27, 45, 46, 47, 51, 59, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 90, 91, 93, 94, 96, 97, 98, 100, 101, 103, 105, 106, 107, 108, 109, 110, 116, 117, 124, 128, 130, 131, 133, 134, 140, 141, 142, 143, 144, 148, 151], "2019": [0, 64, 65, 127, 148], "date": [0, 148, 151], "develop": [0, 100, 101, 106, 128, 145, 148, 151, 153], "team": [0, 145, 148], "all": [0, 9, 10, 12, 13, 14, 17, 18, 23, 24, 25, 27, 31, 32, 33, 35, 39, 40, 42, 43, 45, 46, 47, 50, 51, 53, 58, 67, 69, 70, 85, 88, 92, 94, 96, 97, 100, 101, 103, 106, 110, 112, 114, 128, 129, 131, 134, 135, 136, 137, 138, 140, 141, 142, 144, 145, 147, 148, 149, 151], "right": [0, 23, 24, 51, 62, 66, 76, 119, 120, 122, 123, 148], "reserv": [0, 148], "redistribut": [0, 148], "us": [0, 11, 12, 17, 23, 24, 25, 27, 34, 40, 43, 45, 46, 47, 50, 51, 53, 55, 56, 61, 63, 65, 67, 68, 69, 76, 79, 80, 84, 88, 89, 102, 107, 109, 111, 113, 114, 116, 118, 122, 123, 124, 125, 126, 129, 132, 133, 134, 136, 137, 139, 140, 141, 142, 143, 144, 145, 146, 148, 149, 151, 152], "sourc": [0, 15, 19, 36, 37, 39, 57, 58, 59, 62, 64, 69, 87, 92, 97, 100, 145, 148], "binari": [0, 53, 148], "form": [0, 23, 24, 39, 51, 128, 148], "without": [0, 23, 24, 34, 62, 79, 87, 90, 92, 93, 100, 114, 147, 148], "modif": [0, 128, 132, 148], "ar": [0, 9, 12, 13, 23, 24, 25, 27, 29, 31, 32, 33, 34, 40, 42, 43, 45, 46, 47, 51, 53, 55, 61, 64, 65, 67, 68, 69, 73, 75, 79, 84, 89, 90, 93, 94, 96, 97, 98, 100, 101, 102, 103, 108, 112, 114, 122, 123, 124, 127, 128, 129, 133, 134, 135, 136, 137, 138, 140, 141, 142, 145, 148, 149, 151], "permit": [0, 23, 24, 25, 148], "provid": [0, 9, 23, 24, 25, 31, 32, 33, 34, 45, 46, 47, 50, 51, 53, 61, 62, 64, 68, 69, 87, 89, 90, 92, 93, 95, 97, 103, 106, 108, 111, 112, 118, 124, 125, 126, 128, 129, 131, 134, 135, 137, 141, 144, 145, 146, 148, 149, 151, 152], "follow": [0, 40, 50, 62, 64, 68, 70, 75, 90, 92, 94, 95, 96, 97, 101, 106, 128, 129, 130, 131, 133, 134, 135, 138, 141, 148], "condit": [0, 31, 32, 33, 49, 62, 64, 69, 79, 87, 92, 96, 97, 101, 106, 128, 132, 134, 135, 148], "met": [0, 87, 96, 148], "code": [0, 2, 5, 23, 24, 25, 27, 40, 43, 45, 46, 47, 51, 53, 87, 96, 97, 99, 124, 129, 135, 136, 145, 146, 148, 149, 151], "must": [0, 9, 12, 17, 23, 24, 25, 27, 34, 38, 43, 45, 46, 47, 51, 53, 55, 57, 58, 61, 62, 90, 106, 108, 129, 135, 141, 148], "retain": [0, 97, 131, 138, 148], "abov": [0, 24, 25, 34, 45, 46, 47, 64, 69, 70, 71, 87, 90, 92, 95, 96, 97, 98, 100, 101, 103, 106, 107, 108, 128, 131, 134, 135, 137, 138, 141, 148], "notic": [0, 90, 148], "thi": [0, 12, 15, 17, 19, 23, 24, 25, 27, 29, 31, 32, 33, 34, 36, 39, 43, 45, 46, 47, 50, 51, 53, 57, 58, 61, 62, 64, 65, 66, 67, 68, 69, 70, 71, 73, 74, 75, 76, 77, 78, 80, 87, 88, 89, 90, 92, 94, 96, 97, 98, 100, 101, 103, 106, 107, 108, 109, 111, 112, 114, 115, 116, 117, 119, 124, 125, 126, 127, 128, 129, 130, 131, 133, 134, 135, 136, 137, 138, 139, 140, 141, 143, 145, 146, 148, 149, 151, 153], "list": [0, 1, 2, 3, 4, 6, 17, 18, 23, 24, 25, 27, 31, 32, 33, 36, 37, 39, 40, 43, 45, 46, 47, 51, 53, 58, 61, 64, 92, 95, 97, 102, 105, 133, 138, 141, 144, 148, 153], "disclaim": [0, 148], "reproduc": [0, 148], "document": [0, 61, 92, 97, 103, 111, 128, 129, 135, 140, 146, 148, 149, 151], "other": [0, 6, 11, 13, 14, 15, 19, 23, 24, 25, 31, 32, 33, 40, 43, 45, 46, 47, 51, 53, 64, 67, 79, 87, 90, 92, 94, 97, 106, 129, 131, 134, 135, 137, 138, 141, 144, 145, 148], "materi": [0, 148], "distribut": [0, 23, 24, 64, 96, 127, 128, 130, 134, 135, 136, 138, 139, 140, 144, 148], "neither": [0, 53, 148], "name": [0, 5, 6, 7, 8, 11, 12, 13, 14, 15, 16, 17, 18, 19, 23, 24, 25, 29, 31, 32, 33, 34, 36, 37, 39, 40, 43, 45, 46, 47, 50, 51, 53, 60, 61, 62, 63, 64, 65, 69, 70, 71, 73, 87, 88, 94, 95, 96, 98, 100, 101, 102, 103, 109, 112, 114, 115, 127, 129, 130, 133, 141, 142, 144, 148, 149, 151], "nor": [0, 148], "its": [0, 27, 40, 45, 47, 53, 57, 59, 78, 79, 90, 92, 131, 133, 134, 135, 148], "contributor": [0, 148], "mai": [0, 23, 24, 25, 27, 43, 45, 46, 47, 53, 64, 92, 96, 97, 108, 110, 124, 133, 138, 148], "endors": [0, 148], "promot": [0, 148], "product": [0, 92, 106, 148], "deriv": [0, 25, 45, 46, 47, 77, 96, 106, 108, 122, 124, 148], "from": [0, 8, 9, 10, 11, 12, 14, 15, 17, 19, 23, 24, 25, 27, 31, 32, 33, 34, 39, 43, 45, 46, 47, 50, 51, 53, 56, 57, 58, 59, 60, 61, 63, 64, 65, 66, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 81, 84, 87, 88, 91, 95, 96, 99, 102, 103, 107, 109, 111, 112, 114, 115, 117, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 148, 149, 151, 153], "softwar": [0, 135, 145, 148], "specif": [0, 27, 43, 53, 56, 62, 66, 84, 87, 88, 90, 92, 96, 97, 100, 108, 128, 131, 135, 137, 141, 146, 148], "prior": [0, 34, 135, 148], "written": [0, 9, 36, 39, 51, 62, 64, 76, 124, 148, 149], "permiss": [0, 148], "i": [0, 6, 9, 10, 12, 13, 14, 18, 23, 24, 25, 27, 29, 31, 32, 33, 34, 39, 40, 43, 45, 46, 47, 50, 51, 53, 55, 56, 57, 58, 59, 60, 61, 62, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 80, 87, 89, 91, 92, 94, 95, 96, 97, 98, 100, 101, 103, 104, 106, 107, 109, 110, 111, 112, 113, 115, 117, 119, 120, 122, 123, 124, 128, 129, 130, 131, 133, 134, 135, 136, 137, 138, 140, 141, 142, 144, 145, 147, 148, 152], "BY": [0, 148], "THE": [0, 148], "holder": [0, 148], "AND": [0, 23, 24, 25, 148], "AS": [0, 148], "ani": [0, 23, 24, 25, 27, 29, 36, 39, 43, 45, 46, 47, 50, 53, 57, 58, 60, 61, 62, 64, 70, 80, 87, 90, 92, 96, 98, 101, 106, 115, 131, 133, 141, 145, 148], "express": [0, 51, 123, 148], "OR": [0, 148], "impli": [0, 12, 17, 62, 148], "warranti": [0, 148], "includ": [0, 23, 24, 25, 27, 29, 34, 40, 45, 46, 47, 51, 53, 57, 61, 62, 64, 65, 77, 88, 90, 92, 96, 97, 98, 116, 141, 148, 153], "BUT": [0, 148], "NOT": [0, 9, 23, 24, 25, 45, 46, 47, 148], "limit": [0, 10, 12, 17, 21, 23, 24, 25, 36, 37, 39, 45, 46, 47, 49, 62, 64, 95, 96, 101, 106, 114, 117, 128, 140, 148], "TO": [0, 24, 148], "OF": [0, 148], "merchant": [0, 148], "fit": [0, 24, 25, 62, 65, 66, 67, 70, 71, 108, 128, 131, 141, 148], "FOR": [0, 24, 131, 148], "A": [0, 23, 24, 25, 27, 40, 45, 46, 47, 49, 51, 53, 57, 58, 59, 62, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 90, 91, 92, 93, 96, 97, 98, 100, 101, 103, 106, 108, 109, 111, 112, 116, 117, 124, 128, 130, 132, 133, 137, 139, 140, 141, 142, 143, 144, 148, 149, 151], "particular": [0, 27, 45, 46, 47, 53, 69, 84, 97, 108, 148], "purpos": [0, 61, 133, 136, 148], "IN": [0, 148], "NO": [0, 148], "event": [0, 148], "shall": [0, 148], "BE": [0, 148], "liabl": [0, 148], "direct": [0, 51, 53, 92, 148, 149, 151], "indirect": [0, 148], "incident": [0, 148], "special": [0, 34, 43, 53, 62, 64, 87, 134, 140, 148], "exemplari": [0, 148], "consequenti": [0, 148], "damag": [0, 148], "procur": [0, 148], "substitut": [0, 3, 23, 24, 69, 72, 77, 78, 80, 84, 93, 94, 95, 125, 126, 127, 129, 131, 132, 138, 142, 143, 148, 153], "good": [0, 72, 74, 96, 105, 128, 135, 138, 148], "servic": [0, 103, 148], "loss": [0, 148], "data": [0, 10, 12, 15, 17, 19, 23, 24, 25, 27, 31, 32, 33, 34, 35, 36, 37, 38, 39, 43, 45, 46, 47, 51, 53, 56, 57, 58, 59, 61, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 87, 88, 90, 93, 94, 95, 96, 98, 100, 103, 104, 105, 107, 108, 111, 112, 113, 114, 116, 117, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 130, 131, 134, 135, 136, 138, 139, 140, 141, 142, 144, 146, 148, 152], "profit": [0, 148], "busi": [0, 148], "interrupt": [0, 64, 148], "howev": [0, 27, 45, 46, 47, 90, 92, 96, 97, 124, 128, 133, 135, 141, 148], "caus": [0, 23, 25, 29, 43, 96, 106, 111, 114, 115, 138, 140, 141, 148], "ON": [0, 148], "theori": [0, 132, 148], "liabil": [0, 148], "whether": [0, 6, 10, 23, 24, 25, 27, 31, 32, 33, 43, 45, 46, 47, 51, 53, 64, 69, 73, 74, 90, 92, 94, 106, 108, 123, 128, 131, 141, 144, 148], "contract": [0, 148], "strict": [0, 23, 24, 25, 43, 45, 46, 47, 51, 90, 106, 129, 148], "tort": [0, 148], "neglig": [0, 148], "otherwis": [0, 8, 15, 23, 24, 27, 36, 37, 39, 40, 45, 46, 47, 50, 51, 53, 56, 57, 58, 106, 133, 135, 148], "aris": [0, 148], "wai": [0, 96, 114, 131, 141, 148, 149, 151], "out": [0, 23, 24, 45, 46, 47, 53, 64, 90, 96, 97, 105, 127, 128, 134, 135, 145, 148], "even": [0, 23, 24, 25, 27, 53, 97, 145, 148], "IF": [0, 148], "advis": [0, 23, 24, 25, 68, 148], "possibl": [0, 23, 24, 43, 45, 46, 47, 51, 53, 66, 69, 90, 92, 94, 97, 100, 101, 106, 128, 131, 137, 138, 141, 142, 148], "SUCH": [0, 148], "return": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 20, 21, 23, 24, 25, 27, 29, 31, 32, 33, 34, 36, 37, 39, 40, 43, 45, 46, 47, 49, 50, 51, 53, 56, 62, 64, 65, 87, 88, 90, 92, 94, 96, 98, 100, 106, 107, 108, 111, 112, 113, 114, 127, 128, 133, 135, 136, 137, 138, 140], "tabl": [1, 2, 3, 4, 12, 17, 27, 31, 32, 33, 36, 37, 39, 40, 42, 50, 55, 64, 66, 67, 69, 75, 92, 128, 144], "avail": [1, 2, 4, 23, 24, 36, 37, 39, 51, 57, 58, 59, 61, 62, 69, 77, 78, 92, 95, 102, 129, 135, 145], "app": [1, 23, 24, 34, 57, 58, 59, 68, 69, 72, 73, 84, 85, 87, 119, 120, 121, 122, 123, 146, 149, 151], "genet": [2, 5, 23, 24, 25, 40, 45, 47, 84, 103, 153], "model_typ": 3, "none": [3, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 21, 23, 24, 25, 27, 29, 31, 32, 33, 34, 36, 37, 39, 40, 43, 45, 46, 47, 49, 50, 51, 53, 61, 62, 64, 66, 69, 71, 92, 97, 101, 106, 123, 128, 135], "pre": [3, 75, 93, 146], "defin": [3, 23, 34, 51, 62, 70, 75, 79, 88, 90, 93, 94, 97, 106, 108, 112, 128, 131, 133, 136, 137, 143, 146], "model": [3, 6, 23, 24, 53, 63, 64, 65, 67, 68, 72, 73, 74, 75, 80, 83, 85, 90, 93, 94, 95, 105, 122, 125, 126, 127, 134, 135, 136, 138, 139, 140, 142, 143, 144, 151, 153], "moltyp": [4, 7, 8, 11, 14, 15, 16, 19, 23, 24, 25, 27, 34, 42, 45, 46, 47, 60, 61, 62, 64, 66, 67, 68, 69, 71, 72, 73, 74, 75, 76, 77, 78, 87, 88, 89, 92, 93, 94, 95, 97, 98, 100, 102, 104, 111, 112, 114, 115, 116, 117, 124, 128, 129, 130], "code_id": 5, "1": [5, 23, 24, 25, 27, 34, 43, 45, 46, 47, 51, 53, 57, 58, 59, 60, 61, 62, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 89, 90, 92, 93, 94, 96, 97, 98, 100, 101, 104, 105, 106, 107, 108, 109, 116, 120, 125, 126, 128, 129, 130, 133, 134, 135, 137, 138, 139, 140, 141, 143, 144, 151], "paramet": [5, 6, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 24, 25, 29, 31, 32, 33, 34, 36, 37, 38, 39, 40, 43, 45, 46, 47, 50, 51, 53, 55, 56, 61, 68, 69, 71, 72, 73, 74, 75, 76, 77, 78, 90, 93, 100, 108, 113, 128, 130, 131, 132, 133, 134, 135, 140, 142, 143, 144], "identifi": [5, 9, 12, 17, 31, 32, 33, 36, 39, 51, 55, 56, 62, 64, 66, 69, 87, 96, 129, 137, 141], "number": [5, 10, 12, 14, 17, 21, 23, 24, 25, 27, 31, 32, 33, 43, 45, 46, 47, 51, 53, 62, 64, 66, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 90, 92, 94, 95, 98, 103, 112, 114, 128, 130, 131, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144], "string": [5, 10, 12, 15, 16, 17, 18, 19, 23, 24, 25, 27, 31, 32, 33, 36, 37, 38, 39, 40, 43, 45, 46, 47, 51, 53, 55, 56, 60, 61, 92, 96, 102, 108, 109, 124, 130, 133, 137], "default": [5, 9, 12, 13, 15, 18, 19, 23, 24, 25, 31, 32, 33, 34, 43, 45, 46, 47, 50, 51, 53, 62, 64, 77, 78, 89, 90, 96, 98, 100, 105, 106, 111, 114, 122, 128, 133, 134, 137, 141], "standard": [5, 20, 23, 24, 25, 43, 45, 46, 47, 53, 62, 90, 95, 96, 98, 101, 102, 109, 131, 133, 135, 141, 145], "kw": [6, 8, 11, 14, 15, 19, 87], "an": [6, 8, 9, 11, 14, 15, 19, 20, 23, 24, 25, 27, 29, 31, 32, 33, 34, 40, 43, 45, 46, 47, 50, 51, 53, 57, 58, 59, 63, 70, 77, 79, 87, 88, 91, 93, 102, 107, 109, 111, 112, 113, 116, 117, 124, 125, 126, 127, 128, 129, 131, 132, 134, 135, 136, 137, 138, 139, 141, 144, 149, 151], "instanc": [6, 8, 16, 21, 23, 24, 25, 29, 31, 32, 33, 34, 40, 45, 46, 47, 50, 51, 53, 56, 60, 61, 67, 69, 83, 87, 88, 89, 90, 91, 95, 97, 100, 102, 103, 106, 108, 113, 125, 126, 128, 131, 135, 136, 138, 144, 149], "case": [6, 23, 24, 25, 34, 43, 45, 46, 47, 50, 51, 53, 57, 58, 62, 64, 66, 68, 77, 78, 88, 90, 95, 96, 98, 100, 101, 103, 105, 106, 111, 114, 127, 128, 130, 131, 133, 135, 137, 138, 139, 141], "sensit": [6, 45, 46, 47, 77, 78, 96], "optimise_motif_prob": [6, 68, 69, 71, 72, 73, 74, 75, 77, 78, 128], "bool": [6, 8, 9, 10, 12, 13, 15, 18, 23, 24, 25, 29, 31, 32, 33, 34, 39, 43, 45, 46, 47, 51, 53, 61, 113, 135], "treat": [6, 23, 24, 90, 134, 141], "like": [6, 43, 45, 46, 47, 50, 64, 67, 69, 87, 88, 96, 101, 106, 127, 131, 134, 135, 138, 145], "free": [6, 66, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 128, 130, 131, 134, 139, 140, 141, 142, 143, 144, 145], "recode_gap": [6, 23, 24, 45, 46, 47, 131], "gap": [6, 23, 24, 25, 27, 29, 43, 45, 46, 47, 61, 63, 98, 103, 112, 116, 128, 132], "align": [6, 8, 15, 24, 25, 29, 31, 32, 33, 34, 42, 43, 45, 46, 47, 51, 61, 62, 63, 64, 65, 76, 77, 78, 87, 88, 92, 98, 103, 106, 111, 112, 125, 126, 127, 128, 130, 131, 132, 134, 135, 136, 138, 139, 140, 141, 144], "should": [6, 9, 23, 24, 25, 27, 45, 46, 47, 53, 90, 96, 97, 105, 124, 125, 129, 133, 135], "ambigu": [6, 23, 24, 25, 27, 43, 45, 46, 47, 90, 97, 102, 129], "state": [6, 23, 24, 45, 46, 47, 53, 61, 64, 90, 96, 103, 149, 151], "instead": [6, 23, 24, 25, 43, 45, 46, 47, 53, 71, 90, 96, 106, 133, 138], "note": [6, 9, 10, 11, 13, 18, 23, 24, 25, 27, 29, 31, 32, 34, 36, 39, 40, 43, 45, 46, 47, 51, 53, 56, 64, 66, 72, 76, 90, 92, 97, 101, 105, 106, 108, 116, 119, 124, 127, 129, 133, 134], "see": [6, 23, 24, 34, 51, 53, 57, 58, 60, 61, 62, 64, 66, 69, 76, 84, 90, 92, 96, 97, 112, 117, 129, 135, 138, 141, 146, 149, 151], "available_model": [6, 42, 57, 58, 77, 78, 84, 96], "full": [6, 29, 51, 77, 137], "match": [7, 9, 21, 23, 24, 25, 27, 29, 31, 32, 33, 34, 39, 43, 45, 46, 47, 49, 51, 53, 62, 90, 92, 97, 100, 105, 129, 149, 151], "attribut": [7, 23, 24, 25, 29, 31, 32, 33, 34, 35, 36, 37, 39, 40, 45, 46, 47, 50, 51, 53, 64, 69, 87, 90, 97, 100, 103, 105, 106, 111, 114, 123], "filenam": [8, 10, 11, 12, 13, 14, 20, 21, 23, 24, 25, 51, 53, 62, 64, 90, 97, 100, 101, 106, 140], "str": [8, 9, 10, 11, 12, 13, 14, 16, 17, 18, 21, 23, 24, 25, 29, 31, 32, 33, 35, 36, 37, 38, 39, 40, 43, 45, 46, 47, 50, 51, 53, 55, 61, 89, 100, 101, 108], "path": [8, 9, 10, 11, 12, 13, 14, 20, 21, 23, 24, 25, 31, 32, 33, 36, 37, 39, 45, 46, 47, 56, 68, 87, 92, 97], "format": [8, 11, 12, 13, 14, 17, 18, 23, 24, 25, 27, 38, 43, 45, 46, 47, 51, 53, 57, 58, 59, 62, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 87, 102, 122, 123, 127, 128, 130, 138], "array_align": [8, 15, 23, 24, 88, 90, 97, 100, 115, 129], "true": [8, 10, 12, 15, 23, 24, 25, 27, 29, 31, 32, 33, 34, 40, 43, 45, 46, 47, 49, 51, 53, 57, 58, 60, 61, 62, 63, 64, 65, 66, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 89, 90, 91, 92, 93, 96, 97, 98, 101, 103, 105, 106, 108, 112, 113, 114, 115, 116, 119, 120, 121, 122, 123, 128, 129, 131, 133, 134, 135, 137, 138, 139, 140, 141], "label_to_nam": [8, 11, 14, 15, 19, 25, 92, 97, 100], "parser_kw": [8, 11, 14], "info": [8, 11, 14, 15, 19, 23, 24, 25, 45, 46, 47, 51, 63, 64, 100], "load": [8, 9, 11, 14, 23, 24, 25, 56, 57, 58, 59, 62, 64, 65, 69, 70, 90, 93, 96, 102, 117, 125, 126, 127, 128, 131, 138, 141], "sequenc": [8, 11, 14, 15, 16, 19, 23, 24, 25, 27, 29, 31, 32, 33, 34, 38, 40, 42, 43, 45, 46, 47, 51, 55, 57, 58, 59, 61, 62, 63, 64, 71, 87, 93, 94, 112, 124, 125, 126, 131, 132, 137, 138, 142, 149, 151, 153], "file": [8, 9, 10, 11, 12, 13, 14, 17, 20, 21, 23, 24, 25, 32, 33, 36, 37, 38, 39, 45, 46, 47, 49, 51, 53, 56, 62, 64, 65, 79, 87, 96, 98, 102, 107, 108, 113, 124, 125, 126, 127, 130, 134, 135, 136, 146, 151], "specifi": [8, 11, 14, 21, 23, 24, 25, 27, 40, 43, 45, 46, 47, 50, 51, 53, 64, 69, 74, 75, 76, 77, 78, 88, 89, 90, 92, 93, 94, 95, 97, 98, 102, 103, 105, 109, 117, 124, 128, 131, 133, 134, 135, 136, 139, 143, 144], "tri": [8, 11, 14, 43, 45, 46, 47], "guess": [8, 11, 14, 51, 96, 106, 108], "suffix": [8, 11, 13, 14, 21, 23, 24, 25, 36, 38, 39, 51, 53, 62, 64, 90, 92, 100, 101, 106, 110], "eg": [8, 11, 14, 15, 19, 23, 24, 45, 46, 47], "dna": [8, 11, 14, 15, 19, 23, 24, 25, 27, 34, 40, 43, 45, 46, 47, 57, 58, 59, 60, 61, 62, 64, 66, 67, 68, 69, 71, 72, 73, 74, 75, 76, 77, 78, 88, 91, 92, 93, 94, 95, 96, 97, 100, 102, 103, 111, 112, 114, 115, 116, 117, 128, 132, 138, 143, 153], "protein": [8, 11, 14, 15, 19, 23, 24, 25, 40, 45, 46, 47, 91, 92, 93, 95, 98, 100, 102, 103, 115, 129, 132, 135, 138], "arrayalign": [8, 15, 23, 61, 63, 87, 89, 94, 100, 102, 112, 129], "annotat": [8, 15, 23], "function": [8, 11, 12, 14, 15, 17, 19, 20, 23, 24, 25, 34, 40, 45, 46, 47, 51, 53, 55, 56, 57, 58, 60, 61, 63, 64, 65, 66, 69, 70, 79, 89, 93, 95, 97, 100, 101, 103, 106, 109, 122, 128, 129, 130, 131, 133, 134, 135, 136, 137, 140, 141, 144, 149, 151], "convert": [8, 11, 14, 15, 16, 19, 23, 24, 25, 34, 43, 45, 46, 47, 51, 63, 88, 100, 101, 102, 106, 137], "origin": [8, 11, 14, 15, 19, 23, 24, 25, 34, 53, 56, 62, 64, 87, 90, 92, 97, 100, 103, 106, 124, 128, 129, 133, 149, 151, 153], "anoth": [8, 11, 14, 15, 19, 53, 62, 66, 70, 97, 98, 107, 108, 133, 138], "dict": [8, 11, 12, 14, 15, 17, 19, 23, 24, 25, 31, 32, 33, 40, 43, 45, 46, 47, 50, 51, 53, 55, 56, 57, 67, 69, 70, 88, 96, 102, 120, 122, 124, 128, 131, 135, 138, 143], "option": [8, 11, 14, 23, 24, 29, 31, 32, 33, 45, 46, 47, 61, 94, 96, 108, 138], "argument": [8, 11, 14, 15, 19, 23, 24, 25, 31, 32, 33, 34, 43, 53, 60, 61, 64, 70, 88, 90, 92, 94, 96, 97, 98, 100, 101, 103, 105, 106, 111, 114, 123, 128, 134, 135, 138], "parser": [8, 11, 12, 14, 49, 102], "pathlik": [9, 11, 20, 23, 25, 31, 32, 33, 45, 46, 47], "seqid": [9, 23, 25, 29, 31, 32, 33, 45, 46, 47, 92, 97], "db": [9, 21, 23, 25, 31, 32, 33, 39, 45, 46, 47, 64, 92, 97, 149, 151], "supportsfeatur": [9, 23, 25, 31, 32, 33, 45, 46, 47], "write_path": 9, "memori": [9, 62, 90, 92, 97, 100], "show_progress": [9, 14, 23, 24, 25, 62, 69, 71, 88, 93, 94, 95, 96, 108, 111, 125, 126, 127, 128, 130, 131, 134, 136, 138, 139, 140, 141, 142, 144], "fals": [9, 10, 12, 13, 18, 23, 24, 25, 27, 29, 31, 32, 33, 34, 39, 40, 43, 45, 46, 47, 49, 51, 53, 62, 64, 69, 71, 72, 73, 74, 75, 88, 89, 90, 92, 93, 94, 95, 96, 97, 100, 101, 106, 108, 111, 113, 115, 124, 125, 126, 127, 128, 130, 131, 133, 134, 135, 136, 138, 139, 140, 141, 142, 144], "annot": [9, 23, 24, 25, 29, 31, 32, 33, 42, 45, 46, 47, 69, 90, 100, 102, 106, 117, 128, 134], "flatfil": 9, "plain": [9, 64], "text": [9, 36, 39, 51, 64, 65, 89, 90, 95, 97, 103, 114, 117, 120, 129, 135], "contain": [9, 12, 13, 23, 24, 25, 27, 31, 32, 33, 40, 43, 45, 46, 47, 51, 53, 56, 61, 62, 63, 64, 67, 87, 90, 92, 96, 97, 106, 130, 133, 134, 136, 137], "featur": [9, 23, 25, 31, 32, 33, 45, 46, 47, 79, 89, 90, 96, 102, 133, 149], "onli": [9, 12, 13, 17, 23, 24, 25, 27, 29, 31, 32, 33, 38, 43, 45, 46, 47, 51, 53, 66, 67, 69, 73, 88, 90, 92, 96, 97, 100, 105, 123, 127, 128, 133, 136, 138, 139, 141, 142, 149, 151], "whose": [9, 23, 24, 31, 32, 33, 40, 50, 51, 94, 133, 137, 138], "exist": [9, 23, 24, 25, 39, 45, 46, 47, 51, 64, 87, 96, 98, 102, 131, 134], "add": [9, 23, 24, 25, 27, 31, 32, 33, 34, 45, 46, 47, 50, 90, 97, 100, 102, 105, 111, 133, 138], "record": [9, 23, 25, 31, 32, 33, 36, 39, 45, 46, 47, 49, 63, 79, 100, 117], "compat": [9, 20, 23, 25, 31, 32, 33, 34, 45, 46, 47, 53], "type": [9, 12, 17, 21, 23, 24, 25, 27, 31, 32, 33, 34, 39, 43, 45, 46, 47, 50, 51, 53, 55, 56, 61, 63, 67, 68, 69, 72, 77, 78, 85, 90, 96, 101, 102, 104, 106, 111, 114, 128, 131], "where": [9, 23, 24, 25, 43, 45, 46, 47, 51, 53, 62, 87, 90, 92, 96, 98, 100, 128, 131, 133, 134, 135], "construct": [9, 23, 24, 25, 45, 46, 47, 51, 57, 70, 73, 88, 89, 96, 103, 106, 124, 131, 137, 141, 144], "databas": [9, 39, 45, 46, 47, 64, 97, 102, 129, 135, 153], "appli": [9, 12, 17, 23, 24, 25, 51, 53, 79, 87, 90, 96, 100, 101, 106, 108, 116, 131, 135, 136, 137, 141], "multipl": [9, 23, 24, 25, 27, 33, 45, 46, 47, 61, 63, 64, 87, 92, 96, 108, 127, 132, 149], "we": [9, 14, 45, 46, 47, 53, 57, 58, 59, 62, 64, 65, 66, 67, 68, 69, 70, 71, 72, 74, 75, 77, 78, 84, 87, 88, 89, 90, 92, 93, 94, 96, 97, 98, 100, 101, 103, 105, 106, 108, 109, 112, 113, 114, 116, 117, 118, 122, 123, 124, 125, 126, 127, 128, 131, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 147, 149, 151, 152], "do": [9, 24, 45, 46, 47, 53, 90, 92, 96, 97, 101, 106, 128, 129, 131, 133, 134, 135, 137, 138, 141, 145, 146], "check": [9, 27, 31, 32, 33, 34, 43, 45, 46, 47, 64, 66, 79, 135, 149, 151], "alreadi": [9, 27, 38, 51, 90, 124], "header": [10, 12, 17, 51, 65, 128, 144], "sep": [10, 12, 49, 51, 101, 106], "with_titl": [10, 51, 96, 128], "with_legend": [10, 51], "kwarg": [10, 12, 17, 20, 21, 23, 24, 25, 29, 31, 32, 33, 36, 37, 39, 43, 46, 51, 53, 87], "basic": [10, 102, 106, 124, 128, 133, 136, 138], "process": [10, 14, 20, 59, 64, 66, 69, 96, 103, 132, 133, 135, 151], "tabular": [10, 12, 49, 51], "delimit": [10, 12, 49, 51, 64, 100], "can": [10, 23, 24, 25, 27, 31, 34, 38, 40, 43, 45, 46, 47, 50, 51, 53, 57, 58, 61, 65, 69, 70, 71, 79, 80, 82, 84, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 100, 101, 105, 107, 108, 109, 110, 114, 116, 117, 124, 126, 127, 128, 129, 131, 133, 134, 135, 136, 137, 138, 141, 142, 144, 145, 146, 147, 149, 151], "begin": [10, 40, 97, 106, 124], "first": [10, 12, 23, 24, 25, 34, 40, 43, 45, 46, 47, 51, 53, 62, 64, 65, 67, 69, 73, 88, 90, 92, 93, 96, 97, 100, 101, 106, 124, 128, 129, 131, 133, 135, 137, 138, 141, 152], "line": [10, 12, 17, 23, 24, 25, 45, 46, 47, 53, 70, 87, 90, 97, 98, 102, 105, 107, 108, 120, 122, 128, 135, 153], "after": [10, 12, 17, 23, 24, 43, 53, 96, 97, 100, 124, 128, 129, 133, 135, 138], "titl": [10, 12, 17, 23, 24, 25, 51, 90, 101, 112, 128, 139], "present": [10, 23, 24, 25, 29, 38, 43, 50, 53, 69, 75, 88, 90, 92, 96, 97, 100, 103, 128, 135, 149, 151], "charact": [10, 12, 23, 24, 25, 27, 40, 43, 45, 46, 47, 51, 53, 61, 63, 97, 102, 108, 116, 128, 129], "separ": [10, 23, 24, 27, 45, 46, 47, 51, 53, 100, 101, 106, 128, 133, 135, 138], "column": [10, 12, 17, 23, 24, 27, 31, 32, 33, 49, 51, 53, 61, 62, 63, 64, 66, 67, 68, 69, 71, 75, 76, 77, 78, 92, 95, 96, 98, 103, 109, 129, 131, 139, 144], "last": [10, 23, 24, 34, 43, 45, 46, 47, 53, 62, 70, 87, 90, 92, 98, 107, 108, 138, 151], "legend": [10, 12, 17, 51, 101, 112, 115], "int": [10, 21, 23, 24, 25, 31, 32, 33, 40, 45, 46, 47, 51, 53, 61, 108, 135], "maximum": [10, 12, 17, 23, 24, 25, 45, 46, 47, 63, 66, 68, 69, 73, 94, 115, 128, 134, 137, 140], "read": [10, 12, 13, 18, 35, 36, 37, 38, 39, 40, 61, 101, 106, 116, 124, 145], "row": [10, 12, 17, 23, 24, 25, 27, 31, 32, 33, 50, 51, 53, 62, 63, 64, 65, 66, 67, 68, 69, 71, 75, 76, 77, 78, 92, 95, 96, 103, 109, 139, 144], "valu": [10, 12, 13, 17, 23, 24, 25, 27, 31, 32, 33, 34, 45, 46, 47, 50, 51, 53, 55, 56, 57, 60, 62, 64, 65, 66, 67, 68, 69, 71, 73, 88, 90, 93, 95, 97, 101, 105, 108, 112, 120, 122, 123, 128, 129, 131, 133, 134, 135, 136, 137, 138, 139, 140, 141, 145], "remain": [10, 23, 24, 53, 64, 66, 138, 141, 145], "annotation_path": [11, 92, 97], "callabl": [11, 23, 24, 25, 34], "unalign": [11, 14, 19, 25, 57, 58, 59, 88, 93, 102, 112, 124], "which": [11, 14, 15, 17, 19, 23, 24, 25, 27, 29, 34, 45, 46, 47, 51, 53, 55, 62, 64, 67, 75, 89, 90, 92, 94, 96, 97, 100, 101, 105, 106, 108, 111, 114, 124, 128, 129, 131, 133, 134, 135, 137, 138, 141, 144, 145, 148], "make": [11, 14, 15, 19, 23, 24, 25, 43, 45, 46, 47, 53, 61, 62, 78, 87, 88, 97, 98, 102, 108, 117, 128, 130, 132, 134, 137, 138, 139, 140, 141, 142, 144, 145, 149, 151, 153], "object": [11, 14, 15, 16, 19, 20, 23, 24, 25, 27, 43, 45, 46, 47, 50, 51, 53, 55, 56, 62, 63, 64, 65, 68, 69, 75, 89, 92, 96, 102, 103, 107, 111, 114, 124, 125, 126, 127, 128, 129, 130, 132, 134, 136, 138, 140, 146], "keyword": [11, 14, 15, 19, 23, 24, 43, 60, 61, 88, 135], "pass": [11, 14, 15, 19, 20, 23, 24, 25, 27, 34, 43, 45, 46, 47, 51, 53, 60, 61, 90, 94, 96, 97, 100, 108, 128, 135, 137, 138], "sequencecollect": [11, 14, 19, 23, 24, 31, 63, 88, 93, 97, 100, 112, 113, 124], "one": [11, 14, 23, 24, 25, 34, 38, 40, 43, 45, 46, 47, 51, 53, 69, 70, 87, 88, 90, 92, 96, 100, 103, 105, 107, 108, 113, 128, 129, 131, 133, 134, 135, 138, 142], "load_aligned_seq": [11, 42, 90, 94, 95, 96, 97, 100, 103, 104, 111, 114, 115, 116, 125, 126, 127, 128, 130, 131, 134, 136, 140, 141, 142, 144], "load_unaligned_seq": [11, 42, 57, 58, 90, 93, 100, 112], "get": [11, 23, 24, 25, 40, 43, 50, 53, 62, 67, 69, 100, 102, 107, 108, 124, 128, 134, 135, 136, 140, 144, 145, 149, 151], "collect": [11, 15, 19, 25, 50, 53, 63, 92, 102, 112, 138], "reader": [12, 87, 101, 106, 119, 120, 121, 122, 123], "digit": [12, 17, 51, 96, 101, 128, 131, 134, 139, 140, 141, 144], "4": [12, 17, 24, 25, 40, 51, 53, 64, 65, 66, 67, 69, 70, 72, 73, 74, 75, 77, 88, 90, 92, 93, 96, 97, 98, 100, 101, 103, 105, 106, 107, 108, 109, 116, 128, 129, 131, 133, 135, 137, 138, 139, 140, 142, 143, 144], "space": [12, 13, 17, 18, 23, 24, 45, 46, 47, 51, 94, 96, 97, 120, 128, 130, 131, 133, 134, 139, 140, 141, 144], "missing_data": [12, 17, 51, 101, 106], "max_width": [12, 17, 51, 106], "1e": [12, 17, 51, 57, 58, 59, 64, 69, 71, 90, 96, 106, 108, 128, 131, 138], "100": [12, 17, 23, 24, 25, 45, 46, 47, 51, 53, 65, 90, 94, 97, 101, 106, 108, 111, 123, 128, 135, 137], "index_nam": [12, 17, 50, 51, 101, 106], "column_templ": [12, 17, 51], "static_column_typ": [12, 101, 106], "simpl": [12, 17, 51, 62, 90, 96, 100, 106, 108, 139, 143], "skip_inconsist": 12, "between": [12, 17, 23, 24, 25, 34, 40, 43, 45, 46, 47, 51, 53, 57, 67, 70, 79, 92, 96, 97, 102, 103, 106, 112, 113, 120, 128, 129, 131, 132, 134, 135, 138, 139, 144], "approach": [12, 45, 46, 47, 53, 62, 89, 90, 95, 96, 97, 112, 124, 128, 135, 137], "assum": [12, 14, 23, 24, 45, 46, 47, 51, 90, 92, 97, 137], "numer": [12, 23, 24, 51, 71, 95, 128, 131], "non": [12, 17, 23, 24, 25, 43, 45, 46, 47, 51, 53, 61, 63, 67, 77, 78, 84, 94, 96, 97, 101, 122, 128, 140, 153], "subsequ": [12, 103, 128, 141], "entri": [12, 24, 55, 67, 103, 112], "same": [12, 23, 24, 25, 27, 31, 32, 33, 34, 40, 43, 45, 46, 47, 51, 53, 57, 62, 64, 90, 92, 97, 106, 108, 123, 128, 130, 131, 134, 135, 136, 137, 138, 141, 144], "float": [12, 17, 23, 24, 27, 53, 101, 106, 136], "point": [12, 17, 23, 24, 43, 45, 46, 47, 108, 114, 136, 141], "resolut": [12, 17, 23, 24, 25], "assign": [12, 23, 24, 43, 45, 46, 47, 53, 69, 70, 97, 102, 106, 128, 135, 141], "ha": [12, 23, 24, 25, 43, 45, 46, 47, 50, 53, 57, 59, 61, 64, 66, 67, 69, 72, 80, 87, 88, 90, 92, 96, 97, 98, 100, 105, 107, 108, 111, 114, 128, 133, 134, 135, 141, 149, 151], "width": [12, 17, 23, 24, 25, 45, 46, 47, 51, 65, 66, 70, 76, 90, 111, 112, 113, 114, 115, 116, 117, 119, 120, 121, 122, 123], "print": [12, 17, 23, 24, 25, 45, 46, 47, 64, 90, 91, 92, 94, 96, 98, 100, 105, 106, 108, 125, 126, 128, 129, 131, 133, 134, 135, 136, 137, 138, 140, 141, 144], "kei": [12, 17, 23, 24, 25, 38, 43, 45, 46, 47, 50, 51, 53, 56, 65, 66, 67, 69, 71, 72, 73, 74, 75, 76, 77, 78, 79, 90, 97, 100, 101, 106, 129, 135], "slice": [12, 17, 23, 24, 25, 29, 102, 117, 124, 137], "uniqu": [12, 17, 23, 24, 36, 38, 39, 51, 53, 55, 63, 69, 84, 97, 101, 141], "head": [12, 17, 51], "handl": [12, 17, 20, 27, 43, 51, 53, 97, 98, 102, 103, 106, 107, 108, 110, 129], "exit": [12, 17, 64, 96], "mani": [12, 17, 43, 45, 46, 47, 62, 96, 97, 135, 136, 137, 151], "pickl": [12, 17, 51, 63, 101, 106, 127, 138], "output": [12, 17, 23, 24, 25, 51, 53, 61, 62, 63, 64, 68, 69, 79, 90, 114, 128, 135], "when": [12, 14, 17, 23, 24, 25, 45, 46, 47, 51, 53, 64, 69, 87, 92, 100, 114, 127, 131, 133, 138, 145, 147], "skip": [12, 97, 101, 106], "have": [12, 17, 23, 24, 25, 34, 40, 43, 45, 46, 47, 51, 53, 57, 58, 62, 64, 69, 73, 75, 79, 87, 88, 89, 90, 91, 92, 96, 97, 100, 103, 106, 108, 111, 112, 113, 114, 123, 124, 128, 131, 133, 135, 137, 138, 139, 141, 145, 146, 149, 151], "differ": [12, 20, 23, 24, 25, 27, 34, 40, 45, 46, 47, 51, 53, 64, 66, 67, 69, 70, 73, 85, 96, 97, 100, 102, 103, 105, 114, 116, 124, 128, 131, 132, 135, 137, 138, 140, 143, 144, 149, 151], "length": [12, 23, 24, 25, 27, 29, 43, 45, 46, 47, 53, 57, 58, 59, 62, 63, 64, 67, 68, 69, 70, 71, 72, 73, 74, 75, 77, 78, 89, 90, 97, 98, 100, 101, 103, 104, 106, 117, 122, 128, 130, 131, 133, 134, 136, 137, 138, 139, 140, 141, 142, 143, 144], "underscore_unmung": [13, 18], "constructor": [13, 23, 24, 25, 36, 37, 39, 43, 53, 92], "tree": [13, 18, 23, 24, 25, 42, 53, 65, 67, 68, 69, 70, 72, 73, 74, 75, 77, 78, 80, 93, 110, 119, 120, 121, 122, 123, 125, 128, 130, 131, 132, 134, 136, 139, 140, 141, 142, 143, 144], "newick": [13, 18, 53, 65, 76], "xml": [13, 18, 53], "either": [13, 18, 21, 23, 24, 25, 31, 32, 33, 34, 50, 51, 61, 62, 64, 69, 84, 90, 92, 103, 109, 117, 124], "json": [13, 23, 24, 25, 27, 31, 32, 33, 36, 39, 43, 45, 46, 47, 53, 55, 56, 62, 64, 88, 94, 96, 110, 119, 120, 121, 122, 123, 127], "overrid": [13, 23, 24, 36, 37, 39, 51, 53, 101, 103, 106], "replac": [13, 17, 18, 23, 24, 45, 46, 47, 51, 149, 151], "underscor": [13, 18], "e": [13, 18, 23, 24, 25, 27, 34, 43, 45, 46, 47, 50, 51, 53, 55, 62, 63, 64, 88, 91, 92, 96, 97, 101, 103, 105, 106, 108, 109, 117, 124, 128, 129, 130, 131, 133, 135, 151], "sp_name": [13, 18], "becom": [13, 18, 43, 51, 64, 88, 106, 133], "sp": [13, 18], "phylonod": [13, 18, 105, 133], "unmung": [13, 18], "turn": [13, 18, 45, 46, 47, 112, 149, 151], "off": [13, 18, 24, 89, 112], "although": [13, 18, 27, 101, 106, 124], "part": [13, 18, 27, 29, 53, 88, 96, 100, 131, 135, 141], "cogent3": [13, 23, 24, 25, 34, 40, 45, 46, 47, 53, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 80, 84, 87, 88, 89, 90, 91, 92, 95, 96, 97, 98, 100, 101, 103, 104, 105, 106, 107, 109, 111, 112, 113, 114, 115, 116, 117, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 133, 134, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 152], "support": [13, 23, 24, 25, 32, 33, 34, 45, 46, 47, 53, 88, 94, 97, 100, 101, 106, 108, 110, 114, 135, 138, 152], "glob": 14, "pattern": [14, 40, 43, 45, 46, 47, 129], "If": [14, 17, 23, 24, 25, 27, 29, 34, 39, 43, 45, 46, 47, 50, 51, 53, 56, 57, 58, 61, 62, 64, 65, 67, 76, 87, 90, 92, 96, 97, 100, 101, 103, 106, 107, 108, 112, 113, 117, 124, 128, 131, 135, 138, 141, 145, 153], "singl": [14, 23, 24, 25, 29, 33, 34, 45, 46, 47, 51, 53, 57, 58, 62, 64, 67, 79, 94, 97, 117, 131, 133, 141], "per": [14, 21, 23, 24, 25, 34, 45, 46, 47, 53, 90, 97, 106, 128, 135, 137, 138], "seq": [14, 16, 23, 24, 25, 27, 40, 43, 45, 46, 47, 57, 58, 59, 63, 87, 88, 89, 90, 91, 92, 97, 98, 100, 103, 104, 112, 113, 115, 117, 124, 137], "The": [14, 23, 24, 25, 27, 29, 31, 32, 33, 34, 38, 43, 45, 46, 47, 51, 53, 55, 56, 57, 58, 59, 60, 61, 65, 69, 70, 73, 75, 76, 77, 88, 89, 92, 93, 94, 95, 97, 98, 100, 101, 102, 103, 106, 108, 111, 112, 113, 114, 120, 122, 123, 124, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 141, 145, 146, 147, 149, 151], "latter": [14, 23, 24, 25, 64, 90, 92, 96, 106, 120, 128, 135, 137], "induc": [14, 23, 24, 114], "progress": [14, 23, 24, 80, 128, 151], "bar": [14, 23, 24, 108, 122, 136, 151], "initi": [15, 19, 53, 96, 108, 128, 131, 133, 141, 145], "unknown": [15, 19, 97], "ad": [15, 19, 23, 24, 25, 38, 45, 46, 47, 51, 53, 55, 79, 92, 94, 97, 102, 124, 133, 138, 146, 153], "class": [15, 23, 24, 25, 27, 29, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 43, 45, 46, 47, 49, 50, 51, 53, 55, 62, 64, 73, 84, 88, 90, 92, 94, 96, 100, 103, 106, 112, 128, 133, 136, 137, 138, 152], "raw": [16, 51, 64, 100, 110, 124], "row_ord": 17, "data_fram": [17, 101, 106], "2d": [17, 45, 46, 47], "tupl": [17, 23, 24, 25, 27, 31, 32, 33, 43, 45, 46, 47, 50, 53, 61, 90, 97, 98, 102, 128, 131, 138], "top": [17, 31, 32, 33, 42, 51, 60, 61, 62, 63, 64, 66, 76, 94, 103, 120, 122], "level": [17, 31, 32, 33, 42, 60, 61, 62, 64, 103, 106, 108, 123, 135, 145], "common": [17, 53, 70, 129, 141, 151], "label": [17, 23, 24, 25, 43, 45, 46, 47, 51, 53, 89, 102, 106, 120, 131], "each": [17, 23, 24, 25, 27, 31, 32, 33, 43, 45, 46, 47, 51, 53, 64, 65, 67, 90, 92, 94, 96, 97, 106, 114, 131, 133, 134, 135, 138, 144, 145], "order": [17, 23, 24, 25, 27, 34, 40, 43, 45, 46, 47, 50, 51, 53, 62, 90, 94, 96, 110, 124, 130, 133, 138, 141], "pull": [17, 23, 24], "twoddict": 17, "miss": [17, 43, 45, 46, 47, 64, 90, 97], "panda": [17, 51], "datafram": [17, 51], "supersed": 17, "treestr": [18, 130], "tip_nam": [18, 53, 70, 96, 105, 128, 141, 142, 144], "initialis": 18, "tip": [18, 53, 70, 94, 133, 141], "star": 18, "topologi": [18, 53, 94, 96], "indic": [18, 23, 24, 25, 27, 43, 45, 46, 47, 51, 53, 62, 69, 72, 73, 88, 89, 90, 91, 92, 97, 114, 115, 117, 123, 128, 135], "open_": 20, "mode": [20, 21, 36, 37, 39, 51, 62, 64, 68, 72, 73, 74, 85, 87], "rt": 20, "io": [20, 62, 63, 64, 87, 90, 98, 107, 108, 119, 120, 121, 122, 123, 135], "compress": [20, 51, 63, 64], "url": [20, 90, 102, 151], "deleg": [20, 45, 46, 47], "open_url": 20, "protocol": 20, "base_path": 21, "r": [21, 23, 24, 25, 45, 46, 47, 51, 62, 64, 87, 91, 96, 98, 103, 106, 109, 130, 131, 135, 151], "datastoreabc": [21, 35], "datastor": [21, 36, 37, 39, 62, 64], "directori": [21, 62, 64, 87], "open": [21, 40, 42, 51, 65, 87, 102, 127, 130, 138, 145], "w": [21, 23, 24, 25, 43, 45, 46, 47, 62, 64, 68, 91, 96, 98, 103, 109, 130], "arg": [23, 24, 27, 31, 32, 33, 36, 37, 38, 39, 45, 46, 47, 53, 55, 87], "annotation_db": [23, 24, 25, 42, 45, 46, 47, 92, 97], "num_seq": [23, 24, 25], "posit": [23, 24, 25, 29, 34, 40, 43, 45, 46, 47, 51, 53, 60, 61, 62, 65, 73, 75, 92, 115, 123, 124, 128, 129, 131, 137, 145], "iter": [23, 24, 25, 29, 31, 32, 33, 45, 46, 47, 50, 51, 53, 64, 94, 133], "over": [23, 24, 25, 50, 51, 53, 65, 97, 108, 114, 123, 128, 131, 138, 145, 151], "method": [23, 24, 25, 27, 29, 31, 32, 33, 34, 35, 36, 37, 39, 40, 43, 45, 46, 47, 49, 50, 51, 53, 55, 62, 64, 69, 76, 88, 90, 92, 94, 96, 102, 103, 106, 107, 108, 111, 112, 113, 114, 124, 128, 129, 133, 134, 135, 138, 140, 141], "gapped_by_map": [23, 45, 46, 47], "add_featur": [23, 25, 31, 32, 33, 45, 46, 47, 89, 90, 92], "biotyp": [23, 25, 29, 31, 32, 33, 45, 46, 47, 89, 90], "span": [23, 25, 29, 31, 32, 33, 40, 45, 46, 47, 89, 90, 92], "parent_id": [23, 25, 31, 32, 33, 45, 46, 47, 92], "strand": [23, 24, 25, 31, 32, 33, 43, 45, 46, 47, 78, 92, 96, 97], "on_align": [23, 31, 32, 33, 45, 46, 47, 92, 97], "itself": [23, 25, 27, 34, 45, 46, 47, 90, 106, 133], "incompat": 23, "parent": [23, 25, 29, 31, 32, 33, 35, 45, 46, 47, 53, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 96, 101, 106, 128, 130, 131, 133, 134, 140, 141, 142, 143], "biolog": [23, 25, 31, 32, 33, 45, 46, 47, 89, 92, 97, 131, 132, 152], "g": [23, 24, 25, 27, 34, 43, 45, 46, 47, 51, 53, 55, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 88, 90, 91, 93, 96, 97, 98, 100, 103, 105, 106, 109, 116, 117, 124, 128, 129, 130, 131, 134, 135, 140, 141, 142, 143, 144, 151], "cd": [23, 25, 57, 58, 59, 62, 92, 97, 108, 110, 112, 113, 117], "plu": [23, 25, 51, 62, 89, 97, 141], "coordin": [23, 24, 25, 29, 45, 46, 47, 92, 123], "set": [23, 24, 25, 27, 40, 43, 45, 46, 47, 50, 51, 53, 61, 68, 69, 70, 72, 74, 75, 77, 78, 87, 90, 92, 97, 98, 100, 105, 114, 123, 124, 125, 126, 127, 128, 130, 131, 135, 136, 137, 138, 140, 141], "rais": [23, 24, 25, 27, 29, 43, 45, 46, 47, 50, 53, 57, 58, 62, 87, 96, 98, 107, 108, 135], "valueerror": [23, 24, 25, 45, 47, 53, 57, 58], "add_from_ref_aln": [23, 24, 90], "ref_aln": [23, 24, 90], "before_nam": [23, 24, 25, 90], "after_nam": [23, 24, 25, 90], "insert": [23, 24, 25, 53, 133], "": [23, 24, 25, 40, 45, 46, 47, 50, 51, 53, 55, 59, 72, 74, 76, 77, 78, 79, 87, 88, 89, 91, 92, 96, 97, 98, 99, 100, 101, 102, 103, 106, 109, 116, 117, 119, 124, 127, 128, 130, 131, 133, 134, 137, 138, 140, 141, 142, 144, 145, 151, 152], "self": [23, 24, 25, 27, 29, 31, 32, 33, 34, 40, 43, 45, 46, 47, 51, 53, 87, 92, 98, 107, 108], "base": [23, 24, 25, 27, 40, 43, 45, 46, 47, 50, 53, 63, 80, 92, 97, 106, 108, 124, 129, 135, 151, 153], "refer": [23, 24, 25, 36, 37, 39, 88, 92, 96, 97, 100, 105, 106, 110, 131, 151], "0": [23, 24, 25, 27, 34, 40, 45, 46, 47, 51, 53, 57, 58, 59, 62, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 100, 101, 103, 104, 105, 106, 108, 114, 116, 117, 120, 121, 123, 124, 125, 126, 127, 128, 129, 130, 131, 133, 134, 135, 137, 138, 139, 140, 141, 142, 143, 144], "By": [23, 24, 25, 62, 77, 78, 100, 114, 128, 134], "append": [23, 24, 25, 51, 53, 64, 97, 108, 133], "end": [23, 24, 25, 31, 32, 33, 36, 39, 45, 46, 47, 51, 53, 64, 90, 92, 97, 106, 120, 131, 135, 138], "chang": [23, 24, 25, 27, 34, 40, 43, 53, 62, 69, 75, 90, 92, 96, 103, 105, 112, 122, 128, 131, 138, 145, 147, 149, 151], "seri": [23, 24, 45, 46, 47, 50, 51, 64, 94, 97, 102, 135], "new": [23, 24, 25, 27, 29, 31, 32, 33, 34, 43, 45, 46, 47, 50, 51, 53, 92, 97, 102, 105, 128, 133, 134, 139, 145, 149, 151], "structur": [23, 24, 53, 96, 149, 151], "ref_nam": [23, 24, 25], "befor": [23, 24, 25, 43, 53, 112, 128, 129, 144], "both": [23, 24, 25, 45, 46, 47, 51, 53, 84, 87, 88, 90, 92, 94, 97, 98, 100, 117, 138, 141], "exampl": [23, 24, 27, 31, 32, 33, 34, 42, 45, 46, 47, 57, 58, 64, 67, 70, 72, 74, 75, 87, 90, 91, 92, 96, 98, 100, 101, 102, 103, 105, 106, 108, 117, 124, 125, 126, 127, 128, 129, 130, 131, 132, 134, 135, 136, 137, 138, 139, 141, 143, 144, 146, 149, 151], "aln1": [23, 24, 97, 129, 139, 144], "ac": [23, 24, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 91, 96, 143], "defghi": [23, 24], "seq1": [23, 24, 25, 90, 92, 95, 97, 100, 103], "xxxxxx": [23, 24], "xx": [23, 24], "seq2": [23, 24, 25, 90, 95, 97, 100], "yyyi": [23, 24], "yyyyi": [23, 24], "seq3": [23, 24, 90], "aln2": [23, 24, 97, 129, 139, 144], "acdefghi": [23, 24], "kl": [23, 24], "mnpr": [23, 24], "seqx": [23, 24], "klacmnpr": [23, 24], "seqi": [23, 24], "seqz": [23, 24], "acmnpr": [23, 24], "add_seq": [23, 24, 25, 90], "coerceabl": [23, 24, 25], "alignment_qu": [23, 24], "app_nam": [23, 24], "ic_scor": [23, 24], "comput": [23, 24, 25, 31, 32, 33, 51, 53, 65, 96, 102, 108, 111, 115, 127, 128, 129, 131, 132, 137, 138, 145, 146, 152, 153], "qualiti": [23, 24, 145], "score": [23, 24, 25, 45, 46, 47, 53, 92, 105, 138], "calcul": [23, 24, 25, 45, 46, 47, 53, 87, 89, 96, 125, 126, 131, 132, 134, 135, 137, 138, 140], "cogent3_scor": [23, 24], "sp_score": [23, 24], "app_help": [23, 24, 61, 62], "notcomplet": [23, 24, 34, 39, 62, 64], "could": [23, 24, 43, 45, 46, 47, 57, 58, 62, 64, 90, 92, 97, 106, 113, 129, 133, 135, 138, 141], "annotate_from_gff": [23, 25, 45, 46, 47, 97], "f": [23, 24, 25, 40, 45, 46, 47, 50, 62, 64, 87, 91, 96, 98, 100, 103, 105, 107, 108, 109, 127, 130, 133, 134, 135, 138], "seq_id": [23, 25, 97], "copi": [23, 24, 25, 31, 32, 33, 45, 46, 47, 53, 90, 92, 148], "gff": [23, 25, 31, 33, 45, 46, 47, 110], "seq_nam": [23, 24, 25], "doe": [23, 24, 25, 34, 43, 45, 46, 47, 50, 53, 56, 77, 78, 87, 90, 92, 97, 101, 106], "offset": [23, 25, 45, 46, 47, 97], "directli": [23, 24, 25, 27, 43, 53, 97, 100, 101, 106, 109, 124, 128], "annotation_offset": [23, 25, 45, 46, 47, 97], "properti": [23, 24, 25, 29, 31, 32, 33, 35, 36, 37, 39, 40, 45, 46, 47, 50, 51, 53, 64, 68, 89, 92, 96, 108, 128, 131, 133], "apply_pssm": [23, 24, 25], "pssm": [23, 24, 25], "background": [23, 24, 25, 75, 128, 129], "pseudocount": [23, 24, 25, 90], "ui": [23, 24, 25], "profil": [23, 24, 25, 27, 96], "jaspar": [23, 24, 25, 110, 116], "cisbp": [23, 24, 25], "matrix": [23, 24, 25, 45, 46, 47, 53, 67, 96, 105, 106, 114, 125, 126, 127, 130, 138], "adjust": [23, 24, 25, 43, 45, 46, 47, 67, 77, 96, 124, 131, 138], "zero": [23, 24, 25, 90], "numpi": [23, 24, 25, 50, 51, 53, 90, 108, 128, 131, 137], "arrai": [23, 24, 25, 27, 43, 50, 51, 53, 90, 92, 108, 128, 129, 131, 137], "log2": [23, 24, 25], "everi": [23, 24, 25, 43, 45, 46, 47, 53, 57, 58, 64, 92, 101, 105, 106, 138], "coevolut": [23, 24, 129], "nmi": [23, 24, 111, 129], "segment": [23, 24, 25, 45, 46, 47, 97, 112, 137], "drawabl": [23, 24, 25, 45, 46, 47, 111, 112, 113, 114], "perform": [23, 24, 43, 51, 53, 62, 63, 76, 83, 90, 95, 96, 105, 106, 107, 108, 132, 134, 135, 137], "pairwis": [23, 24, 25, 93, 125, 126, 132, 138], "measur": [23, 24, 53, 84, 94, 111, 153], "metric": [23, 24, 25, 53, 66, 94, 137], "normal": [23, 24, 25, 45, 46, 47, 51], "mutual": [23, 24, 111, 129], "inform": [23, 24, 34, 53, 61, 62, 64, 70, 87, 92, 95, 97, 100, 111, 116, 129, 137], "valid": [23, 24, 25, 27, 36, 37, 39, 43, 45, 46, 47, 51, 53, 64, 79, 96, 97, 106, 108, 122, 135], "choic": [23, 24, 25], "rmi": [23, 24, 129], "resampl": [23, 24, 94, 123, 137], "mi": [23, 24, 129], "start": [23, 24, 31, 32, 33, 40, 45, 46, 47, 51, 53, 62, 90, 92, 97, 98, 106, 128, 129, 131, 134, 135, 137, 138, 139, 141], "pair": [23, 24, 25, 43, 45, 46, 47, 50, 53, 67, 90, 97, 103, 105, 106, 129], "within": [23, 24, 31, 32, 33, 45, 46, 47, 51, 53, 64, 92, 96, 106, 108, 112, 117, 128, 131, 135, 146, 152], "examin": [23, 24, 64, 70], "result": [23, 24, 25, 27, 34, 36, 37, 39, 43, 45, 46, 47, 51, 53, 57, 61, 62, 64, 65, 66, 67, 69, 70, 72, 73, 74, 75, 76, 77, 78, 88, 90, 97, 105, 106, 113, 114, 124, 128, 129, 131, 133, 134, 135, 137, 138, 140, 144], "capabl": [23, 24, 84, 90, 96, 146, 149, 151], "plot": [23, 24, 25, 45, 46, 47, 53, 115, 134, 147], "box": [23, 24, 111, 116], "heatmap": [23, 24], "violin": [23, 24], "show": [23, 24, 61, 65, 66, 70, 76, 90, 92, 93, 96, 97, 100, 105, 111, 112, 113, 114, 115, 116, 117, 119, 120, 121, 122, 128, 141, 146], "dictarrai": [23, 24, 65, 96, 128, 131], "lower": [23, 24, 69, 71, 96, 108, 128, 130, 131], "triangular": [23, 24], "upper": [23, 24, 69, 71, 88, 108, 128, 131], "element": [23, 24, 25, 27, 43, 45, 46, 47, 51, 64, 67, 88, 97, 102, 135], "estim": [23, 24, 25, 69, 73, 77, 78, 93, 94, 108, 111, 128, 132, 134, 136, 138, 140], "reason": [23, 24, 45, 46, 47, 87, 138], "nan": [23, 24, 129], "deep": [23, 24, 25], "copy_annot": [23, 25, 45, 46, 47, 97], "seq_db": [23, 25, 45, 46, 47], "attach": [23, 25, 45, 46, 47, 134], "count_gaps_per_po": [23, 24], "include_ambigu": [23, 24, 25, 45, 46, 47, 90], "count": [23, 24, 25, 27, 31, 32, 33, 43, 45, 46, 47, 51, 53, 92, 128], "count_gaps_per_seq": [23, 24, 114], "induced_bi": [23, 24], "consid": [23, 24, 27, 53, 70, 96, 97, 112, 135, 137, 138, 141], "via": [23, 24, 34, 68, 69, 90, 103, 106, 129, 149, 151], "motif_length": [23, 24, 25, 43, 45, 46, 47, 60, 61, 78, 90, 96, 111], "allow_gap": [23, 24, 25, 29, 45, 46, 47, 97], "exclude_unobserv": [23, 24, 25, 45, 46, 47], "motif": [23, 24, 25, 27, 43, 45, 46, 47, 66, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 128, 130, 131, 134, 137, 140, 141, 142, 143, 144, 149, 151], "No": [23, 24, 25, 45, 46, 47, 87, 116, 149, 151], "expans": [23, 24, 25, 45, 46, 47], "those": [23, 24, 25, 31, 32, 33, 45, 46, 47, 51, 57, 62, 64, 65, 75, 90, 96, 100, 101, 106, 124, 128, 131, 144, 145], "attempt": [23, 24, 25, 45, 46, 47, 51, 96, 133], "unobserv": [23, 24, 25, 45, 46, 47, 67], "combin": [23, 24, 25, 34, 45, 46, 47, 51, 62, 79, 97, 102, 107, 108, 137], "exclud": [23, 24, 25, 27, 45, 46, 47, 51, 53, 61, 63, 90, 129], "overlap": [23, 24, 25, 29, 34, 45, 46, 47, 53, 61, 62, 90, 97, 119], "counts_per_po": [23, 24], "alert": [23, 24, 25], "warn": [23, 24, 25, 43, 45, 46, 47, 53, 96, 147], "trim": [23, 24, 45, 47, 98], "produc": [23, 24, 27, 34, 62, 64, 87, 128, 135, 145], "counts_per_seq": [23, 24, 25], "canon": [23, 24, 45, 46, 47, 113], "motifcountsarrai": [23, 24, 25], "deepcopi": [23, 24, 25, 53], "reduc": [23, 24, 25, 33, 128], "current": [23, 24, 25, 34, 40, 45, 46, 47, 51, 53, 64, 67, 75, 106, 128, 129, 138], "interv": [23, 24, 25, 45, 46, 47, 108], "also": [23, 24, 25, 34, 50, 53, 62, 64, 67, 69, 84, 88, 89, 90, 92, 94, 95, 96, 97, 100, 101, 103, 105, 106, 107, 108, 116, 127, 128, 129, 131, 135, 137, 138, 141, 149, 151, 152], "drop": [23, 24, 25, 36, 39, 63, 138], "default_gap": [23, 24], "degap": [23, 24, 25, 43, 45, 46, 47, 89, 90], "distance_matrix": [23, 24, 25, 88, 94, 95], "calc": [23, 24, 25, 88, 94, 95, 137], "pdist": [23, 24, 25, 88, 95], "drop_invalid": [23, 24], "distanc": [23, 24, 25, 45, 46, 47, 53, 84, 93, 106, 125, 126, 132, 133, 138], "For": [23, 24, 25, 27, 34, 45, 46, 47, 53, 58, 62, 64, 66, 69, 75, 87, 90, 95, 97, 98, 101, 103, 106, 124, 128, 131, 133, 135, 138, 143, 149, 151], "evolv": [23, 24, 72, 75, 89, 93, 94, 95, 96, 125, 126, 127, 128, 129, 130, 134, 136, 138, 139, 140, 141, 142, 143, 144, 149, 151], "fast_dist": [23, 24, 95, 138], "available_dist": [23, 24, 95], "control": [23, 24, 53, 69, 106, 120, 123, 130, 134, 135, 140], "displai": [23, 24, 25, 45, 46, 47, 51, 62, 64, 68, 69, 70, 71, 73, 75, 77, 78, 84, 92, 94, 96, 101, 116, 117, 119, 123, 128, 133, 138, 140, 141, 144, 151], "arithmeticerror": [23, 24, 96], "observ": [23, 24, 90, 106, 128, 134, 136, 140], "dotplot": [23, 24, 25], "name1": [23, 24, 25, 53, 112, 113], "name2": [23, 24, 25, 53, 112, 113], "window": [23, 24, 25, 45, 46, 47, 112, 115, 137], "20": [23, 24, 25, 64, 65, 67, 68, 70, 71, 72, 73, 74, 75, 76, 77, 78, 96, 106, 114, 116, 128, 131, 135, 137], "threshold": [23, 24, 25, 112, 123], "k": [23, 24, 25, 45, 46, 47, 50, 91, 94, 96, 103, 107, 108, 109, 130, 138, 149, 151], "min_gap": [23, 24, 25], "500": [23, 24, 25, 51, 65, 66, 70, 76, 114, 115, 116, 123, 131], "rc": [23, 24, 25, 43, 45, 46, 47, 89, 97, 112], "random": [23, 24, 25, 43, 45, 46, 47, 51, 53, 136, 137], "chosen": [23, 24, 25, 92, 112], "made": [23, 24, 25, 43, 45, 46, 47, 53, 103, 137, 145, 151], "mer": [23, 24, 25, 45, 46, 47, 149, 151], "size": [23, 24, 25, 27, 61, 112, 135, 137, 138], "comparison": [23, 24, 25], "ident": [23, 24, 25, 45, 46, 47, 53, 57, 90, 131, 136], "break": [23, 24, 25, 90, 106, 134], "larger": [23, 24, 25, 45, 46, 47, 135, 138], "increas": [23, 24, 25, 135, 141], "speed": [23, 24, 25, 27, 72, 74, 96, 111], "join": [23, 24, 25, 51, 90, 93, 132], "adjac": [23, 24, 25, 90, 112], "figur": [23, 24, 25, 45, 46, 47, 97, 107, 108, 112, 145], "height": [23, 24, 25, 53, 65, 66, 70, 76, 114, 115, 116, 117, 119, 120, 121, 122, 123], "ratio": [23, 24, 25, 68, 72, 77, 93, 101, 106, 128, 131, 134, 136, 139, 140, 141, 144], "len": [23, 24, 25, 27, 64, 89, 90, 92, 97, 108, 135, 137, 138, 144], "revers": [23, 24, 25, 43, 45, 46, 47, 51, 67, 90, 92, 96, 97, 128], "compliment": [23, 24, 25], "nucleic": [23, 24, 25, 27, 45, 46, 47, 102], "acid": [23, 24, 25, 27, 40, 45, 46, 47, 59, 64, 96, 100, 102, 109, 124, 129, 130], "annotateddraw": [23, 24, 25, 113], "entropy_per_po": [23, 24], "shannon": [23, 24, 25], "entropi": [23, 24, 25, 115], "entropy_per_seq": [23, 24, 25], "avoid": [23, 24, 25, 43], "unnecessari": [23, 24, 25, 101, 106], "filter": [23, 24, 51, 63, 97, 101], "predic": [23, 24, 131], "drop_remaind": [23, 24], "callback": [23, 24, 25, 45, 46, 47, 51, 101, 106], "take": [23, 24, 25, 27, 43, 45, 46, 47, 51, 62, 65, 83, 90, 96, 106, 116, 130, 135, 136, 138], "split": [23, 24, 61, 92, 97, 100, 108, 129, 133, 135, 139, 144], "3": [23, 24, 25, 45, 46, 47, 53, 57, 62, 64, 65, 66, 67, 68, 70, 71, 72, 73, 74, 75, 76, 77, 78, 87, 89, 90, 91, 92, 93, 94, 96, 97, 98, 100, 101, 103, 104, 105, 106, 107, 108, 109, 111, 114, 116, 120, 124, 128, 129, 131, 133, 134, 135, 137, 138, 139, 140, 141, 143, 144, 151], "codon": [23, 24, 25, 27, 40, 45, 47, 59, 62, 63, 64, 72, 74, 78, 85, 109, 124, 132, 134, 141, 153], "modulo": [23, 24], "allow": [23, 24, 25, 34, 43, 45, 46, 47, 53, 60, 62, 90, 92, 94, 96, 98, 100, 101, 103, 106, 108, 131, 132], "termin": [23, 24, 25, 45, 46, 47, 53, 63, 64, 98, 105], "gap_char": [23, 24], "keep": [23, 24, 29, 53, 101, 106, 128, 138], "get_ambiguous_posit": [23, 24, 25], "char": [23, 24, 25, 43, 45, 46, 47], "likelihood": [23, 24, 25, 27, 53, 63, 65, 66, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 94, 105, 122, 128, 130, 131, 132, 134, 136, 140, 141, 142], "get_degapped_relative_to": [23, 24, 90], "remov": [23, 24, 25, 29, 39, 45, 46, 47, 50, 53, 63, 100, 105, 133], "given": [23, 24, 45, 46, 47, 50, 51, 68, 90, 97, 131, 137, 151], "alwai": [23, 24, 25, 27, 34, 40, 43, 45, 46, 47, 53, 62, 90, 129, 135, 149, 151], "get_draw": [23, 29, 45, 46, 47, 97, 117], "600": [23, 45, 46, 47, 65, 97, 113, 119, 120, 121, 122], "vertic": [23, 24, 45, 46, 47, 97], "get_featur": [23, 25, 45, 46, 47, 97], "pixel": [23, 24, 45, 46, 47, 123], "rotat": [23, 45, 46, 47], "allow_parti": [23, 24, 25, 31, 32, 33, 45, 46, 47], "yield": [23, 24, 25, 31, 32, 33, 45, 46, 47, 92, 97, 129], "search": [23, 25, 45, 46, 47, 92, 94, 97, 149, 151], "gene": [23, 25, 31, 32, 33, 45, 46, 47, 72, 97, 117, 135, 153], "queri": [23, 24, 43, 102, 113, 138, 149, 151, 153], "ignor": [23, 24, 25, 39, 45, 46, 47, 51, 53, 64, 96, 106], "partial": [23, 25, 90, 98], "deal": [23, 25, 45, 46, 47, 135], "consist": [23, 25, 34, 45, 46, 47, 57, 59, 65, 106, 135, 144, 149], "orient": [23, 25, 45, 46, 47, 53, 105], "irrespect": [23, 25, 45, 46, 47], "get_gap_arrai": [23, 24], "get_gapped_seq": [23, 24, 90], "seqnam": [23, 24, 25], "arraysequ": [23, 43], "get_identical_set": [23, 24, 25], "mask_degen": [23, 24, 25], "degener": [23, 24, 25, 27, 43, 45, 46, 47, 61, 102], "get_length": [23, 24, 25], "get_motif_prob": [23, 24, 25, 90, 96], "alphabet": [23, 24, 25, 42, 43, 45, 46, 47, 53, 90, 96, 98, 102, 103, 129], "dictionari": [23, 24, 25, 27, 43, 51, 53, 69, 70, 90, 92, 106, 128, 131], "prob": [23, 24, 25], "averag": [23, 24, 25, 53, 77, 78, 128], "frequenc": [23, 24, 25, 43, 45, 46, 47, 73, 77, 78, 90, 96, 128, 129, 130], "across": [23, 24, 25, 31, 32, 33, 69, 127, 128, 131, 135, 141, 144], "resolv": [23, 24, 25, 98, 103], "get_position_indic": [23, 24], "nativ": [23, 24, 138], "negat": [23, 24, 25, 49, 51, 90, 101, 106], "col": [23, 24, 51, 90], "boolean": [23, 24, 51], "get_projected_featur": 23, "project": [23, 149], "onto": [23, 97, 138], "bound": [23, 34, 35, 53, 65, 92, 97, 108], "get_seq": [23, 24, 25, 90, 97], "ungap": [23, 24, 43, 45, 46, 47, 90], "get_seq_indic": [23, 24, 25], "get_similar": [23, 24, 25], "target": [23, 24, 25, 53, 98, 133, 146], "min_similar": [23, 24, 25], "max_similar": [23, 24, 25], "util": [23, 24, 25, 45, 46, 47, 55, 90, 92, 94, 96, 101, 106, 107], "transform": [23, 24, 25, 45, 46, 47], "for_seq": [23, 24, 25, 45, 46, 47], "similar": [23, 24, 25, 27, 45, 46, 47, 92, 138], "compar": [23, 24, 25, 45, 46, 47, 51, 53, 68, 96, 107, 108, 112, 128, 133, 134, 151], "minimum": [23, 24, 25, 105], "kept": [23, 24, 25, 53, 94, 138], "inclus": [23, 24, 25, 145], "first_seq": [23, 24, 25], "second_seq": [23, 24, 25], "fraction": [23, 24, 25, 45, 46, 47, 51, 53, 63], "rang": [23, 24, 25, 63, 89, 90, 97, 101, 105, 106, 135], "lot": [23, 24, 25, 53, 90], "unbound": [23, 24, 25], "act": [23, 24, 25, 45, 46, 47, 72, 73, 74, 75, 76, 77, 90, 91, 96, 98, 106, 109, 128], "frac_same_gap": [23, 24, 25, 45, 46, 47], "whole": [23, 24, 25], "frequent": [23, 24, 25, 90, 100], "elimin": [23, 24, 25, 63, 149], "real": [23, 24, 25, 137], "extract": [23, 24, 25, 62, 140], "rnasequ": [23, 24, 25, 89], "depend": [23, 24, 25, 43, 53, 147, 151], "fail": [23, 24, 25, 29, 43, 87, 98, 135, 140], "get_transl": [23, 24, 25, 45, 47, 89, 93, 98, 104, 111, 116, 124], "gc": [23, 24, 25, 40, 45, 47, 62, 64, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 90, 91, 93, 96, 98, 109, 124, 128, 134], "incomplete_ok": [23, 24, 25, 45, 47, 98, 116], "include_stop": [23, 24, 25, 40, 45, 47, 98], "trim_stop": [23, 24, 25, 45, 47, 98], "translat": [23, 24, 25, 40, 45, 47, 59, 64, 93, 103, 104, 124], "core": [23, 24, 25, 45, 46, 47, 75, 89, 90, 92, 93, 97, 98, 100, 103, 104, 105, 124, 128, 129, 133, 135], "genetic_cod": [23, 24, 25, 42], "available_cod": [23, 24, 25, 42, 109], "mix": [23, 24, 25, 45, 47], "nucleotid": [23, 24, 25, 40, 45, 47, 57, 63, 67, 68, 95, 100, 117, 128, 131, 142, 143, 153], "stop": [23, 24, 25, 40, 45, 46, 47, 63, 64, 96, 97, 109], "thei": [23, 24, 25, 27, 34, 53, 57, 59, 62, 64, 69, 79, 90, 92, 95, 97, 98, 116, 124, 131, 133, 138, 141, 146, 151], "relat": [23, 24, 25, 73, 90, 92, 133, 134, 138, 151, 153], "has_terminal_stop": [23, 24, 25, 45, 47], "input": [23, 24, 25, 27, 34, 43, 45, 46, 47, 61, 62, 63, 64, 79, 87, 88, 94, 100, 124, 129, 135], "get_cod": [23, 24, 25, 40, 42, 45, 47, 98, 104], "except": [23, 24, 25, 27, 29, 34, 45, 47, 53, 87, 96, 97, 98, 107, 108, 116, 135], "divis": [23, 24, 25, 45, 47, 64, 90, 109], "deprec": [23, 24, 25], "information_plot": [23, 24, 115], "stat": [23, 24, 62, 66, 67, 75, 94, 96, 101, 106, 110, 115, 128, 131, 134, 137, 140, 144], "median": [23, 24, 93, 115], "include_gap": [23, 24, 43, 115], "smooth": [23, 24], "sqrt": [23, 24, 53, 135], "mean": [23, 24, 45, 46, 47, 62, 64, 90, 92, 96, 97, 101, 105, 106, 124, 128, 131, 134, 137, 138, 141], "summari": [23, 24, 62, 64, 69, 102], "statist": [23, 24, 51, 53, 62, 69, 72, 73, 74, 96, 102, 106, 108, 127, 128, 129, 130, 131, 134, 136, 138, 140, 144, 151], "shown": [23, 24, 62, 64, 71, 96, 97, 98, 104, 114, 135], "y": [23, 24, 25, 27, 40, 45, 46, 47, 90, 91, 96, 97, 101, 103, 106, 108, 109, 123, 130, 131], "axi": [23, 24], "is_arrai": [23, 24, 25], "array_seq": [23, 24, 25], "is_rag": [23, 24, 25], "iter_posit": [23, 24, 90], "pos_ord": [23, 24, 25], "let": [23, 24, 25, 88, 92, 97, 133, 138], "you": [23, 24, 25, 27, 34, 43, 45, 46, 47, 53, 57, 58, 60, 61, 64, 65, 67, 68, 82, 84, 87, 88, 89, 90, 91, 92, 96, 97, 98, 100, 101, 106, 107, 108, 110, 117, 119, 124, 128, 129, 135, 136, 138, 141, 145, 146, 147, 149, 151, 153], "rearrang": [23, 24], "want": [23, 24, 34, 43, 45, 46, 47, 53, 60, 61, 62, 67, 90, 92, 96, 97, 100, 101, 106, 108, 117, 124, 128, 131, 133, 136, 137, 139, 144, 153], "individu": [23, 24, 61, 64, 69, 96, 99, 101, 106, 135, 146, 151], "map": [23, 24, 25, 29, 40, 43, 45, 46, 47, 50, 53, 69, 97, 103, 132], "Will": [23, 24, 25, 51, 53], "indexerror": [23, 24], "exce": [23, 24, 25], "happen": [23, 24, 71], "rag": [23, 24], "seq_len": [23, 24], "iter_select": [23, 24, 25], "seq_ord": [23, 24, 25], "select": [23, 24, 25, 31, 32, 33, 51, 64, 69, 73, 74, 75, 81, 96, 97, 99, 112, 135, 138, 141, 153], "subset": [23, 24, 25, 27, 31, 32, 33, 45, 46, 47, 53, 92, 97, 101, 105, 106, 141, 149, 151], "along": [23, 24, 25, 53, 60, 97], "down": [23, 24, 25, 117, 135], "transpos": [23, 24, 25, 51], "j": [23, 24, 25, 27, 45, 46, 47, 96, 151], "possibli": [23, 24, 25, 53], "iteritem": [23, 24, 25], "built": [23, 24, 25, 80, 84, 116], "iter_seq": [23, 24, 25], "give": [23, 24, 25, 53, 64, 137, 145], "keyerror": [23, 24, 25, 27, 43, 45, 46, 47, 50, 62, 90, 107, 108], "been": [23, 24, 25, 53, 69, 73, 92, 96, 97, 113, 128, 138, 141, 146, 149, 151], "delet": [23, 24, 25, 43, 45, 46, 47, 53, 133], "named_seq": [23, 24, 25], "accept": [23, 24, 25, 61, 68, 92, 108], "iupac_consensu": [23, 24], "iupac": [23, 24, 45, 46, 47, 109], "consensu": [23, 24, 94], "majority_consensu": [23, 24], "most": [23, 24, 25, 45, 46, 47, 53, 62, 77, 84, 87, 90, 96, 98, 105, 107, 108, 141, 149], "item": [23, 24, 27, 43, 45, 46, 47, 50, 53, 105, 107, 108, 115, 128], "make_featur": [23, 25, 45, 46, 47], "featuredatatyp": [23, 25, 31, 32, 33, 45, 46, 47], "creat": [23, 24, 25, 29, 34, 40, 43, 45, 46, 47, 60, 61, 62, 70, 87, 88, 96, 98, 100, 102, 113, 125, 126, 127, 128, 129, 130, 133, 135, 136, 137, 138, 139, 140, 143, 144, 145], "necessari": [23, 25, 53, 92, 128, 131, 133], "rto": [23, 25], "To": [23, 24, 25, 31, 32, 33, 45, 46, 47, 64, 70, 90, 92, 96, 97, 100, 101, 106, 108, 123, 128, 129, 131, 133, 135, 137, 138, 141, 144, 146], "matching_ref": [23, 24], "gap_fract": [23, 24, 34, 90], "gap_run": [23, 24], "well": [23, 24, 45, 46, 47, 96, 110, 131, 133], "templat": [23, 24, 51], "consecut": [23, 24, 25], "toler": [23, 24, 96, 128, 129], "rel": [23, 24, 45, 46, 47, 53, 123, 128, 132, 136], "b": [23, 24, 25, 53, 88, 90, 94, 96, 101, 103, 105, 106, 107, 108, 129, 133, 143, 151], "d": [23, 24, 25, 43, 45, 46, 47, 50, 91, 95, 96, 100, 103, 105, 106, 107, 108, 109, 125, 126, 127, 130, 133, 136, 143, 151], "h": [23, 24, 25, 45, 46, 47, 53, 64, 91, 96, 98, 103, 105, 106, 109, 130, 151], "l": [23, 24, 25, 45, 46, 47, 51, 91, 94, 96, 108, 109, 116, 130, 138], "m": [23, 24, 25, 45, 46, 47, 62, 64, 72, 73, 74, 87, 90, 91, 92, 96, 97, 98, 103, 108, 109, 124, 128, 130, 135, 138, 141, 151], "n": [23, 24, 25, 27, 45, 46, 47, 53, 77, 90, 91, 96, 103, 105, 109, 124, 128, 130, 133, 135, 137], "o": [23, 24, 25, 53, 108, 112, 135], "p": [23, 24, 25, 45, 46, 47, 59, 68, 69, 91, 96, 104, 109, 130, 134, 136, 137, 140, 144, 151], "q": [23, 24, 25, 45, 46, 47, 69, 91, 96, 109, 130], "t": [23, 24, 25, 27, 34, 39, 43, 45, 46, 47, 53, 57, 58, 62, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 88, 90, 91, 93, 96, 97, 98, 100, 101, 103, 105, 106, 108, 109, 116, 117, 124, 128, 130, 131, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 147], "u": [23, 24, 25, 27, 45, 46, 47, 62, 64, 90, 91, 103, 133, 145], "v": [23, 24, 25, 45, 46, 47, 50, 59, 91, 96, 98, 103, 109, 130, 151], "x": [23, 24, 25, 40, 57, 58, 59, 62, 63, 64, 66, 67, 68, 69, 71, 75, 76, 77, 78, 88, 90, 92, 93, 95, 96, 97, 98, 100, 101, 103, 106, 108, 109, 123, 124, 129, 139, 143, 144], "z": [23, 24, 25, 77, 96, 129, 151], "no_degener": [23, 24, 90, 111], "unit": [23, 24, 151], "evolutionari": [23, 24, 53, 62, 63, 84, 90, 95, 128, 131, 141, 153], "omit_bad_seq": [23, 24, 34, 63], "quantil": [23, 24, 34], "introduc": [23, 24, 124], "exceed": [23, 24, 96], "obtain": [23, 24, 90, 93, 108, 131, 136, 138], "cutoff": [23, 24, 129], "than": [23, 24, 25, 34, 38, 51, 53, 62, 90, 92, 95, 96, 100, 108, 124, 131, 133, 134, 135, 144, 145], "omit_gap_po": [23, 24, 90], "allowed_gap_frac": [23, 24, 25], "999999": [23, 24], "proport": [23, 24, 25, 45, 46, 47, 75, 128], "just": [23, 24, 34, 45, 46, 47, 50, 51, 53, 57, 58, 62, 64, 69, 71, 73, 88, 90, 92, 97, 98, 100, 101, 103, 105, 106, 108, 117, 128, 129, 134, 135, 137, 138, 140, 142, 143, 144], "least": [23, 24, 25, 43, 53, 106, 128, 132], "preserv": [23, 24, 25, 29, 45, 47, 51, 53, 90, 124, 133], "6": [23, 24, 25, 57, 58, 59, 62, 63, 64, 65, 67, 68, 70, 71, 72, 73, 74, 75, 76, 89, 90, 95, 101, 103, 105, 106, 108, 109, 128, 131, 134, 137, 139], "strictli": [23, 24], "correspond": [23, 24, 27, 29, 31, 32, 33, 36, 39, 43, 45, 46, 47, 50, 51, 64, 65, 66, 69, 73, 90, 96, 97, 106, 111, 114, 135, 137], "omit_gap_run": [23, 24, 25, 90], "allowed_run": [23, 24, 25], "run": [23, 24, 25, 53, 62, 95, 96, 97, 103, 125, 126, 127, 129, 135, 136, 140], "exactli": [23, 24, 25, 53, 97, 137, 141], "becaus": [23, 24, 25, 27, 53, 62, 69, 71, 72, 74, 90, 95, 96, 97, 106, 124, 128, 131, 137, 138, 145], "test": [23, 24, 25, 43, 45, 46, 47, 51, 53, 76, 90, 106, 110, 111, 125, 129, 131, 132, 133, 136, 138, 139, 141, 144, 151], "trigger": [23, 24, 25], "neg": [23, 24, 25], "still": [23, 24, 25, 149], "through": [23, 24, 25, 27, 84, 90, 133, 145], "omit_gap_seq": [23, 24, 25, 90], "pad_seq": [23, 24, 25], "pad_length": [23, 24, 25], "pad": [23, 24, 25], "max": [23, 24, 25, 53], "less": [23, 24, 25, 90], "probs_per_po": [23, 24], "motiffreqsarrai": [23, 24, 25, 116], "probs_per_seq": [23, 24, 25], "quick_tre": [23, 24], "percent": [23, 24, 45, 46, 47, 57, 59, 90], "bootstrap": [23, 24, 94, 132], "parametr": [23, 24, 75, 94, 128, 132], "replic": [23, 24, 92, 123, 128, 136, 137], "build": [23, 24, 25, 34, 96, 125, 126, 146], "phylogeni": [23, 24, 53], "phylogenet": [23, 24, 53, 125, 133], "weight": [23, 24, 43, 45, 46, 47, 94, 128], "major": [23, 24, 62, 146], "node": [23, 24, 53, 65, 96, 123, 132, 141], "store": [23, 24, 32, 35, 36, 37, 38, 39, 62, 92, 97, 106, 128, 135], "edg": [23, 24, 53, 65, 66, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 94, 96, 101, 106, 119, 125, 126, 128, 130, 131, 134, 138, 140, 142, 143], "param": [23, 24, 53, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 93, 96, 105, 128, 130, 131, 134, 139, 140, 141, 142, 143, 144], "omit": [23, 24, 141], "requir": [23, 24, 34, 69, 79, 88, 90, 92, 95, 106, 112, 129, 131, 135, 137, 138, 141, 142], "complement": [23, 24, 25, 27, 43, 45, 46, 47, 97, 102], "rename_seq": [23, 24, 25, 88], "renam": [23, 24, 25, 53, 110, 133, 149], "replace_seq": [23, 24, 93, 124], "aa_to_codon": [23, 24, 93], "shape": [23, 24, 51, 106], "taken": [23, 24, 138], "more": [23, 24, 34, 38, 45, 46, 47, 51, 62, 69, 83, 90, 92, 95, 96, 97, 100, 116, 128, 133, 137, 140, 141, 145, 146, 149, 151], "gener": [23, 24, 29, 34, 35, 45, 46, 47, 61, 62, 64, 65, 68, 69, 77, 78, 84, 88, 90, 96, 97, 102, 106, 116, 117, 131, 133, 135, 136, 137, 138, 140, 141], "necessarili": [23, 24, 90], "three": [23, 24, 92, 114, 130, 133, 142], "time": [23, 24, 38, 45, 46, 47, 62, 64, 67, 88, 90, 116, 128, 131, 134, 135, 141], "rather": [23, 24, 90, 96, 108, 124], "put": [23, 24, 53, 92], "place": [23, 24, 25, 45, 46, 47, 51, 53, 114, 123, 148], "reverse_compl": [23, 24, 25, 45, 47], "synonym": [23, 24, 25, 72, 96, 128, 141], "sampl": [23, 24, 51, 53, 63, 65, 69, 70, 76, 90, 106, 128, 135, 136, 137, 138, 139, 141, 153], "with_replac": [23, 24], "randint": [23, 24], "mtrand": [23, 24], "randomst": [23, 24], "permut": [23, 24], "flag": [23, 24, 133], "determin": [23, 24, 51, 53, 90, 92, 130, 131], "random_seri": 23, "min": 23, "leav": [23, 24, 138], "seqlogo": [23, 24, 116], "700": [23, 24, 65, 117], "wrap": [23, 24, 25, 45, 46, 47, 53, 88, 97, 116, 149, 151], "vspace": [23, 24, 116], "005": [23, 24, 90], "colour": [23, 24, 45, 46, 47, 116], "logo": [23, 24], "dimens": [23, 24, 51], "total": [23, 24, 53, 90, 92], "custom": [23, 24, 88, 100, 102], "everyth": [23, 24, 45, 46, 47, 66, 75, 100, 128, 147], "ecept": [23, 24], "so": [23, 24, 43, 45, 46, 47, 53, 57, 59, 64, 66, 75, 79, 90, 92, 96, 97, 103, 105, 106, 108, 110, 117, 123, 128, 131, 134, 137, 138, 141, 145], "num_stat": [23, 24], "set_repr_polici": [23, 24, 25, 51, 106], "num_po": [23, 24, 25], "polici": [23, 24, 25, 51], "repr": [23, 24, 25, 51, 68, 88], "repres": [23, 24, 25, 43, 45, 46, 47, 51, 64, 90, 92], "longest": [23, 24, 25], "sliding_window": [23, 24, 45, 46, 47], "step": [23, 24, 45, 46, 47, 64, 87, 90, 93, 94, 128, 131, 133, 135, 138], "success": [23, 24, 94], "strand_symmetri": [23, 24, 25, 45, 46, 47], "symmetri": [23, 24, 25, 45, 47], "take_posit": [23, 24, 90], "altern": [23, 24, 53, 90, 96, 106, 109, 128, 133, 136, 149, 151], "take_positions_if": [23, 24], "take_seq": [23, 24, 25, 90], "old": [23, 24, 25, 51], "take_seqs_if": [23, 24, 25, 90], "to_dict": [23, 24, 25, 29, 50, 51, 90, 106, 138], "to_dna": [23, 24, 25, 45, 47, 89, 90], "to_fasta": [23, 24, 25, 45, 46, 47, 90], "fasta": [23, 24, 25, 45, 46, 47, 57, 58, 59, 62, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 87, 93, 94, 95, 96, 97, 102, 103, 110, 111, 112, 114, 115, 116, 126, 127, 128, 131, 134, 135, 136, 140, 141, 142, 144], "make_seqlabel": [23, 24, 25, 45, 46, 47], "to_html": [23, 24, 45, 46, 47, 51, 106], "name_ord": [23, 24], "60": [23, 24, 45, 46, 47, 57, 58, 59, 65, 90, 93, 96, 97, 100, 116, 117, 124, 137, 143], "color": [23, 24, 43, 45, 46, 47, 70, 106, 120, 122], "font_siz": [23, 24, 43, 45, 46, 47, 51], "12": [23, 24, 43, 45, 46, 47, 51, 65, 73, 75, 88, 90, 97, 98, 101, 105, 106, 109, 131, 134, 137, 141], "font_famili": [23, 24, 43, 45, 46, 47], "lucida": [23, 24, 43, 45, 46, 47], "consol": [23, 24, 43, 45, 46, 47], "html": [23, 24, 45, 46, 47, 51, 75, 128, 135], "embed": [23, 24, 45, 46, 47], "style": [23, 24, 29, 45, 46, 47, 51, 53, 69, 149, 151], "truncat": [23, 24, 43, 45, 46, 47, 57, 58, 59, 64, 75, 90, 93, 96, 97, 100, 117, 124, 128, 143], "affect": [23, 24, 45, 46, 47, 74, 89, 96, 101, 103, 106, 141], "denot": [23, 24, 45, 46, 47, 67], "font": [23, 24, 43, 45, 46, 47], "famili": [23, 24, 45, 46, 47, 96], "jupyt": [23, 24, 45, 46, 47, 64, 69, 96, 118, 135, 146, 152], "notebook": [23, 24, 45, 46, 47, 69, 118, 135, 146, 152], "ipython": [23, 24, 45, 46, 47, 75, 128], "import": [23, 24, 34, 42, 45, 46, 47, 57, 58, 59, 60, 61, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 100, 101, 103, 104, 105, 106, 107, 108, 109, 111, 112, 113, 114, 115, 116, 117, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 149, 151], "aln": [23, 24, 34, 45, 46, 47, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 87, 88, 90, 93, 94, 95, 96, 97, 100, 111, 114, 115, 116, 128, 129, 131, 136, 140, 141, 142, 144], "to_json": [23, 24, 25, 27, 31, 32, 33, 43, 45, 46, 47, 51, 53, 96], "to_moltyp": [23, 24, 25, 45, 46, 47, 90], "to_nexu": [23, 24, 25], "seq_typ": [23, 24, 25], "50": [23, 24, 25, 53, 65, 69, 71, 90, 96, 97, 116, 131, 137], "nexu": [23, 24, 25], "id": [23, 24, 25, 40, 69, 92, 97, 98, 106, 109, 129, 145], "Not": [23, 24, 25, 128], "come": [23, 24, 25, 51, 53], "speci": [23, 24, 25, 100, 105, 129, 133, 135, 142], "concaten": [23, 24, 25, 51, 139], "togeth": [23, 24, 25, 34, 51, 79, 108, 129, 131, 146], "rna": [23, 24, 25, 27, 45, 47, 61, 95, 102, 103], "invalid": [23, 24, 25, 34, 43, 45, 46, 47, 129], "to_phylip": [23, 24, 25, 90], "phylip": [23, 24, 25, 51, 102, 106, 110, 127, 130], "to_pretti": [23, 24], "represent": [23, 24, 40, 69, 90, 92, 96, 138], "pretti": [23, 24, 144], "to_protein": [23, 24, 25, 90], "to_rich_dict": [23, 24, 25, 27, 31, 32, 33, 43, 45, 46, 47, 50, 51, 53], "detail": [23, 24, 25, 51, 61, 62, 69, 79, 90, 96, 97, 145], "content": [23, 24, 25, 51, 64, 92, 101, 106, 116], "to_rna": [23, 24, 25, 45, 47, 89, 90], "to_typ": [23, 24, 90], "convers": [23, 24, 43, 98, 104, 137], "lose": [23, 24], "would": [23, 24, 27, 53, 68, 90, 133, 135, 138, 145, 146], "trim_stop_codon": [23, 24, 25, 45, 47, 63, 90], "variable_posit": [23, 24, 90], "include_gap_motif": [23, 24], "variabl": [23, 24, 96, 115, 135], "index": [23, 24, 27, 40, 43, 45, 46, 47, 50, 51, 53, 64, 88, 90, 137], "with_gaps_from": 23, "overwritten": [23, 64], "with_masked_annot": [23, 45, 46, 47, 97], "mask_char": [23, 45, 46, 47, 97], "shadow": [23, 29, 45, 46, 47], "annot_typ": [23, 45, 46, 47], "region": [23, 45, 46, 47, 101, 106], "mask": [23, 45, 46, 47, 108], "with_modified_termini": [23, 24, 25], "termini": [23, 24, 25], "gapmotif": [23, 24, 25], "correct": [23, 24, 25, 27, 43, 53, 64, 96, 103, 106, 108, 135], "program": [23, 24, 25, 79, 124, 135, 149, 151], "write": [23, 24, 25, 31, 32, 33, 36, 37, 39, 51, 53, 62, 64, 68, 76, 79, 102, 108, 111, 114, 124, 125, 126, 127, 135], "infer": [23, 24, 25, 90, 92, 100, 101, 106], "hold": [24, 27, 40, 45, 46, 47, 90], "dens": 24, "_often_": 24, "might": [24, 45, 46, 47, 53, 96, 137], "some": [24, 27, 45, 46, 47, 50, 53, 62, 64, 69, 75, 84, 89, 90, 93, 100, 108, 116, 128, 129, 135, 137, 138, 141, 145], "larg": [24, 53, 79, 96, 117, 133, 138], "symbol": [24, 27, 43, 45, 46, 47, 129], "64": [24, 40, 65, 78, 96, 137], "tripeptid": 24, "letter": [24, 130], "8000": 24, "_not_": [24, 45, 46, 47], "around": [24, 53, 62], "unpredict": 24, "wrong": 24, "greater": [24, 131, 133, 135], "255": [24, 65, 106], "uint8": [24, 137], "need": [24, 27, 45, 46, 47, 53, 62, 64, 88, 90, 92, 96, 97, 106, 110, 124, 128, 131, 133, 134, 135, 136, 137, 138, 140, 141, 146, 147], "uint16": 24, "65536": 24, "sign": 24, "your": [24, 62, 64, 65, 81, 90, 97, 101, 103, 106, 124, 125, 126, 127, 134, 135, 140, 147, 149, 151, 153], "unless": [24, 34, 51, 64, 67, 98], "love": 24, "miseri": 24, "hard": 24, "debug": 24, "problem": [24, 99, 135, 145, 146], "implement": [24, 27, 34, 40, 43, 45, 46, 47, 53, 75, 84, 95, 128, 135, 137], "usual": [24, 90, 128, 138], "user": [24, 31, 32, 33, 64, 92, 94, 108, 135, 137, 145], "think": [24, 141], "editor": 24, "clustal": 24, "typic": [24, 27, 34, 45, 46, 47, 90, 92, 96, 97, 131], "cut": 24, "terminologi": 24, "view": [24, 50, 69, 129, 134, 140], "longer": [24, 90], "don": [24, 43, 53, 62, 90, 100, 105, 134, 135, 147], "updat": [24, 31, 32, 33, 50], "two": [24, 34, 40, 45, 46, 47, 53, 62, 70, 73, 83, 88, 90, 96, 101, 102, 106, 107, 108, 112, 128, 129, 133, 134, 135, 136, 137, 138, 139, 140, 141, 144], "sync": [24, 97], "sort": [24, 31, 32, 33, 51, 53, 90, 137], "realli": [24, 96], "troubl": 24, "immut": [24, 40, 106], "though": [24, 97], "enforc": [24, 108], "bad": [24, 96, 105, 138], "thing": [24, 88, 97], "sequencetyp": 24, "_input_handl": 24, "input_typ": 24, "input_handl": 24, "_guess_input_typ": 24, "force_same_object": 24, "rebind": 24, "recommend": [24, 27, 96], "cach": 24, "effici": [24, 53, 90, 102, 137], "strip": [24, 43, 45, 46, 47, 53, 102, 105], "them": [24, 45, 46, 47, 51, 59, 64, 79, 92, 110, 124, 128, 129, 131, 135, 138, 139], "primarili": [24, 62, 107, 108], "superclass": 24, "x00": [24, 25, 103], "x01": [24, 25, 103], "x02": [24, 25, 103], "x03": [24, 25, 103], "x04": [24, 25], "x05": [24, 25], "x06": [24, 25], "x07": [24, 25], "x08": [24, 25], "x0b": [24, 25], "x0c": [24, 25], "x0e": [24, 25], "x0f": [24, 25], "x10": [24, 25], "x11": [24, 25], "x12": [24, 25], "x13": [24, 25], "x14": [24, 25], "x15": [24, 25], "x16": [24, 25], "x17": [24, 25], "x18": [24, 25], "x19": [24, 25], "x1a": [24, 25], "x1b": [24, 25], "x1c": [24, 25], "x1d": [24, 25], "x1e": [24, 25], "x1f": [24, 25], "2": [24, 25, 27, 40, 45, 46, 47, 50, 53, 62, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 87, 88, 89, 90, 91, 92, 94, 95, 96, 97, 100, 101, 103, 105, 106, 107, 108, 109, 115, 116, 120, 125, 128, 129, 133, 134, 135, 137, 138, 139, 140, 141, 143, 144, 151], "5": [24, 25, 45, 46, 47, 51, 62, 63, 64, 65, 66, 68, 69, 71, 73, 75, 76, 77, 78, 87, 89, 90, 93, 94, 96, 97, 98, 100, 101, 105, 106, 108, 109, 116, 128, 129, 131, 133, 136, 137, 138, 142, 151], "7": [24, 25, 62, 64, 65, 72, 73, 74, 75, 76, 89, 90, 94, 95, 96, 97, 100, 101, 103, 106, 107, 108, 130, 137, 140], "8": [24, 25, 65, 67, 68, 71, 73, 75, 77, 90, 95, 96, 97, 100, 101, 106, 107, 108, 112, 123, 128, 131, 133, 134, 137, 140, 145, 151], "9": [24, 25, 53, 65, 68, 69, 70, 73, 75, 77, 90, 96, 97, 98, 101, 105, 106, 108, 109, 128, 131, 137, 141, 151], "_": [24, 25, 87, 108, 116], "x7f": [24, 25], "x80": [24, 25], "x81": [24, 25], "x82": [24, 25], "x83": [24, 25], "x84": [24, 25], "x85": [24, 25], "x86": [24, 25], "x87": [24, 25], "x88": [24, 25], "x89": [24, 25], "x8a": [24, 25], "x8b": [24, 25], "x8c": [24, 25], "x8d": [24, 25], "x8e": [24, 25], "x8f": [24, 25], "x90": [24, 25], "x91": [24, 25], "x92": [24, 25], "x93": [24, 25], "x94": [24, 25], "x95": [24, 25], "x96": [24, 25], "x97": [24, 25], "x98": [24, 25], "x99": [24, 25], "x9a": [24, 25], "x9b": [24, 25], "x9c": [24, 25], "x9d": [24, 25], "x9e": [24, 25], "x9f": [24, 25], "xa0": [24, 25], "\u00aa": [24, 25], "xad": [24, 25], "\u00b2": [24, 25], "\u00b3": [24, 25], "\u00b5": [24, 25], "\u00b9": [24, 25], "\u00ba": [24, 25], "\u00bc": [24, 25], "\u00bd": [24, 25], "\u00be": [24, 25], "\u00e0": [24, 25], "\u00e1": [24, 25], "\u00e2": [24, 25], "\u00e3": [24, 25], "\u00e4": [24, 25], "\u00e5": [24, 25], "\u00e6": [24, 25], "\u00e7": [24, 25], "\u00e8": [24, 25], "\u00e9": [24, 25], "\u00ea": [24, 25], "\u00eb": [24, 25], "\u00ec": [24, 25], "\u00ed": [24, 25], "\u00ee": [24, 25], "\u00ef": [24, 25], "\u00f0": [24, 25], "\u00f1": [24, 25], "\u00f2": [24, 25], "\u00f3": [24, 25], "\u00f4": [24, 25], "\u00f5": [24, 25], "\u00f6": [24, 25], "\u00f8": [24, 25], "\u00f9": [24, 25], "\u00fa": [24, 25], "\u00fb": [24, 25], "\u00fc": [24, 25], "\u00fd": [24, 25], "\u00fe": [24, 25], "\u00df": [24, 25], "\u00ff": [24, 25], "what": [24, 34, 43, 61, 62, 65, 87, 102, 117, 131, 135, 138, 141, 146], "wa": [24, 31, 32, 33, 53, 62, 64, 87, 97, 105, 108, 113, 122, 131, 133, 138, 145, 149, 151], "get_sub_align": 24, "po": [24, 43, 45, 46, 47, 90], "invert_seq": 24, "invert_po": 24, "subalign": 24, "_except_": 24, "unlik": [24, 27, 45, 46, 47], "share": [24, 45, 46, 47, 53, 70, 97, 141, 144, 145], "integ": [24, 53, 102, 109, 123, 137], "respect": [24, 45, 46, 47, 131], "conversion_f": 25, "force_same_data": 25, "remove_duplicate_nam": 25, "suppress_named_seq": 25, "associ": [25, 43, 68, 84, 108, 128, 138], "jc69": [25, 78, 95, 96], "approxim": [25, 92, 131], "site": [25, 62, 64, 87, 98, 107, 108, 116, 139], "juke": [25, 78, 96], "cantor": [25, 78, 96], "distancematrix": [25, 88, 138], "jaccard": 25, "coeffici": [25, 53], "were": [25, 27, 55, 96, 97, 113, 124, 128, 131, 146, 151], "polynomi": 25, "kmer": 25, "10": [25, 57, 58, 59, 64, 65, 67, 68, 70, 71, 72, 73, 74, 75, 76, 77, 78, 90, 96, 97, 100, 101, 105, 106, 108, 109, 114, 116, 128, 130, 131, 134, 137, 140, 141], "mammalian": [25, 96], "106": [25, 65, 137], "motifset": [27, 43, 96, 103], "fix": [27, 63, 131, 137], "61": [27, 65, 96, 131, 137], "sens": [27, 45, 46, 47, 115, 117, 151], "known": [27, 92, 101, 106, 119, 131], "amino": [27, 40, 45, 47, 59, 64, 96, 100, 124, 129, 130], "suppli": [27, 43, 45, 46, 47], "coercion": 27, "appropri": [27, 43, 45, 46, 47, 55, 64, 90, 103, 108, 136], "alphabeterror": [27, 45, 47, 64, 98], "add_not": 27, "with_traceback": 27, "tb": 27, "__traceback__": 27, "adapt_motif_prob": 27, "motif_prob": [27, 90], "prepar": [27, 129], "probabl": [27, 43, 65, 66, 67, 77, 78, 128, 129, 131, 134, 136, 138, 139, 140, 144], "occurr": [27, 45, 46, 47, 51, 90, 137], "from_indic": [27, 91], "enumer": [27, 105], "invers": [27, 92, 97], "to_indic": [27, 91], "ccau": 27, "get_gap_motif": 27, "get_matched_arrai": 27, "dtype": [27, 51, 106, 137], "ith": 27, "jth": 27, "tcag": [27, 65, 96, 103, 116], "encompass": 27, "perhap": 27, "merg": [27, 29, 31, 32, 33, 92, 94, 112], "noth": [27, 96], "about": [27, 90, 92, 97, 108, 135, 145], "get_motif_len": 27, "get_subset": 27, "motif_subset": 27, "get_word_alphabet": [27, 90, 91], "word_length": 27, "jointenumer": 27, "cannot": [27, 40, 45, 46, 47, 90, 92, 129, 133], "unpack": 27, "_are_": 27, "includes_gap_motif": 27, "goe": 27, "extra": [27, 53, 147], "lookup": 27, "_really_": 27, "bind": [27, 116, 135], "_obj_to_index": 27, "__getitem__": 27, "intern": [27, 53, 65, 98, 105, 123, 133], "is_valid": [27, 43, 45, 46, 47, 103], "resolve_ambigu": [27, 98], "ambig_motif": [27, 98], "multi": 27, "screen": [27, 96], "against": [27, 108, 134], "version": [27, 31, 53, 62, 64, 105, 151], "found": [27, 50], "expect": [27, 43, 53, 69, 90, 106, 136, 137], "for_pickl": [27, 43], "with_gap_motif": 27, "resembl": 27, "demand": 29, "remapped_to": 29, "as_one_span": [29, 97], "get_children": [29, 97], "sub": [29, 51, 53, 88], "get_coordin": [29, 97], "start1": 29, "end1": 29, "plotli": [29, 51, 97, 118, 147, 149, 151], "trace": 29, "get_par": [29, 97], "get_slic": [29, 89, 90, 97], "complet": [29, 36, 37, 39, 45, 46, 47, 53, 62, 64, 92, 97, 100, 138], "fragment": 29, "grandpar": 29, "gmap": 29, "disjoint": 29, "union": [29, 31, 32, 33, 34, 88, 107, 108], "without_lost_span": 29, "actual": [29, 43, 53, 96, 101, 106, 131, 133, 134, 135, 140, 141], "underli": 29, "genbank": [31, 32, 117], "describ": [31, 32, 33, 36, 37, 39, 61, 62, 64, 84, 92, 96, 128, 129, 135], "descript": [31, 32, 33, 69, 76, 77, 78, 96, 100, 106], "table_nam": [31, 32, 33, 39], "strorbool": [31, 32, 33], "add_record": [31, 32, 33], "from_dict": [31, 32, 33], "get_features_match": [31, 32, 33, 92], "alia": [31, 32, 33], "resid": [31, 32, 33], "addit": [31, 32, 33, 51, 62, 64, 75, 90, 94, 128, 133, 135, 138, 149], "biotype_count": [31, 32, 33], "other_db": [31, 32, 33], "symmetr": [31, 32, 33, 78, 96], "equal": [31, 32, 33, 43, 45, 46, 47, 53, 96, 112, 128, 131, 135, 137, 138, 139, 141], "mine": [31, 32, 33], "count_distinct": [31, 32, 33, 92], "distinct": [31, 32, 33, 51, 64, 74, 92, 131, 141], "field": [31, 32, 33, 51, 100], "genom": [31, 32, 33, 45, 46, 47, 97, 106, 137, 145, 151], "counts_tabl": [31, 32, 33], "connect": [31, 32, 33, 37, 39, 43, 53], "classmethod": [31, 32, 33], "get_feature_children": [31, 32, 33, 92], "children": [31, 32, 33, 53, 133], "get_feature_par": [31, 32, 33, 92], "get_records_match": [31, 32, 33, 92], "num_match": [31, 32, 33, 92], "suitabl": [31, 32, 33, 63, 95, 147], "serialis": [31, 32, 33, 34, 55, 63, 68], "annot_db": [31, 32, 33], "schema": [31, 32, 33], "superset": [31, 32, 33], "byte": [31, 32, 33, 35, 37, 39, 63, 64, 89, 90, 95, 100, 103], "extend": [32, 53, 96, 97, 117], "gb": [32, 92, 97, 110, 117], "exclude_biotyp": 32, "klass": 34, "app_typ": 34, "apptyp": 34, "skip_not_complet": 34, "decor": [34, 38, 55, 88], "static": [34, 101, 106], "being": [34, 43, 53, 79, 87, 88, 96, 97, 106, 108, 112, 117, 131, 133, 137, 149, 151], "main": [34, 87, 96, 135], "occur": [34, 43, 45, 46, 47, 62, 87, 96, 98, 107, 108, 131], "log": [34, 36, 37, 39, 45, 46, 47, 66, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 128, 130, 131, 134, 140, 141, 142, 144], "loader": [34, 57, 58, 59, 62, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 113], "writer": [34, 51, 62, 64, 68], "compos": [34, 63, 64, 79, 135], "sum": [34, 51, 53, 64, 69, 90, 98, 138], "sequenti": [34, 131, 141], "invok": [34, 101, 106, 135], "independ": [34, 53, 96, 106], "usag": [34, 53, 57, 59, 79], "app1": 34, "app2": 34, "equival": [34, 53, 90, 112, 138], "constrain": [34, 96, 128, 134, 141], "how": [34, 43, 45, 46, 47, 61, 62, 90, 99, 100, 102, 105, 124, 125, 126, 127, 129, 131, 133, 134, 135, 136, 137, 138, 141, 145, 146], "a_load": [34, 62], "a_gener": [34, 62], "a_writ": [34, 62], "typeerror": [34, 43, 62, 90, 108], "There": [34, 62, 92, 96, 129, 135, 149, 151], "constraint": [34, 62, 96, 108, 128, 136, 140], "asid": [34, 66, 141], "below": [34, 60, 61, 64, 66, 69, 71, 84, 87, 90, 92, 96, 97, 103, 108, 110, 112, 114, 135, 138], "In": [34, 45, 46, 47, 50, 51, 53, 64, 68, 70, 71, 79, 87, 88, 89, 90, 92, 94, 96, 97, 98, 100, 101, 106, 107, 108, 114, 117, 124, 127, 128, 129, 130, 131, 133, 135, 138, 139, 141], "call": [34, 75, 87, 88, 90, 96, 97, 98, 103, 107, 108, 128, 131, 133, 135, 138], "hint": [34, 88, 92], "while": [34, 64, 100, 108, 129, 135, 141, 151], "__call__": 34, "immedi": [34, 131], "definit": [34, 57, 102], "alignedseqstyp": [34, 88], "serialisabletyp": [34, 61, 63, 88], "drop_bad": 34, "def": [34, 88, 90, 100, 108, 135, 136], "__init__": [34, 108], "It": [34, 40, 45, 46, 47, 53, 60, 61, 64, 67, 71, 75, 90, 100, 103, 106, 107, 108, 117, 118, 128, 131, 133, 135, 137, 138, 152], "staticmethod": 34, "omit_seq": 34, "now": [34, 43, 64, 69, 76, 88, 90, 92, 97, 103, 122, 125, 126, 128, 133, 134, 137, 138, 139, 140, 141, 143, 149, 151], "variant": [34, 77, 96], "ones": 34, "omit_bad": 34, "95": [34, 65, 128, 134, 137, 141], "data_stor": [35, 62, 64, 68], "unique_id": [35, 36, 37, 39, 64], "oper": [35, 43, 50, 51, 62, 72, 97], "deliv": 35, "md5": [35, 36, 37, 39, 64], "member": [36, 37, 39, 70, 90, 97], "subclass": [36, 37, 39, 53], "not_complet": [36, 37, 39, 62, 64], "summary_log": [36, 37, 39, 62, 64], "summaris": [36, 37, 39], "summary_not_complet": [36, 37, 39, 62, 64], "drop_not_complet": [36, 37, 39], "write_log": [36, 37, 39], "datamemb": [36, 37, 42, 62, 64], "tabulartyp": [36, 37, 39], "checksum": [36, 37, 39], "datamemberabc": [36, 37, 39], "write_not_complet": [36, 37, 39], "registr": [38, 55], "regist": [38, 92], "preced": [38, 97], "lock": [39, 64], "lock_pid": 39, "null": [39, 72, 73, 74, 75, 96, 128, 131, 136, 144], "doesn": [39, 45, 46, 47, 53, 96, 117], "record_typ": 39, "close": [39, 96, 131, 133, 138], "writabl": [39, 106], "pid": 39, "store_suffix": 39, "sqlitedb": [39, 64, 68, 135], "unlock": [39, 64], "forc": [39, 64, 96], "readonli": 39, "code_sequ": 40, "start_codon_sequ": 40, "vice": 40, "versa": 40, "These": [40, 42, 51, 62, 64, 65, 67, 69, 85, 87, 90, 97, 108, 123, 128, 131, 135, 138, 140, 141, 151], "ffllssssyi": 40, "cc": [40, 90, 91, 108, 143], "wllllpppphhqqrrrriiimttttnnkkssrrvvvvaaaaddeegggg": 40, "sgc": 40, "uuu": 40, "ttt": [40, 72, 73, 74, 75, 76, 77, 90, 91, 96, 98, 109, 128], "ttc": [40, 72, 73, 74, 75, 76, 77, 90, 91, 96, 98, 109, 128], "arbitrari": [40, 51, 53], "taa": [40, 90, 91, 98, 109], "tag": [40, 90, 91, 109], "tga": [40, 90, 91, 98, 109], "ncbi": [40, 149, 151], "onc": [40, 53, 92, 133], "block": [40, 97, 135], "get_alphabet": [40, 98], "quartet": 40, "xyn": 40, "doublet": 40, "xyt": 40, "xyc": 40, "xya": 40, "xyg": 40, "aa": [40, 90, 91, 92, 96, 98, 109, 116, 124, 137, 143], "singlet": 40, "ggg": [40, 72, 73, 74, 75, 76, 77, 90, 91, 96, 98, 109, 128, 143], "purin": 40, "pyrimidin": 40, "boundari": [40, 96, 128, 131], "xy": 40, "get_stop_indic": [40, 98], "frame": [40, 51, 61, 90, 97, 124], "is_start": 40, "is_stop": 40, "sixfram": [40, 98], "six": 40, "to_regex": [40, 43], "regex": [40, 43, 45, 46, 47], "expand": [40, 43], "to_tabl": [40, 106], "entir": [40, 45, 46, 47, 61, 97, 116, 128], "caller": 40, "respons": 40, "find": [40, 53, 90], "load_seq": [42, 97, 100, 117], "load_delimit": 42, "load_tabl": [42, 101, 106], "load_tre": [42, 70, 71, 96, 105, 128, 131, 133, 134, 136, 139, 140, 141], "load_annot": [42, 92], "open_data_stor": [42, 62, 64, 68], "make_unaligned_seq": [42, 90, 93, 100, 124], "make_seq": [42, 43, 89, 90, 92, 97, 98, 103, 104, 115], "make_aligned_seq": [42, 88, 93, 96, 97, 98, 100, 115, 124, 129], "make_t": [42, 101, 106, 144], "make_tre": [42, 93, 96, 105, 130, 133, 138, 142, 143, 144], "get_moltyp": [42, 103], "get_model": [42, 93, 95, 126, 128, 134, 140, 142, 143], "available_moltyp": [42, 103], "available_app": [42, 62, 63], "define_app": [42, 88], "register_datastore_read": 42, "datastoredirectori": [42, 62, 64], "readonlydatastorezip": [42, 64], "datastoresqlit": 42, "deserialise_object": [42, 55, 94, 96], "register_deserialis": 42, "seq_constructor": [43, 103], "mw_calcul": 43, "add_low": 43, "preserve_existing_moltyp": 43, "make_alphabet_group": 43, "array_seq_constructor": 43, "coerce_str": 43, "know": [43, 90, 97, 128, 131, 139, 144, 149, 151], "forth": 43, "disambigu": [43, 45, 46, 47], "proteinsequ": [43, 89, 98, 102], "up": [43, 53, 72, 74, 88, 90, 96, 128, 131, 133, 134, 135, 137, 138, 140, 141, 144], "reset": [43, 103, 141], "can_match": [43, 45, 46, 47], "second": [43, 45, 46, 47, 90, 96, 97, 135], "1st": [43, 124, 144], "2nd": [43, 144], "shorter": [43, 45, 46, 47], "can_mismatch": [43, 45, 46, 47], "mismatch": [43, 45, 46, 47, 53], "can_mispair": [43, 45, 46, 47], "mispair": [43, 45, 46, 47], "etc": [43, 45, 46, 47, 53, 96, 106, 128, 131, 135, 138, 149, 151], "weak": [43, 45, 46, 47], "gu": [43, 45, 46, 47], "can_pair": [43, 45, 46, 47, 89], "categori": [43, 45, 46, 47, 51, 106, 128, 139], "abl": [43, 45, 46, 47, 53, 79], "look": [43, 45, 46, 47, 64, 66, 90, 106, 133, 134, 140], "count_degener": [43, 45, 46, 47], "count_gap": [43, 45, 46, 47], "degenerate_from_seq": 43, "inverse_degener": 43, "Then": [43, 90, 106], "uppercas": 43, "lowercas": 43, "monom": [43, 45, 46, 47, 128], "first_degener": [43, 45, 46, 47], "first_gap": [43, 45, 46, 47], "first_invalid": [43, 45, 46, 47], "first_non_strict": [43, 45, 46, 47], "first_not_in_alphabet": 43, "gap_indic": [43, 45, 46, 47], "gap_map": [43, 45, 46, 47, 90], "ungapped_coord": 43, "gapped_coord": 43, "themselv": [43, 45, 46, 47, 79, 146], "gap_vector": [43, 45, 46, 47], "get_css_styl": 43, "css": [43, 51], "monospac": 43, "get_degenerate_posit": 43, "get_typ": [43, 45, 46, 47], "is_ambigu": 43, "querymotif": 43, "amibigu": 43, "is_degener": [43, 45, 46, 47], "is_gap": [43, 45, 46, 47, 90], "is_strict": [43, 45, 46, 47], "make_array_seq": 43, "must_match": [43, 45, 46, 47], "must_pair": [43, 45, 46, 47], "mw": [43, 45, 46, 47], "delta": [43, 45, 46, 47], "molecular": [43, 45, 46, 47, 61, 62, 84, 96, 102, 151, 153], "decid": [43, 45, 46, 47, 100], "possibilit": 43, "strand_symmetric_motif": 43, "complementari": 43, "valid_on_alphabet": 43, "anyth": [43, 129, 134], "__contains__": 43, "verify_sequ": 43, "gaps_allow": [43, 45, 46, 47], "wildcards_allow": [43, 45, 46, 47], "wild": 43, "card": 43, "mechan": [43, 96], "parallel": [43, 132, 136, 151, 152], "routin": 43, "explicitli": [43, 45, 46, 47, 64, 89, 90, 96, 98, 106, 128, 130, 135, 149, 151], "what_ambigu": 43, "minim": [43, 92], "duplic": 43, "degeneratefromsequ": 43, "preserve_cas": [45, 46, 47], "codon_alphabet": [45, 47, 98], "line_wrap": [45, 46, 47], "gapped_by_map_motif_it": [45, 46, 47], "gapped_by_map_segment_it": [45, 46, 47], "sinc": [45, 46, 47, 53, 57, 58, 67, 68, 92, 96, 97, 128, 136, 138], "annotate_matches_to": [45, 46, 47], "allow_multipl": [45, 46, 47], "domain": [45, 46, 47], "context": [45, 46, 47, 108], "chromosom": [45, 46, 47, 97, 110, 117], "bp": [45, 46, 47], "ensur": [45, 46, 47, 51, 53, 96, 124, 128, 131, 133, 145], "exclude_annot": [45, 46, 47], "_seq": [45, 46, 47], "diff": [45, 46, 47], "misc": [45, 46, 47, 100, 108], "distancefrommatrix": [45, 46, 47, 108], "_elements_": [45, 46, 47], "behavior": [45, 46, 47, 53], "suggest": [45, 46, 47, 145], "One": [45, 46, 47, 64, 131], "advantag": [45, 46, 47, 62, 136], "standalon": [45, 46, 47, 102, 135, 149, 151], "factori": [45, 46, 47, 108, 137], "aggreg": [45, 46, 47], "frac_diff": [45, 46, 47], "frac_sam": [45, 46, 47], "empti": [45, 46, 47, 50, 92, 97], "frac_diff_gap": [45, 46, 47], "frac": [45, 46, 47], "word": [45, 46, 47, 53, 79, 90, 135], "frac_diff_non_gap": [45, 46, 47], "frac_same_non_gap": [45, 46, 47], "frac_similar": [45, 46, 47], "similar_pair": [45, 46, 47], "pairsfromgroup": [45, 46, 47], "residu": [45, 46, 47, 106, 129], "re": [45, 46, 47, 53, 96, 102, 116, 128, 131, 137], "expens": [45, 46, 47], "vector": [45, 46, 47, 140], "accord": [45, 46, 47, 51, 131], "get_in_motif_s": [45, 46, 47, 98], "log_warn": [45, 46, 47], "notifi": [45, 46, 47], "incomplet": [45, 46, 47, 90, 97, 98, 117], "get_kmer": [45, 46, 47], "get_nam": [45, 46, 47], "is_annot": [45, 46, 47], "absent": [45, 46, 47], "iter_km": [45, 46, 47], "matrix_dist": [45, 46, 47], "diagon": [45, 46, 47, 66, 69], "kind": [45, 46, 47, 103], "matric": [45, 46, 47, 53, 67, 69, 70, 96, 128], "odd": [45, 46, 47], "18": [45, 46, 47, 64, 65, 73, 75, 96, 97, 98, 106, 135, 137, 144], "da": [45, 46, 47], "water": [45, 46, 47], "monophosph": [45, 46, 47], "oh": [45, 46, 47], "multipli": [45, 46, 47, 135], "accur": [45, 46, 47], "due": [45, 46, 47, 96, 128], "bia": [45, 46, 47], "mitochondri": [45, 46, 47, 96, 109], "parse_out_gap": [45, 46, 47], "locat": [45, 46, 47, 53, 92, 97, 113], "oldchar": [45, 46, 47], "newchar": [45, 46, 47], "replace_annotation_db": [45, 46, 47], "public": [45, 46, 47, 151], "interfac": [45, 46, 47, 69, 92, 100, 108, 111, 135, 138, 140, 147, 149, 151], "veri": [45, 46, 47, 90, 92, 96, 108, 128, 129, 135, 136, 137, 138, 149, 151], "confid": [45, 46, 47, 92, 129], "resolved_ambigu": [45, 46, 47], "synonymn": [45, 47], "shuffl": [45, 46, 47, 53, 89], "strip_bad": [45, 46, 47], "strip_bad_and_gap": [45, 46, 47], "strip_degener": [45, 46, 47], "block_siz": [45, 46, 47, 137], "trail": [45, 46, 47], "newlin": [45, 46, 47, 87], "extend_queri": [45, 46, 47], "with_termini_unknown": [45, 46, 47], "remap": [45, 46, 47], "row_condit": 49, "with_head": [49, 101, 106], "iter_row": 50, "add_column_from_str": 50, "cast": 50, "clear": [50, 140], "els": [50, 75, 128, 135], "pop": [50, 53], "popitem": 50, "setdefault": 50, "take_column": 50, "lack": [50, 133], "new_column": 51, "1d": 51, "python": [51, 62, 63, 64, 87, 90, 102, 108, 127, 128, 129, 135, 138, 151, 152, 153], "evalu": [51, 73, 75, 85, 87, 90, 92, 94, 96, 101, 106, 132, 135, 137, 138], "count_uniqu": [51, 106], "categorycount": [51, 106], "cross_join": [51, 106], "col_prefix": 51, "right_": [51, 106], "cross": [51, 100], "outer": 51, "prepend": 51, "distinct_valu": [51, 106], "satisfi": [51, 69], "filtered_by_column": [51, 106], "format_column": [51, 106], "column_head": 51, "format_templ": 51, "get_column": 51, "with_index": 51, "get_row_indic": 51, "nrow": 51, "inner_join": [51, 106], "columns_self": [51, 106], "columns_oth": 51, "use_index": 51, "inner": [51, 106], "matter": [51, 69, 105], "iff": 51, "nomin": 51, "docstr": [51, 108, 129], "by_row": 51, "denominator_func": 51, "func": 51, "normalis": [51, 111], "done": [51, 53, 64, 70, 74, 90, 96, 97, 100, 105, 106, 107, 108, 116, 128, 135, 137, 149], "denomin": 51, "tail": 51, "show_shap": 51, "bottom": [51, 63, 66, 113, 119, 122], "randomli": [51, 112, 131, 138], "superced": 51, "sum_column": 51, "cell": [51, 90, 98, 107, 108], "sum_row": 51, "col_sum": [51, 106], "to_categor": [51, 106], "conting": 51, "under": [51, 62, 90, 96, 98, 100, 103, 136, 144, 148], "to_csv": 51, "comma": 51, "to_datafram": [51, 106], "flatten": 51, "column_align": 51, "col_nam": 51, "c3tabl": 51, "div": 51, "emb": 51, "to_latex": [51, 106], "concat_title_legend": 51, "justifi": [51, 106], "latex": 51, "caption": [51, 106], "justif": [51, 106], "referenc": [51, 53, 128], "page": [51, 145], "here": [51, 53, 62, 88, 89, 90, 92, 94, 96, 105, 106, 108, 115, 116, 124, 128, 131, 134, 136, 138, 141, 146, 148], "command": [51, 62, 64, 135, 139, 153], "packag": [51, 62, 64, 87, 98, 107, 108, 130, 135], "http": [51, 100, 101, 106, 135, 147, 151], "ctan": 51, "org": [51, 153], "pkg": 51, "to_markdown": [51, 106], "markdown": 51, "surround": 51, "to_plotli": 51, "layout": [51, 107, 108], "to_rst": [51, 106], "csv_tabl": [51, 106], "rst": [51, 106], "csv": 51, "grid": 51, "to_str": 51, "border": 51, "center": [51, 106], "rest": [51, 103, 106, 128, 137, 141], "md": [51, 106, 108], "bedgraph": 51, "tsv": [51, 101, 106, 110], "delin": [51, 130, 131], "concat": 51, "chrom": [51, 106], "to_tsv": 51, "tab": [51, 64, 75, 101, 106], "tolist": [51, 106, 128], "new_column_nam": [51, 106], "select_as_head": [51, 106], "with_new_column": [51, 106], "subtabl": 51, "with_new_head": [51, 106], "try": [51, 53, 87, 92, 96, 98, 107, 108, 117, 139], "gzip": 51, "gz": 51, "unformat": 51, "accuraci": 51, "accessor": 53, "get_node_matching_nam": [53, 105], "unrooted_deepcopi": [53, 105], "ancestor": [53, 67, 70, 96], "back": [53, 124, 135, 151], "root": [53, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 94, 96, 101, 105, 106, 125, 126, 128, 130, 131, 133, 134, 138, 140, 141, 142, 143], "dynam": [53, 97], "clean": [53, 133], "ref": [53, 57, 58, 59, 97, 100, 112], "ascii_art": [53, 94, 96, 125, 126, 133, 138, 141], "show_intern": [53, 133], "compact": 53, "ascii": [53, 100], "draw": [53, 107, 108, 112, 113, 115], "balanc": [53, 94, 138], "neighbour": [53, 93, 126, 131, 153], "substanti": [53, 105, 151], "improv": [53, 96, 105, 128, 131, 137, 145], "effect": [53, 100, 105, 138, 141, 153], "clade": [53, 70, 96, 105, 128, 138], "stem": [53, 105], "parameteris": [53, 96, 105, 131], "outgroup_nam": [53, 70, 96, 105, 128, 141], "bifurc": 53, "ep": 53, "name_unnam": 53, "multifurc": 53, "num": [53, 62, 64], "child_group": 53, "nontip": 53, "child_parent_map": 53, "child": [53, 92, 97, 105], "compare_by_nam": 53, "compare_by_subset": 53, "exclude_absent_taxa": 53, "compare_by_tip_dist": [53, 105], "dist_f": 53, "distance_from_r": 53, "shuffle_f": 53, "m1": 53, "m2": 53, "pearson": [53, 105], "correl": [53, 105, 129], "madimum": 53, "applic": [53, 64, 66, 90, 149, 151, 153], "distance_from_r_squar": 53, "automat": [53, 65, 79, 92, 105, 108, 134], "undefin": 53, "reorder": 53, "compare_nam": 53, "treenod": [53, 133], "memo": 53, "_nil": 53, "copy_topologi": 53, "branch": [53, 57, 58, 59, 67, 69, 122, 132, 133, 134, 136, 138, 140, 143, 144], "environ": [53, 135, 147], "modul": [53, 63, 88, 89, 107, 108, 113, 128, 129, 135], "_much_": 53, "faster": [53, 90, 135], "descendant_arrai": 53, "tip_list": 53, "descend": [53, 141, 151], "decend": 53, "appear": [53, 65], "final": [53, 94, 133, 141], "preorder": 53, "travers": 53, "get_connecting_edg": [53, 105], "lca": 53, "get_connecting_nod": 53, "get_dist": [53, 88, 105], "endpoint": 53, "grab": [53, 90, 136], "get_edge_nam": 53, "tip1nam": 53, "tip2nam": 53, "intersect": 53, "tip1": [53, 74, 75], "2name": 53, "subtre": 53, "sai": [53, 62, 100, 108], "primat": [53, 70, 71, 97, 141, 142], "set_param_rul": [53, 96, 128, 131, 134, 139, 140, 141, 144], "get_edge_vector": 53, "include_root": 53, "postfix": 53, "get_figur": [53, 65, 66, 70, 76, 119, 120, 121, 122, 123], "squar": [53, 96, 108, 131, 132], "dendrogram": 53, "angular": 53, "radial": 53, "circular": 53, "get_max_tip_tip_dist": 53, "dist": [53, 94, 95, 105, 138], "internal_nod": 53, "get_newick": [53, 105], "with_dist": [53, 105], "semicolon": 53, "escape_nam": 53, "with_node_nam": 53, "quot": 53, "get_node_nam": [53, 105], "includeself": 53, "tipsonli": 53, "natur": [53, 72, 73, 74, 75, 131, 133, 141, 145, 153], "get_nodes_dict": [53, 105], "treeerror": 53, "encount": 53, "get_param_valu": [53, 96, 128, 131], "get_sub_tre": [53, 105], "name_list": 53, "ignore_miss": 53, "keep_root": 53, "otu": [53, 106], "aren": 53, "constant": [53, 141], "get_tip_nam": [53, 105], "get_xml": [53, 105], "index_in_par": 53, "is_root": 53, "is_tip": [53, 105], "isroot": 53, "istip": 53, "iter_nontip": [53, 105], "include_self": 53, "iter_tip": [53, 105, 133], "last_common_ancestor": [53, 105], "levelord": 53, "lin_rajan_moret": 53, "tree2": 53, "lin": 53, "rajan": 53, "moret": 53, "exhibit": 53, "superior": 53, "robinson": 53, "fould": 53, "unroot": [53, 69, 142], "et": [53, 67, 69, 75, 76, 77, 78, 96, 128, 130, 145], "al": [53, 67, 69, 75, 76, 77, 78, 96, 125, 126, 127, 128, 130, 134, 145], "2012": [53, 65], "ieee": 53, "acm": 53, "transact": 53, "biologi": [53, 78, 96], "bioinformat": [53, 151], "vol": [53, 96], "pp": [53, 96, 128, 131], "1014": [53, 65], "1022": [53, 65], "juli": 53, "aug": 53, "lowest_common_ancestor": 53, "tipnam": 53, "lowest": 53, "make_tree_arrai": 53, "dec_list": 53, "max_tip_tip_dist": [53, 105], "few": 53, "unnam": 53, "name_unnamed_nod": 53, "often": [53, 90, 133], "non_tip_children": 53, "algorithm": [53, 65, 93, 94, 124, 129, 135, 137, 138, 151, 152], "access": [53, 64, 69, 92, 97], "much": [53, 135, 137, 138, 145, 151], "_parent": 53, "mutat": [53, 96, 153], "rememb": [53, 138], "postord": 53, "somewhat": 53, "ineleg": 53, "save": [53, 62, 113, 122, 123, 125, 126, 127, 138], "stack": 53, "30": [53, 65, 67, 68, 70, 71, 72, 73, 74, 75, 76, 77, 78, 96, 97, 106, 109, 116, 128, 137], "3x": [53, 67], "worst": 53, "comb": 53, "pre_and_postord": 53, "visit": 53, "prune": [53, 133], "reconstruct": [53, 94, 125], "reflect": [53, 105, 112], "reassign_nam": 53, "reassign": 53, "old_nam": 53, "new_nam": 53, "remove_delet": 53, "is_delet": 53, "remove_nod": [53, 133], "root_at_midpoint": [53, 105], "midpoint": 53, "farthest": 53, "apart": 53, "fn": [53, 90], "rooted_at": [53, 105], "edge_nam": 53, "knowledg": 53, "rooted_with_tip": [53, 105], "same_shap": 53, "same_topologi": [53, 105], "scale_branch_length": [53, 105], "max_length": 53, "ultrametr": 53, "scale": [53, 57, 59, 122, 130], "branchlength": 53, "precis": [53, 71, 140], "set_max_tip_tip_dist": 53, "propag": 53, "julia": 53, "goodrich": 53, "intent": 53, "modifi": [53, 64, 90, 92, 96, 106, 108, 120, 128, 133, 134, 141], "track": [53, 79, 106], "set_param_valu": 53, "set_tip_dist": [53, 105], "distant": [53, 105], "sibl": 53, "sort_ord": 53, "At": [53, 88, 103, 131, 141], "left": [53, 62, 81, 99, 101, 106, 107, 108, 113, 119, 122, 133, 148], "kid": 53, "tip_children": 53, "tip_to_tip_dist": [53, 105], "default_length": 53, "__start": 53, "__stop": 53, "tip_ord": 53, "confus": [53, 141], "tips_within_dist": [53, 105], "interpret": [53, 129], "edge_attribut": 53, "total_descending_branch_length": 53, "total_length": [53, 69], "self_befor": 53, "self_aft": 53, "safe": [53, 108], "depth": 53, "inord": 53, "inflat": 55, "deserialis": [56, 63, 94, 96], "recreat": [56, 128], "our": [57, 58, 64, 70, 75, 84, 87, 90, 92, 97, 106, 108, 118, 128, 131, 135, 136, 143, 145, 146, 151], "get_app": [57, 58, 59, 60, 61, 62, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 87, 113], "load_unalign": [57, 58, 59, 64], "sca1": [57, 58, 59, 62, 110, 112], "mg94hky": [57, 77, 93, 96, 141], "codon_align": 57, "progressive_align": [57, 58, 59, 63, 64], "2478": [57, 65, 68, 78], "chimp": [57, 58, 59, 100, 142], "atgaaatccaa": [57, 58], "macaqu": [57, 58, 59, 113, 142], "mous": [57, 58, 59, 65, 87, 90, 93, 100, 105, 112, 114, 125, 126, 127, 131, 134, 138, 140, 141], "humanatgaaatccaaccaagagcggagcaacgaatgcctgcctcccaagaagcgcgagatcccc": [57, 58], "rat": [57, 58, 59, 93, 124, 130, 138], "lemur": [57, 58, 59], "unique_guid": [57, 58, 64], "tn93": [57, 58, 78, 94, 95, 96], "paralinear": [57, 58, 59, 69, 95], "nt_align": [57, 58], "001": [57, 58, 75, 96], "human": [57, 58, 59, 64, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 87, 90, 93, 94, 95, 96, 97, 100, 101, 105, 106, 112, 113, 125, 126, 127, 128, 129, 130, 131, 134, 136, 138, 140, 141, 142], "0076": [57, 58, 68, 70, 78, 96], "01": [57, 58, 65, 96, 101, 106, 128, 137], "02": [57, 58, 96, 128, 131, 134, 137, 140, 141], "mouse_lemur": [57, 58, 59], "guide_tre": [57, 58, 59, 64], "indel_r": [57, 58, 59, 64], "indel_length": [57, 58, 59, 64], "cnfhky": [57, 77, 96], "param_v": [57, 64, 93], "omega": [57, 72, 73, 74, 75, 76, 77, 93, 96, 108, 128, 134, 141], "kappa": [57, 64, 77, 93, 96, 140, 141, 142, 144], "align_param": [57, 58, 59], "autogenerated_name_dj": 57, "06": [57, 58, 59, 69, 71, 73, 75, 106, 128, 134, 141], "lnl": [57, 58, 59, 66, 68, 69, 71, 72, 73, 74, 75, 76, 77, 78, 96, 134, 140, 144], "6211": 57, "75529380953": 57, "hky85": [58, 64, 78, 93, 96, 125, 126, 127, 136, 138, 140, 142, 144], "2475": [58, 65], "atgaaatctaa": 58, "f81": [58, 78, 94, 95, 96, 143], "autogenerated_name_px": 58, "6402": 58, "556916991518": 58, "to_aa": 59, "translate_seq": [59, 64], "wg01": [59, 96], "aa_align": 59, "825": [59, 65], "mksnqersnec": 59, "humanmksnqersneclppkkreipatsrsseekaptlpsdnhrvegtawlpgnpggrghgggrh": 59, "ap": [59, 96], "ta": [59, 91], "st": 59, "008168683695808834": 59, "03580862702845759": 59, "011219581285708921": 59, "004763355238688913": 59, "052856143725369786": 59, "024351474041303382": 59, "0023127545121458537": 59, "003074310394311757": 59, "0001974014915215993": 59, "autogenerated_name_si": 59, "jtt92": [59, 96, 138], "3223": 59, "3558559344606": 59, "help": [60, 62, 96, 113, 129], "omit_degener": [60, 61, 63], "just_nuc": 60, "gap_is_degen": [60, 61], "request": [61, 127, 135, 138], "overview": 61, "accomod": 61, "omit_degenerates_app": 61, "degen": 61, "vignett": 61, "section": [61, 124, 125, 126, 127, 128, 129, 130, 131, 133, 134, 136, 137, 138, 139, 140, 141, 142, 143, 144], "instal": [62, 135, 146], "crucial": [62, 135], "concept": [62, 141], "concern": [62, 141, 149, 151], "convent": [62, 69, 84, 90], "load_": [62, 100], "write_": 62, "As": [62, 67, 69, 70, 117, 131, 135, 137, 138, 141, 142], "fit_model": 62, "analysi": [62, 103, 122, 137, 152, 153], "extract_stat": 62, "simplifi": [62, 105, 146], "composit": 62, "next": [62, 97, 131, 133, 138, 141], "involv": [62, 103, 105, 129, 131, 138, 139, 141, 149], "work": [62, 64, 87, 89, 92, 97, 98, 107, 108, 135, 145, 149, 151], "illustr": [62, 64, 70, 87, 88, 90, 94, 96, 101, 106, 116, 131, 141], "third": 62, "destin": 62, "out_dstor": [62, 64], "path_to_dir": 62, "fa": [62, 64, 92, 97, 100, 110], "load_align": [62, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 87], "cpos3": 62, "take_codon_posit": 62, "write_seq": 62, "primate_brca1": [62, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 87, 94, 95, 96, 97, 110, 128], "just3rd": 62, "simpler": [62, 96, 111, 131], "loop": [62, 79, 97, 108, 138], "dstore": [62, 64], "apply_to": [62, 64], "fingerprint": 62, "who": [62, 64, 151], "2023": [62, 65], "09": [62, 131, 134, 140, 141], "23": [62, 64, 65, 72, 74, 76, 101, 106, 109, 121, 131, 134, 137, 140, 141], "07": [62, 64, 106, 128], "52": [62, 65, 103, 137], "03": [62, 128, 131, 134, 140, 141], "43b67d16": 62, "11": [62, 65, 67, 73, 75, 77, 87, 89, 90, 96, 97, 98, 101, 106, 107, 108, 109, 128, 131, 134, 137, 140, 141], "runner": [62, 64, 87], "home": [62, 64, 87], "github": [62, 64, 87, 98, 100, 101, 106, 107, 108, 147], "venv": [62, 87, 98, 107, 108], "lib": [62, 64, 87, 98, 107, 108], "python3": [62, 64, 87, 98, 107, 108, 135], "ipykernel_launch": [62, 64], "py": [62, 64, 87, 98, 107, 108, 135], "tmp": 62, "tmppv0cpkm6": 62, "historymanag": 62, "hist_fil": 62, "fourfold_degener": 62, "c3org": [62, 64, 87], "doc": [62, 63, 64, 87, 100, 101, 106], "tmp6rofliav": 62, "verbos": [62, 64, 69, 71], "id_from_sourc": [62, 64], "functionget_unique_id": 62, "0x7ff92dc493a0": 62, "timenamepython": [62, 64], "versionwhocommandcompos": [62, 64], "03log": 62, "log3": [62, 64], "5runner": 62, "interrog": [62, 65, 102], "did": [62, 131, 135], "typenumb": [62, 64], "completed7": 62, "not_completed6": 62, "logs1": [62, 64], "messag": [62, 64, 87, 96, 135], "error": [62, 64, 79, 95, 96, 107, 108, 124, 138], "ce": 62, "refseq": [62, 92, 110], "typeoriginmessagenumsourc": [62, 64], "errorload_align": 62, "6sca1": 62, "00": [62, 67, 68, 70, 71, 72, 73, 74, 75, 76, 77, 78, 96, 106, 116, 128, 130, 131, 134, 137, 140, 141, 143], "processor": [62, 135, 152], "machin": [62, 153], "mpi": [62, 135], "analys": [63, 68, 69, 71, 84, 90, 96, 129, 139, 149, 151, 153], "pickle_it": [63, 64], "unpickle_it": 63, "decompress": 63, "to_primit": [63, 64], "primit": 63, "min_length": 63, "fixed_length": 63, "omit_dupl": 63, "redund": [63, 92], "54": [63, 65, 137], "modulenamecomposabledocinput": 63, "typeoutput": 63, "iopickle_ittrueserialis": 63, "serialisabletypebyt": 63, "iounpickle_ittruedeserialis": 63, "bytesserialisabletyp": 63, "iocompresstruecompress": 63, "bytesbyt": 63, "iodecompresstruedecompress": 63, "ioto_primitivetrueconvert": 63, "serialisationserialisabletypeserialisabletyp": 63, "samplemin_lengthtruefilt": 63, "sequencecollectionalign": 63, "samplefixed_lengthtruesampl": 63, "arrayalignmentalign": 63, "sampleomit_bad_seqstrueelimin": 63, "sampleomit_duplicatedtrueremov": 63, "sampletrim_stop_codonstrueremov": 63, "download": [64, 92, 97, 110, 146], "zip": [64, 110, 128, 137], "unzip": 64, "035": 64, "previous": [64, 92, 133], "four": [64, 143], "organis": [64, 92], "system": [64, 135, 152], "subdirectori": 64, "demo_dstor": 64, "scitrack": 64, "integr": [64, 108, 151], "sql": 64, "membership": 64, "conveni": [64, 89, 96, 100, 128, 148], "1035x": 64, "ensg00000157184": 64, "ensg00000131791": 64, "demonstr": [64, 66, 67, 68, 69, 90, 96, 100, 103, 106, 108, 112, 125, 128, 133, 141], "1035": [64, 65], "completed1035": 64, "not_completed0": 64, "logs0": 64, "folow": 64, "ensg00000127054": 64, "ensg00000067704": 64, "ensg00000182004": 64, "natggcgtaccgtg": 64, "storag": [64, 107, 108], "best": [64, 92, 94, 96, 129, 133, 141, 145, 149, 151], "load_db": 64, "creation": [64, 128], "former": [64, 92, 135], "easier": [64, 145], "issu": [64, 71, 87, 119, 145], "unnatur": 64, "demo": [64, 97, 110, 135], "175": [64, 65], "completed175": 64, "execut": [64, 72, 74, 96, 103, 106, 135, 151, 152], "logfil": 64, "regard": [64, 72, 85, 87], "24": [64, 65, 73, 74, 75, 77, 90, 96, 107, 108, 109, 137, 144], "14": [64, 65, 69, 73, 75, 90, 96, 104, 109, 128, 137], "42": [64, 65, 69, 92, 96, 108, 131, 137], "56": [64, 65, 105, 106, 128, 131, 137], "write_db": [64, 68], "pid8650": 64, "gavin": [64, 124, 126, 127, 128, 130, 131, 134, 136, 137, 138, 139, 140, 141, 142, 143, 144], "miniconda3": 64, "env": 64, "c3dev": [64, 145, 153], "librari": [64, 135, 149, 151, 152], "runtim": 64, "kernel": 64, "5eb93aeb": 64, "f6e0": 64, "493e": 64, "85d1": 64, "d62895201ae2": 64, "data_path": 64, "nt": [64, 97], "tinydb": 64, "name_callback": 64, "if_exist": 64, "overwrit": 64, "56log": 64, "3gavin": 64, "jsonload_unalign": 64, "vial": 64, "225": [64, 65], "clariti": 64, "eratosthen": 64, "local": [64, 96, 108, 128, 131, 134, 136, 139, 140, 141], "8650": 64, "system_detail": 64, "darwin": 64, "thu": [64, 90, 113, 149, 151], "apr": [64, 96], "25": [64, 65, 68, 90, 96, 97, 107, 108, 109, 137], "16": [64, 65, 69, 73, 75, 89, 92, 96, 101, 106, 109, 128, 131, 137], "27": [64, 65, 75, 77, 96, 109, 137, 141], "pdt": 64, "xnu": 64, "4903": 64, "261": [64, 65, 78, 96], "release_x86_64": 64, "sqlite": [64, 92], "gtet": 64, "synopsi": 64, "in_dstor": 64, "allow_rc": 64, "trim_terminal_stop": 64, "get_unique_id": 64, "0x7f64c82753a0": 64, "convertor": [64, 137], "as_dict": 64, "0x7f64c82820c0": 64, "1025": [64, 65], "completed1025": 64, "not_completed10": 64, "confirm": 64, "statu": 64, "md5sum": 64, "incorrect": [64, 87], "conditionvalu": 64, "correct1035": 64, "incorrect0": 64, "missing0": 64, "logtru": 64, "why": [64, 69, 135], "unr": 64, "ensg00000198938": 64, "ensg00000183291": 64, "errortranslate_seq": 64, "10ensg00000198938": 64, "came": 64, "had": [64, 108, 135], "model_result": 65, "tabular_result": [65, 66, 67, 75], "posterior": [65, 96, 128, 131, 139], "margin": 65, "gn": [65, 67, 68, 69, 70, 71, 78, 96, 110, 119, 120, 121, 122], "reconstuctor": 65, "states_result": 65, "5x": [65, 75], "0000": [65, 66, 67, 68, 70, 71, 72, 73, 74, 75, 76, 77, 78, 88, 95, 96, 101, 106, 116, 127, 131], "13": [65, 73, 75, 89, 92, 97, 106, 109, 134, 137, 141, 144], "15": [65, 73, 75, 77, 96, 97, 108, 109, 117, 123, 137, 141, 143], "17": [65, 73, 75, 92, 128, 137], "19": [65, 68, 73, 75, 78, 128, 131, 134, 137, 140, 141, 144], "21": [65, 77, 96, 97, 103, 106, 109, 128, 131, 134, 137, 140, 141, 144], "22": [65, 71, 72, 96, 103, 105, 106, 109, 128, 131, 137, 144], "26": [65, 73, 106, 109, 131, 137], "28": [65, 97, 109, 131, 134, 137, 140, 141], "29": [65, 97, 109, 137], "31": [65, 96, 106, 109, 131, 137], "32": [65, 106, 109, 137], "33": [65, 70, 94, 105, 106, 109, 137, 144], "34": [65, 90, 106, 134, 137, 141], "35": [65, 97, 107, 108, 137, 144], "36": [65, 77, 92, 96, 98, 106, 107, 108, 134, 137], "37": [65, 107, 108, 131, 134, 137, 140, 141], "38": [65, 107, 108, 131, 134, 137, 141, 144], "39": [65, 131, 134, 137], "40": [65, 90, 96, 97, 108, 116, 131, 137], "41": [65, 131, 137], "43": [65, 78, 96, 137, 139], "44": [65, 96, 105, 106, 137], "45": [65, 97, 106, 137, 139], "46": [65, 137], "47": [65, 137, 139], "48": [65, 97, 137], "49": [65, 77, 96, 137], "51": [65, 78, 96, 137], "53": [65, 128, 137], "55": [65, 106, 137, 139], "57": [65, 137], "58": [65, 106, 128, 137], "59": [65, 101, 106, 131, 134, 136, 137, 141, 144], "62": [65, 137], "63": [65, 137], "65": [65, 137], "66": [65, 106, 137], "67": [65, 106, 137], "68": [65, 90, 96, 137], "69": [65, 137], "70": [65, 90, 137], "71": [65, 134, 137], "72": [65, 134, 137], "73": [65, 77, 94, 96, 134, 137], "74": [65, 137, 144], "75": [65, 93, 124, 128, 137], "76": [65, 78, 96, 137], "77": [65, 77, 106, 137, 141], "78": [65, 96, 106, 128, 137], "79": [65, 137], "80": [65, 137], "81": [65, 137], "82": [65, 96, 137], "83": [65, 134, 137], "84": [65, 128, 134, 137, 141], "85": [65, 137, 141], "86": [65, 128, 137], "87": [65, 137, 141], "88": [65, 106, 137], "89": [65, 128, 137], "90": [65, 134, 137], "91": [65, 137], "92": [65, 134, 137, 141], "93": [65, 78, 96, 137], "94": [65, 101, 106, 136, 137], "96": [65, 128, 134, 137], "97": [65, 137], "98": [65, 137, 144], "99": [65, 106, 128, 137], "101": [65, 75, 97, 106, 137], "102": [65, 106, 137], "103": [65, 93, 106, 137], "104": [65, 106, 128, 137], "105": [65, 106, 137], "107": [65, 137], "108": [65, 137], "109": [65, 137], "110": [65, 137], "111": [65, 75, 134, 137, 141], "112": [65, 137, 141], "113": [65, 90, 137], "114": [65, 137], "115": [65, 90, 137], "116": [65, 137], "117": [65, 137], "118": [65, 106, 137], "119": [65, 137], "120": [65, 106, 116, 134, 137, 141], "121": [65, 137, 141], "122": [65, 137], "123": [65, 108, 137], "124": [65, 137], "125": [65, 106, 137], "126": [65, 137], "127": [65, 92, 137], "128": [65, 137], "129": [65, 106, 137], "130": [65, 137], "131": [65, 137], "132": [65, 66, 137], "133": [65, 137], "134": [65, 77, 96, 137], "135": [65, 137], "136": [65, 137], "137": [65, 137], "138": [65, 106, 137], "139": [65, 137], "140": [65, 128, 137], "141": [65, 106, 137], "142": [65, 93, 137], "143": [65, 137], "144": [65, 78, 96, 137], "145": [65, 137], "146": [65, 137], "147": [65, 137], "148": [65, 137], "149": [65, 137], "150": [65, 90], "151": 65, "152": 65, "153": 65, "154": 65, "155": 65, "156": 65, "157": 65, "158": 65, "159": [65, 101, 106], "160": 65, "161": [65, 106], "162": 65, "163": 65, "164": 65, "165": 65, "166": 65, "167": [65, 96], "168": 65, "169": [65, 92], "170": 65, "171": 65, "172": 65, "173": 65, "174": [65, 96], "176": [65, 66], "177": 65, "178": 65, "179": 65, "180": [65, 144], "181": 65, "182": 65, "183": 65, "184": 65, "185": [65, 93], "186": 65, "187": 65, "188": 65, "189": 65, "190": [65, 131, 134, 140, 141, 144], "191": 65, "192": 65, "193": 65, "194": 65, "195": 65, "196": 65, "197": 65, "198": 65, "199": 65, "200": 65, "201": [65, 75, 101, 106], "202": 65, "203": 65, "204": 65, "205": 65, "206": 65, "207": 65, "208": 65, "209": [65, 96], "210": [65, 131, 134, 140, 141, 144], "211": [65, 75], "212": 65, "213": 65, "214": 65, "215": 65, "216": 65, "217": 65, "218": 65, "219": 65, "220": [65, 144], "221": 65, "222": 65, "223": 65, "224": 65, "226": 65, "227": 65, "228": 65, "229": [65, 106], "230": 65, "231": 65, "232": 65, "233": 65, "234": [65, 108], "235": 65, "236": 65, "237": 65, "238": 65, "239": 65, "240": 65, "241": [65, 96], "242": 65, "243": 65, "244": 65, "245": 65, "246": 65, "247": 65, "248": 65, "249": 65, "250": [65, 116], "251": 65, "252": 65, "253": 65, "254": 65, "256": [65, 103], "257": 65, "258": 65, "259": 65, "260": 65, "262": 65, "263": 65, "264": 65, "265": 65, "266": 65, "267": 65, "268": 65, "269": [65, 87], "270": 65, "271": 65, "272": 65, "273": 65, "274": [65, 87], "275": [65, 96], "276": 65, "277": 65, "278": [65, 87], "279": 65, "280": [65, 141], "281": [65, 78, 96, 134, 141], "282": [65, 141], "283": 65, "284": 65, "285": 65, "286": 65, "287": 65, "288": 65, "289": 65, "290": 65, "291": 65, "292": 65, "293": 65, "294": [65, 106], "295": 65, "296": 65, "297": 65, "298": 65, "299": 65, "300": [65, 111, 114, 116, 117], "301": [65, 75], "302": [65, 106], "303": 65, "304": 65, "305": 65, "306": [65, 87], "307": 65, "308": 65, "309": 65, "310": 65, "311": [65, 75, 116], "312": 65, "313": 65, "314": 65, "315": 65, "316": 65, "317": 65, "318": 65, "319": 65, "320": 65, "321": 65, "322": 65, "323": 65, "324": 65, "325": 65, "326": 65, "327": 65, "328": 65, "329": 65, "330": 65, "331": 65, "332": [65, 106], "333": 65, "334": 65, "335": 65, "336": 65, "337": 65, "338": 65, "339": 65, "340": [65, 134, 141], "341": 65, "342": 65, "343": 65, "344": 65, "345": [65, 96, 101, 106], "346": 65, "347": 65, "348": 65, "349": 65, "350": [65, 144], "351": 65, "352": [65, 96], "353": 65, "354": 65, "355": 65, "356": 65, "357": 65, "358": 65, "359": 65, "360": [65, 134], "361": 65, "362": 65, "363": 65, "364": 65, "365": 65, "366": [65, 87], "367": 65, "368": 65, "369": 65, "370": [65, 131, 134, 140, 141], "371": 65, "372": 65, "373": 65, "374": 65, "375": 65, "376": [65, 96], "377": 65, "378": 65, "379": 65, "380": [65, 101, 106, 134, 144], "381": [65, 131], "382": 65, "383": 65, "384": 65, "385": 65, "386": 65, "387": [65, 97], "388": 65, "389": 65, "390": 65, "391": 65, "392": 65, "393": [65, 106], "394": 65, "395": 65, "396": 65, "397": 65, "398": 65, "399": 65, "400": [65, 112, 115, 117, 123], "401": 65, "402": 65, "403": 65, "404": 65, "405": 65, "406": 65, "407": 65, "408": 65, "409": 65, "410": 65, "411": 65, "412": 65, "413": 65, "414": 65, "415": 65, "416": 65, "417": 65, "418": 65, "419": 65, "420": [65, 78, 96, 97], "421": [65, 131], "422": 65, "423": 65, "424": 65, "425": 65, "426": 65, "427": 65, "428": 65, "429": 65, "430": 65, "431": 65, "432": 65, "433": 65, "434": [65, 97, 117], "435": 65, "436": 65, "437": 65, "438": 65, "439": 65, "440": 65, "441": 65, "442": 65, "443": 65, "444": 65, "445": 65, "446": 65, "447": 65, "448": 65, "449": 65, "450": [65, 139], "451": 65, "452": 65, "453": 65, "454": 65, "455": 65, "456": 65, "457": 65, "458": 65, "459": [65, 96], "460": 65, "461": 65, "462": 65, "463": 65, "464": 65, "465": 65, "466": 65, "467": 65, "468": 65, "469": 65, "470": 65, "471": 65, "472": 65, "473": 65, "474": 65, "475": 65, "476": 65, "477": 65, "478": 65, "479": 65, "480": 65, "481": 65, "482": 65, "483": 65, "484": 65, "485": 65, "486": 65, "487": 65, "488": 65, "489": 65, "490": 65, "491": 65, "492": 65, "493": 65, "494": 65, "495": 65, "496": 65, "497": 65, "498": 65, "499": 65, "501": [65, 131], "502": 65, "503": 65, "504": 65, "505": 65, "506": 65, "507": 65, "508": 65, "509": 65, "510": 65, "511": [65, 101, 106], "512": 65, "513": 65, "514": 65, "515": 65, "516": 65, "517": 65, "518": 65, "519": 65, "520": 65, "521": [65, 92], "522": 65, "523": 65, "524": 65, "525": 65, "526": 65, "527": 65, "528": 65, "529": 65, "530": 65, "531": 65, "532": 65, "533": 65, "534": [65, 101, 106], "535": 65, "536": 65, "537": 65, "538": 65, "539": 65, "540": 65, "541": 65, "542": 65, "543": [65, 101, 106], "544": 65, "545": 65, "546": [65, 92], "547": [65, 92], "548": 65, "549": 65, "550": 65, "551": [65, 139], "552": 65, "553": 65, "554": 65, "555": 65, "556": 65, "557": 65, "558": 65, "559": 65, "560": 65, "561": [65, 92], "562": 65, "563": [65, 92], "564": [65, 131], "565": 65, "566": 65, "567": 65, "568": [65, 77, 96], "569": 65, "570": 65, "571": 65, "572": 65, "573": 65, "574": 65, "575": 65, "576": 65, "577": 65, "578": [65, 97], "579": 65, "580": [65, 100], "581": [65, 128], "582": 65, "583": 65, "584": 65, "585": 65, "586": 65, "587": 65, "588": 65, "589": 65, "590": 65, "591": 65, "592": 65, "593": 65, "594": 65, "595": [65, 93], "596": 65, "597": 65, "598": 65, "599": 65, "601": 65, "602": 65, "603": 65, "604": 65, "605": 65, "606": 65, "607": 65, "608": 65, "609": 65, "610": 65, "611": 65, "612": 65, "613": 65, "614": 65, "615": 65, "616": [65, 98], "617": [65, 98], "618": 65, "619": [65, 98], "620": 65, "621": 65, "622": 65, "623": 65, "624": 65, "625": 65, "626": [65, 101, 106], "627": 65, "628": 65, "629": 65, "630": 65, "631": 65, "632": 65, "633": 65, "634": 65, "635": 65, "636": 65, "637": 65, "638": 65, "639": 65, "640": 65, "641": 65, "642": 65, "643": 65, "644": 65, "645": 65, "646": 65, "647": 65, "648": 65, "649": 65, "650": [65, 117, 120], "651": 65, "652": 65, "653": 65, "654": 65, "655": 65, "656": 65, "657": 65, "658": 65, "659": 65, "660": 65, "661": 65, "662": 65, "663": 65, "664": 65, "665": 65, "666": [65, 97], "667": 65, "668": 65, "669": 65, "670": 65, "671": 65, "672": 65, "673": 65, "674": 65, "675": 65, "676": 65, "677": 65, "678": [65, 101, 106], "679": 65, "680": 65, "681": 65, "682": 65, "683": 65, "684": 65, "685": [65, 92], "686": [65, 108], "687": [65, 108], "688": [65, 108], "689": [65, 108], "690": [65, 108], "691": [65, 96], "692": 65, "693": 65, "694": 65, "695": 65, "696": 65, "697": 65, "698": 65, "699": 65, "701": 65, "702": 65, "703": 65, "704": 65, "705": 65, "706": 65, "707": 65, "708": 65, "709": 65, "710": [65, 134], "711": 65, "712": 65, "713": 65, "714": 65, "715": [65, 77, 96], "716": 65, "717": 65, "718": 65, "719": [65, 97], "720": 65, "721": 65, "722": 65, "723": 65, "724": 65, "725": [65, 77, 96], "726": [65, 77, 96], "727": 65, "728": 65, "729": 65, "730": [65, 134], "731": 65, "732": 65, "733": 65, "734": [65, 77, 96], "735": 65, "736": 65, "737": 65, "738": 65, "739": 65, "740": 65, "741": 65, "742": 65, "743": 65, "744": 65, "745": 65, "746": 65, "747": 65, "748": 65, "749": 65, "750": 65, "751": 65, "752": 65, "753": 65, "754": 65, "755": 65, "756": 65, "757": 65, "758": 65, "759": 65, "760": 65, "761": 65, "762": 65, "763": 65, "764": 65, "765": 65, "766": 65, "767": 65, "768": 65, "769": 65, "770": 65, "771": 65, "772": 65, "773": 65, "774": 65, "775": 65, "776": 65, "777": 65, "778": 65, "779": 65, "780": 65, "781": [65, 128], "782": 65, "783": 65, "784": 65, "785": 65, "786": 65, "787": 65, "788": 65, "789": 65, "790": 65, "791": 65, "792": 65, "793": 65, "794": 65, "795": 65, "796": 65, "797": 65, "798": 65, "799": 65, "800": 65, "801": 65, "802": 65, "803": 65, "804": 65, "805": 65, "806": 65, "807": 65, "808": 65, "809": 65, "810": 65, "811": 65, "812": 65, "813": 65, "814": 65, "815": 65, "816": 65, "817": 65, "818": 65, "819": 65, "820": 65, "821": 65, "822": 65, "823": 65, "824": 65, "826": 65, "827": 65, "828": 65, "829": 65, "830": [65, 134], "831": 65, "832": 65, "833": 65, "834": 65, "835": [65, 97], "836": 65, "837": 65, "838": 65, "839": 65, "840": [65, 141], "841": [65, 128], "842": 65, "843": 65, "844": 65, "845": 65, "846": 65, "847": 65, "848": 65, "849": 65, "850": 65, "851": 65, "852": 65, "853": 65, "854": 65, "855": 65, "856": 65, "857": 65, "858": 65, "859": 65, "860": [65, 128], "861": [65, 128], "862": 65, "863": 65, "864": 65, "865": 65, "866": 65, "867": [65, 101, 106], "868": 65, "869": 65, "870": 65, "871": 65, "872": 65, "873": 65, "874": 65, "875": 65, "876": 65, "877": 65, "878": 65, "879": 65, "880": 65, "881": 65, "882": 65, "883": 65, "884": 65, "885": 65, "886": 65, "887": 65, "888": 65, "889": 65, "890": 65, "891": 65, "892": 65, "893": 65, "894": 65, "895": 65, "896": 65, "897": 65, "898": 65, "899": 65, "900": 65, "901": 65, "902": 65, "903": 65, "904": 65, "905": 65, "906": 65, "907": 65, "908": 65, "909": [65, 87], "910": 65, "911": 65, "912": 65, "913": 65, "914": 65, "915": 65, "916": 65, "917": 65, "918": 65, "919": 65, "920": 65, "921": 65, "922": 65, "923": 65, "924": 65, "925": 65, "926": 65, "927": 65, "928": 65, "929": 65, "930": 65, "931": 65, "932": 65, "933": 65, "934": 65, "935": 65, "936": 65, "937": 65, "938": 65, "939": 65, "940": 65, "941": 65, "942": 65, "943": 65, "944": 65, "945": 65, "946": 65, "947": 65, "948": 65, "949": 65, "950": 65, "951": 65, "952": 65, "953": [65, 134], "954": [65, 128], "955": 65, "956": 65, "957": 65, "958": 65, "959": 65, "960": [65, 128], "961": 65, "962": 65, "963": 65, "964": [65, 128], "965": 65, "966": 65, "967": 65, "968": 65, "969": 65, "970": 65, "971": 65, "972": 65, "973": [65, 106], "974": 65, "975": 65, "976": 65, "977": 65, "978": 65, "979": 65, "980": [65, 144], "981": 65, "982": 65, "983": 65, "984": 65, "985": 65, "986": 65, "987": 65, "988": 65, "989": 65, "990": 65, "991": 65, "992": 65, "993": 65, "994": 65, "995": 65, "996": 65, "997": 65, "998": 65, "999": 65, "1000": [65, 101, 106, 137, 143, 152], "1001": 65, "1002": 65, "1003": 65, "1004": 65, "1005": 65, "1006": 65, "1007": 65, "1008": 65, "1009": 65, "1010": 65, "1011": [65, 106], "1012": 65, "1013": 65, "1015": 65, "1016": 65, "1017": 65, "1018": 65, "1019": 65, "1020": [65, 73], "1021": 65, "1023": 65, "1024": 65, "1026": 65, "1027": 65, "1028": 65, "1029": 65, "1030": 65, "1031": 65, "1032": [65, 73], "1033": 65, "1034": [65, 73], "1036": 65, "1037": 65, "1038": 65, "1039": 65, "1040": 65, "1041": 65, "1042": 65, "1043": [65, 73], "1044": [65, 87], "1045": 65, "1046": 65, "1047": 65, "1048": 65, "1049": 65, "1050": 65, "1051": 65, "1052": 65, "1053": 65, "1054": 65, "1055": 65, "1056": 65, "1057": 65, "1058": [65, 87], "1059": 65, "1060": 65, "1061": [65, 73], "1062": 65, "1063": 65, "1064": 65, "1065": 65, "1066": 65, "1067": 65, "1068": 65, "1069": 65, "1070": 65, "1071": 65, "1072": 65, "1073": 65, "1074": 65, "1075": 65, "1076": [65, 73], "1077": 65, "1078": 65, "1079": 65, "1080": 65, "1081": 65, "1082": 65, "1083": 65, "1084": 65, "1085": 65, "1086": 65, "1087": 65, "1088": 65, "1089": 65, "1090": 65, "1091": 65, "1092": 65, "1093": 65, "1094": 65, "1095": 65, "1096": 65, "1097": 65, "1098": 65, "1099": 65, "1100": 65, "1101": 65, "1102": 65, "1103": 65, "1104": 65, "1105": 65, "1106": 65, "1107": 65, "1108": [65, 73], "1109": 65, "1110": 65, "1111": 65, "1112": 65, "1113": 65, "1114": 65, "1115": 65, "1116": 65, "1117": 65, "1118": 65, "1119": 65, "1120": 65, "1121": 65, "1122": 65, "1123": 65, "1124": 65, "1125": [65, 66], "1126": 65, "1127": [65, 69, 92], "1128": 65, "1129": 65, "1130": 65, "1131": 65, "1132": 65, "1133": 65, "1134": 65, "1135": 65, "1136": 65, "1137": 65, "1138": 65, "1139": 65, "1140": 65, "1141": 65, "1142": 65, "1143": 65, "1144": 65, "1145": 65, "1146": [65, 73], "1147": 65, "1148": [65, 70], "1149": 65, "1150": 65, "1151": 65, "1152": 65, "1153": 65, "1154": 65, "1155": 65, "1156": 65, "1157": 65, "1158": 65, "1159": 65, "1160": 65, "1161": 65, "1162": 65, "1163": 65, "1164": 65, "1165": 65, "1166": 65, "1167": 65, "1168": 65, "1169": [65, 92], "1170": 65, "1171": 65, "1172": 65, "1173": 65, "1174": 65, "1175": 65, "1176": 65, "1177": 65, "1178": 65, "1179": 65, "1180": 65, "1181": 65, "1182": 65, "1183": [65, 116], "1184": 65, "1185": 65, "1186": 65, "1187": 65, "1188": 65, "1189": 65, "1190": 65, "1191": [65, 73], "1192": 65, "1193": 65, "1194": 65, "1195": 65, "1196": 65, "1197": 65, "1198": 65, "1199": 65, "1200": 65, "1201": 65, "1202": 65, "1203": 65, "1204": 65, "1205": 65, "1206": 65, "1207": 65, "1208": 65, "1209": 65, "1210": 65, "1211": 65, "1212": 65, "1213": 65, "1214": 65, "1215": 65, "1216": [65, 73], "1217": 65, "1218": 65, "1219": 65, "1220": 65, "1221": 65, "1222": 65, "1223": 65, "1224": 65, "1225": 65, "1226": 65, "1227": 65, "1228": 65, "1229": 65, "1230": [65, 106], "1231": 65, "1232": 65, "1233": 65, "1234": 65, "1235": 65, "1236": 65, "1237": 65, "1238": 65, "1239": 65, "1240": 65, "1241": 65, "1242": 65, "1243": 65, "1244": 65, "1245": [65, 67, 71], "1246": 65, "1247": 65, "1248": 65, "1249": 65, "1250": 65, "1251": 65, "1252": 65, "1253": 65, "1254": 65, "1255": 65, "1256": 65, "1257": 65, "1258": [65, 69], "1259": 65, "1260": 65, "1261": 65, "1262": 65, "1263": 65, "1264": [65, 68], "1265": 65, "1266": 65, "1267": 65, "1268": 65, "1269": 65, "1270": 65, "1271": 65, "1272": 65, "1273": 65, "1274": 65, "1275": 65, "1276": 65, "1277": 65, "1278": 65, "1279": 65, "1280": 65, "1281": 65, "1282": 65, "1283": 65, "1284": 65, "1285": 65, "1286": 65, "1287": 65, "1288": 65, "1289": 65, "1290": 65, "1291": 65, "1292": 65, "1293": 65, "1294": 65, "1295": 65, "1296": 65, "1297": 65, "1298": 65, "1299": 65, "1300": 65, "1301": 65, "1302": 65, "1303": 65, "1304": 65, "1305": 65, "1306": 65, "1307": 65, "1308": 65, "1309": 65, "1310": 65, "1311": 65, "1312": 65, "1313": [65, 73], "1314": 65, "1315": 65, "1316": 65, "1317": 65, "1318": 65, "1319": 65, "1320": 65, "1321": 65, "1322": 65, "1323": 65, "1324": 65, "1325": 65, "1326": 65, "1327": 65, "1328": 65, "1329": 65, "1330": 65, "1331": 65, "1332": 65, "1333": 65, "1334": 65, "1335": 65, "1336": 65, "1337": 65, "1338": [65, 72, 76], "1339": [65, 74], "1340": 65, "1341": 65, "1342": 65, "1343": 65, "1344": 65, "1345": [65, 73], "1346": 65, "1347": 65, "1348": 65, "1349": 65, "1350": 65, "1351": 65, "1352": 65, "1353": 65, "1354": 65, "1355": [65, 134], "1356": 65, "1357": [65, 73], "1358": 65, "1359": [65, 75], "1360": 65, "1361": 65, "1362": 65, "1363": 65, "1364": [65, 73], "1365": [65, 77], "1366": 65, "1367": [65, 131], "1368": 65, "1369": 65, "1370": 65, "1371": 65, "1372": 65, "1373": 65, "1374": 65, "1375": 65, "1376": 65, "1377": 65, "1378": 65, "1379": 65, "1380": 65, "1381": 65, "1382": [65, 69], "1383": [65, 141], "1384": 65, "1385": 65, "1386": 65, "1387": 65, "1388": 65, "1389": 65, "1390": 65, "1391": 65, "1392": 65, "1393": 65, "1394": 65, "1395": 65, "1396": 65, "1397": 65, "1398": 65, "1399": 65, "1400": 65, "1401": 65, "1402": 65, "1403": 65, "1404": 65, "1405": 65, "1406": 65, "1407": 65, "1408": 65, "1409": 65, "1410": 65, "1411": 65, "1412": 65, "1413": 65, "1414": 65, "1415": 65, "1416": 65, "1417": 65, "1418": 65, "1419": 65, "1420": 65, "1421": 65, "1422": 65, "1423": 65, "1424": [65, 106], "1425": 65, "1426": 65, "1427": 65, "1428": 65, "1429": 65, "1430": 65, "1431": 65, "1432": 65, "1433": 65, "1434": 65, "1435": 65, "1436": 65, "1437": 65, "1438": 65, "1439": 65, "1440": 65, "1441": 65, "1442": 65, "1443": 65, "1444": 65, "1445": 65, "1446": 65, "1447": 65, "1448": 65, "1449": 65, "1450": 65, "1451": 65, "1452": 65, "1453": 65, "1454": 65, "1455": 65, "1456": 65, "1457": 65, "1458": 65, "1459": 65, "1460": 65, "1461": 65, "1462": 65, "1463": 65, "1464": 65, "1465": 65, "1466": 65, "1467": 65, "1468": 65, "1469": 65, "1470": 65, "1471": 65, "1472": 65, "1473": 65, "1474": 65, "1475": 65, "1476": 65, "1477": 65, "1478": 65, "1479": 65, "1480": 65, "1481": 65, "1482": 65, "1483": 65, "1484": 65, "1485": 65, "1486": 65, "1487": 65, "1488": 65, "1489": 65, "1490": 65, "1491": [65, 73], "1492": 65, "1493": 65, "1494": 65, "1495": 65, "1496": 65, "1497": 65, "1498": 65, "1499": 65, "1500": [65, 143], "1501": 65, "1502": 65, "1503": 65, "1504": 65, "1505": 65, "1506": 65, "1507": [65, 97], "1508": 65, "1509": 65, "1510": 65, "1511": 65, "1512": 65, "1513": 65, "1514": 65, "1515": 65, "1516": 65, "1517": 65, "1518": 65, "1519": 65, "1520": 65, "1521": 65, "1522": 65, "1523": 65, "1524": 65, "1525": 65, "1526": 65, "1527": 65, "1528": 65, "1529": 65, "1530": 65, "1531": 65, "1532": [65, 68], "1533": 65, "1534": 65, "1535": 65, "1536": 65, "1537": 65, "1538": 65, "1539": 65, "1540": 65, "1541": 65, "1542": 65, "1543": 65, "1544": 65, "1545": 65, "1546": 65, "1547": 65, "1548": 65, "1549": 65, "1550": 65, "1551": 65, "1552": 65, "1553": 65, "1554": 65, "1555": 65, "1556": 65, "1557": 65, "1558": 65, "1559": 65, "1560": 65, "1561": [65, 96], "1562": 65, "1563": [65, 73], "1564": 65, "1565": [65, 75], "1566": 65, "1567": [65, 69], "1568": [65, 116], "1569": [65, 73], "1570": 65, "1571": 65, "1572": 65, "1573": 65, "1574": 65, "1575": 65, "1576": 65, "1577": 65, "1578": 65, "1579": 65, "1580": 65, "1581": 65, "1582": 65, "1583": 65, "1584": 65, "1585": 65, "1586": 65, "1587": 65, "1588": 65, "1589": 65, "1590": 65, "1591": 65, "1592": 65, "1593": 65, "1594": 65, "1595": 65, "1596": 65, "1597": 65, "1598": 65, "1599": 65, "1600": 65, "1601": 65, "1602": 65, "1603": 65, "1604": 65, "1605": 65, "1606": [65, 106], "1607": 65, "1608": 65, "1609": 65, "1610": 65, "1611": 65, "1612": 65, "1613": 65, "1614": 65, "1615": 65, "1616": 65, "1617": 65, "1618": 65, "1619": 65, "1620": 65, "1621": 65, "1622": 65, "1623": 65, "1624": 65, "1625": 65, "1626": 65, "1627": 65, "1628": 65, "1629": 65, "1630": 65, "1631": 65, "1632": 65, "1633": 65, "1634": 65, "1635": 65, "1636": 65, "1637": 65, "1638": 65, "1639": 65, "1640": 65, "1641": 65, "1642": 65, "1643": 65, "1644": 65, "1645": 65, "1646": 65, "1647": 65, "1648": 65, "1649": 65, "1650": 65, "1651": 65, "1652": 65, "1653": 65, "1654": 65, "1655": 65, "1656": 65, "1657": 65, "1658": 65, "1659": 65, "1660": 65, "1661": 65, "1662": 65, "1663": 65, "1664": 65, "1665": 65, "1666": 65, "1667": [65, 96], "1668": 65, "1669": 65, "1670": 65, "1671": 65, "1672": 65, "1673": 65, "1674": 65, "1675": 65, "1676": 65, "1677": 65, "1678": 65, "1679": 65, "1680": 65, "1681": 65, "1682": 65, "1683": 65, "1684": [65, 66], "1685": 65, "1686": 65, "1687": 65, "1688": 65, "1689": 65, "1690": 65, "1691": 65, "1692": 65, "1693": 65, "1694": 65, "1695": 65, "1696": 65, "1697": 65, "1698": 65, "1699": 65, "1700": 65, "1701": 65, "1702": 65, "1703": 65, "1704": 65, "1705": 65, "1706": [65, 130], "1707": 65, "1708": 65, "1709": 65, "1710": 65, "1711": 65, "1712": 65, "1713": 65, "1714": 65, "1715": 65, "1716": 65, "1717": 65, "1718": 65, "1719": [65, 68, 78], "1720": 65, "1721": 65, "1722": 65, "1723": 65, "1724": 65, "1725": 65, "1726": 65, "1727": [65, 68, 78], "1728": 65, "1729": [65, 70], "1730": 65, "1731": [65, 96], "1732": 65, "1733": 65, "1734": [65, 67, 69, 71], "1735": [65, 68], "1736": 65, "1737": 65, "1738": 65, "1739": 65, "1740": [65, 96], "1741": 65, "1742": [65, 66, 67, 70, 71, 96], "1743": 65, "1744": [65, 75], "1745": 65, "1746": 65, "1747": 65, "1748": 65, "1749": 65, "1750": [65, 130], "1751": 65, "1752": 65, "1753": 65, "1754": 65, "1755": [65, 98], "1756": [65, 98], "1757": [65, 98], "1758": [65, 98], "1759": [65, 98], "1760": [65, 77, 96, 98], "1761": [65, 98], "1762": [65, 98], "1763": [65, 98], "1764": 65, "1765": 65, "1766": 65, "1767": 65, "1768": [65, 68], "1769": 65, "1770": 65, "1771": 65, "1772": 65, "1773": [65, 69], "1774": 65, "1775": 65, "1776": 65, "1777": [65, 69], "1778": 65, "1779": 65, "1780": 65, "1781": 65, "1782": 65, "1783": 65, "1784": 65, "1785": 65, "1786": 65, "1787": 65, "1788": 65, "1789": 65, "1790": 65, "1791": 65, "1792": 65, "1793": 65, "1794": 65, "1795": 65, "1796": 65, "1797": 65, "1798": 65, "1799": 65, "1800": 65, "1801": [65, 73, 134], "1802": 65, "1803": 65, "1804": [65, 127], "1805": 65, "1806": 65, "1807": 65, "1808": 65, "1809": 65, "1810": 65, "1811": 65, "1812": 65, "1813": 65, "1814": 65, "1815": 65, "1816": [65, 96], "1817": 65, "1818": 65, "1819": 65, "1820": 65, "1821": 65, "1822": 65, "1823": 65, "1824": 65, "1825": 65, "1826": 65, "1827": 65, "1828": [65, 92], "1829": 65, "1830": 65, "1831": 65, "1832": 65, "1833": 65, "1834": 65, "1835": 65, "1836": 65, "1837": 65, "1838": 65, "1839": 65, "1840": 65, "1841": 65, "1842": 65, "1843": 65, "1844": 65, "1845": 65, "1846": 65, "1847": 65, "1848": 65, "1849": 65, "1850": 65, "1851": 65, "1852": 65, "1853": 65, "1854": 65, "1855": 65, "1856": 65, "1857": 65, "1858": 65, "1859": 65, "1860": 65, "1861": 65, "1862": 65, "1863": 65, "1864": 65, "1865": [65, 127], "1866": 65, "1867": 65, "1868": 65, "1869": 65, "1870": 65, "1871": 65, "1872": 65, "1873": 65, "1874": 65, "1875": 65, "1876": 65, "1877": 65, "1878": 65, "1879": 65, "1880": 65, "1881": 65, "1882": 65, "1883": 65, "1884": 65, "1885": 65, "1886": 65, "1887": 65, "1888": 65, "1889": 65, "1890": 65, "1891": [65, 95], "1892": [65, 95], "1893": 65, "1894": 65, "1895": 65, "1896": 65, "1897": 65, "1898": 65, "1899": 65, "1900": 65, "1901": 65, "1902": 65, "1903": 65, "1904": 65, "1905": 65, "1906": 65, "1907": 65, "1908": 65, "1909": 65, "1910": 65, "1911": 65, "1912": 65, "1913": 65, "1914": 65, "1915": [65, 95], "1916": 65, "1917": 65, "1918": 65, "1919": 65, "1920": 65, "1921": [65, 95], "1922": 65, "1923": [65, 95], "1924": 65, "1925": 65, "1926": 65, "1927": 65, "1928": 65, "1929": 65, "1930": [65, 95], "1931": 65, "1932": 65, "1933": 65, "1934": [65, 69, 95], "1935": 65, "1936": 65, "1937": 65, "1938": [65, 75], "1939": 65, "1940": 65, "1941": 65, "1942": 65, "1943": 65, "1944": [65, 95], "1945": 65, "1946": 65, "1947": [65, 69], "1948": 65, "1949": 65, "1950": 65, "1951": 65, "1952": 65, "1953": 65, "1954": 65, "1955": [65, 69], "1956": 65, "1957": 65, "1958": 65, "1959": 65, "1960": 65, "1961": 65, "1962": [65, 95], "1963": 65, "1964": 65, "1965": [65, 95], "1966": 65, "1967": 65, "1968": 65, "1969": [65, 78, 96], "1970": 65, "1971": 65, "1972": [65, 127], "1973": 65, "1974": 65, "1975": 65, "1976": 65, "1977": [65, 69], "1978": [65, 96, 130], "1979": 65, "1980": [65, 78, 96], "1981": [65, 78, 96, 143], "1982": 65, "1983": 65, "1984": 65, "1985": [65, 78, 96], "1986": 65, "1987": [65, 66, 78, 96], "1988": 65, "1989": 65, "1990": 65, "1991": 65, "1992": [65, 96], "1993": [65, 78, 96], "1994": [65, 77, 96, 128, 134], "1995": 65, "1996": [65, 69, 96], "1997": 65, "1998": [65, 73, 74, 77, 96], "1999": 65, "2000": [65, 128, 143], "2001": [65, 96], "2002": 65, "2003": 65, "2004": [65, 77, 96, 149, 151], "2005": [65, 128], "2006": 65, "2007": [65, 145, 151], "2008": 65, "2009": 65, "2010": [65, 77, 96], "2011": 65, "2013": 65, "2014": 65, "2015": [65, 78, 96], "2016": 65, "2017": [65, 77, 78, 96], "2018": 65, "2020": 65, "2021": 65, "2022": 65, "2024": 65, "2025": 65, "2026": [65, 75], "2027": 65, "2028": 65, "2029": 65, "2030": 65, "2031": 65, "2032": 65, "2033": 65, "2034": 65, "2035": 65, "2036": 65, "2037": 65, "2038": 65, "2039": 65, "2040": 65, "2041": 65, "2042": [65, 72, 76], "2043": 65, "2044": 65, "2045": 65, "2046": 65, "2047": 65, "2048": 65, "2049": 65, "2050": 65, "2051": 65, "2052": 65, "2053": 65, "2054": 65, "2055": 65, "2056": 65, "2057": 65, "2058": [65, 69], "2059": [65, 74], "2060": 65, "2061": 65, "2062": 65, "2063": 65, "2064": 65, "2065": 65, "2066": [65, 68, 78], "2067": 65, "2068": 65, "2069": 65, "2070": 65, "2071": 65, "2072": 65, "2073": 65, "2074": 65, "2075": 65, "2076": 65, "2077": 65, "2078": [65, 68, 127], "2079": 65, "2080": 65, "2081": 65, "2082": 65, "2083": 65, "2084": 65, "2085": 65, "2086": 65, "2087": 65, "2088": 65, "2089": 65, "2090": [65, 96], "2091": 65, "2092": 65, "2093": [65, 70], "2094": 65, "2095": [65, 66, 67, 70, 71, 96], "2096": 65, "2097": 65, "2098": 65, "2099": 65, "2100": 65, "2101": 65, "2102": 65, "2103": [65, 70], "2104": 65, "2105": 65, "2106": 65, "2107": 65, "2108": 65, "2109": [65, 106], "2110": 65, "2111": 65, "2112": [65, 95], "2113": 65, "2114": 65, "2115": 65, "2116": 65, "2117": 65, "2118": 65, "2119": 65, "2120": 65, "2121": 65, "2122": 65, "2123": 65, "2124": 65, "2125": 65, "2126": 65, "2127": 65, "2128": 65, "2129": 65, "2130": 65, "2131": 65, "2132": 65, "2133": 65, "2134": 65, "2135": 65, "2136": 65, "2137": 65, "2138": 65, "2139": 65, "2140": 65, "2141": 65, "2142": 65, "2143": 65, "2144": 65, "2145": 65, "2146": 65, "2147": 65, "2148": 65, "2149": 65, "2150": 65, "2151": 65, "2152": 65, "2153": 65, "2154": 65, "2155": 65, "2156": 65, "2157": [65, 95], "2158": 65, "2159": 65, "2160": 65, "2161": 65, "2162": 65, "2163": 65, "2164": 65, "2165": 65, "2166": 65, "2167": 65, "2168": 65, "2169": 65, "2170": 65, "2171": 65, "2172": 65, "2173": 65, "2174": 65, "2175": 65, "2176": 65, "2177": 65, "2178": [65, 68], "2179": 65, "2180": 65, "2181": 65, "2182": 65, "2183": 65, "2184": 65, "2185": 65, "2186": 65, "2187": 65, "2188": 65, "2189": 65, "2190": 65, "2191": 65, "2192": 65, "2193": 65, "2194": 65, "2195": 65, "2196": 65, "2197": 65, "2198": 65, "2199": 65, "2200": 65, "2201": 65, "2202": 65, "2203": 65, "2204": 65, "2205": 65, "2206": 65, "2207": 65, "2208": 65, "2209": 65, "2210": 65, "2211": [65, 67, 71], "2212": 65, "2213": 65, "2214": 65, "2215": 65, "2216": 65, "2217": 65, "2218": 65, "2219": 65, "2220": 65, "2221": 65, "2222": 65, "2223": 65, "2224": 65, "2225": 65, "2226": 65, "2227": 65, "2228": 65, "2229": 65, "2230": 65, "2231": 65, "2232": 65, "2233": 65, "2234": 65, "2235": 65, "2236": 65, "2237": 65, "2238": 65, "2239": 65, "2240": 65, "2241": 65, "2242": 65, "2243": 65, "2244": 65, "2245": 65, "2246": 65, "2247": 65, "2248": 65, "2249": 65, "2250": 65, "2251": 65, "2252": 65, "2253": [65, 72, 76], "2254": 65, "2255": 65, "2256": 65, "2257": 65, "2258": 65, "2259": 65, "2260": 65, "2261": 65, "2262": 65, "2263": 65, "2264": 65, "2265": [65, 74, 77], "2266": 65, "2267": 65, "2268": 65, "2269": 65, "2270": 65, "2271": 65, "2272": 65, "2273": 65, "2274": 65, "2275": 65, "2276": 65, "2277": 65, "2278": 65, "2279": 65, "2280": 65, "2281": 65, "2282": 65, "2283": 65, "2284": 65, "2285": 65, "2286": 65, "2287": 65, "2288": [65, 68], "2289": 65, "2290": 65, "2291": 65, "2292": 65, "2293": 65, "2294": 65, "2295": [65, 67, 71], "2296": [65, 68, 78], "2297": 65, "2298": 65, "2299": 65, "2300": 65, "2301": 65, "2302": 65, "2303": 65, "2304": 65, "2305": 65, "2306": 65, "2307": 65, "2308": 65, "2309": 65, "2310": 65, "2311": 65, "2312": 65, "2313": 65, "2314": 65, "2315": 65, "2316": [65, 96], "2317": 65, "2318": 65, "2319": 65, "2320": 65, "2321": 65, "2322": 65, "2323": 65, "2324": 65, "2325": 65, "2326": 65, "2327": 65, "2328": 65, "2329": 65, "2330": 65, "2331": 65, "2332": 65, "2333": 65, "2334": 65, "2335": 65, "2336": 65, "2337": 65, "2338": 65, "2339": 65, "2340": 65, "2341": 65, "2342": 65, "2343": 65, "2344": 65, "2345": 65, "2346": 65, "2347": [65, 73], "2348": 65, "2349": 65, "2350": 65, "2351": 65, "2352": 65, "2353": 65, "2354": 65, "2355": 65, "2356": 65, "2357": 65, "2358": 65, "2359": 65, "2360": 65, "2361": 65, "2362": 65, "2363": 65, "2364": 65, "2365": 65, "2366": 65, "2367": 65, "2368": 65, "2369": 65, "2370": 65, "2371": 65, "2372": 65, "2373": 65, "2374": 65, "2375": 65, "2376": 65, "2377": 65, "2378": 65, "2379": 65, "2380": 65, "2381": 65, "2382": 65, "2383": 65, "2384": 65, "2385": 65, "2386": 65, "2387": 65, "2388": 65, "2389": 65, "2390": 65, "2391": 65, "2392": 65, "2393": 65, "2394": 65, "2395": 65, "2396": 65, "2397": 65, "2398": [65, 68], "2399": 65, "2400": 65, "2401": 65, "2402": 65, "2403": 65, "2404": 65, "2405": 65, "2406": [65, 66, 67, 70, 71, 96], "2407": 65, "2408": 65, "2409": 65, "2410": 65, "2411": 65, "2412": 65, "2413": 65, "2414": 65, "2415": [65, 69], "2416": 65, "2417": 65, "2418": 65, "2419": [65, 75], "2420": 65, "2421": 65, "2422": 65, "2423": [65, 68, 78], "2424": [65, 130], "2425": 65, "2426": 65, "2427": 65, "2428": [65, 142], "2429": 65, "2430": 65, "2431": 65, "2432": 65, "2433": 65, "2434": 65, "2435": 65, "2436": 65, "2437": 65, "2438": 65, "2439": [65, 142], "2440": 65, "2441": 65, "2442": 65, "2443": 65, "2444": 65, "2445": 65, "2446": 65, "2447": 65, "2448": 65, "2449": 65, "2450": 65, "2451": 65, "2452": 65, "2453": 65, "2454": 65, "2455": 65, "2456": 65, "2457": 65, "2458": 65, "2459": 65, "2460": 65, "2461": 65, "2462": 65, "2463": 65, "2464": 65, "2465": 65, "2466": 65, "2467": 65, "2468": 65, "2469": 65, "2470": [65, 70], "2471": 65, "2472": [65, 128], "2473": 65, "2474": 65, "2476": 65, "2477": 65, "2479": 65, "2480": 65, "2481": 65, "2482": 65, "2483": 65, "2484": 65, "2485": 65, "2486": 65, "2487": 65, "2488": 65, "2489": [65, 130], "2490": 65, "2491": 65, "2492": 65, "2493": 65, "2494": [65, 142], "2495": 65, "2496": 65, "2497": 65, "2498": 65, "2499": [65, 68], "2500": 65, "2501": 65, "2502": [65, 67, 71], "2503": 65, "2504": 65, "2505": 65, "2506": 65, "2507": [65, 106], "2508": 65, "2509": 65, "2510": 65, "2511": 65, "2512": 65, "2513": 65, "2514": 65, "2515": 65, "2516": 65, "2517": 65, "2518": 65, "2519": 65, "2520": 65, "2521": 65, "2522": 65, "2523": 65, "2524": 65, "2525": 65, "2526": 65, "2527": 65, "2528": [65, 75], "2529": 65, "2530": [65, 75], "2531": 65, "2532": [65, 90, 100], "2533": 65, "2534": [65, 96], "2535": 65, "2536": 65, "2537": 65, "2538": 65, "2539": 65, "2540": 65, "2541": 65, "2542": 65, "2543": 65, "2544": 65, "2545": 65, "2546": 65, "2547": 65, "2548": [65, 75], "2549": 65, "2550": 65, "2551": 65, "2552": [65, 142], "2553": 65, "2554": 65, "2555": 65, "2556": 65, "2557": 65, "2558": 65, "2559": 65, "2560": 65, "2561": 65, "2562": 65, "2563": 65, "2564": 65, "2565": [65, 72], "2566": 65, "2567": [65, 76], "2568": 65, "2569": 65, "2570": 65, "2571": 65, "2572": 65, "2573": 65, "2574": 65, "2575": 65, "2576": 65, "2577": 65, "2578": 65, "2579": 65, "2580": 65, "2581": [65, 142], "2582": 65, "2583": [65, 69], "2584": 65, "2585": 65, "2586": 65, "2587": 65, "2588": [65, 75], "2589": 65, "2590": [65, 75], "2591": 65, "2592": 65, "2593": 65, "2594": 65, "2595": 65, "2596": 65, "2597": 65, "2598": 65, "2599": 65, "2600": 65, "2601": 65, "2602": 65, "2603": 65, "2604": 65, "2605": 65, "2606": 65, "2607": 65, "2608": 65, "2609": 65, "2610": 65, "2611": 65, "2612": 65, "2613": [65, 75], "2614": 65, "2615": 65, "2616": [65, 75], "2617": 65, "2618": 65, "2619": [65, 75], "2620": 65, "2621": 65, "2622": 65, "2623": 65, "2624": 65, "2625": 65, "2626": 65, "2627": 65, "2628": 65, "2629": [65, 75], "2630": [65, 74], "2631": 65, "2632": 65, "2633": 65, "2634": 65, "2635": 65, "2636": 65, "2637": 65, "2638": 65, "2639": 65, "2640": 65, "2641": 65, "2642": 65, "2643": 65, "2644": 65, "2645": 65, "2646": 65, "2647": 65, "2648": 65, "2649": 65, "2650": 65, "2651": 65, "2652": 65, "2653": 65, "2654": 65, "2655": 65, "2656": [65, 75], "2657": 65, "2658": 65, "2659": 65, "2660": [65, 75], "2661": 65, "2662": 65, "2663": 65, "2664": 65, "2665": 65, "2666": 65, "2667": 65, "2668": [65, 75], "2669": 65, "2670": 65, "2671": 65, "2672": 65, "2673": 65, "2674": 65, "2675": 65, "2676": 65, "2677": [65, 75], "2678": 65, "2679": 65, "2680": 65, "2681": 65, "2682": 65, "2683": 65, "2684": 65, "2685": 65, "2686": 65, "2687": 65, "2688": 65, "2689": 65, "2690": [65, 69], "2691": 65, "2692": 65, "2693": 65, "2694": 65, "2695": 65, "2696": 65, "2697": 65, "2698": 65, "2699": 65, "2700": 65, "2701": [65, 75], "2702": [65, 75], "2703": 65, "2704": 65, "2705": 65, "2706": 65, "2707": 65, "2708": [65, 75], "2709": 65, "2710": 65, "2711": 65, "2712": 65, "2713": 65, "2714": 65, "2715": 65, "2716": 65, "2717": [65, 75], "2718": 65, "2719": 65, "2720": 65, "2721": 65, "2722": 65, "2723": 65, "2724": 65, "2725": 65, "2726": 65, "2727": [65, 96], "2728": 65, "2729": 65, "2730": 65, "2731": 65, "2732": 65, "2733": [65, 72, 74, 76], "2734": 65, "2735": [65, 75], "2736": 65, "2737": 65, "2738": 65, "2739": 65, "2740": 65, "2741": 65, "2742": 65, "2743": 65, "2744": 65, "2745": 65, "2746": 65, "2747": 65, "2748": 65, "2749": 65, "2750": 65, "2751": 65, "2752": 65, "2753": 65, "2754": 65, "2755": 65, "2756": 65, "2757": 65, "2758": 65, "2759": 65, "2760": 65, "2761": 65, "2762": 65, "2763": 65, "2764": 65, "2765": 65, "2766": 65, "2767": 65, "2768": 65, "2769": 65, "2770": 65, "2771": 65, "2772": 65, "2773": 65, "2774": 65, "2775": 65, "2776": 65, "2777": 65, "2778": 65, "2779": 65, "2780": 65, "2781": 65, "2782": 65, "2783": 65, "2784": 65, "2785": 65, "2786": 65, "2787": 65, "2788": 65, "2789": 65, "2790": 65, "2791": 65, "2792": 65, "2793": 65, "2794": 65, "2795": 65, "2796": 65, "2797": 65, "2798": [65, 73], "2799": 65, "2800": 65, "2801": 65, "2802": 65, "2803": 65, "2804": 65, "2805": 65, "2806": 65, "2807": 65, "2808": 65, "2809": 65, "2810": 65, "2811": 65, "2812": 65, "2813": 65, "00000": [65, 70, 73, 74, 75, 88, 95, 96, 116, 127], "00001": 65, "28090": 65, "28101": 65, "28110": 65, "28120": 65, "28130": 65, "establish": [65, 135], "move": 65, "cursor": [65, 97], "hover": [65, 97, 114, 117], "contemporan": [65, 70], "markov": [66, 69, 78, 96, 132, 153], "barri": [66, 78, 96], "hartigan": [66, 78, 96], "bh": [66, 78, 96], "nfp": [66, 68, 69, 71, 72, 73, 74, 75, 76, 77, 78, 96, 144], "dlc": [66, 68, 69, 71, 72, 73, 74, 75, 76, 77, 78], "unique_q": [66, 68, 69, 71, 72, 73, 74, 75, 76, 77, 78], "6941": 66, "6028": 66, "keylnlnfpdlcunique_q": [66, 68, 69, 71, 76, 77, 78], "6028132truetru": 66, "stand": [66, 137], "largest": [66, 69], "lf": [66, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 96, 128, 130, 134, 136, 139, 140, 141, 142, 143, 144], "motif2": 66, "psub": 66, "galago": [66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 87, 94, 95, 96, 97, 128], "8750": [66, 131, 136, 140], "0649": [66, 73], "0409": [66, 130], "0192": [66, 72, 73, 74, 75, 76], "8058": 66, "0404": [66, 75, 130], "0413": 66, "0255": 66, "8879": 66, "0611": 66, "0207": [66, 69], "0194": 66, "7915": 66, "howlermon": [66, 67, 68, 70, 71, 72, 73, 74, 75, 76, 77, 78, 87, 90, 93, 94, 95, 96, 97, 100, 105, 125, 126, 127, 128, 131, 134, 136, 138, 140, 141], "9688": 66, "0241": 66, "0041": 66, "0030": 66, "0374": 66, "9407": 66, "0069": [66, 72, 73, 74, 75, 76], "0150": 66, "0038": [66, 77], "9591": 66, "0333": 66, "0031": 66, "0068": 66, "0406": 66, "9494": 66, "rhesu": [66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 87, 94, 95, 96, 97, 128], "9879": 66, "0078": [66, 67, 68, 71, 72, 73, 74, 75, 76], "0015": [66, 72, 73, 74, 75, 76], "0028": [66, 67, 68, 70, 71, 78, 96], "0187": [66, 72, 73, 74, 75, 76], "9710": 66, "0040": [66, 72, 73, 74, 75, 76, 95, 142], "0063": [66, 70, 77], "0019": 66, "0009": [66, 72, 73, 74, 75, 76], "9850": 66, "0122": [66, 77], "0017": 66, "0295": 66, "9620": 66, "orangutan": [66, 67, 68, 70, 71, 72, 73, 74, 75, 76, 77, 78, 87, 94, 95, 96, 97, 113, 128], "9911": [66, 70], "0059": 66, "0082": [66, 72, 73, 74, 75, 76], "9898": 66, "0020": 66, "9952": 66, "0073": 66, "9910": 66, "gorilla": [66, 67, 68, 70, 71, 72, 73, 74, 75, 76, 77, 78, 87, 94, 95, 96, 97, 128, 138], "9980": 66, "0010": 66, "9962": 66, "0029": 66, "0033": [66, 67, 68, 71, 77], "9967": 66, "9941": 66, "9918": 66, "9971": 66, "0083": [66, 77], "9900": 66, "chimpanze": [66, 67, 68, 70, 71, 72, 73, 74, 75, 76, 77, 78, 87, 94, 95, 96, 128], "9956": 66, "0044": 66, "9959": 66, "9990": 66, "9946": 66, "0054": [66, 95], "9868": 66, "0025": [66, 67, 68, 70, 71, 78, 95, 96], "0034": [66, 68, 70, 78, 96], "0121": [66, 67, 68, 70, 71], "9797": 66, "9916": 66, "0065": [66, 77], "0057": 66, "9926": 66, "9913": 66, "0043": [66, 77], "0045": 66, "0023": [66, 72, 73, 74, 75, 76, 95], "9933": 66, "0018": [66, 72, 73, 74, 75, 76, 95], "9920": [66, 92], "0053": [66, 95], "0011": [66, 72, 73, 74, 75, 76], "9948": 66, "3757": [66, 67, 70, 71, 96], "edgemotifmotif2psub": 66, "galagott0": 66, "galagotc0": 66, "galagota0": 66, "galagotg0": 66, "galagoct0": 66, "3ag0": 66, "3gt0": 66, "3gc0": 66, "3ga0": 66, "3gg0": 66, "acgt": [66, 67, 68, 69, 70, 71, 78, 90, 96, 131, 134, 140, 141, 142, 143], "37570": [66, 67, 70, 71, 96], "17420": [66, 67, 70, 71, 96], "20950": [66, 67, 70, 71, 96], "fig": [66, 70, 76, 97, 115, 117, 119, 120, 121, 122, 123], "scale_bar": [66, 76, 120, 122, 123], "But": [66, 107, 108, 135], "continu": [66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 96, 106, 128, 130, 145], "tabul": [66, 67], "tabulate_stat": [66, 75], "2x": 66, "behaviour": [67, 69, 92, 96, 128], "homogen": 67, "rate": [67, 132, 136], "scalar": [67, 71, 108], "0450": [67, 68, 70, 71], "0215": [67, 68, 71, 78], "0061": [67, 68, 70, 71, 96, 142], "0077": [67, 68, 70, 71, 77, 78, 96, 116], "edgeparentlength": [67, 68, 69, 71, 72, 73, 75, 76, 77, 78, 96, 128, 130, 131, 134, 140, 142, 143], "galagoroot0": [67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 96, 128], "howlermonroot0": [67, 68, 70, 71, 72, 73, 74, 75, 76, 77, 78, 96, 128], "rhesusedg": [67, 68, 70, 71, 72, 73, 74, 75, 76, 77, 78, 96, 128], "orangutanedg": [67, 68, 70, 71, 72, 73, 74, 75, 76, 77, 78, 96, 128], "gorillaedg": [67, 68, 70, 71, 72, 73, 74, 75, 76, 77, 78, 96, 128], "humanedg": [67, 68, 70, 71, 72, 73, 74, 75, 76, 77, 78, 96, 128, 130, 131, 134, 140, 141], "chimpanzeeedg": [67, 68, 70, 71, 72, 73, 74, 75, 76, 77, 78, 96, 128], "0edg": [67, 68, 70, 71, 72, 73, 74, 75, 76, 77, 78, 96, 128, 130, 131, 134, 140, 141], "1edg": [67, 68, 70, 71, 72, 73, 74, 75, 76, 77, 78, 96, 128], "2edg": [67, 68, 70, 71, 72, 73, 74, 75, 76, 77, 78, 96, 128], "3root0": [67, 68, 70, 71, 72, 73, 74, 75, 76, 77, 78, 96, 128], "en": [67, 69, 71, 122, 135], "kaehler": [67, 69, 76, 77, 78, 96], "stationari": [67, 78, 84, 96, 122, 131, 153], "dure": [67, 87, 94, 96, 98, 107, 108, 146], "optimis": [67, 77, 78, 95, 128, 130, 131, 134, 136, 138, 139, 140, 141, 142, 144], "8699": [67, 71], "6639": [67, 71], "9110": [67, 71], "5906": [67, 71], "0239": [67, 69, 71, 77], "6296": [67, 71], "4167": [67, 71, 96], "ca": [67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 88, 90, 91, 96, 106, 128, 134, 143], "ga": [67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 91, 96, 128, 134], "tc": [67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 91, 96, 106, 128, 129, 134, 143], "tg": [67, 68, 69, 71, 72, 73, 74, 75, 76, 90, 91], "ag": [67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 90, 91, 93, 124, 143], "cg": [67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 90, 91], "tt": [67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 88, 91, 93, 97, 124, 137, 143], "86993": [67, 71], "66390": [67, 71], "91101": [67, 71], "59062": [67, 71], "12456": [67, 71], "02398": [67, 71], "22111": [67, 71], "22950": [67, 71], "62961": [67, 71], "gtr": [68, 77, 96, 128], "suffici": 68, "alt": [68, 72, 73, 74, 75, 96, 131, 136], "hyp": 68, "degre": [68, 96, 134, 140, 141], "freedom": [68, 96, 134, 140, 141], "lr": [68, 72, 73, 74, 75, 96, 128, 131, 134, 140, 144], "df": [68, 72, 73, 74, 75, 96, 101, 106, 128, 134, 140, 144], "pvalu": [68, 72, 73, 74, 75, 106], "3813": [68, 127], "6992": [68, 78, 96], "5741": [68, 78], "6987": [68, 71], "8834": 68, "lrdfpvalu": [68, 72, 73, 74, 75], "381360": 68, "hypothesiskeylnlnfpdlcunique_q": [68, 72, 73, 74, 75], "574119truetru": [68, 78], "883425truetru": 68, "05": [68, 106, 116, 137, 138], "381277658578256": 68, "1532433452114287": 68, "9472": [68, 78], "3389": [68, 78], "9665": [68, 78], "0448": [68, 78], "0060": [68, 78], "0119": [68, 78], "3792": [68, 78], "global": [68, 69, 71, 72, 73, 74, 75, 76, 77, 78, 96, 108, 128, 131, 134, 140, 141, 142, 144], "22965": [68, 78], "24780": [68, 78], "94722": [68, 78], "33895": [68, 78], "37920": [68, 78], "17190": [68, 78], "20660": [68, 78], "8700": 68, "6670": 68, "9111": 68, "5925": 68, "0324": [68, 130], "6294": 68, "4136": 68, "3756": 68, "87003": 68, "66700": 68, "91111": 68, "59252": 68, "12646": 68, "03248": 68, "21781": 68, "22880": 68, "62941": 68, "37560": 68, "17680": 68, "20780": [68, 127], "flexibl": [68, 108, 137], "downstream": 68, "myresult": 68, "select_seq": [69, 87], "take_named_seq": [69, 87], "henc": 69, "sm": [69, 71, 96, 130, 134, 136, 140, 141, 143], "unique_tre": [69, 71], "tree_func": [69, 71], "sm_arg": [69, 71], "lf_arg": [69, 71], "time_het": [69, 70, 71], "param_rul": [69, 71], "opt_arg": [69, 71], "split_codon": [69, 71], "quantiti": 69, "5964": 69, "258314truetru": 69, "0636": 69, "0209": 69, "7945": 69, "3268": 69, "6769": 69, "0617": 69, "8312": 69, "5002": 69, "5618": 69, "0213": [69, 72, 73, 74, 75, 76], "3793": 69, "06363": 69, "19471": 69, "02091": 69, "79452": 69, "32685": 69, "67699": 69, "06171": 69, "11270": 69, "83121": 69, "humanroot0": [69, 142], "rhesusroot0": 69, "37930": 69, "17340": 69, "20580": 69, "258307123581": 69, "Of": [69, 84, 131], "signific": [69, 84, 128, 131], "2814": [69, 97], "tgtggcacaaa": [69, 90, 96, 97, 100], "tgtggcaaaaa": [69, 97], "length_a": 69, "9292257668810899": 69, "5867": 69, "4461": 69, "7571": 69, "4200": 69, "446142truetru": 69, "757114": 69, "269014": 69, "420014": 69, "achiev": [69, 90, 92, 96, 97, 123], "7529": 69, "4660": 69, "4151": 69, "3739": 69, "4118": 69, "8499": 69, "0220": [69, 77], "7348": 69, "9255": 69, "2915": 69, "0316": 69, "3443": 69, "3607": 69, "75293": 69, "46602": 69, "41512": 69, "37393": 69, "411816": 69, "125816": 69, "84992": 69, "02201": 69, "AT": [69, 70, 90, 91, 137], "92555": 69, "34430": 69, "13820": 69, "15670": 69, "term": [70, 77, 96, 123, 128], "highlight": 70, "style_edg": [70, 120, 122], "tip2": [70, 74, 75, 120, 122], "outgroup": 70, "red": 70, "ingroup": 70, "interest": [70, 73, 74, 90, 96, 108, 131, 137, 141], "outsid": [70, 97, 117], "suffic": 70, "outcom": 70, "black": [70, 149], "6982": 70, "2973": 70, "7829": [70, 73], "0384": [70, 142], "7245": 70, "0214": [70, 77], "5007": 70, "9013": 70, "3245": 70, "3345": 70, "0174": 70, "7649": 70, "4581": 70, "5748": 70, "3533": 70, "9564": 70, "6225": 70, "3394": 70, "edgeparentlengtha": 70, "17291": 70, "00633": 70, "78291": [70, 73], "03841": 70, "72452": 70, "32456": 70, "04501": 70, "02141": 70, "00770": [70, 77, 116], "21033": 70, "50070": 70, "20930": 70, "90131": 70, "35334": 70, "00250": 70, "00610": 70, "00280": 70, "00340": 70, "01211": 70, "00761": 70, "01741": 70, "24700": 70, "76491": 70, "45813": 70, "62251": 70, "11480": 70, "33942": 70, "9604": 71, "960422truetru": 71, "emploi": [72, 74, 85, 131], "hypothes": [72, 85, 131], "\u03c9": 72, "nonsynonym": [72, 96, 128, 141], "idea": [72, 74, 124, 135], "omega_eq_1": 72, "gnc": [72, 73, 74, 75, 77, 96, 153], "hypothesis_result": 72, "5034": 72, "0338": 72, "hypothesi": [72, 73, 74, 75, 76, 83, 96, 131, 136], "6715": 72, "5250": 72, "6713": [72, 74, 76], "503410": 72, "525022truetru": 72, "273323truetru": [72, 74, 76], "8614": 72, "5373": [72, 144], "9792": [72, 76], "6667": 72, "9195": 72, "8014": 72, "2911": [72, 76], "0723": 72, "8204": [72, 76], "5232": [72, 76], "0640": [72, 74, 76], "0233": [72, 73, 74, 76, 77], "0075": [72, 73, 74, 75, 76, 77], "0182": [72, 73, 74, 75, 76, 77], "0085": [72, 73, 74, 75, 76, 77], "0100": [72, 74, 76], "0366": [72, 74, 76], "0238": [72, 73, 74, 75, 76, 77], "aaa": [72, 73, 74, 75, 76, 77, 90, 91, 96, 98, 109, 128, 129], "aac": [72, 73, 74, 75, 76, 77, 90, 91, 96, 97, 98, 100, 109, 128], "aag": [72, 73, 74, 75, 76, 77, 90, 91, 96, 98, 109, 128], "aat": [72, 73, 74, 75, 76, 77, 90, 91, 96, 98, 109, 128], "aca": [72, 73, 74, 75, 76, 77, 90, 91, 96, 98, 109, 128], "acc": [72, 73, 74, 75, 76, 77, 90, 91, 96, 98, 109, 128], "acg": [72, 73, 74, 75, 76, 77, 90, 91, 96, 98, 103, 109, 128], "0556": [72, 73, 74, 75, 76], "0235": [72, 73, 74, 75, 76], "0344": [72, 73, 74, 75, 76], "0228": [72, 73, 74, 75, 76, 77], "0046": [72, 73, 74, 75, 76], "0008": [72, 73, 74, 75, 76], "0289": [72, 73, 74, 75, 76], "aga": [72, 73, 74, 75, 76, 77, 90, 91, 96, 98, 109, 128], "agc": [72, 73, 74, 75, 76, 77, 90, 91, 96, 98, 109, 128], "agg": [72, 73, 74, 75, 76, 77, 90, 91, 96, 98, 103, 109, 128], "agt": [72, 73, 74, 75, 76, 77, 90, 91, 96, 98, 109, 128], "ata": [72, 73, 74, 75, 76, 77, 90, 91, 96, 98, 109, 128], "atc": [72, 73, 74, 75, 76, 77, 90, 91, 96, 98, 109, 128], "atg": [72, 73, 74, 75, 76, 77, 90, 91, 96, 98, 109, 128], "att": [72, 73, 74, 75, 76, 77, 90, 91, 96, 98, 109, 128], "0231": [72, 73, 74, 75, 76], "0286": [72, 73, 74, 75, 76], "0140": [72, 73, 74, 75, 76, 95], "0381": [72, 73, 74, 75, 76], "0186": [72, 73, 74, 75, 76], "0070": [72, 73, 74, 75, 76], "0128": [72, 73, 74, 75, 76], "caa": [72, 73, 74, 75, 76, 77, 90, 91, 96, 98, 109, 128], "cac": [72, 73, 74, 75, 76, 77, 90, 91, 96, 98, 109, 128], "cag": [72, 73, 74, 75, 76, 77, 90, 91, 96, 98, 109, 128], "cat": [72, 73, 74, 75, 76, 77, 90, 91, 96, 98, 109, 114, 128], "cca": [72, 73, 74, 75, 76, 77, 90, 91, 93, 96, 98, 109, 124, 128], "ccc": [72, 73, 74, 75, 76, 77, 90, 91, 96, 97, 98, 109, 128], "ccg": [72, 73, 74, 75, 76, 77, 90, 91, 96, 98, 109, 128], "cct": [72, 73, 74, 75, 76, 77, 90, 91, 96, 98, 109, 128], "0196": [72, 73, 74, 75, 76], "0052": [72, 73, 74, 75, 76], "0221": [72, 73, 74, 75, 76], "0195": [72, 73, 74, 75, 76], "0062": [72, 73, 74, 75, 76], "0006": [72, 73, 74, 75, 76], "0263": [72, 73, 74, 75, 76, 77], "cga": [72, 73, 74, 75, 76, 77, 90, 91, 96, 98, 109, 128], "cgc": [72, 73, 74, 75, 76, 77, 90, 91, 96, 98, 109, 128], "cgg": [72, 73, 74, 75, 76, 77, 90, 91, 96, 98, 109, 128], "cgt": [72, 73, 74, 75, 76, 77, 90, 91, 96, 98, 109, 128], "cta": [72, 73, 74, 75, 76, 77, 90, 91, 96, 98, 109, 128, 129, 143], "ctc": [72, 73, 74, 75, 76, 77, 90, 91, 96, 98, 109, 128, 129], "ctg": [72, 73, 74, 75, 76, 77, 90, 91, 96, 98, 109, 128], "ctt": [72, 73, 74, 75, 76, 77, 90, 91, 96, 98, 109, 128], "0032": [72, 73, 74, 75, 76], "0137": [72, 73, 74, 75, 76, 95], "0125": [72, 73, 74, 75, 76], "0105": [72, 73, 74, 75, 76, 77, 130], "gaa": [72, 73, 74, 75, 76, 77, 90, 91, 96, 98, 109, 128, 129], "gac": [72, 73, 74, 75, 76, 77, 90, 91, 96, 98, 109, 128], "gag": [72, 73, 74, 75, 76, 77, 90, 91, 96, 98, 109, 128], "gat": [72, 73, 74, 75, 76, 77, 90, 91, 96, 98, 109, 128], "gca": [72, 73, 74, 75, 76, 77, 90, 91, 96, 98, 109, 128], "gcc": [72, 73, 74, 75, 76, 77, 90, 91, 96, 98, 109, 128], "gcg": [72, 73, 74, 75, 76, 77, 90, 91, 96, 98, 109, 128], "gct": [72, 73, 74, 75, 76, 77, 90, 91, 96, 98, 100, 109, 128], "0755": [72, 73, 74, 75, 76], "0303": [72, 73, 74, 75, 76], "0315": [72, 73, 74, 75, 76], "0158": [72, 73, 74, 75, 76], "0096": [72, 73, 74, 75, 76, 95], "0014": [72, 73, 74, 75, 76, 95], "gga": [72, 73, 74, 75, 76, 77, 90, 91, 96, 98, 109, 128], "ggc": [72, 73, 74, 75, 76, 77, 90, 91, 96, 98, 109, 128], "ggt": [72, 73, 74, 75, 76, 77, 90, 91, 96, 98, 109, 128], "gta": [72, 73, 74, 75, 76, 77, 90, 91, 96, 98, 109, 128], "gtc": [72, 73, 74, 75, 76, 77, 90, 91, 96, 98, 109, 128], "gtg": [72, 73, 74, 75, 76, 77, 90, 91, 96, 98, 109, 128], "gtt": [72, 73, 74, 75, 76, 77, 90, 91, 96, 97, 98, 109, 128], "0161": [72, 73, 74, 75, 76], "0090": [72, 73, 74, 75, 76], "0067": [72, 73, 74, 75, 76], "0133": [72, 73, 74, 75, 76], "0148": [72, 73, 74, 75, 76, 130], "tac": [72, 73, 74, 75, 76, 77, 90, 91, 96, 98, 109, 128], "tat": [72, 73, 74, 75, 76, 77, 90, 91, 96, 98, 109, 128, 143], "tca": [72, 73, 74, 75, 76, 77, 90, 91, 96, 98, 109, 128], "tcc": [72, 73, 74, 75, 76, 77, 90, 91, 96, 98, 103, 109, 128], "tcg": [72, 73, 74, 75, 76, 77, 90, 91, 96, 98, 109, 128, 143], "tct": [72, 73, 74, 75, 76, 77, 90, 91, 96, 98, 109, 128], "tgc": [72, 73, 74, 75, 76, 77, 90, 91, 96, 98, 109, 128], "tgg": [72, 73, 74, 75, 76, 77, 90, 91, 96, 98, 109, 128], "0101": [72, 73, 74, 75, 76, 77], "0251": [72, 73, 74, 75, 76], "tgt": [72, 73, 74, 75, 76, 77, 90, 91, 96, 98, 109, 128], "tta": [72, 73, 74, 75, 76, 77, 90, 91, 96, 98, 109, 128], "ttg": [72, 73, 74, 75, 76, 77, 90, 91, 96, 98, 109, 128], "0201": [72, 73, 74, 75, 76, 77], "0212": [72, 73, 74, 75, 76], "0108": [72, 73, 74, 75, 76], "86143": 72, "53730": 72, "97921": [72, 76], "66672": 72, "20426": [72, 76], "25657": 72, "91951": 72, "22530": [72, 76], "80141": 72, "comega": [72, 76], "07230": 72, "aaaaacaagaatacaaccacgactagaagc": [72, 73, 74, 75, 76, 77], "05560": [72, 73, 74, 75, 76], "02350": [72, 73, 74, 75, 76], "03440": [72, 73, 74, 75, 76], "02280": [72, 73, 74, 75, 76, 77], "00460": [72, 73, 74, 75, 76], "00080": [72, 73, 74, 75, 76], "02890": [72, 73, 74, 75, 76], "02310": [72, 73, 74, 75, 76], "aggagtataatcatgattcaacaccagcat": [72, 73, 74, 75, 76, 77], "01400": [72, 73, 74, 75, 76, 95], "03810": [72, 73, 74, 75, 76], "01860": [72, 73, 74, 75, 76], "00700": [72, 73, 74, 75, 76], "01280": [72, 73, 74, 75, 76], "01920": [72, 73, 74, 75, 76], "01960": [72, 73, 74, 75, 76], "00520": [72, 73, 74, 75, 76], "02380": [72, 73, 74, 75, 76, 77], "ccacccccgcctcgacgccggcgtctactc": [72, 73, 74, 75, 76, 77], "01950": [72, 73, 74, 75, 76], "00620": [72, 73, 74, 75, 76], "00060": [72, 73, 74, 75, 76], "02630": [72, 73, 74, 75, 76, 77], "00110": [72, 73, 74, 75, 76], "00090": [72, 73, 74, 75, 76], "00230": [72, 73, 74, 75, 76], "00320": [72, 73, 74, 75, 76], "01370": [72, 73, 74, 75, 76, 95], "ctgcttgaagacgaggatgcagccgcggct": [72, 73, 74, 75, 76, 77], "01250": [72, 73, 74, 75, 76], "01050": [72, 73, 74, 75, 76, 77, 130], "07550": [72, 73, 74, 75, 76], "03030": [72, 73, 74, 75, 76], "03150": [72, 73, 74, 75, 76], "01580": [72, 73, 74, 75, 76], "00960": [72, 73, 74, 75, 76], "00140": [72, 73, 74, 75, 76], "ggaggcgggggtgtagtcgtggtttactat": [72, 73, 74, 75, 76, 77], "01610": [72, 73, 74, 75, 76], "00900": [72, 73, 74, 75, 76], "00670": [72, 73, 74, 75, 76], "01330": [72, 73, 74, 75, 76], "01480": [72, 73, 74, 75, 76, 130], "00690": [72, 73, 74, 75, 76], "02130": [72, 73, 74, 75, 76], "tcatcctcgtcttgctggtgtttattcttg": [72, 73, 74, 75, 76, 77], "02210": [72, 73, 74, 75, 76], "00820": [72, 73, 74, 75, 76], "00150": [72, 73, 74, 75, 76], "02510": [72, 73, 74, 75, 76], "00180": [72, 73, 74, 75, 76], "00400": [72, 73, 74, 75, 76], "02010": [72, 73, 74, 75, 76, 77], "02120": [72, 73, 74, 75, 76], "00780": [72, 73, 74, 75, 76], "evid": [73, 96], "nielsen": [73, 128], "yang": [73, 74, 77, 96, 128, 130, 134], "sites_diff": 73, "4048": 73, "4954": 73, "6708": [73, 75], "3119": [73, 75], "6707": 73, "6095": 73, "404820": 73, "311924truetru": [73, 75], "609526truetru": 73, "bin": [73, 75, 96, 128, 131, 139], "ve": [73, 90, 96, 98, 124, 141], "purifi": 73, "oomega": 73, "neutral": [73, 75, 96, 132], "bprob": [73, 75, 96, 128, 131, 139], "8530": 73, "5645": 73, "9734": 73, "6404": 73, "3218": 73, "0813": 73, "0292": 73, "8052": 73, "0905": 73, "5463": 73, "0099": [73, 75], "0364": 73, "85303": 73, "56450": 73, "97341": 73, "64042": 73, "18016": 73, "32188": 73, "08131": 73, "23470": 73, "binbprobsomega": [73, 128], "ve0": 73, "10431": 73, "00000180040339e": 73, "neutral0": [73, 128], "80521": 73, "090519": 73, "999999990042948": 73, "get_bin_prob": [73, 75, 128, 131], "0839": 73, "0843": 73, "0798": 73, "0760": 73, "0937": 73, "5173": 73, "0695": 73, "7725": 73, "8127": 73, "8643": 73, "7851": [73, 77], "7961": 73, "7668": 73, "8125": 73, "7927": 73, "8032": 73, "8141": 73, "8164": 73, "8070": 73, "8655": 73, "7671": 73, "4824": 73, "8197": 73, "7909": 73, "0784": 73, "0837": 73, "0893": 73, "0764": 73, "0882": 73, "0948": 73, "0993": 73, "0766": 73, "0003": 73, "0875": 73, "012345678910111213141516171819": [73, 75], "14910": 73, "08390": 73, "13130": 73, "11460": 73, "15690": 73, "08430": 73, "11910": 73, "10200": 73, "07980": 73, "07600": 73, "09370": 73, "15630": 73, "51730": 73, "06950": 73, "77250": 73, "81270": 73, "86430": 73, "78510": 73, "79610": 73, "76680": 73, "81250": 73, "79270": 73, "80320": 73, "81410": 73, "81640": 73, "80700": 73, "86550": 73, "76710": 73, "48240": 73, "81970": 73, "07840": 73, "10340": 73, "13570": 73, "08370": 73, "08930": 73, "07640": 73, "10320": 73, "08820": 73, "09480": 73, "10610": 73, "10760": 73, "09930": 73, "13450": 73, "07660": 73, "00030": 73, "11080": 73, "lineag": [74, 75, 96, 141], "hc_differ": 74, "9248": 74, "0265": 74, "6710": 74, "8109": 74, "924810": 74, "810924truetru": 74, "8620": 74, "5361": 74, "9790": 74, "6698": 74, "9209": 74, "8024": 74, "2882": 74, "0675": 74, "5237": 74, "7906": 74, "6351": 74, "86203": 74, "53610": 74, "97901": 74, "66982": 74, "20596": 74, "26307": 74, "92091": 74, "22650": [74, 77], "80241": 74, "edgeparentlengthomega": [74, 96, 134, 141], "52370": 74, "13390": 74, "06400": 74, "02330": 74, "00750": 74, "01822": 74, "00852": 74, "01000": 74, "03660": 74, "zhang": [75, 78, 96, 128], "undergon": 75, "group": [75, 128], "adapt": [75, 128], "foreground": [75, 128], "ll": [75, 89, 90, 106, 112, 119, 124, 127, 128, 131, 134, 136, 137, 138, 139, 141, 143, 144], "scope": [75, 128, 134, 144], "succinct": [75, 128, 133, 138], "zhang_test": 75, "9647": 75, "6705": 75, "8296": 75, "964730": 75, "829627truetru": 75, "8555": 75, "5345": 75, "9745": 75, "6587": 75, "0109": 75, "7942": 75, "9646": 75, "0531": 75, "2a": [75, 97, 128], "2b": [75, 97, 128], "6409": 75, "5420": 75, "0648": 75, "0365": 75, "0234": 75, "85553": 75, "53450": 75, "97451": 75, "65872": 75, "19386": 75, "25888": 75, "01091": 75, "24190": 75, "79421": 75, "binbprob": 75, "2a0": 75, "2b0": 75, "edgebinomega": 75, "galago01": 75, "000000086913439e": 75, "galago11": 75, "galago2a1": 75, "galago2b1": 75, "howlermon01": 75, "howlermon11": 75, "howlermon2a1": 75, "howlermon2b1": 75, "rhesus01": 75, "rhesus11": 75, "rhesus2a1": 75, "rhesus2b1": 75, "orangutan01": 75, "orangutan11": 75, "orangutan2a1": 75, "orangutan2b1": 75, "gorilla01": 75, "gorilla11": 75, "gorilla2a1": 75, "gorilla2b1": 75, "human01": 75, "human11": 75, "human2a19": 75, "999999907793505": 75, "human2b19": 75, "chimpanzee01": 75, "chimpanzee11": 75, "chimpanzee2a19": 75, "chimpanzee2b19": 75, "011": [75, 90], "02a1": 75, "02b1": 75, "12a1": 75, "12b1": 75, "22a1": 75, "22b1": 75, "32a1": 75, "32b1": 75, "0758": 75, "0427": 75, "0670": 75, "0585": [75, 130], "0800": 75, "0429": 75, "0607": 75, "0518": 75, "0410": [75, 95], "0392": 75, "0479": 75, "0796": 75, "0355": 75, "0619": 75, "2931": 75, "2928": 75, "0568": 75, "0329": 75, "0505": 75, "0444": 75, "0598": 75, "0331": 75, "0460": 75, "0396": [75, 95], "0318": 75, "0368": 75, "0595": 75, "0276": 75, "0469": [75, 130], "6126": 75, "6542": 75, "7069": 75, "6236": 75, "6341": 75, "6074": 75, "6539": 75, "6314": 75, "6426": 75, "6564": 75, "6588": 75, "6475": 75, "7072": 75, "6079": 75, "3794": 75, "6635": 75, "6299": 75, "07580": 75, "04270": 75, "06700": 75, "05850": [75, 130], "08000": 75, "04290": 75, "06070": 75, "05180": 75, "04100": [75, 95], "03920": 75, "04790": 75, "07960": 75, "26160": 75, "03550": 75, "25480": 75, "27020": 75, "29310": 75, "25900": 75, "26290": 75, "25280": 75, "27010": 75, "26190": 75, "26600": 75, "27080": 75, "27170": 75, "26770": 75, "29280": 75, "25300": 75, "15650": 75, "27350": 75, "05680": 75, "03290": 75, "05050": 75, "04440": 75, "05980": 75, "03310": 75, "04600": 75, "03960": [75, 95], "03180": 75, "03680": 75, "05950": 75, "20260": 75, "02760": 75, "61260": 75, "65420": 75, "70690": 75, "62360": 75, "63410": 75, "60740": 75, "65390": 75, "63140": 75, "64260": 75, "65640": 75, "65880": 75, "64750": 75, "70720": 75, "60790": 75, "37940": 75, "66350": 75, "formal": [76, 115, 131], "elsewher": [76, 138], "abbrevi": [76, 77, 78, 95, 96, 103], "8615": 76, "5374": 76, "6668": 76, "9197": 76, "8015": 76, "0724": [76, 101, 106], "86153": 76, "53740": 76, "66682": 76, "25677": 76, "91971": 76, "80151": 76, "07240": 76, "cnfgtr": [77, 96, 128], "analag": [77, 96], "yap": [77, 78, 96, 128], "lindsai": [77, 96, 128, 151], "easteal": [77, 96, 128], "huttlei": [77, 78, 96, 124, 126, 127, 128, 130, 131, 134, 136, 137, 138, 139, 140, 141, 142, 143, 144, 151], "mol": [77, 96, 128], "biol": [77, 78, 96, 128, 145, 151], "evol": [77, 96, 128], "hky": [77, 96, 128, 131, 136], "transit": [77, 93, 96, 131, 141, 144], "transvers": [77, 93, 96, 131, 141, 144], "muse": [77, 96, 128], "gaut": [77, 96, 128], "mg94gtr": [77, 96, 128, 134], "gy94": [77, 96, 128], "goldman": [77, 96, 128, 134], "y98": [77, 96], "h04g": [77, 96], "cpg": [77, 96], "h04gk": [77, 96], "h04ggk": [77, 96], "gen": [77, 96], "typeabbreviationdescript": [77, 78, 96], "codoncnfgtrcondit": [77, 96], "codoncnfhkycondit": [77, 96], "codonmg94hkymus": [77, 96], "codonmg94gtrmus": [77, 96], "codongy94goldman": [77, 96], "codony98yang": [77, 96], "codonh04ghuttlei": [77, 96], "codonh04gkhuttlei": [77, 96], "codonh04ggkhuttlei": [77, 96], "codongncgener": [77, 96], "robust": [77, 111, 141], "configur": [77, 78, 128], "6739": 77, "3067": 77, "306777truetru": 77, "0656": 77, "9391": 77, "9475": 77, "7569": 77, "5330": 77, "0659": 77, "0352": 77, "0540": 77, "0242": 77, "0307": 77, "0543": 77, "0237": 77, "0021": 77, "0297": 77, "0280": 77, "0405": 77, "0226": [77, 106], "0071": 77, "0141": 77, "0203": 77, "0165": 77, "0022": [77, 95], "0012": 77, "0035": 77, "0058": 77, "0123": 77, "0098": 77, "0703": 77, "0112": 77, "0310": 77, "0154": 77, "0036": 77, "0145": [77, 106], "0151": 77, "0072": 77, "0051": [77, 116], "0139": 77, "0170": 77, "0094": 77, "0210": 77, "0171": 77, "0039": [77, 95], "0222": 77, "0107": 77, "0146": 77, "tomega": [77, 128, 134], "06563": 77, "93910": 77, "78511": 77, "94754": 77, "05400": 77, "02420": 77, "03070": 77, "05430": 77, "02370": 77, "00630": 77, "00210": 77, "02970": 77, "01220": 77, "04050": 77, "02260": [77, 106], "00710": 77, "01410": 77, "02030": 77, "02200": 77, "01650": 77, "00430": 77, "02390": 77, "00220": 77, "00120": 77, "00350": 77, "00580": 77, "01230": 77, "00980": 77, "07030": 77, "01120": 77, "03100": 77, "01540": 77, "00830": 77, "00360": 77, "01510": 77, "00720": 77, "00510": 77, "01390": 77, "01700": 77, "00940": 77, "02100": 77, "00390": 77, "02140": 77, "00380": 77, "00330": 77, "02220": 77, "discret": [78, 96, 128, 131], "biometr": [78, 96], "dt": [78, 96], "dinucleotid": [78, 90, 91, 96, 137], "trinucleotid": [78, 90, 91, 96], "sy": [78, 96, 143], "ssgn": [78, 96], "journal": [78, 96], "theoret": [78, 96], "k80": [78, 96], "kimura": [78, 96], "tamura": [78, 96], "nei": [78, 96], "hasegawa": [78, 96], "kishino": [78, 96], "yano": [78, 96], "felsenstein": [78, 96, 143], "nucleotidebhbarri": [78, 96], "nucleotidedtdiscret": [78, 96], "nucleotidegngener": [78, 96], "nucleotidessgnstrand": [78, 96], "nucleotidek80kimura": [78, 96], "nucleotidejc69juk": [78, 96], "nucleotidegtrgener": [78, 96], "nucleotidetn93tamura": [78, 96], "nucleotidehky85hasegawa": [78, 96], "nucleotidef81felsenstein": [78, 96], "lanav": 78, "design": [79, 101, 106, 130, 131, 135], "enabl": [79, 135], "understand": [79, 145], "batch": [79, 137], "amount": [79, 135, 149, 151], "aka": [79, 97], "pipelin": [79, 146], "thousand": 79, "sever": [79, 114, 129], "trap": 79, "relationship": 79, "hmm": [80, 131], "topic": 81, "sidebar": 81, "possess": 84, "That": [84, 100, 124, 138], "said": 84, "task": [84, 135, 141, 146], "aros": 87, "whatev": 87, "traceback": [87, 90, 98, 107, 108], "assert": [87, 89, 90, 106, 108, 131, 138], "failur": 87, "unexpect": 87, "recent": [87, 90, 98, 107, 108], "_call": 87, "val": [87, 88], "_load_seq": 87, "_parser": 87, "_read_it": 87, "opt": 87, "hostedtoolcach": 87, "x64": 87, "functool": 87, "wrapper": [87, 88, 106], "dispatch": 87, "__class__": 87, "read_text": 87, "pathlib": 87, "encod": [87, 96], "buffer": 87, "filenotfounderror": 87, "errno": 87, "up_to": 88, "first4": 88, "gcaagcgtttat": 88, "gcttttgtcaat": 88, "gcaa": 88, "gctt": 88, "agcaa": 88, "abil": [88, 92, 96, 114], "seqscollectiontyp": 88, "lambda": [88, 90, 92, 97, 100, 101, 106, 108, 131], "gcaagcgttta": 88, "gcttttgtcaa": 88, "agcaagcgtttat": 88, "tttt": [88, 97], "pairwisedistancetyp": 88, "ham": [88, 95], "percent_dist": 88, "5000": 88, "namesab": 88, "a0": 88, "b0": 88, "50000": 88, "manipul": [89, 92, 97, 149, 151], "critic": [89, 103, 137], "my_seq": [89, 90, 98], "agtacactggt": 89, "agtacac": 89, "noneagtacactggt": 89, "circumst": 89, "bytesequ": [89, 90], "rnaseq": 89, "acguacguacguacgu": [89, 103], "acguacg": 89, "noneacguacguacguacgu": 89, "my_gen": [89, 98], "my_geneagtacactggt": 89, "tcatgtg": 89, "nonetcatgtgacca": 89, "accagtg": 89, "noneaccagtgtact": 89, "gcttgggaaagtcaaatggaa": 89, "s1": [89, 97, 98, 115], "pep": [89, 98, 104], "awesqm": 89, "s1awesqm": 89, "acgtacgtacgtacgt": 89, "dnaseq": 89, "acgtacg": 89, "noneacgtacgtacgtacgt": 89, "extra_seq": 89, "ctgac": 89, "long_seq": 89, "noneagtacactggtctgac": 89, "gtaca": 89, "nonegtaca": 89, "easiest": 89, "atgatgatgatg": [89, 90], "pos3": [89, 90], "gggg": [89, 90], "pos12": 89, "atatatat": 89, "caugcga": 89, "nonecaugcgaccuuaguag": 89, "auuaugcuau": 89, "uau": 89, "auuaugc": 89, "noneauuaugcuauuau": 89, "hood": 90, "long": 90, "ndarrai": [90, 106], "better": [90, 135, 145], "atgacc": 90, "atcgcc": 90, "seq1atgacc": 90, "paml": [90, 96, 110, 125, 130], "0x7f49f12c61d0": 90, "atgaa": 90, "agtgatg": 90, "gatg": 90, "seq2atg": 90, "new_seq": 90, "seq0": 90, "seq4": 90, "atgcc": 90, "new_aln": 90, "ataggatg": 90, "agcg": 90, "atgctggg": 90, "desir": [90, 96, 131, 133], "atgaatg": 90, "seq1atgaatg": 90, "dnasequ": [90, 97, 100, 103, 104, 117], "seq1atgaa": 90, "long_testseq": [90, 100, 110, 126, 127, 131, 134, 136, 140, 141, 144], "tgtggca": [90, 100], "humantgtggcacaaatactcatgccagc": 90, "nineband": [90, 93, 100, 101, 105, 106, 125, 126, 127, 131, 134, 138, 140, 141], "dogfac": [90, 93, 100, 101, 105, 106, 125, 126, 127, 131, 134, 138, 140, 141], "0x7f49f12c41d0": 90, "gcaaggcgcca": 90, "gcagtgagcca": [90, 93], "gcaaggagcca": [90, 93], "dogfacedgcaaggagccagcagaacagatgggttgaaactaaggaaacatgtaatgataggcagact": [90, 93], "gt": [90, 91, 93], "later": [90, 96, 128, 134, 140], "dedic": 90, "cctggg": 90, "bcctggg": 90, "Or": [90, 96, 101, 106], "ccuggg": 90, "bccuggg": 90, "tyv": 90, "te": 90, "prot": 90, "xtyv": 90, "primate_cdx2_promot": [90, 110, 142], "remove_fil": 90, "error_on_miss": 90, "fasta_align": 90, "got": [90, 135], "gcaaggcgccaacagagcagatgggctgaaagtaaggaaacatgtaatgataggcagact": 90, "gcagtgagccagcagagcagatgggctgcaagtaaaggaacatgtaacgacaggcaggtt": 90, "gcaaggagccaacataacagatgggctggaagtaaggaaacatgtaatgataggcggact": 90, "gcaaggagccaacataacagatgggctgaaagtgaggaaacatgtaatgataggcagact": 90, "gcaaggagccagcagaacagatgggttgaaactaaggaaacatgtaatgataggcagact": 90, "string_list": 90, "tgtggcacaga": [90, 100], "dogfacedtgtggcacaaatactcatgccaac": 90, "subscript": 90, "column_four": 90, "atgatgatg": 90, "seq2gggg": 90, "notat": [90, 106], "acgtaa": 90, "acgaca": 90, "acgcaatga": 90, "acgcaa": 90, "seq2acgaca": 90, "detect": [90, 92, 129], "cover": [90, 108], "acgac": 90, "sometim": [90, 100], "atgaaggtg": 90, "atgaaggtgatg": 90, "atgaaggngatg": 90, "nuc": [90, 104], "atgaaggg": 90, "seq1atgaaggg": 90, "trinuc": 90, "atgaag": 90, "seq1atgaag": 90, "just_variable_aln": 90, "aagcaaaact": 90, "aagcaagact": 90, "gggcccagct": 90, "dogfacedaaacaaaata": 90, "ct": [90, 91, 100], "mouseggg": 90, "just_constant_aln": 90, "tgtggcacaa": 90, "dogfacedtgtggcacaa": 90, "variable_codon": 90, "aagcaaaac": 90, "aagcaagac": 90, "gggcccagc": 90, "dogfacedaaacaaaat": 90, "humantgtggcacaaatactcatgccagctcattacagcatgagaacagcagtttattactcact": 90, "dogfacedtgtggcacaaatactcatgccaactcattacagcatgagaacagcagtttattatacact": [90, 100], "no_n_char": 90, "atgaaggtgat": 90, "seq2atgaaggtgatg": 90, "addition": 90, "atgaaggngat": 90, "seq3atgaaggngatg": 90, "ipuac": 90, "110147": 90, "aaaaacaagaatacaaccacgactagaagcaggagtataatcatgattcaacaccagcatccacccccgcctcgacgccggcgtctactcctgcttgaagacgaggatgcagccgcggctggaggcgggggtgtagtcgtggtttaatactagtattcatcctcgtcttgatgctggtgtttattcttgttt": 90, "0030000000000050000000000000000000000000000000200000000000000000": 90, "acgnt": 90, "1101417": 90, "25520602569782896": 90, "25808595480726626": 90, "24390784226849802": 90, "24280017722640673": 90, "trinuc_alphabet": [90, 91], "3f": 90, "037": 90, "034": [90, 93], "030": [90, 128], "029": 90, "028": 90, "027": [90, 93], "026": 90, "025": 90, "024": 90, "023": [90, 93, 134], "021": [90, 96, 141], "020": [90, 96, 128], "019": [90, 93], "018": 90, "017": 90, "015": 90, "014": 90, "013": [90, 93], "012": [90, 96, 101, 106], "010": [90, 97, 128], "009": [90, 96, 100], "008": [90, 96], "007": 90, "006": [90, 96], "003": [90, 96], "002": [90, 96], "pseudo": 90, "slightli": [90, 96, 131, 135], "aacaac": 90, "aagaag": 90, "clearli": 90, "aacgtaag": 90, "dinuc_alphabet": [90, 91], "incid": 90, "naiv": 90, "aaagtaag": 90, "aaaa": [90, 97], "comprehens": [90, 138], "di_nuc": 90, "nn": 90, "c1": 90, "c2": 90, "6666666666666666": 90, "atgaagg": 90, "aggtgatg": 90, "seq_to_aln_map": 90, "tell": [90, 135], "oppos": 90, "aln_to_seq_map": 90, "therefor": [90, 138], "seq_po": 90, "computation": [90, 117], "discuss": [90, 96, 141, 145], "stretch": 90, "anywher": 90, "certain": [90, 97, 101, 106], "percentag": 90, "atga": 90, "atgaggatg": 90, "aggatg": 90, "seq2atgaggatg": 90, "commonli": [90, 141], "filtered_aln": 90, "4th": 90, "atgagtgatg": 90, "seq2atgagtgatg": 90, "gg": 91, "tagt": 91, "guid": [92, 93, 97], "gffannotationdb": [92, 97], "genbankannotationdb": [92, 97], "distinguish": [92, 131], "anno_db": 92, "total_record": [92, 97], "bacterium": 92, "mycoplasma": [92, 100, 109, 110], "genitalium": [92, 100, 110], "extens": [92, 96, 97, 116, 146], "gff_db": 92, "again": [92, 96, 97, 141], "gb_db": 92, "nc_000908": [92, 100], "namer": [92, 97], "rnase_p_rna": 92, "srp_rna": 92, "exon": [92, 97], "pseudogen": [92, 97], "rrna": 92, "trna": 92, "tmrna": 92, "num_row": 92, "link": [92, 100, 110], "interesting_gen": 92, "successfulli": [92, 96, 133], "outpath": 92, "gbdb": 92, "someth": [92, 100, 106], "quick_load_gb_db": 92, "arbitrarili": [92, 131], "futur": [92, 135, 151], "simpli": [92, 106, 133, 137, 138], "practic": 92, "mg_16": 92, "mg_rs00775": 92, "170011": 92, "171529": 92, "similarli": 92, "85561": 92, "86589": 92, "mg_rs02910": 92, "86784": 92, "87549": 92, "mg_rs00385": 92, "adhesin": 92, "operon": 92, "220600": 92, "229079": 92, "operon_cd": 92, "229067": 92, "220606": 92, "221563": 92, "wp_009886005": 92, "221569": 92, "225904": 92, "wp_010869366": 92, "225914": 92, "wp_041593683": 92, "particularli": 92, "replication_record": 92, "homologi": 92, "phase": 92, "wp_009885562": 92, "mg_rs00005": 92, "dbxref": 92, "ontology_term": 92, "go": [92, 108, 124, 128, 131, 138, 141], "0006260": 92, "0003887": 92, "0009360": 92, "gbkei": 92, "dnan": 92, "go_compon": 92, "polymeras": 92, "iii": [92, 128, 131], "complex": [92, 128, 133, 137, 146], "iea": 92, "go_funct": 92, "activ": [92, 147], "go_process": 92, "wp_010874358": 92, "locus_tag": 92, "subunit": 92, "beta": 92, "protein_id": 92, "transl_tabl": 92, "comment": [92, 100], "explor": 92, "smallest": 92, "bacteri": [92, 109], "life": [92, 108], "total_gen": 92, "single_copi": 92, "almost": [92, 131], "littl": 92, "fun": 92, "exact": [92, 112], "nest": [92, 96, 97, 128, 131], "transcript": [92, 97, 113, 116], "mg_rs00035": 92, "9155": 92, "wp_009885556": 92, "union_db": 92, "new_gb_db": 92, "aagaagaagacccccaaaaaaaaaattttttttttaaaaagggaaccct": [92, 97], "gb_seq": 92, "gff_seq": 92, "gff3": 92, "mycoplasmoid": [92, 100], "g37": [92, 100], "tree_align": 93, "test2": [93, 110], "046": 93, "gcca": 93, "058": 93, "079": 93, "062": 93, "cgcca": 93, "hum": [93, 124], "aagcagatccaggaaagcagcgagaatggcagcctggccgcgcgccaggagaggcaggcccaggtcaacctcact": [93, 124], "mu": [93, 100, 105, 124], "aagcagatccaggagagcggcgagagcggcagcctggccgcgcggcaggagaggcaggcccaagtcaacctcacg": [93, 124], "ctgaacaagcagccactttcaaacaagaaa": [93, 124], "unaligned_dna": [93, 124], "0x7fe45b701f10": 93, "0x7fe45d8ee710": 93, "aligned_aa_seq": [93, 124], "kqiqessengslaarqerqaqvnlt": [93, 124], "kqiqesgesgslaarqerqaqvnlt": [93, 124], "lnkq": [93, 124], "pl": [93, 124], "nkk": [93, 124], "aligned_aa": [93, 124], "aligned_dna": [93, 124], "aagcagatcca": [93, 124], "ctgaacaagca": [93, 124], "humaagcagatccaggaaagcagcgagaatggcagcctggccgcgcgccaggagaggcaggcc": [93, 124], "ratct": [93, 124], "pure": 94, "advanc": [94, 138], "stepwis": [94, 138], "taxa": [94, 128, 138], "exhaust": 94, "least_squar": [94, 138], "wl": [94, 138], "dists_for_phylo": [94, 110, 127, 138], "trex": [94, 138], "return_al": [94, 138], "scoredtreecollect": 94, "randomis": 94, "maximum_likelihood": [94, 138], "insensit": [95, 103], "logdet": 95, "abbreviationsuit": 95, "paralineardna": 95, "logdetdna": 95, "jc69dna": 95, "tn93dna": 95, "hammingdna": 95, "pdistdna": 95, "0704": 95, "0089": 95, "0700": 95, "0086": 95, "0393": 95, "0736": 95, "0719": 95, "0173": 95, "0423": 95, "0411": [95, 116], "nameschimpanzeegalagogorillahowlermonhumanorangutanrhesu": 95, "chimpanzee0": 95, "19210": 95, "00540": 95, "07040": 95, "00890": 95, "galago0": 95, "19230": 95, "21570": 95, "19650": 95, "19440": 95, "gorilla0": 95, "07000": 95, "00860": 95, "howlermon0": [95, 127], "07360": 95, "07190": 95, "human0": [95, 127], "01730": 95, "orangutan0": 95, "rhesus0": 95, "19620": 95, "03930": 95, "04230": 95, "04110": [95, 116], "get_distance_calcul": 95, "dist_calc": 95, "tn93pair": 95, "0x7fbbcba4f050": 95, "get_pairwise_dist": [95, 125, 126, 127], "stderr": 95, "0103": 95, "0095": 95, "seq2galagohowlermonrhesusorangutangorillahumanchimpanze": 95, "galago00": 95, "0102748270583958960": 95, "0096163078326485620": 95, "0095356465322767870": 95, "0094913822495401760": 95, "0096150330918649170": 95, "009469268026590141": 95, "01027482705839589600": 95, "0054118117125547720": 95, "00533485849516111750": 95, "0052656124746942460": 95, "0054067602387489840": 95, "005273572620183854": 95, "00541181171255477200": 95, "00394085494178657550": 95, "0038527981619030950": 95, "0040050459201001250": 95, "0038665597157698894": 95, "003940854941786575500": 95, "00222911247430113750": 95, "00251518387918036550": 95, "0022606571679022955": 95, "002229112474301137500": 95, "00175969199023268760": 95, "0013848543487237903": 95, "001759691990232687600": 95, "0017949285088691988": 95, "0094692680265901410": 95, "0052735726201838540": 95, "00386655971576988940": 95, "00226065716790229550": 95, "00138485434872379030": 95, "00179492850886919880": 95, "significantli": [95, 128, 135, 149], "slower": [95, 138], "estimatedist": [95, 125, 126, 127], "submodel": [95, 125, 126, 127], "0697": 95, "0395": 95, "0693": 95, "0136": 95, "0391": [95, 106], "0729": 95, "0713": 95, "0421": 95, "18920": 95, "06970": 95, "18910": 95, "21120": 95, "19340": 95, "19150": 95, "06930": 95, "01360": 95, "07290": 95, "07130": 95, "03950": 95, "19300": 95, "03910": 95, "04210": 95, "dso78": 96, "dayhoff": [96, 130], "empir": [96, 132], "mo": 96, "schwartz": 96, "rm": 96, "orcutt": 96, "bc": [96, 106], "atla": 96, "suppl": 96, "nation": 96, "biomed": 96, "research": 96, "foundat": 96, "washington": 96, "dat": [96, 130], "jone": 96, "taylor": 96, "thornton": 96, "wr": 96, "jm": 96, "rapid": 96, "appl": 96, "biosci": 96, "jun": 96, "ah96": 96, "adachi": 96, "mtrev24": 96, "ah96_mtmamm": 96, "mtmam": 96, "whelan": 96, "globular": 96, "evolut": [96, 131, 133, 151], "wag": 96, "proteindso78dayhoff": 96, "proteinjtt92jon": 96, "proteinah96adachi": 96, "proteinah96_mtmammalsadachi": 96, "proteinwg01whelan": 96, "timereversiblenucleotid": [96, 131, 139], "num_motif": 96, "gamma": [96, 139], "sub_mod": 96, "with_rat": 96, "timereversiblecodon": [96, 128], "make_likelihood_funct": [96, 128, 130, 131, 134, 136, 139, 140, 141, 142, 143, 144], "set_align": [96, 128, 130, 131, 134, 139, 140, 141, 142, 144], "great": 96, "precan": 96, "init": [96, 97, 128, 131, 141], "rule": [96, 128, 141], "galagoroot1": 96, "howlermonroot1": 96, "000": [96, 97, 128, 135], "3root1": 96, "aaaaacaagaatacaaccacgactagaagcaggagtata": [96, 128], "atcatgattcaacaccagcatccacccccgcctcgacgc": [96, 128], "cggcgtctactcctgcttgaagacgaggatgcagccgcg": [96, 128], "gctggaggcgggggtgtagtcgtggtttactattcatcc": [96, 128], "tcgtcttgctggtgtttattcttgttt": [96, 128], "maximis": [96, 108], "essenti": [96, 128], "is_const": [96, 128, 131, 139, 141], "closer": 96, "quicker": 96, "stuck": 96, "seem": 96, "too": [96, 141, 147], "sensibl": 96, "fulli": [96, 108], "sites_independ": [96, 131], "hidden": [96, 132], "simul": [96, 108, 132, 133, 134, 139, 149, 151], "anneal": [96, 108, 134], "powel": [96, 108, 134], "slow": [96, 131, 135], "adequ": 96, "setup": [96, 131], "max_restart": [96, 128, 139], "restart": 96, "spot": 96, "overcom": 96, "maxima": 96, "crude": 96, "rigor": [96, 134], "global_toler": [96, 134], "guarante": [96, 108], "sure": 96, "proce": [96, 138], "endlessli": 96, "monitor": 96, "situat": 96, "limit_act": 96, "hide": [96, 128], "max_evalu": 96, "return_calcul": 96, "err": 96, "catch": 96, "shouldn": 96, "7690": 96, "9585": 96, "3159": 96, "9700": 96, "0449": 96, "0216": 96, "0120": 96, "23165": 96, "25340": 96, "95852": 96, "31595": 96, "reus": [96, 128], "768994254068": 96, "get_aic": 96, "14017": 96, "537988508137": 96, "aic": 96, "second_ord": 96, "732482608959": 96, "get_bic": 96, "14112": 96, "615784310927": 96, "exchang": [96, 141, 144], "a_g": 96, "253426612104869": 96, "0060601250493658035": 96, "mprob": 96, "24060": 96, "get_statist": [96, 128, 139], "with_motif_prob": 96, "clock": [96, 136, 140], "is_independ": [96, 134, 140, 141, 144], "set_nam": [96, 140], "null_lnl": [96, 134, 140], "null_nfp": [96, 134, 140], "7177": 96, "4403": 96, "044": 96, "004": 96, "3760": 96, "alt_lnl": 96, "alt_nfp": 96, "7175": 96, "7756": 96, "chi": [96, 131, 134, 140], "scipi": [96, 128, 131, 134, 140, 144], "chi2": [96, 128, 131, 134, 140, 144], "sf": [96, 128, 131, 134, 140, 144], "4f": [96, 108, 131, 138], "3294": 96, "reli": [96, 129, 135], "asymptot": 96, "lrt": [96, 131], "small": [96, 97, 99, 100, 106, 128, 131, 135, 136, 138, 140], "simulate_align": [96, 139, 143], "sim_aln": 96, "cacggtaccag": 96, "caaggtaccag": 96, "chimpanzeecacggtaccaggcaccaccatggcctgataaattgggctgaaccaacagcagatcaataa": 96, "kappa_lo": 96, "kappa_ml": 96, "kappa_hi": 96, "get_param_interv": 96, "lo": 96, "2f": [96, 135, 136], "hi": 96, "human_lo": 96, "human_ml": 96, "human_hi": 96, "reload": 96, "disk": [96, 102], "acgg": 96, "atag": 96, "atgg": 96, "newlf": 96, "3333": 96, "0833": 96, "aroot1": 96, "broot1": 96, "croot1": 96, "33330": 96, "08330": 96, "41670": 96, "likely_ancestral_seq": 96, "0tgtggcacaaatactcatgccagctcattacagcatgagaacagtttattactcactaaa": 96, "ancestral_prob": 96, "reconstruct_ancestral_seq": 96, "18160": 96, "quit": [96, 117, 128], "difficult": 96, "easi": 96, "relax": 96, "until": [96, 138], "markedli": 96, "instruct": 97, "utilis": 97, "gcctaatactaagcctaagcctaagactaagcctaatactaagcctaagcctaagactaa": 97, "a_gen": 97, "gcctaat": 97, "cpgsite": 97, "a_cpgsit": 97, "aaaccccca": 97, "belong": [97, 131], "aligned_exon": 97, "basicannotationdb": [97, 102], "caenorhabd": [97, 117], "elegan": [97, 110, 117], "timeit": 97, "std": 97, "dev": [97, 147], "40578": 97, "wbcel235": 97, "15072434": 97, "60166": 97, "loaded_seq": [97, 100], "sub_seq": 97, "600th": 97, "brca1": [97, 100, 103, 110, 111, 114, 115, 116, 128], "brca1_aln": 97, "chimpanzeetgtggcacaaatactcatgccagctcattacagcatgagaacagtttattactcactaaa": 97, "brca1_hsa_shorten": [97, 110], "wbgene00021661": 97, "348424": 97, "343068": 97, "gcctaag": [97, 117], "072": [97, 117], "wbgene00000001": 97, "5107843": 97, "5108016": 97, "5108063": 97, "5108323": 97, "5108504": 97, "5108770": 97, "5108997": 97, "5109429": 97, "5109509": 97, "5109947": 97, "wbgene00000006": 97, "2576006": 97, "2575840": 97, "2575629": 97, "2575438": 97, "2574584": 97, "2574520": 97, "2574444": 97, "2574312": 97, "2574267": 97, "2573998": 97, "2573941": 97, "2573740": 97, "2572736": 97, "2572569": 97, "2572519": 97, "2572355": 97, "2572300": 97, "2572092": 97, "2572039": 97, "2571987": 97, "wbgene00000010": 97, "11396658": 97, "11396567": 97, "11396432": 97, "11396253": 97, "11395177": 97, "11395068": 97, "11395007": 97, "11394926": 97, "11394878": 97, "11394746": 97, "11393875": 97, "11393721": 97, "11393519": 97, "11393291": 97, "11392185": 97, "11392047": 97, "11391134": 97, "11390947": 97, "11390188": 97, "11390088": 97, "11390003": 97, "11389874": 97, "11389238": 97, "11389140": 97, "348364": 97, "348304": 97, "347044": 97, "346792": 97, "346742": 97, "346560": 97, "346516": 97, "346374": 97, "345830": 97, "345020": 97, "344033": 97, "343893": 97, "343649": 97, "343540": 97, "347113": 97, "347092": 97, "region_featur": 97, "10148": 97, "26732": 97, "wbgene00022276": 97, "11494": 97, "16837": 97, "mrna": [97, 117], "11561": 97, "11617": 97, "11689": 97, "14950": 97, "15160": 97, "16472": 97, "11640": 97, "16585": 97, "29322": 97, "human_exon": 97, "todo": 97, "dont": 97, "any_featur": 97, "pseudogene1": 97, "aln_featur": 97, "discontinu": 97, "lead": [97, 141], "omiss": 97, "aln3": [97, 139], "cccaaaaa": 97, "ex1": 97, "cccc": 97, "xcccc": 97, "aln_exon": 97, "opposit": 97, "xc": 97, "cagcaag": 97, "icagcaagaagaacttccacaagacatttatgaaggacgtgactgcggaattggccagaat": 97, "interact": [97, 118, 145, 146], "zoom": 97, "dark": 97, "big": 97, "subseq": 97, "25000": [97, 117], "35000": [97, 117], "misc_rna": 97, "beyond": 97, "23600": 97, "22881": 97, "intron": 97, "exon_coord": 97, "intron_coord": 97, "y74c9a": 97, "union_cd": 97, "wbgene00000012": 97, "wbgene00000013": 97, "wbgene00000020": 97, "wbgene00000023": 97, "wbgene00000036": 97, "wbgene00000045": 97, "wbgene00000050": 97, "wbgene00000058": 97, "wbgene00000079": 97, "wbgene00000084": 97, "wbgene00000088": 97, "wbgene00000089": 97, "wbgene00000095": 97, "wbgene00000096": 97, "wbgene00000099": 97, "wbgene00000138": 97, "wbgene00000140": 97, "wbgene00000147": 97, "wbgene00000148": 97, "wbgene00000150": 97, "wbgene00000155": 97, "wbgene00000156": 97, "wbgene00000158": 97, "wbgene00000163": 97, "wbgene00000165": 97, "wbgene00000177": 97, "wbgene00000197": 97, "wbgene00000199": 97, "wbgene00000205": 97, "wbgene00000209": 97, "wbgene00000227": 97, "wbgene00000230": 97, "wbgene00000232": 97, "wbgene00000236": 97, "wbgene00000237": 97, "wbgene00000241": 97, "wbgene00000253": 97, "wbgene00000254": 97, "wbgene00000269": 97, "wbgene00000272": 97, "wbgene00000275": 97, "wbgene00000284": 97, "wbgene00000368": 97, "wbgene00000371": 97, "wbgene00000382": 97, "wbgene00000386": 97, "wbgene00000408": 97, "wbgene00000409": 97, "wbgene00000410": 97, "wbgene00000413": 97, "wbgene00000415": 97, "wbgene00000426": 97, "wbgene00000429": 97, "wbgene00000430": 97, "wbgene00000431": 97, "wbgene00000433": 97, "wbgene00000434": 97, "wbgene00000436": 97, "wbgene00000440": 97, "wbgene00000466": 97, "wbgene00000467": 97, "wbgene00000468": 97, "wbgene00000469": 97, "wbgene00000473": 97, "wbgene00000474": 97, "wbgene00000476": 97, "wbgene00000483": 97, "wbgene00000485": 97, "wbgene00000492": 97, "wbgene00000493": 97, "wbgene00000496": 97, "wbgene00000500": 97, "wbgene00000502": 97, "wbgene00000527": 97, "wbgene00000540": 97, "wbgene00000544": 97, "wbgene00000583": 97, "wbgene00000596": 97, "wbgene00000612": 97, "wbgene00000622": 97, "wbgene00000623": 97, "wbgene00000624": 97, "wbgene00000625": 97, "wbgene00000626": 97, "wbgene00000627": 97, "wbgene00000628": 97, "wbgene00000629": 97, "wbgene00000630": 97, "wbgene00000631": 97, "wbgene00000632": 97, "wbgene00000633": 97, "wbgene00000634": 97, "wbgene00000636": 97, "wbgene00000637": 97, "wbgene00000638": 97, "wbgene00000639": 97, "wbgene00000640": 97, "wbgene00000641": 97, "wbgene00000642": 97, "wbgene00000761": 97, "wbgene00000764": 97, "wbgene00000772": 97, "wbgene00000777": 97, "wbgene00000779": 97, "wbgene00000780": 97, "wbgene00000787": 97, "wbgene00000788": 97, "wbgene00000794": 97, "wbgene00000800": 97, "wbgene00000801": 97, "wbgene00000812": 97, "wbgene00000814": 97, "wbgene00000821": 97, "wbgene00000832": 97, "wbgene00000843": 97, "wbgene00000867": 97, "wbgene00000869": 97, "wbgene00000871": 97, "wbgene00000881": 97, "wbgene00000890": 97, "wbgene00000891": 97, "wbgene00000896": 97, "wbgene00000904": 97, "wbgene00000912": 97, "wbgene00000917": 97, "wbgene00000931": 97, "wbgene00000937": 97, "wbgene00000938": 97, "wbgene00000962": 97, "wbgene00000963": 97, "wbgene00000965": 97, "wbgene00000966": 97, "wbgene00000967": 97, "wbgene00000968": 97, "wbgene00001008": 97, "wbgene00001022": 97, "wbgene00001030": 97, "wbgene00001039": 97, "wbgene00001045": 97, "wbgene00001046": 97, "wbgene00001047": 97, "wbgene00001048": 97, "wbgene00001049": 97, "wbgene00001050": 97, "wbgene00001056": 97, "wbgene00001067": 97, "wbgene00001075": 97, "wbgene00001112": 97, "wbgene00001115": 97, "wbgene00001117": 97, "wbgene00001121": 97, "wbgene00001131": 97, "wbgene00001136": 97, "wbgene00001145": 97, "wbgene00001147": 97, "wbgene00001156": 97, "wbgene00001167": 97, "wbgene00001196": 97, "wbgene00001214": 97, "wbgene00001215": 97, "wbgene00001226": 97, "wbgene00001228": 97, "wbgene00001231": 97, "wbgene00001232": 97, "wbgene00001234": 97, "wbgene00001309": 97, "wbgene00001333": 97, "wbgene00001334": 97, "wbgene00001337": 97, "wbgene00001365": 97, "wbgene00001372": 97, "wbgene00001377": 97, "wbgene00001404": 97, "wbgene00001405": 97, "wbgene00001414": 97, "wbgene00001427": 97, "wbgene00001430": 97, "wbgene00001432": 97, "wbgene00001433": 97, "wbgene00001442": 97, "wbgene00001481": 97, "wbgene00001483": 97, "wbgene00001488": 97, "wbgene00001491": 97, "wbgene00001497": 97, "wbgene00001501": 97, "wbgene00001542": 97, "wbgene00001555": 97, "wbgene00001568": 97, "wbgene00001574": 97, "wbgene00001582": 97, "wbgene00001590": 97, "wbgene00001592": 97, "wbgene00001595": 97, "wbgene00001596": 97, "wbgene00001598": 97, "wbgene00001599": 97, "wbgene00001600": 97, "wbgene00001601": 97, "wbgene00001614": 97, "wbgene00001627": 97, "wbgene00001640": 97, "wbgene00001641": 97, "wbgene00001642": 97, "wbgene00001643": 97, "wbgene00001644": 97, "wbgene00001647": 97, "wbgene00001648": 97, "wbgene00001651": 97, "wbgene00001676": 97, "wbgene00001677": 97, "wbgene00001678": 97, "wbgene00001680": 97, "wbgene00001682": 97, "wbgene00001704": 97, "wbgene00001707": 97, "wbgene00001725": 97, "wbgene00001745": 97, "wbgene00001746": 97, "wbgene00001773": 97, "wbgene00001791": 97, "wbgene00001814": 97, "wbgene00001816": 97, "wbgene00001819": 97, "wbgene00001832": 97, "wbgene00001833": 97, "wbgene00001836": 97, "wbgene00001843": 97, "wbgene00001856": 97, "wbgene00001859": 97, "wbgene00001860": 97, "wbgene00001941": 97, "wbgene00001942": 97, "wbgene00001949": 97, "wbgene00001960": 97, "wbgene00001973": 97, "wbgene00001979": 97, "wbgene00001980": 97, "wbgene00001985": 97, "wbgene00001990": 97, "wbgene00002000": 97, "wbgene00002004": 97, "wbgene00002026": 97, "wbgene00002027": 97, "wbgene00002034": 97, "wbgene00002035": 97, "wbgene00002040": 97, "wbgene00002042": 97, "wbgene00002047": 97, "wbgene00002069": 97, "wbgene00002070": 97, "wbgene00002073": 97, "wbgene00002075": 97, "wbgene00002077": 97, "wbgene00002079": 97, "wbgene00002101": 97, "wbgene00002107": 97, "wbgene00002108": 97, "wbgene00002109": 97, "wbgene00002110": 97, "wbgene00002111": 97, "wbgene00002112": 97, "wbgene00002113": 97, "wbgene00002116": 97, "wbgene00002119": 97, "wbgene00002134": 97, "wbgene00002135": 97, "wbgene00002136": 97, "wbgene00002137": 97, "wbgene00002138": 97, "wbgene00002139": 97, "wbgene00002141": 97, "wbgene00002142": 97, "wbgene00002143": 97, "wbgene00002144": 97, "wbgene00002153": 97, "wbgene00002174": 97, "wbgene00002179": 97, "wbgene00002181": 97, "wbgene00002189": 97, "wbgene00002191": 97, "wbgene00002196": 97, "wbgene00002198": 97, "wbgene00002205": 97, "wbgene00002213": 97, "wbgene00002225": 97, "wbgene00002226": 97, "wbgene00002232": 97, "wbgene00002240": 97, "wbgene00002248": 97, "wbgene00002257": 97, "wbgene00002258": 97, "wbgene00002276": 97, "wbgene00002324": 97, "wbgene00002348": 97, "wbgene00002393": 97, "wbgene00002583": 97, "wbgene00002601": 97, "wbgene00002694": 97, "wbgene00002696": 97, "wbgene00002717": 97, "wbgene00002783": 97, "wbgene00002804": 97, "wbgene00002977": 97, "wbgene00002978": 97, "wbgene00002979": 97, "wbgene00002989": 97, "wbgene00002999": 97, "wbgene00003000": 97, "wbgene00003006": 97, "wbgene00003014": 97, "wbgene00003020": 97, "wbgene00003026": 97, "wbgene00003029": 97, "wbgene00003036": 97, "wbgene00003040": 97, "wbgene00003041": 97, "wbgene00003052": 97, "wbgene00003059": 97, "wbgene00003060": 97, "wbgene00003061": 97, "wbgene00003062": 97, "wbgene00003068": 97, "wbgene00003071": 97, "wbgene00003072": 97, "wbgene00003074": 97, "wbgene00003080": 97, "wbgene00003083": 97, "wbgene00003098": 97, "wbgene00003111": 97, "wbgene00003123": 97, "wbgene00003132": 97, "wbgene00003136": 97, "wbgene00003156": 97, "wbgene00003170": 97, "wbgene00003172": 97, "wbgene00003182": 97, "wbgene00003183": 97, "wbgene00003184": 97, "wbgene00003186": 97, "wbgene00003209": 97, "wbgene00003221": 97, "wbgene00003229": 97, "wbgene00003233": 97, "wbgene00003236": 97, "wbgene00003238": 97, "wbgene00003258": 97, "wbgene00003260": 97, "wbgene00003261": 97, "wbgene00003278": 97, "wbgene00003299": 97, "wbgene00003307": 97, "wbgene00003316": 97, "wbgene00003328": 97, "wbgene00003338": 97, "wbgene00003339": 97, "wbgene00003387": 97, "wbgene00003396": 97, "wbgene00003397": 97, "wbgene00003400": 97, "wbgene00003418": 97, "wbgene00003422": 97, "wbgene00003471": 97, "wbgene00003472": 97, "wbgene00003475": 97, "wbgene00003499": 97, "wbgene00003508": 97, "wbgene00003516": 97, "wbgene00003524": 97, "wbgene00003548": 97, "wbgene00003552": 97, "wbgene00003564": 97, "wbgene00003569": 97, "wbgene00003578": 97, "wbgene00003581": 97, "wbgene00003584": 97, "wbgene00003585": 97, "wbgene00003587": 97, "wbgene00003596": 97, "wbgene00003601": 97, "wbgene00003622": 97, "wbgene00003639": 97, "wbgene00003652": 97, "wbgene00003654": 97, "wbgene00003659": 97, "wbgene00003663": 97, "wbgene00003664": 97, "wbgene00003667": 97, "wbgene00003671": 97, "wbgene00003672": 97, "wbgene00003675": 97, "wbgene00003679": 97, "wbgene00003703": 97, "wbgene00003735": 97, "wbgene00003742": 97, "wbgene00003746": 97, "wbgene00003750": 97, "wbgene00003753": 97, "wbgene00003777": 97, "wbgene00003788": 97, "wbgene00003790": 97, "wbgene00003792": 97, "wbgene00003793": 97, "wbgene00003797": 97, "wbgene00003798": 97, "wbgene00003799": 97, "wbgene00003800": 97, "wbgene00003803": 97, "wbgene00003815": 97, "wbgene00003818": 97, "wbgene00003836": 97, "wbgene00003842": 97, "wbgene00003847": 97, "wbgene00003878": 97, "wbgene00003902": 97, "wbgene00003904": 97, "wbgene00003905": 97, "wbgene00003906": 97, "wbgene00003921": 97, "wbgene00003924": 97, "wbgene00003925": 97, "wbgene00003926": 97, "wbgene00003934": 97, "wbgene00003948": 97, "wbgene00003950": 97, "wbgene00003951": 97, "wbgene00003953": 97, "wbgene00003964": 97, "wbgene00003977": 97, "wbgene00003980": 97, "wbgene00003989": 97, "wbgene00003996": 97, "wbgene00004014": 97, "wbgene00004028": 97, "wbgene00004043": 97, "wbgene00004049": 97, "wbgene00004063": 97, "wbgene00004068": 97, "wbgene00004077": 97, "wbgene00004087": 97, "wbgene00004093": 97, "wbgene00004094": 97, "wbgene00004109": 97, "wbgene00004110": 97, "wbgene00004111": 97, "wbgene00004113": 97, "wbgene00004115": 97, "wbgene00004117": 97, "wbgene00004131": 97, "wbgene00004143": 97, "wbgene00004147": 97, "wbgene00004154": 97, "wbgene00004168": 97, "wbgene00004178": 97, "wbgene00004181": 97, "wbgene00004186": 97, "wbgene00004190": 97, "wbgene00004196": 97, "wbgene00004202": 97, "wbgene00004217": 97, "wbgene00004224": 97, "wbgene00004225": 97, "wbgene00004226": 97, "wbgene00004231": 97, "wbgene00004235": 97, "wbgene00004237": 97, "wbgene00004246": 97, "wbgene00004268": 97, "wbgene00004272": 97, "wbgene00004273": 97, "wbgene00004274": 97, "wbgene00004275": 97, "wbgene00004298": 97, "wbgene00004305": 97, "wbgene00004312": 97, "wbgene00004318": 97, "wbgene00004324": 97, "wbgene00004332": 97, "wbgene00004368": 97, "wbgene00004372": 97, "wbgene00004378": 97, "wbgene00004380": 97, "wbgene00004389": 97, "wbgene00004393": 97, "wbgene00004404": 97, "wbgene00004408": 97, "wbgene00004409": 97, "wbgene00004412": 97, "wbgene00004415": 97, "wbgene00004418": 97, "wbgene00004425": 97, "wbgene00004426": 97, "wbgene00004429": 97, "wbgene00004431": 97, "wbgene00004436": 97, "wbgene00004437": 97, "wbgene00004439": 97, "wbgene00004441": 97, "wbgene00004444": 97, "wbgene00004445": 97, "wbgene00004464": 97, "wbgene00004466": 97, "wbgene00004475": 97, "wbgene00004476": 97, "wbgene00004479": 97, "wbgene00004484": 97, "wbgene00004486": 97, "wbgene00004488": 97, "wbgene00004489": 97, "wbgene00004495": 97, "wbgene00004505": 97, "wbgene00004508": 97, "wbgene00004509": 97, "wbgene00004512": 97, "wbgene00004513": 97, "wbgene00004567": 97, "wbgene00004622": 97, "wbgene00004677": 97, "wbgene00004684": 97, "wbgene00004706": 97, "wbgene00004721": 97, "wbgene00004743": 97, "wbgene00004753": 97, "wbgene00004771": 97, "wbgene00004773": 97, "wbgene00004775": 97, "wbgene00004778": 97, "wbgene00004803": 97, "wbgene00004807": 97, "wbgene00004808": 97, "wbgene00004836": 97, "wbgene00004838": 97, "wbgene00004839": 97, "wbgene00004841": 97, "wbgene00004875": 97, "wbgene00004879": 97, "wbgene00004880": 97, "wbgene00004883": 97, "wbgene00004887": 97, "wbgene00004888": 97, "wbgene00004889": 97, "wbgene00004890": 97, "wbgene00004895": 97, "wbgene00004900": 97, "wbgene00004901": 97, "wbgene00004915": 97, "wbgene00004920": 97, "wbgene00004924": 97, "wbgene00004931": 97, "wbgene00004944": 97, "wbgene00004946": 97, "wbgene00004952": 97, "wbgene00004953": 97, "wbgene00004955": 97, "wbgene00004958": 97, "wbgene00004959": 97, "wbgene00004962": 97, "wbgene00004963": 97, "wbgene00004965": 97, "wbgene00004966": 97, "wbgene00004969": 97, "wbgene00004978": 97, "wbgene00005000": 97, "wbgene00005002": 97, "wbgene00005009": 97, "wbgene00005010": 97, "wbgene00005023": 97, "wbgene00005043": 97, "wbgene00005044": 97, "wbgene00005045": 97, "wbgene00005046": 97, "wbgene00005047": 97, "wbgene00005048": 97, "wbgene00005049": 97, "wbgene00005050": 97, "wbgene00005051": 97, "wbgene00005077": 97, "wbgene00005078": 97, "wbgene00005131": 97, "wbgene00005171": 97, "wbgene00005272": 97, "wbgene00005273": 97, "wbgene00005274": 97, "wbgene00005517": 97, "wbgene00005523": 97, "wbgene00005524": 97, "wbgene00005525": 97, "wbgene00005526": 97, "wbgene00005527": 97, "wbgene00005528": 97, "wbgene00005529": 97, "wbgene00005710": 97, "wbgene00005835": 97, "wbgene00005839": 97, "wbgene00005840": 97, "wbgene00005858": 97, "wbgene00006044": 97, "wbgene00006047": 97, "wbgene00006048": 97, "wbgene00006058": 97, "wbgene00006061": 97, "wbgene00006062": 97, "wbgene00006272": 97, "wbgene00006306": 97, "wbgene00006324": 97, "wbgene00006349": 97, "wbgene00006352": 97, "wbgene00006377": 97, "wbgene00006379": 97, "wbgene00006382": 97, "wbgene00006385": 97, "wbgene00006386": 97, "wbgene00006394": 97, "wbgene00006399": 97, "wbgene00006407": 97, "wbgene00006423": 97, "wbgene00006440": 97, "wbgene00006445": 97, "wbgene00006447": 97, "wbgene00006461": 97, "wbgene00006484": 97, "wbgene00006492": 97, "wbgene00006503": 97, "wbgene00006505": 97, "wbgene00006508": 97, "wbgene00006518": 97, "wbgene00006525": 97, "wbgene00006528": 97, "wbgene00006529": 97, "wbgene00006531": 97, "wbgene00006532": 97, "wbgene00006565": 97, "wbgene00006574": 97, "wbgene00006577": 97, "wbgene00006578": 97, "wbgene00006593": 97, "wbgene00006594": 97, "wbgene00006595": 97, "wbgene00006607": 97, "wbgene00006616": 97, "wbgene00006618": 97, "wbgene00006624": 97, "wbgene00006625": 97, "wbgene00006633": 97, "wbgene00006641": 97, "wbgene00006645": 97, "wbgene00006656": 97, "wbgene00006681": 97, "wbgene00006682": 97, "wbgene00006689": 97, "wbgene00006700": 97, "wbgene00006702": 97, "wbgene00006707": 97, "wbgene00006709": 97, "wbgene00006711": 97, "wbgene00006720": 97, "wbgene00006726": 97, "wbgene00006730": 97, "wbgene00006732": 97, "wbgene00006740": 97, "wbgene00006751": 97, "wbgene00006752": 97, "wbgene00006753": 97, "wbgene00006754": 97, "wbgene00006765": 97, "wbgene00006771": 97, "wbgene00006773": 97, "wbgene00006774": 97, "wbgene00006776": 97, "wbgene00006789": 97, "wbgene00006790": 97, "wbgene00006791": 97, "wbgene00006793": 97, "wbgene00006797": 97, "wbgene00006805": 97, "wbgene00006807": 97, "wbgene00006819": 97, "wbgene00006820": 97, "wbgene00006823": 97, "wbgene00006824": 97, "wbgene00006829": 97, "wbgene00006833": 97, "wbgene00006844": 97, "wbgene00006845": 97, "wbgene00006876": 97, "wbgene00006888": 97, "wbgene00006889": 97, "wbgene00006902": 97, "wbgene00006919": 97, "wbgene00006932": 97, "wbgene00006936": 97, "wbgene00006958": 97, "wbgene00006961": 97, "wbgene00006963": 97, "wbgene00006976": 97, "wbgene00006978": 97, "wbgene00006984": 97, "wbgene00007001": 97, "wbgene00007009": 97, "wbgene00007018": 97, "wbgene00007024": 97, "wbgene00007026": 97, "wbgene00007042": 97, "wbgene00007043": 97, "wbgene00007047": 97, "wbgene00007053": 97, "wbgene00007054": 97, "wbgene00007057": 97, "wbgene00007094": 97, "wbgene00007155": 97, "wbgene00007156": 97, "wbgene00007158": 97, "wbgene00007159": 97, "wbgene00007213": 97, "wbgene00007214": 97, "wbgene00007215": 97, "wbgene00007216": 97, "wbgene00007217": 97, "wbgene00007218": 97, "wbgene00007219": 97, "wbgene00007252": 97, "wbgene00007253": 97, "wbgene00007254": 97, "wbgene00007255": 97, "wbgene00007256": 97, "wbgene00007257": 97, "wbgene00007258": 97, "wbgene00007274": 97, "wbgene00007275": 97, "wbgene00007277": 97, "wbgene00007278": 97, "wbgene00007297": 97, "wbgene00007299": 97, "wbgene00007300": 97, "wbgene00007301": 97, "wbgene00007302": 97, "wbgene00007303": 97, "wbgene00007533": 97, "wbgene00007597": 97, "wbgene00007598": 97, "wbgene00007599": 97, "wbgene00007600": 97, "wbgene00007601": 97, "wbgene00007602": 97, "wbgene00007603": 97, "wbgene00007620": 97, "wbgene00007621": 97, "wbgene00007637": 97, "wbgene00007638": 97, "wbgene00007639": 97, "wbgene00007640": 97, "wbgene00007641": 97, "wbgene00007642": 97, "wbgene00007643": 97, "wbgene00007644": 97, "wbgene00007645": 97, "wbgene00007646": 97, "wbgene00007647": 97, "wbgene00007654": 97, "wbgene00007655": 97, "wbgene00007656": 97, "wbgene00007657": 97, "wbgene00007658": 97, "wbgene00007659": 97, "wbgene00007660": 97, "wbgene00007661": 97, "wbgene00007662": 97, "wbgene00007705": 97, "wbgene00007707": 97, "wbgene00007708": 97, "wbgene00007709": 97, "wbgene00007710": 97, "wbgene00007711": 97, "wbgene00007712": 97, "wbgene00007713": 97, "wbgene00007739": 97, "wbgene00007740": 97, "wbgene00007741": 97, "wbgene00007742": 97, "wbgene00007743": 97, "wbgene00007766": 97, "wbgene00007767": 97, "wbgene00007768": 97, "wbgene00007769": 97, "wbgene00007770": 97, "wbgene00007854": 97, "wbgene00007855": 97, "wbgene00007856": 97, "wbgene00007857": 97, "wbgene00007858": 97, "wbgene00007911": 97, "wbgene00007912": 97, "wbgene00007913": 97, "wbgene00007914": 97, "wbgene00007971": 97, "wbgene00007972": 97, "wbgene00007973": 97, "wbgene00007974": 97, "wbgene00007975": 97, "wbgene00007976": 97, "wbgene00007977": 97, "wbgene00007978": 97, "wbgene00007979": 97, "wbgene00007984": 97, "wbgene00007985": 97, "wbgene00007986": 97, "wbgene00007988": 97, "wbgene00007989": 97, "wbgene00007990": 97, "wbgene00007991": 97, "wbgene00007992": 97, "wbgene00008061": 97, "wbgene00008062": 97, "wbgene00008063": 97, "wbgene00008064": 97, "wbgene00008107": 97, "wbgene00008130": 97, "wbgene00008131": 97, "wbgene00008132": 97, "wbgene00008133": 97, "wbgene00008134": 97, "wbgene00008157": 97, "wbgene00008158": 97, "wbgene00008159": 97, "wbgene00008160": 97, "wbgene00008161": 97, "wbgene00008162": 97, "wbgene00008163": 97, "wbgene00008184": 97, "wbgene00008185": 97, "wbgene00008186": 97, "wbgene00008187": 97, "wbgene00008188": 97, "wbgene00008190": 97, "wbgene00008191": 97, "wbgene00008216": 97, "wbgene00008289": 97, "wbgene00008290": 97, "wbgene00008291": 97, "wbgene00008292": 97, "wbgene00008293": 97, "wbgene00008294": 97, "wbgene00008295": 97, "wbgene00008311": 97, "wbgene00008312": 97, "wbgene00008313": 97, "wbgene00008314": 97, "wbgene00008315": 97, "wbgene00008316": 97, "wbgene00008317": 97, "wbgene00008318": 97, "wbgene00008381": 97, "wbgene00008382": 97, "wbgene00008383": 97, "wbgene00008384": 97, "wbgene00008385": 97, "wbgene00008386": 97, "wbgene00008387": 97, "wbgene00008397": 97, "wbgene00008398": 97, "wbgene00008399": 97, "wbgene00008400": 97, "wbgene00008401": 97, "wbgene00008411": 97, "wbgene00008412": 97, "wbgene00008413": 97, "wbgene00008414": 97, "wbgene00008415": 97, "wbgene00008417": 97, "wbgene00008418": 97, "wbgene00008419": 97, "wbgene00008420": 97, "wbgene00008421": 97, "wbgene00008439": 97, "wbgene00008440": 97, "wbgene00008470": 97, "wbgene00008471": 97, "wbgene00008472": 97, "wbgene00008473": 97, "wbgene00008474": 97, "wbgene00008475": 97, "wbgene00008476": 97, "wbgene00008477": 97, "wbgene00008478": 97, "wbgene00008479": 97, "wbgene00008528": 97, "wbgene00008529": 97, "wbgene00008530": 97, "wbgene00008531": 97, "wbgene00008532": 97, "wbgene00008533": 97, "wbgene00008541": 97, "wbgene00008542": 97, "wbgene00008543": 97, "wbgene00008564": 97, "wbgene00008565": 97, "wbgene00008566": 97, "wbgene00008567": 97, "wbgene00008568": 97, "wbgene00008569": 97, "wbgene00008570": 97, "wbgene00008610": 97, "wbgene00008611": 97, "wbgene00008612": 97, "wbgene00008613": 97, "wbgene00008648": 97, "wbgene00008649": 97, "wbgene00008650": 97, "wbgene00008651": 97, "wbgene00008652": 97, "wbgene00008661": 97, "wbgene00008662": 97, "wbgene00008663": 97, "wbgene00008664": 97, "wbgene00008665": 97, "wbgene00008666": 97, "wbgene00008667": 97, "wbgene00008681": 97, "wbgene00008695": 97, "wbgene00008762": 97, "wbgene00008763": 97, "wbgene00008764": 97, "wbgene00008765": 97, "wbgene00008766": 97, "wbgene00008767": 97, "wbgene00008768": 97, "wbgene00008769": 97, "wbgene00008770": 97, "wbgene00008779": 97, "wbgene00008780": 97, "wbgene00008781": 97, "wbgene00008782": 97, "wbgene00008783": 97, "wbgene00008784": 97, "wbgene00008785": 97, "wbgene00008786": 97, "wbgene00008787": 97, "wbgene00008852": 97, "wbgene00008853": 97, "wbgene00008854": 97, "wbgene00008855": 97, "wbgene00008856": 97, "wbgene00008857": 97, "wbgene00008858": 97, "wbgene00008870": 97, "wbgene00008876": 97, "wbgene00008877": 97, "wbgene00008878": 97, "wbgene00008885": 97, "wbgene00008886": 97, "wbgene00008887": 97, "wbgene00008889": 97, "wbgene00008890": 97, "wbgene00008905": 97, "wbgene00008906": 97, "wbgene00008907": 97, "wbgene00008908": 97, "wbgene00008909": 97, "wbgene00008934": 97, "wbgene00008935": 97, "wbgene00008990": 97, "wbgene00008991": 97, "wbgene00009001": 97, "wbgene00009002": 97, "wbgene00009004": 97, "wbgene00009005": 97, "wbgene00009050": 97, "wbgene00009051": 97, "wbgene00009052": 97, "wbgene00009054": 97, "wbgene00009055": 97, "wbgene00009056": 97, "wbgene00009061": 97, "wbgene00009063": 97, "wbgene00009064": 97, "wbgene00009065": 97, "wbgene00009112": 97, "wbgene00009113": 97, "wbgene00009114": 97, "wbgene00009116": 97, "wbgene00009117": 97, "wbgene00009118": 97, "wbgene00009119": 97, "wbgene00009120": 97, "wbgene00009121": 97, "wbgene00009122": 97, "wbgene00009123": 97, "wbgene00009124": 97, "wbgene00009125": 97, "wbgene00009126": 97, "wbgene00009127": 97, "wbgene00009128": 97, "wbgene00009129": 97, "wbgene00009130": 97, "wbgene00009140": 97, "wbgene00009141": 97, "wbgene00009142": 97, "wbgene00009143": 97, "wbgene00009144": 97, "wbgene00009145": 97, "wbgene00009157": 97, "wbgene00009158": 97, "wbgene00009159": 97, "wbgene00009160": 97, "wbgene00009161": 97, "wbgene00009162": 97, "wbgene00009163": 97, "wbgene00009164": 97, "wbgene00009165": 97, "wbgene00009173": 97, "wbgene00009174": 97, "wbgene00009176": 97, "wbgene00009177": 97, "wbgene00009178": 97, "wbgene00009187": 97, "wbgene00009188": 97, "wbgene00009189": 97, "wbgene00009190": 97, "wbgene00009191": 97, "wbgene00009210": 97, "wbgene00009220": 97, "wbgene00009243": 97, "wbgene00009250": 97, "wbgene00009251": 97, "wbgene00009252": 97, "wbgene00009254": 97, "wbgene00009260": 97, "wbgene00009261": 97, "wbgene00009262": 97, "wbgene00009263": 97, "wbgene00009264": 97, "wbgene00009266": 97, "wbgene00009267": 97, "wbgene00009268": 97, "wbgene00009269": 97, "wbgene00009270": 97, "wbgene00009271": 97, "wbgene00009272": 97, "wbgene00009274": 97, "wbgene00009276": 97, "wbgene00009277": 97, "wbgene00009284": 97, "wbgene00009285": 97, "wbgene00009286": 97, "wbgene00009287": 97, "wbgene00009288": 97, "wbgene00009304": 97, "wbgene00009305": 97, "wbgene00009306": 97, "wbgene00009312": 97, "wbgene00009313": 97, "wbgene00009314": 97, "wbgene00009315": 97, "wbgene00009316": 97, "wbgene00009318": 97, "wbgene00009341": 97, "wbgene00009342": 97, "wbgene00009343": 97, "wbgene00009344": 97, "wbgene00009345": 97, "wbgene00009346": 97, "wbgene00009359": 97, "wbgene00009360": 97, "wbgene00009361": 97, "wbgene00009362": 97, "wbgene00009363": 97, "wbgene00009366": 97, "wbgene00009367": 97, "wbgene00009368": 97, "wbgene00009369": 97, "wbgene00009370": 97, "wbgene00009371": 97, "wbgene00009408": 97, "wbgene00009409": 97, "wbgene00009410": 97, "wbgene00009411": 97, "wbgene00009412": 97, "wbgene00009413": 97, "wbgene00009414": 97, "wbgene00009415": 97, "wbgene00009416": 97, "wbgene00009451": 97, "wbgene00009452": 97, "wbgene00009453": 97, "wbgene00009454": 97, "wbgene00009455": 97, "wbgene00009456": 97, "wbgene00009457": 97, "wbgene00009458": 97, "wbgene00009459": 97, "wbgene00009460": 97, "wbgene00009461": 97, "wbgene00009462": 97, "wbgene00009463": 97, "wbgene00009464": 97, "wbgene00009465": 97, "wbgene00009466": 97, "wbgene00009467": 97, "wbgene00009468": 97, "wbgene00009475": 97, "wbgene00009476": 97, "wbgene00009477": 97, "wbgene00009478": 97, "wbgene00009479": 97, "wbgene00009480": 97, "wbgene00009481": 97, "wbgene00009498": 97, "wbgene00009499": 97, "wbgene00009500": 97, "wbgene00009507": 97, "wbgene00009508": 97, "wbgene00009509": 97, "wbgene00009510": 97, "wbgene00009553": 97, "wbgene00009554": 97, "wbgene00009556": 97, "wbgene00009557": 97, "wbgene00009558": 97, "wbgene00009559": 97, "wbgene00009562": 97, "wbgene00009563": 97, "wbgene00009565": 97, "wbgene00009607": 97, "wbgene00009608": 97, "wbgene00009609": 97, "wbgene00009610": 97, "wbgene00009611": 97, "wbgene00009612": 97, "wbgene00009613": 97, "wbgene00009614": 97, "wbgene00009615": 97, "wbgene00009616": 97, "wbgene00009646": 97, "wbgene00009664": 97, "wbgene00009665": 97, "wbgene00009666": 97, "wbgene00009667": 97, "wbgene00009668": 97, "wbgene00009670": 97, "wbgene00009671": 97, "wbgene00009672": 97, "wbgene00009673": 97, "wbgene00009693": 97, "wbgene00009695": 97, "wbgene00009696": 97, "wbgene00009697": 97, "wbgene00009698": 97, "wbgene00009743": 97, "wbgene00009744": 97, "wbgene00009745": 97, "wbgene00009746": 97, "wbgene00009747": 97, "wbgene00009748": 97, "wbgene00009749": 97, "wbgene00009750": 97, "wbgene00009751": 97, "wbgene00009752": 97, "wbgene00009753": 97, "wbgene00009754": 97, "wbgene00009755": 97, "wbgene00009822": 97, "wbgene00009823": 97, "wbgene00009824": 97, "wbgene00009825": 97, "wbgene00009826": 97, "wbgene00009827": 97, "wbgene00009828": 97, "wbgene00009861": 97, "wbgene00009862": 97, "wbgene00009863": 97, "wbgene00009864": 97, "wbgene00009865": 97, "wbgene00009915": 97, "wbgene00009916": 97, "wbgene00009917": 97, "wbgene00009918": 97, "wbgene00009919": 97, "wbgene00009920": 97, "wbgene00009921": 97, "wbgene00009922": 97, "wbgene00009923": 97, "wbgene00009937": 97, "wbgene00009938": 97, "wbgene00009939": 97, "wbgene00009940": 97, "wbgene00009941": 97, "wbgene00009942": 97, "wbgene00009958": 97, "wbgene00009959": 97, "wbgene00009960": 97, "wbgene00009961": 97, "wbgene00009962": 97, "wbgene00009963": 97, "wbgene00009964": 97, "wbgene00010110": 97, "wbgene00010111": 97, "wbgene00010112": 97, "wbgene00010113": 97, "wbgene00010114": 97, "wbgene00010133": 97, "wbgene00010134": 97, "wbgene00010135": 97, "wbgene00010136": 97, "wbgene00010137": 97, "wbgene00010157": 97, "wbgene00010158": 97, "wbgene00010159": 97, "wbgene00010160": 97, "wbgene00010161": 97, "wbgene00010162": 97, "wbgene00010163": 97, "wbgene00010165": 97, "wbgene00010166": 97, "wbgene00010167": 97, "wbgene00010168": 97, "wbgene00010169": 97, "wbgene00010170": 97, "wbgene00010171": 97, "wbgene00010172": 97, "wbgene00010173": 97, "wbgene00010242": 97, "wbgene00010243": 97, "wbgene00010244": 97, "wbgene00010245": 97, "wbgene00010246": 97, "wbgene00010247": 97, "wbgene00010248": 97, "wbgene00010291": 97, "wbgene00010323": 97, "wbgene00010324": 97, "wbgene00010325": 97, "wbgene00010326": 97, "wbgene00010327": 97, "wbgene00010328": 97, "wbgene00010366": 97, "wbgene00010367": 97, "wbgene00010369": 97, "wbgene00010370": 97, "wbgene00010371": 97, "wbgene00010399": 97, "wbgene00010400": 97, "wbgene00010401": 97, "wbgene00010402": 97, "wbgene00010416": 97, "wbgene00010417": 97, "wbgene00010419": 97, "wbgene00010420": 97, "wbgene00010421": 97, "wbgene00010422": 97, "wbgene00010427": 97, "wbgene00010487": 97, "wbgene00010488": 97, "wbgene00010495": 97, "wbgene00010496": 97, "wbgene00010497": 97, "wbgene00010498": 97, "wbgene00010499": 97, "wbgene00010500": 97, "wbgene00010537": 97, "wbgene00010560": 97, "wbgene00010562": 97, "wbgene00010563": 97, "wbgene00010564": 97, "wbgene00010565": 97, "wbgene00010566": 97, "wbgene00010567": 97, "wbgene00010568": 97, "wbgene00010569": 97, "wbgene00010576": 97, "wbgene00010577": 97, "wbgene00010578": 97, "wbgene00010579": 97, "wbgene00010580": 97, "wbgene00010581": 97, "wbgene00010582": 97, "wbgene00010583": 97, "wbgene00010584": 97, "wbgene00010585": 97, "wbgene00010586": 97, "wbgene00010587": 97, "wbgene00010608": 97, "wbgene00010609": 97, "wbgene00010610": 97, "wbgene00010611": 97, "wbgene00010612": 97, "wbgene00010613": 97, "wbgene00010614": 97, "wbgene00010615": 97, "wbgene00010616": 97, "wbgene00010617": 97, "wbgene00010618": 97, "wbgene00010619": 97, "wbgene00010620": 97, "wbgene00010621": 97, "wbgene00010622": 97, "wbgene00010623": 97, "wbgene00010624": 97, "wbgene00010641": 97, "wbgene00010642": 97, "wbgene00010643": 97, "wbgene00010644": 97, "wbgene00010645": 97, "wbgene00010650": 97, "wbgene00010651": 97, "wbgene00010652": 97, "wbgene00010653": 97, "wbgene00010654": 97, "wbgene00010730": 97, "wbgene00010731": 97, "wbgene00010732": 97, "wbgene00010738": 97, "wbgene00010740": 97, "wbgene00010766": 97, "wbgene00010767": 97, "wbgene00010768": 97, "wbgene00010769": 97, "wbgene00010770": 97, "wbgene00010771": 97, "wbgene00010804": 97, "wbgene00010805": 97, "wbgene00010806": 97, "wbgene00010807": 97, "wbgene00010808": 97, "wbgene00010817": 97, "wbgene00010818": 97, "wbgene00010819": 97, "wbgene00010820": 97, "wbgene00010821": 97, "wbgene00010822": 97, "wbgene00010823": 97, "wbgene00010824": 97, "wbgene00010825": 97, "wbgene00010854": 97, "wbgene00010855": 97, "wbgene00010856": 97, "wbgene00010857": 97, "wbgene00010858": 97, "wbgene00010859": 97, "wbgene00010869": 97, "wbgene00010870": 97, "wbgene00010871": 97, "wbgene00010872": 97, "wbgene00010873": 97, "wbgene00011026": 97, "wbgene00011027": 97, "wbgene00011028": 97, "wbgene00011029": 97, "wbgene00011030": 97, "wbgene00011032": 97, "wbgene00011033": 97, "wbgene00011034": 97, "wbgene00011035": 97, "wbgene00011036": 97, "wbgene00011037": 97, "wbgene00011058": 97, "wbgene00011059": 97, "wbgene00011060": 97, "wbgene00011061": 97, "wbgene00011062": 97, "wbgene00011063": 97, "wbgene00011064": 97, "wbgene00011065": 97, "wbgene00011066": 97, "wbgene00011155": 97, "wbgene00011156": 97, "wbgene00011230": 97, "wbgene00011231": 97, "wbgene00011232": 97, "wbgene00011234": 97, "wbgene00011235": 97, "wbgene00011344": 97, "wbgene00011345": 97, "wbgene00011352": 97, "wbgene00011353": 97, "wbgene00011375": 97, "wbgene00011376": 97, "wbgene00011378": 97, "wbgene00011379": 97, "wbgene00011380": 97, "wbgene00011386": 97, "wbgene00011387": 97, "wbgene00011388": 97, "wbgene00011389": 97, "wbgene00011390": 97, "wbgene00011431": 97, "wbgene00011432": 97, "wbgene00011433": 97, "wbgene00011434": 97, "wbgene00011435": 97, "wbgene00011488": 97, "wbgene00011489": 97, "wbgene00011490": 97, "wbgene00011491": 97, "wbgene00011492": 97, "wbgene00011493": 97, "wbgene00011494": 97, "wbgene00011495": 97, "wbgene00011497": 97, "wbgene00011531": 97, "wbgene00011532": 97, "wbgene00011545": 97, "wbgene00011546": 97, "wbgene00011547": 97, "wbgene00011548": 97, "wbgene00011549": 97, "wbgene00011550": 97, "wbgene00011551": 97, "wbgene00011581": 97, "wbgene00011582": 97, "wbgene00011583": 97, "wbgene00011584": 97, "wbgene00011585": 97, "wbgene00011586": 97, "wbgene00011629": 97, "wbgene00011630": 97, "wbgene00011631": 97, "wbgene00011650": 97, "wbgene00011651": 97, "wbgene00011652": 97, "wbgene00011653": 97, "wbgene00011654": 97, "wbgene00011655": 97, "wbgene00011656": 97, "wbgene00011657": 97, "wbgene00011658": 97, "wbgene00011659": 97, "wbgene00011660": 97, "wbgene00011778": 97, "wbgene00011779": 97, "wbgene00011780": 97, "wbgene00011781": 97, "wbgene00011782": 97, "wbgene00011783": 97, "wbgene00011784": 97, "wbgene00011785": 97, "wbgene00011786": 97, "wbgene00011827": 97, "wbgene00011828": 97, "wbgene00011829": 97, "wbgene00011864": 97, "wbgene00011906": 97, "wbgene00011908": 97, "wbgene00011909": 97, "wbgene00011912": 97, "wbgene00011913": 97, "wbgene00011914": 97, "wbgene00011915": 97, "wbgene00011916": 97, "wbgene00011917": 97, "wbgene00011918": 97, "wbgene00011919": 97, "wbgene00011920": 97, "wbgene00011921": 97, "wbgene00011933": 97, "wbgene00011934": 97, "wbgene00011935": 97, "wbgene00011936": 97, "wbgene00011944": 97, "wbgene00011945": 97, "wbgene00011968": 97, "wbgene00011969": 97, "wbgene00011970": 97, "wbgene00011971": 97, "wbgene00011972": 97, "wbgene00011973": 97, "wbgene00011975": 97, "wbgene00011985": 97, "wbgene00011986": 97, "wbgene00011988": 97, "wbgene00012029": 97, "wbgene00012030": 97, "wbgene00012031": 97, "wbgene00012036": 97, "wbgene00012037": 97, "wbgene00012038": 97, "wbgene00012039": 97, "wbgene00012040": 97, "wbgene00012041": 97, "wbgene00012042": 97, "wbgene00012102": 97, "wbgene00012103": 97, "wbgene00012104": 97, "wbgene00012105": 97, "wbgene00012106": 97, "wbgene00012107": 97, "wbgene00012113": 97, "wbgene00012114": 97, "wbgene00012115": 97, "wbgene00012116": 97, "wbgene00012136": 97, "wbgene00012137": 97, "wbgene00012138": 97, "wbgene00012139": 97, "wbgene00012140": 97, "wbgene00012150": 97, "wbgene00012151": 97, "wbgene00012164": 97, "wbgene00012165": 97, "wbgene00012166": 97, "wbgene00012167": 97, "wbgene00012168": 97, "wbgene00012192": 97, "wbgene00012193": 97, "wbgene00012194": 97, "wbgene00012195": 97, "wbgene00012196": 97, "wbgene00012208": 97, "wbgene00012209": 97, "wbgene00012210": 97, "wbgene00012211": 97, "wbgene00012212": 97, "wbgene00012213": 97, "wbgene00012214": 97, "wbgene00012215": 97, "wbgene00012216": 97, "wbgene00012231": 97, "wbgene00012232": 97, "wbgene00012233": 97, "wbgene00012234": 97, "wbgene00012235": 97, "wbgene00012236": 97, "wbgene00012237": 97, "wbgene00012238": 97, "wbgene00012239": 97, "wbgene00012240": 97, "wbgene00012241": 97, "wbgene00012264": 97, "wbgene00012265": 97, "wbgene00012266": 97, "wbgene00012267": 97, "wbgene00012268": 97, "wbgene00012269": 97, "wbgene00012270": 97, "wbgene00012274": 97, "wbgene00012275": 97, "wbgene00012289": 97, "wbgene00012290": 97, "wbgene00012296": 97, "wbgene00012297": 97, "wbgene00012298": 97, "wbgene00012317": 97, "wbgene00012343": 97, "wbgene00012344": 97, "wbgene00012345": 97, "wbgene00012351": 97, "wbgene00012352": 97, "wbgene00012353": 97, "wbgene00012354": 97, "wbgene00012355": 97, "wbgene00012365": 97, "wbgene00012366": 97, "wbgene00012368": 97, "wbgene00012369": 97, "wbgene00012370": 97, "wbgene00012371": 97, "wbgene00012376": 97, "wbgene00012377": 97, "wbgene00012386": 97, "wbgene00012387": 97, "wbgene00012388": 97, "wbgene00012389": 97, "wbgene00012390": 97, "wbgene00012391": 97, "wbgene00012393": 97, "wbgene00012394": 97, "wbgene00012474": 97, "wbgene00012475": 97, "wbgene00012476": 97, "wbgene00012477": 97, "wbgene00012478": 97, "wbgene00012479": 97, "wbgene00012480": 97, "wbgene00012481": 97, "wbgene00012482": 97, "wbgene00012483": 97, "wbgene00012484": 97, "wbgene00012485": 97, "wbgene00012486": 97, "wbgene00012487": 97, "wbgene00012488": 97, "wbgene00012500": 97, "wbgene00012501": 97, "wbgene00012502": 97, "wbgene00012503": 97, "wbgene00012504": 97, "wbgene00012505": 97, "wbgene00012509": 97, "wbgene00012576": 97, "wbgene00012577": 97, "wbgene00012578": 97, "wbgene00012653": 97, "wbgene00012732": 97, "wbgene00012734": 97, "wbgene00012735": 97, "wbgene00012738": 97, "wbgene00012739": 97, "wbgene00012740": 97, "wbgene00012752": 97, "wbgene00012945": 97, "wbgene00012946": 97, "wbgene00012947": 97, "wbgene00012948": 97, "wbgene00012950": 97, "wbgene00012951": 97, "wbgene00012952": 97, "wbgene00012953": 97, "wbgene00012954": 97, "wbgene00012955": 97, "wbgene00012956": 97, "wbgene00012958": 97, "wbgene00012959": 97, "wbgene00012960": 97, "wbgene00012961": 97, "wbgene00013010": 97, "wbgene00013018": 97, "wbgene00013019": 97, "wbgene00013020": 97, "wbgene00013021": 97, "wbgene00013023": 97, "wbgene00013121": 97, "wbgene00013122": 97, "wbgene00013123": 97, "wbgene00013124": 97, "wbgene00013125": 97, "wbgene00013126": 97, "wbgene00013127": 97, "wbgene00013128": 97, "wbgene00013129": 97, "wbgene00013130": 97, "wbgene00013131": 97, "wbgene00013134": 97, "wbgene00013135": 97, "wbgene00013136": 97, "wbgene00013137": 97, "wbgene00013138": 97, "wbgene00013177": 97, "wbgene00013178": 97, "wbgene00013179": 97, "wbgene00013180": 97, "wbgene00013181": 97, "wbgene00013182": 97, "wbgene00013184": 97, "wbgene00013186": 97, "wbgene00013197": 97, "wbgene00013198": 97, "wbgene00013200": 97, "wbgene00013201": 97, "wbgene00013202": 97, "wbgene00013203": 97, "wbgene00013204": 97, "wbgene00013386": 97, "wbgene00013403": 97, "wbgene00013404": 97, "wbgene00013405": 97, "wbgene00013406": 97, "wbgene00013407": 97, "wbgene00013408": 97, "wbgene00013409": 97, "wbgene00013410": 97, "wbgene00013449": 97, "wbgene00013500": 97, "wbgene00013501": 97, "wbgene00013502": 97, "wbgene00013503": 97, "wbgene00013505": 97, "wbgene00013506": 97, "wbgene00013507": 97, "wbgene00013508": 97, "wbgene00013509": 97, "wbgene00013510": 97, "wbgene00013511": 97, "wbgene00013512": 97, "wbgene00013513": 97, "wbgene00013593": 97, "wbgene00013594": 97, "wbgene00013595": 97, "wbgene00013596": 97, "wbgene00013597": 97, "wbgene00013598": 97, "wbgene00013599": 97, "wbgene00013601": 97, "wbgene00013602": 97, "wbgene00013603": 97, "wbgene00013604": 97, "wbgene00013605": 97, "wbgene00013666": 97, "wbgene00013667": 97, "wbgene00013668": 97, "wbgene00013669": 97, "wbgene00013670": 97, "wbgene00013671": 97, "wbgene00013672": 97, "wbgene00013673": 97, "wbgene00013674": 97, "wbgene00013676": 97, "wbgene00013677": 97, "wbgene00013678": 97, "wbgene00013679": 97, "wbgene00013680": 97, "wbgene00013682": 97, "wbgene00013683": 97, "wbgene00013684": 97, "wbgene00013685": 97, "wbgene00013687": 97, "wbgene00013688": 97, "wbgene00013689": 97, "wbgene00013690": 97, "wbgene00013691": 97, "wbgene00013692": 97, "wbgene00013693": 97, "wbgene00013694": 97, "wbgene00013695": 97, "wbgene00013696": 97, "wbgene00013697": 97, "wbgene00013698": 97, "wbgene00013699": 97, "wbgene00013700": 97, "wbgene00013701": 97, "wbgene00013702": 97, "wbgene00013703": 97, "wbgene00013704": 97, "wbgene00013705": 97, "wbgene00013706": 97, "wbgene00013707": 97, "wbgene00013708": 97, "wbgene00013709": 97, "wbgene00013710": 97, "wbgene00013711": 97, "wbgene00013712": 97, "wbgene00013713": 97, "wbgene00013716": 97, "wbgene00013717": 97, "wbgene00013718": 97, "wbgene00013719": 97, "wbgene00013720": 97, "wbgene00013721": 97, "wbgene00013722": 97, "wbgene00013723": 97, "wbgene00013724": 97, "wbgene00013725": 97, "wbgene00013726": 97, "wbgene00013859": 97, "wbgene00013860": 97, "wbgene00013865": 97, "wbgene00013891": 97, "wbgene00013892": 97, "wbgene00013893": 97, "wbgene00013894": 97, "wbgene00013895": 97, "wbgene00013918": 97, "wbgene00013927": 97, "wbgene00013928": 97, "wbgene00013929": 97, "wbgene00013930": 97, "wbgene00013931": 97, "wbgene00013932": 97, "wbgene00013933": 97, "wbgene00013955": 97, "wbgene00013956": 97, "wbgene00013957": 97, "wbgene00013958": 97, "wbgene00013959": 97, "wbgene00013960": 97, "wbgene00013969": 97, "wbgene00013970": 97, "wbgene00013993": 97, "wbgene00013994": 97, "wbgene00014026": 97, "wbgene00014100": 97, "wbgene00014101": 97, "wbgene00014102": 97, "wbgene00014103": 97, "wbgene00014104": 97, "wbgene00014115": 97, "wbgene00014116": 97, "wbgene00014117": 97, "wbgene00014118": 97, "wbgene00014119": 97, "wbgene00014120": 97, "wbgene00014121": 97, "wbgene00014126": 97, "wbgene00014147": 97, "wbgene00014148": 97, "wbgene00014149": 97, "wbgene00014150": 97, "wbgene00014182": 97, "wbgene00014183": 97, "wbgene00014184": 97, "wbgene00014185": 97, "wbgene00014186": 97, "wbgene00014188": 97, "wbgene00014189": 97, "wbgene00014196": 97, "wbgene00014197": 97, "wbgene00014198": 97, "wbgene00014199": 97, "wbgene00014200": 97, "wbgene00014201": 97, "wbgene00014235": 97, "wbgene00014236": 97, "wbgene00014238": 97, "wbgene00014239": 97, "wbgene00014279": 97, "wbgene00014280": 97, "wbgene00014281": 97, "wbgene00014282": 97, "wbgene00014288": 97, "wbgene00014301": 97, "wbgene00014325": 97, "wbgene00014326": 97, "wbgene00014327": 97, "wbgene00014328": 97, "wbgene00014332": 97, "wbgene00014335": 97, "wbgene00014336": 97, "wbgene00014337": 97, "wbgene00014343": 97, "wbgene00014344": 97, "wbgene00014345": 97, "wbgene00014349": 97, "wbgene00014363": 97, "wbgene00014389": 97, "wbgene00014403": 97, "wbgene00014404": 97, "wbgene00014405": 97, "wbgene00014411": 97, "wbgene00014418": 97, "wbgene00014424": 97, "wbgene00014446": 97, "wbgene00014483": 97, "wbgene00014498": 97, "wbgene00014500": 97, "wbgene00014501": 97, "wbgene00014502": 97, "wbgene00014503": 97, "wbgene00014510": 97, "wbgene00014525": 97, "wbgene00014526": 97, "wbgene00014527": 97, "wbgene00014528": 97, "wbgene00014529": 97, "wbgene00014533": 97, "wbgene00014542": 97, "wbgene00014545": 97, "wbgene00014577": 97, "wbgene00014585": 97, "wbgene00014586": 97, "wbgene00014587": 97, "wbgene00014605": 97, "wbgene00014612": 97, "wbgene00014620": 97, "wbgene00014664": 97, "wbgene00014698": 97, "wbgene00014699": 97, "wbgene00014700": 97, "wbgene00014714": 97, "wbgene00014727": 97, "wbgene00014729": 97, "wbgene00014731": 97, "wbgene00014746": 97, "wbgene00014748": 97, "wbgene00014759": 97, "wbgene00014760": 97, "wbgene00014761": 97, "wbgene00014789": 97, "wbgene00014806": 97, "wbgene00014807": 97, "wbgene00014820": 97, "wbgene00014852": 97, "wbgene00014853": 97, "wbgene00014858": 97, "wbgene00014861": 97, "wbgene00014864": 97, "wbgene00014870": 97, "wbgene00014871": 97, "wbgene00014914": 97, "wbgene00014915": 97, "wbgene00014916": 97, "wbgene00014917": 97, "wbgene00014918": 97, "wbgene00014921": 97, "wbgene00014947": 97, "wbgene00014964": 97, "wbgene00014965": 97, "wbgene00014966": 97, "wbgene00014992": 97, "wbgene00014994": 97, "wbgene00015001": 97, "wbgene00015006": 97, "wbgene00015007": 97, "wbgene00015008": 97, "wbgene00015009": 97, "wbgene00015010": 97, "wbgene00015011": 97, "wbgene00015017": 97, "wbgene00015018": 97, "wbgene00015019": 97, "wbgene00015020": 97, "wbgene00015021": 97, "wbgene00015022": 97, "wbgene00015023": 97, "wbgene00015024": 97, "wbgene00015025": 97, "wbgene00015026": 97, "wbgene00015027": 97, "wbgene00015028": 97, "wbgene00015029": 97, "wbgene00015030": 97, "wbgene00015032": 97, "wbgene00015033": 97, "wbgene00015034": 97, "wbgene00015091": 97, "wbgene00015092": 97, "wbgene00015093": 97, "wbgene00015094": 97, "wbgene00015095": 97, "wbgene00015096": 97, "wbgene00015175": 97, "wbgene00015176": 97, "wbgene00015228": 97, "wbgene00015229": 97, "wbgene00015230": 97, "wbgene00015231": 97, "wbgene00015232": 97, "wbgene00015233": 97, "wbgene00015235": 97, "wbgene00015236": 97, "wbgene00015237": 97, "wbgene00015238": 97, "wbgene00015303": 97, "wbgene00015312": 97, "wbgene00015313": 97, "wbgene00015442": 97, "wbgene00015499": 97, "wbgene00015500": 97, "wbgene00015501": 97, "wbgene00015504": 97, "wbgene00015505": 97, "wbgene00015570": 97, "wbgene00015631": 97, "wbgene00015632": 97, "wbgene00015633": 97, "wbgene00015634": 97, "wbgene00015635": 97, "wbgene00015636": 97, "wbgene00015685": 97, "wbgene00015686": 97, "wbgene00015687": 97, "wbgene00015688": 97, "wbgene00015689": 97, "wbgene00015690": 97, "wbgene00015691": 97, "wbgene00015692": 97, "wbgene00015693": 97, "wbgene00015694": 97, "wbgene00015695": 97, "wbgene00015696": 97, "wbgene00015697": 97, "wbgene00015698": 97, "wbgene00015704": 97, "wbgene00015907": 97, "wbgene00015908": 97, "wbgene00015970": 97, "wbgene00015971": 97, "wbgene00015972": 97, "wbgene00015974": 97, "wbgene00015975": 97, "wbgene00015976": 97, "wbgene00016040": 97, "wbgene00016063": 97, "wbgene00016064": 97, "wbgene00016066": 97, "wbgene00016154": 97, "wbgene00016155": 97, "wbgene00016156": 97, "wbgene00016157": 97, "wbgene00016158": 97, "wbgene00016159": 97, "wbgene00016258": 97, "wbgene00016259": 97, "wbgene00016260": 97, "wbgene00016261": 97, "wbgene00016262": 97, "wbgene00016263": 97, "wbgene00016264": 97, "wbgene00016265": 97, "wbgene00016266": 97, "wbgene00016278": 97, "wbgene00016320": 97, "wbgene00016321": 97, "wbgene00016322": 97, "wbgene00016323": 97, "wbgene00016324": 97, "wbgene00016325": 97, "wbgene00016326": 97, "wbgene00016327": 97, "wbgene00016328": 97, "wbgene00016329": 97, "wbgene00016330": 97, "wbgene00016331": 97, "wbgene00016332": 97, "wbgene00016333": 97, "wbgene00016386": 97, "wbgene00016387": 97, "wbgene00016388": 97, "wbgene00016389": 97, "wbgene00016390": 97, "wbgene00016391": 97, "wbgene00016392": 97, "wbgene00016393": 97, "wbgene00016394": 97, "wbgene00016395": 97, "wbgene00016396": 97, "wbgene00016418": 97, "wbgene00016419": 97, "wbgene00016420": 97, "wbgene00016421": 97, "wbgene00016422": 97, "wbgene00016453": 97, "wbgene00016454": 97, "wbgene00016455": 97, "wbgene00016456": 97, "wbgene00016457": 97, "wbgene00016458": 97, "wbgene00016459": 97, "wbgene00016460": 97, "wbgene00016461": 97, "wbgene00016462": 97, "wbgene00016463": 97, "wbgene00016491": 97, "wbgene00016492": 97, "wbgene00016493": 97, "wbgene00016494": 97, "wbgene00016561": 97, "wbgene00016562": 97, "wbgene00016564": 97, "wbgene00016565": 97, "wbgene00016566": 97, "wbgene00016567": 97, "wbgene00016601": 97, "wbgene00016602": 97, "wbgene00016603": 97, "wbgene00016605": 97, "wbgene00016606": 97, "wbgene00016607": 97, "wbgene00016608": 97, "wbgene00016609": 97, "wbgene00016621": 97, "wbgene00016622": 97, "wbgene00016650": 97, "wbgene00016652": 97, "wbgene00016653": 97, "wbgene00016654": 97, "wbgene00016655": 97, "wbgene00016663": 97, "wbgene00016727": 97, "wbgene00016728": 97, "wbgene00016729": 97, "wbgene00016730": 97, "wbgene00016731": 97, "wbgene00016732": 97, "wbgene00016733": 97, "wbgene00016734": 97, "wbgene00016735": 97, "wbgene00016740": 97, "wbgene00016741": 97, "wbgene00016742": 97, "wbgene00016743": 97, "wbgene00016744": 97, "wbgene00016745": 97, "wbgene00016746": 97, "wbgene00016749": 97, "wbgene00016750": 97, "wbgene00016751": 97, "wbgene00016752": 97, "wbgene00016753": 97, "wbgene00016754": 97, "wbgene00016835": 97, "wbgene00016836": 97, "wbgene00016837": 97, "wbgene00016838": 97, "wbgene00016839": 97, "wbgene00016840": 97, "wbgene00016841": 97, "wbgene00016902": 97, "wbgene00016903": 97, "wbgene00016905": 97, "wbgene00016906": 97, "wbgene00016907": 97, "wbgene00016930": 97, "wbgene00016931": 97, "wbgene00016932": 97, "wbgene00016942": 97, "wbgene00016943": 97, "wbgene00016944": 97, "wbgene00016945": 97, "wbgene00016946": 97, "wbgene00016947": 97, "wbgene00016948": 97, "wbgene00016949": 97, "wbgene00016950": 97, "wbgene00017001": 97, "wbgene00017002": 97, "wbgene00017003": 97, "wbgene00017004": 97, "wbgene00017005": 97, "wbgene00017007": 97, "wbgene00017009": 97, "wbgene00017010": 97, "wbgene00017011": 97, "wbgene00017025": 97, "wbgene00017026": 97, "wbgene00017063": 97, "wbgene00017064": 97, "wbgene00017065": 97, "wbgene00017066": 97, "wbgene00017068": 97, "wbgene00017084": 97, "wbgene00017085": 97, "wbgene00017087": 97, "wbgene00017088": 97, "wbgene00017089": 97, "wbgene00017090": 97, "wbgene00017098": 97, "wbgene00017239": 97, "wbgene00017240": 97, "wbgene00017398": 97, "wbgene00017399": 97, "wbgene00017650": 97, "wbgene00017651": 97, "wbgene00017671": 97, "wbgene00017672": 97, "wbgene00017673": 97, "wbgene00017674": 97, "wbgene00017675": 97, "wbgene00017676": 97, "wbgene00017731": 97, "wbgene00017732": 97, "wbgene00017733": 97, "wbgene00017734": 97, "wbgene00017735": 97, "wbgene00017736": 97, "wbgene00017737": 97, "wbgene00017738": 97, "wbgene00017739": 97, "wbgene00017741": 97, "wbgene00017795": 97, "wbgene00017815": 97, "wbgene00017816": 97, "wbgene00017817": 97, "wbgene00017851": 97, "wbgene00017852": 97, "wbgene00017853": 97, "wbgene00017854": 97, "wbgene00017855": 97, "wbgene00017858": 97, "wbgene00017860": 97, "wbgene00017885": 97, "wbgene00017886": 97, "wbgene00017887": 97, "wbgene00017888": 97, "wbgene00017889": 97, "wbgene00017908": 97, "wbgene00017909": 97, "wbgene00017910": 97, "wbgene00017975": 97, "wbgene00017976": 97, "wbgene00017977": 97, "wbgene00017978": 97, "wbgene00017979": 97, "wbgene00017980": 97, "wbgene00018000": 97, "wbgene00018001": 97, "wbgene00018002": 97, "wbgene00018003": 97, "wbgene00018004": 97, "wbgene00018005": 97, "wbgene00018006": 97, "wbgene00018007": 97, "wbgene00018008": 97, "wbgene00018009": 97, "wbgene00018156": 97, "wbgene00018157": 97, "wbgene00018158": 97, "wbgene00018159": 97, "wbgene00018230": 97, "wbgene00018231": 97, "wbgene00018232": 97, "wbgene00018233": 97, "wbgene00018508": 97, "wbgene00018509": 97, "wbgene00018510": 97, "wbgene00018511": 97, "wbgene00018512": 97, "wbgene00018513": 97, "wbgene00018525": 97, "wbgene00018526": 97, "wbgene00018527": 97, "wbgene00018528": 97, "wbgene00018529": 97, "wbgene00018530": 97, "wbgene00018531": 97, "wbgene00018579": 97, "wbgene00018580": 97, "wbgene00018582": 97, "wbgene00018594": 97, "wbgene00018595": 97, "wbgene00018596": 97, "wbgene00018598": 97, "wbgene00018599": 97, "wbgene00018600": 97, "wbgene00018601": 97, "wbgene00018625": 97, "wbgene00018626": 97, "wbgene00018627": 97, "wbgene00018628": 97, "wbgene00018630": 97, "wbgene00018631": 97, "wbgene00018632": 97, "wbgene00018763": 97, "wbgene00018764": 97, "wbgene00018765": 97, "wbgene00018771": 97, "wbgene00018772": 97, "wbgene00018773": 97, "wbgene00018774": 97, "wbgene00018786": 97, "wbgene00018787": 97, "wbgene00018788": 97, "wbgene00018789": 97, "wbgene00018791": 97, "wbgene00018792": 97, "wbgene00018797": 97, "wbgene00018798": 97, "wbgene00018847": 97, "wbgene00018848": 97, "wbgene00018849": 97, "wbgene00018850": 97, "wbgene00018851": 97, "wbgene00018852": 97, "wbgene00018862": 97, "wbgene00018863": 97, "wbgene00018864": 97, "wbgene00018865": 97, "wbgene00018866": 97, "wbgene00018867": 97, "wbgene00018868": 97, "wbgene00018890": 97, "wbgene00018891": 97, "wbgene00018892": 97, "wbgene00018893": 97, "wbgene00018894": 97, "wbgene00018895": 97, "wbgene00018896": 97, "wbgene00018897": 97, "wbgene00018908": 97, "wbgene00018909": 97, "wbgene00018921": 97, "wbgene00018923": 97, "wbgene00018955": 97, "wbgene00018957": 97, "wbgene00018958": 97, "wbgene00018978": 97, "wbgene00018979": 97, "wbgene00018980": 97, "wbgene00018981": 97, "wbgene00018982": 97, "wbgene00018993": 97, "wbgene00018994": 97, "wbgene00018995": 97, "wbgene00019001": 97, "wbgene00019002": 97, "wbgene00019003": 97, "wbgene00019004": 97, "wbgene00019005": 97, "wbgene00019006": 97, "wbgene00019007": 97, "wbgene00019008": 97, "wbgene00019009": 97, "wbgene00019010": 97, "wbgene00019011": 97, "wbgene00019012": 97, "wbgene00019013": 97, "wbgene00019074": 97, "wbgene00019075": 97, "wbgene00019076": 97, "wbgene00019077": 97, "wbgene00019079": 97, "wbgene00019080": 97, "wbgene00019081": 97, "wbgene00019082": 97, "wbgene00019245": 97, "wbgene00019246": 97, "wbgene00019247": 97, "wbgene00019248": 97, "wbgene00019253": 97, "wbgene00019254": 97, "wbgene00019322": 97, "wbgene00019323": 97, "wbgene00019324": 97, "wbgene00019360": 97, "wbgene00019361": 97, "wbgene00019362": 97, "wbgene00019394": 97, "wbgene00019395": 97, "wbgene00019396": 97, "wbgene00019399": 97, "wbgene00019429": 97, "wbgene00019430": 97, "wbgene00019431": 97, "wbgene00019432": 97, "wbgene00019433": 97, "wbgene00019434": 97, "wbgene00019461": 97, "wbgene00019594": 97, "wbgene00019595": 97, "wbgene00019597": 97, "wbgene00019598": 97, "wbgene00019673": 97, "wbgene00019674": 97, "wbgene00019692": 97, "wbgene00019693": 97, "wbgene00019697": 97, "wbgene00019698": 97, "wbgene00019706": 97, "wbgene00019710": 97, "wbgene00019711": 97, "wbgene00019712": 97, "wbgene00019713": 97, "wbgene00019767": 97, "wbgene00019768": 97, "wbgene00019769": 97, "wbgene00019770": 97, "wbgene00019771": 97, "wbgene00019909": 97, "wbgene00019911": 97, "wbgene00019992": 97, "wbgene00019993": 97, "wbgene00020030": 97, "wbgene00020031": 97, "wbgene00020032": 97, "wbgene00020033": 97, "wbgene00020034": 97, "wbgene00020035": 97, "wbgene00020036": 97, "wbgene00020037": 97, "wbgene00020038": 97, "wbgene00020039": 97, "wbgene00020040": 97, "wbgene00020087": 97, "wbgene00020088": 97, "wbgene00020089": 97, "wbgene00020090": 97, "wbgene00020091": 97, "wbgene00020131": 97, "wbgene00020184": 97, "wbgene00020185": 97, "wbgene00020187": 97, "wbgene00020188": 97, "wbgene00020189": 97, "wbgene00020190": 97, "wbgene00020191": 97, "wbgene00020192": 97, "wbgene00020193": 97, "wbgene00020212": 97, "wbgene00020258": 97, "wbgene00020259": 97, "wbgene00020260": 97, "wbgene00020261": 97, "wbgene00020262": 97, "wbgene00020263": 97, "wbgene00020281": 97, "wbgene00020282": 97, "wbgene00020283": 97, "wbgene00020345": 97, "wbgene00020346": 97, "wbgene00020347": 97, "wbgene00020348": 97, "wbgene00020349": 97, "wbgene00020350": 97, "wbgene00020375": 97, "wbgene00020376": 97, "wbgene00020377": 97, "wbgene00020378": 97, "wbgene00020379": 97, "wbgene00020380": 97, "wbgene00020381": 97, "wbgene00020382": 97, "wbgene00020383": 97, "wbgene00020397": 97, "wbgene00020398": 97, "wbgene00020399": 97, "wbgene00020400": 97, "wbgene00020401": 97, "wbgene00020402": 97, "wbgene00020403": 97, "wbgene00020404": 97, "wbgene00020411": 97, "wbgene00020412": 97, "wbgene00020413": 97, "wbgene00020414": 97, "wbgene00020415": 97, "wbgene00020416": 97, "wbgene00020417": 97, "wbgene00020418": 97, "wbgene00020419": 97, "wbgene00020466": 97, "wbgene00020467": 97, "wbgene00020556": 97, "wbgene00020557": 97, "wbgene00020558": 97, "wbgene00020625": 97, "wbgene00020626": 97, "wbgene00020627": 97, "wbgene00020628": 97, "wbgene00020629": 97, "wbgene00020652": 97, "wbgene00020653": 97, "wbgene00020655": 97, "wbgene00020656": 97, "wbgene00020659": 97, "wbgene00020660": 97, "wbgene00020661": 97, "wbgene00020693": 97, "wbgene00020694": 97, "wbgene00020709": 97, "wbgene00020710": 97, "wbgene00020711": 97, "wbgene00020712": 97, "wbgene00020713": 97, "wbgene00020714": 97, "wbgene00020742": 97, "wbgene00020743": 97, "wbgene00020838": 97, "wbgene00020839": 97, "wbgene00020840": 97, "wbgene00020841": 97, "wbgene00020842": 97, "wbgene00020843": 97, "wbgene00020856": 97, "wbgene00020857": 97, "wbgene00020858": 97, "wbgene00020859": 97, "wbgene00020860": 97, "wbgene00020900": 97, "wbgene00020901": 97, "wbgene00020902": 97, "wbgene00020903": 97, "wbgene00020913": 97, "wbgene00020914": 97, "wbgene00020915": 97, "wbgene00020917": 97, "wbgene00020931": 97, "wbgene00020932": 97, "wbgene00020933": 97, "wbgene00020935": 97, "wbgene00020936": 97, "wbgene00020937": 97, "wbgene00020984": 97, "wbgene00020985": 97, "wbgene00020986": 97, "wbgene00020987": 97, "wbgene00020988": 97, "wbgene00020989": 97, "wbgene00020990": 97, "wbgene00020991": 97, "wbgene00021005": 97, "wbgene00021006": 97, "wbgene00021007": 97, "wbgene00021008": 97, "wbgene00021009": 97, "wbgene00021014": 97, "wbgene00021015": 97, "wbgene00021016": 97, "wbgene00021017": 97, "wbgene00021024": 97, "wbgene00021025": 97, "wbgene00021026": 97, "wbgene00021027": 97, "wbgene00021028": 97, "wbgene00021034": 97, "wbgene00021035": 97, "wbgene00021036": 97, "wbgene00021037": 97, "wbgene00021038": 97, "wbgene00021039": 97, "wbgene00021109": 97, "wbgene00021110": 97, "wbgene00021111": 97, "wbgene00021112": 97, "wbgene00021113": 97, "wbgene00021114": 97, "wbgene00021115": 97, "wbgene00021125": 97, "wbgene00021127": 97, "wbgene00021128": 97, "wbgene00021175": 97, "wbgene00021207": 97, "wbgene00021208": 97, "wbgene00021209": 97, "wbgene00021210": 97, "wbgene00021212": 97, "wbgene00021213": 97, "wbgene00021214": 97, "wbgene00021215": 97, "wbgene00021237": 97, "wbgene00021238": 97, "wbgene00021239": 97, "wbgene00021269": 97, "wbgene00021270": 97, "wbgene00021271": 97, "wbgene00021272": 97, "wbgene00021273": 97, "wbgene00021274": 97, "wbgene00021275": 97, "wbgene00021276": 97, "wbgene00021277": 97, "wbgene00021278": 97, "wbgene00021279": 97, "wbgene00021280": 97, "wbgene00021327": 97, "wbgene00021328": 97, "wbgene00021329": 97, "wbgene00021331": 97, "wbgene00021332": 97, "wbgene00021333": 97, "wbgene00021334": 97, "wbgene00021335": 97, "wbgene00021346": 97, "wbgene00021347": 97, "wbgene00021348": 97, "wbgene00021349": 97, "wbgene00021350": 97, "wbgene00021351": 97, "wbgene00021352": 97, "wbgene00021353": 97, "wbgene00021354": 97, "wbgene00021355": 97, "wbgene00021382": 97, "wbgene00021383": 97, "wbgene00021384": 97, "wbgene00021385": 97, "wbgene00021386": 97, "wbgene00021387": 97, "wbgene00021388": 97, "wbgene00021458": 97, "wbgene00021460": 97, "wbgene00021461": 97, "wbgene00021463": 97, "wbgene00021464": 97, "wbgene00021465": 97, "wbgene00021466": 97, "wbgene00021467": 97, "wbgene00021468": 97, "wbgene00021469": 97, "wbgene00021470": 97, "wbgene00021471": 97, "wbgene00021472": 97, "wbgene00021473": 97, "wbgene00021474": 97, "wbgene00021475": 97, "wbgene00021476": 97, "wbgene00021477": 97, "wbgene00021547": 97, "wbgene00021548": 97, "wbgene00021549": 97, "wbgene00021551": 97, "wbgene00021552": 97, "wbgene00021553": 97, "wbgene00021628": 97, "wbgene00021629": 97, "wbgene00021630": 97, "wbgene00021631": 97, "wbgene00021632": 97, "wbgene00021633": 97, "wbgene00021634": 97, "wbgene00021635": 97, "wbgene00021636": 97, "wbgene00021637": 97, "wbgene00021638": 97, "wbgene00021639": 97, "wbgene00021640": 97, "wbgene00021641": 97, "wbgene00021643": 97, "wbgene00021644": 97, "wbgene00021645": 97, "wbgene00021646": 97, "wbgene00021647": 97, "wbgene00021648": 97, "wbgene00021649": 97, "wbgene00021650": 97, "wbgene00021651": 97, "wbgene00021653": 97, "wbgene00021657": 97, "wbgene00021658": 97, "wbgene00021660": 97, "wbgene00021662": 97, "wbgene00021664": 97, "wbgene00021666": 97, "wbgene00021667": 97, "wbgene00021668": 97, "wbgene00021671": 97, "wbgene00021672": 97, "wbgene00021673": 97, "wbgene00021675": 97, "wbgene00021676": 97, "wbgene00021677": 97, "wbgene00021678": 97, "wbgene00021679": 97, "wbgene00021681": 97, "wbgene00021682": 97, "wbgene00021683": 97, "wbgene00021685": 97, "wbgene00021686": 97, "wbgene00021687": 97, "wbgene00021689": 97, "wbgene00021690": 97, "wbgene00021691": 97, "wbgene00021692": 97, "wbgene00021693": 97, "wbgene00021694": 97, "wbgene00021733": 97, "wbgene00021734": 97, "wbgene00021763": 97, "wbgene00021764": 97, "wbgene00021765": 97, "wbgene00021766": 97, "wbgene00021768": 97, "wbgene00021771": 97, "wbgene00021826": 97, "wbgene00021827": 97, "wbgene00021828": 97, "wbgene00021829": 97, "wbgene00021830": 97, "wbgene00021831": 97, "wbgene00021832": 97, "wbgene00021833": 97, "wbgene00021834": 97, "wbgene00021835": 97, "wbgene00021838": 97, "wbgene00021839": 97, "wbgene00021840": 97, "wbgene00021841": 97, "wbgene00021842": 97, "wbgene00021843": 97, "wbgene00021844": 97, "wbgene00021845": 97, "wbgene00021846": 97, "wbgene00022025": 97, "wbgene00022026": 97, "wbgene00022027": 97, "wbgene00022028": 97, "wbgene00022029": 97, "wbgene00022030": 97, "wbgene00022031": 97, "wbgene00022032": 97, "wbgene00022033": 97, "wbgene00022034": 97, "wbgene00022035": 97, "wbgene00022036": 97, "wbgene00022037": 97, "wbgene00022038": 97, "wbgene00022039": 97, "wbgene00022040": 97, "wbgene00022042": 97, "wbgene00022043": 97, "wbgene00022107": 97, "wbgene00022108": 97, "wbgene00022110": 97, "wbgene00022111": 97, "wbgene00022112": 97, "wbgene00022113": 97, "wbgene00022114": 97, "wbgene00022115": 97, "wbgene00022117": 97, "wbgene00022118": 97, "wbgene00022119": 97, "wbgene00022121": 97, "wbgene00022122": 97, "wbgene00022123": 97, "wbgene00022124": 97, "wbgene00022125": 97, "wbgene00022126": 97, "wbgene00022127": 97, "wbgene00022128": 97, "wbgene00022129": 97, "wbgene00022130": 97, "wbgene00022131": 97, "wbgene00022133": 97, "wbgene00022138": 97, "wbgene00022139": 97, "wbgene00022140": 97, "wbgene00022141": 97, "wbgene00022142": 97, "wbgene00022143": 97, "wbgene00022144": 97, "wbgene00022145": 97, "wbgene00022146": 97, "wbgene00022148": 97, "wbgene00022149": 97, "wbgene00022150": 97, "wbgene00022152": 97, "wbgene00022153": 97, "wbgene00022154": 97, "wbgene00022155": 97, "wbgene00022156": 97, "wbgene00022157": 97, "wbgene00022158": 97, "wbgene00022159": 97, "wbgene00022160": 97, "wbgene00022161": 97, "wbgene00022162": 97, "wbgene00022163": 97, "wbgene00022268": 97, "wbgene00022269": 97, "wbgene00022270": 97, "wbgene00022271": 97, "wbgene00022272": 97, "wbgene00022273": 97, "wbgene00022274": 97, "wbgene00022275": 97, "wbgene00022277": 97, "wbgene00022278": 97, "wbgene00022279": 97, "wbgene00022280": 97, "wbgene00022281": 97, "wbgene00022282": 97, "wbgene00022358": 97, "wbgene00022360": 97, "wbgene00022361": 97, "wbgene00022363": 97, "wbgene00022365": 97, "wbgene00022366": 97, "wbgene00022367": 97, "wbgene00022368": 97, "wbgene00022369": 97, "wbgene00022370": 97, "wbgene00022371": 97, "wbgene00022372": 97, "wbgene00022373": 97, "wbgene00022385": 97, "wbgene00022386": 97, "wbgene00022388": 97, "wbgene00022389": 97, "wbgene00022390": 97, "wbgene00022391": 97, "wbgene00022454": 97, "wbgene00022455": 97, "wbgene00022456": 97, "wbgene00022457": 97, "wbgene00022458": 97, "wbgene00022459": 97, "wbgene00022460": 97, "wbgene00022462": 97, "wbgene00022463": 97, "wbgene00022465": 97, "wbgene00022466": 97, "wbgene00022467": 97, "wbgene00022469": 97, "wbgene00022470": 97, "wbgene00022471": 97, "wbgene00022472": 97, "wbgene00022473": 97, "wbgene00022474": 97, "wbgene00022475": 97, "wbgene00022517": 97, "wbgene00022518": 97, "wbgene00022519": 97, "wbgene00022586": 97, "wbgene00022591": 97, "wbgene00022592": 97, "wbgene00022593": 97, "wbgene00022594": 97, "wbgene00022631": 97, "wbgene00022632": 97, "wbgene00022633": 97, "wbgene00022634": 97, "wbgene00022635": 97, "wbgene00022748": 97, "wbgene00022749": 97, "wbgene00022750": 97, "wbgene00022751": 97, "wbgene00022752": 97, "wbgene00022753": 97, "wbgene00022754": 97, "wbgene00022815": 97, "wbgene00022830": 97, "wbgene00022831": 97, "wbgene00022832": 97, "wbgene00022833": 97, "wbgene00022834": 97, "wbgene00022835": 97, "wbgene00022836": 97, "wbgene00022837": 97, "wbgene00022838": 97, "wbgene00022946": 97, "wbgene00022953": 97, "wbgene00022955": 97, "wbgene00023023": 97, "wbgene00023024": 97, "wbgene00023055": 97, "wbgene00023057": 97, "wbgene00023058": 97, "wbgene00023065": 97, "wbgene00023066": 97, "wbgene00023067": 97, "wbgene00023068": 97, "wbgene00023072": 97, "wbgene00023073": 97, "wbgene00023135": 97, "wbgene00023136": 97, "wbgene00023142": 97, "wbgene00023156": 97, "wbgene00023169": 97, "wbgene00023172": 97, "wbgene00023176": 97, "wbgene00023193": 97, "wbgene00023198": 97, "wbgene00023199": 97, "wbgene00023273": 97, "wbgene00023274": 97, "wbgene00023295": 97, "wbgene00023314": 97, "wbgene00023344": 97, "wbgene00023368": 97, "wbgene00023369": 97, "wbgene00023398": 97, "wbgene00023409": 97, "wbgene00023411": 97, "wbgene00023413": 97, "wbgene00023415": 97, "wbgene00023452": 97, "wbgene00023459": 97, "wbgene00023461": 97, "wbgene00023472": 97, "wbgene00023490": 97, "wbgene00043049": 97, "wbgene00043056": 97, "wbgene00043279": 97, "wbgene00043308": 97, "wbgene00044008": 97, "wbgene00044058": 97, "wbgene00044065": 97, "wbgene00044066": 97, "wbgene00044070": 97, "wbgene00044094": 97, "wbgene00044120": 97, "wbgene00044122": 97, "wbgene00044236": 97, "wbgene00044237": 97, "wbgene00044242": 97, "wbgene00044243": 97, "wbgene00044245": 97, "wbgene00044246": 97, "wbgene00044247": 97, "wbgene00044250": 97, "wbgene00044251": 97, "wbgene00044260": 97, "wbgene00044261": 97, "wbgene00044262": 97, "wbgene00044264": 97, "wbgene00044265": 97, "wbgene00044266": 97, "wbgene00044267": 97, "wbgene00044270": 97, "wbgene00044277": 97, "wbgene00044289": 97, "wbgene00044305": 97, "wbgene00044321": 97, "wbgene00044345": 97, "wbgene00044347": 97, "wbgene00044348": 97, "wbgene00044349": 97, "wbgene00044358": 97, "wbgene00044413": 97, "wbgene00044414": 97, "wbgene00044421": 97, "wbgene00044423": 97, "wbgene00044427": 97, "wbgene00044431": 97, "wbgene00044432": 97, "wbgene00044433": 97, "wbgene00044434": 97, "wbgene00044435": 97, "wbgene00044436": 97, "wbgene00044437": 97, "wbgene00044438": 97, "wbgene00044440": 97, "wbgene00044441": 97, "wbgene00044461": 97, "wbgene00044607": 97, "wbgene00044610": 97, "wbgene00044611": 97, "wbgene00044614": 97, "wbgene00044616": 97, "wbgene00044644": 97, "wbgene00044646": 97, "wbgene00044679": 97, "wbgene00044680": 97, "wbgene00044684": 97, "wbgene00044706": 97, "wbgene00044707": 97, "wbgene00044708": 97, "wbgene00044709": 97, "wbgene00044710": 97, "wbgene00044711": 97, "wbgene00044712": 97, "wbgene00044713": 97, "wbgene00044714": 97, "wbgene00044716": 97, "wbgene00044722": 97, "wbgene00044746": 97, "wbgene00044754": 97, "wbgene00044764": 97, "wbgene00044769": 97, "wbgene00044781": 97, "wbgene00044782": 97, "wbgene00044786": 97, "wbgene00044792": 97, "wbgene00044796": 97, "wbgene00044805": 97, "wbgene00044809": 97, "wbgene00044810": 97, "wbgene00044894": 97, "wbgene00044895": 97, "wbgene00044896": 97, "wbgene00044897": 97, "wbgene00044898": 97, "wbgene00044905": 97, "wbgene00044925": 97, "wbgene00044926": 97, "wbgene00044927": 97, "wbgene00044928": 97, "wbgene00044929": 97, "wbgene00044930": 97, "wbgene00044931": 97, "wbgene00044932": 97, "wbgene00044933": 97, "wbgene00044934": 97, "wbgene00044935": 97, "wbgene00044964": 97, "wbgene00044975": 97, "wbgene00044982": 97, "wbgene00044984": 97, "wbgene00044987": 97, "wbgene00044988": 97, "wbgene00044997": 97, "wbgene00045048": 97, "wbgene00045052": 97, "wbgene00045053": 97, "wbgene00045057": 97, "wbgene00045058": 97, "wbgene00045075": 97, "wbgene00045076": 97, "wbgene00045077": 97, "wbgene00045082": 97, "wbgene00045087": 97, "wbgene00045093": 97, "wbgene00045094": 97, "wbgene00045103": 97, "wbgene00045138": 97, "wbgene00045150": 97, "wbgene00045156": 97, "wbgene00045162": 97, "wbgene00045164": 97, "wbgene00045192": 97, "wbgene00045212": 97, "wbgene00045218": 97, "wbgene00045234": 97, "wbgene00045235": 97, "wbgene00045236": 97, "wbgene00045237": 97, "wbgene00045238": 97, "wbgene00045254": 97, "wbgene00045328": 97, "wbgene00045329": 97, "wbgene00045369": 97, "wbgene00045370": 97, "wbgene00045375": 97, "wbgene00045376": 97, "wbgene00045383": 97, "wbgene00045387": 97, "wbgene00045396": 97, "wbgene00045398": 97, "wbgene00045399": 97, "wbgene00045433": 97, "wbgene00045434": 97, "wbgene00045458": 97, "wbgene00045468": 97, "wbgene00045473": 97, "wbgene00045474": 97, "wbgene00045483": 97, "wbgene00045498": 97, "wbgene00045508": 97, "wbgene00045509": 97, "wbgene00050875": 97, "wbgene00050878": 97, "wbgene00050879": 97, "wbgene00050880": 97, "wbgene00050881": 97, "wbgene00050896": 97, "wbgene00050921": 97, "wbgene00077443": 97, "wbgene00077508": 97, "wbgene00077515": 97, "wbgene00077519": 97, "wbgene00077520": 97, "wbgene00077521": 97, "wbgene00077524": 97, "wbgene00077525": 97, "wbgene00077526": 97, "wbgene00077527": 97, "wbgene00077534": 97, "wbgene00077535": 97, "wbgene00077537": 97, "wbgene00077539": 97, "wbgene00077543": 97, "wbgene00077546": 97, "wbgene00077548": 97, "wbgene00077549": 97, "wbgene00077551": 97, "wbgene00077552": 97, "wbgene00077553": 97, "wbgene00077555": 97, "wbgene00077556": 97, "wbgene00077557": 97, "wbgene00077558": 97, "wbgene00077559": 97, "wbgene00077561": 97, "wbgene00077563": 97, "wbgene00077599": 97, "wbgene00077684": 97, "wbgene00077685": 97, "wbgene00077686": 97, "wbgene00077687": 97, "wbgene00077689": 97, "wbgene00077701": 97, "wbgene00077708": 97, "wbgene00077715": 97, "wbgene00077717": 97, "wbgene00077718": 97, "wbgene00077719": 97, "wbgene00077728": 97, "wbgene00077764": 97, "wbgene00077765": 97, "wbgene00077766": 97, "wbgene00077767": 97, "wbgene00077768": 97, "wbgene00077769": 97, "wbgene00077770": 97, "wbgene00077771": 97, "wbgene00077772": 97, "wbgene00077773": 97, "wbgene00077781": 97, "wbgene00077785": 97, "wbgene00077789": 97, "wbgene00086551": 97, "wbgene00086552": 97, "wbgene00086553": 97, "wbgene00086554": 97, "wbgene00086555": 97, "wbgene00086556": 97, "wbgene00086557": 97, "wbgene00086562": 97, "wbgene00086563": 97, "wbgene00086564": 97, "wbgene00138716": 97, "wbgene00165026": 97, "wbgene00165095": 97, "wbgene00165439": 97, "wbgene00165483": 97, "wbgene00165567": 97, "wbgene00165627": 97, "wbgene00166055": 97, "wbgene00166087": 97, "wbgene00166290": 97, "wbgene00166331": 97, "wbgene00166332": 97, "wbgene00166448": 97, "wbgene00166549": 97, "wbgene00166632": 97, "wbgene00166768": 97, "wbgene00166975": 97, "wbgene00167006": 97, "wbgene00167018": 97, "wbgene00167052": 97, "wbgene00167193": 97, "wbgene00167652": 97, "wbgene00167709": 97, "wbgene00167738": 97, "wbgene00167759": 97, "wbgene00167822": 97, "wbgene00168081": 97, "wbgene00168182": 97, "wbgene00168457": 97, "wbgene00168505": 97, "wbgene00168694": 97, "wbgene00168700": 97, "wbgene00168707": 97, "wbgene00168760": 97, "wbgene00168761": 97, "wbgene00168902": 97, "wbgene00169054": 97, "wbgene00169118": 97, "wbgene00169222": 97, "wbgene00169224": 97, "wbgene00169245": 97, "wbgene00169408": 97, "wbgene00169462": 97, "wbgene00169515": 97, "wbgene00169521": 97, "wbgene00169597": 97, "wbgene00169979": 97, "wbgene00170108": 97, "wbgene00170117": 97, "wbgene00170253": 97, "wbgene00170280": 97, "wbgene00170333": 97, "wbgene00170426": 97, "wbgene00170676": 97, "wbgene00170690": 97, "wbgene00170698": 97, "wbgene00170789": 97, "wbgene00170835": 97, "wbgene00170884": 97, "wbgene00170927": 97, "wbgene00170953": 97, "wbgene00170964": 97, "wbgene00171005": 97, "wbgene00171130": 97, "wbgene00171280": 97, "wbgene00171346": 97, "wbgene00171663": 97, "wbgene00171678": 97, "wbgene00171818": 97, "wbgene00171935": 97, "wbgene00172021": 97, "wbgene00172093": 97, "wbgene00172419": 97, "wbgene00172654": 97, "wbgene00172703": 97, "wbgene00172802": 97, "wbgene00173043": 97, "wbgene00173107": 97, "wbgene00173115": 97, "wbgene00173142": 97, "wbgene00173238": 97, "wbgene00173290": 97, "wbgene00173303": 97, "wbgene00173337": 97, "wbgene00173414": 97, "wbgene00173516": 97, "wbgene00173569": 97, "wbgene00173790": 97, "wbgene00173976": 97, "wbgene00174000": 97, "wbgene00174101": 97, "wbgene00174114": 97, "wbgene00174124": 97, "wbgene00174161": 97, "wbgene00174311": 97, "wbgene00174649": 97, "wbgene00174741": 97, "wbgene00174760": 97, "wbgene00174770": 97, "wbgene00175036": 97, "wbgene00185086": 97, "wbgene00185098": 97, "wbgene00189949": 97, "wbgene00189958": 97, "wbgene00189974": 97, "wbgene00189979": 97, "wbgene00189983": 97, "wbgene00194652": 97, "wbgene00194653": 97, "wbgene00194654": 97, "wbgene00194656": 97, "wbgene00194657": 97, "wbgene00194659": 97, "wbgene00194660": 97, "wbgene00194697": 97, "wbgene00194698": 97, "wbgene00194700": 97, "wbgene00194701": 97, "wbgene00194702": 97, "wbgene00194703": 97, "wbgene00194806": 97, "wbgene00194809": 97, "wbgene00194810": 97, "wbgene00194992": 97, "wbgene00194999": 97, "wbgene00195031": 97, "wbgene00195032": 97, "wbgene00195033": 97, "wbgene00195045": 97, "wbgene00195056": 97, "wbgene00195057": 97, "wbgene00195068": 97, "wbgene00195069": 97, "wbgene00195155": 97, "wbgene00195175": 97, "wbgene00195178": 97, "wbgene00195179": 97, "wbgene00195180": 97, "wbgene00195227": 97, "wbgene00195228": 97, "wbgene00195229": 97, "wbgene00195230": 97, "wbgene00195231": 97, "wbgene00195232": 97, "wbgene00195244": 97, "wbgene00195247": 97, "wbgene00195253": 97, "wbgene00195254": 97, "wbgene00195255": 97, "wbgene00195257": 97, "wbgene00195289": 97, "wbgene00195315": 97, "wbgene00195320": 97, "wbgene00195336": 97, "wbgene00195350": 97, "wbgene00195352": 97, "wbgene00195355": 97, "wbgene00195369": 97, "wbgene00195394": 97, "wbgene00195400": 97, "wbgene00195405": 97, "wbgene00195417": 97, "wbgene00195424": 97, "wbgene00195426": 97, "wbgene00195443": 97, "wbgene00195445": 97, "wbgene00195448": 97, "wbgene00195455": 97, "wbgene00195459": 97, "wbgene00195465": 97, "wbgene00195476": 97, "wbgene00195485": 97, "wbgene00195486": 97, "wbgene00195504": 97, "wbgene00195514": 97, "wbgene00195529": 97, "wbgene00195544": 97, "wbgene00195546": 97, "wbgene00195553": 97, "wbgene00195560": 97, "wbgene00195578": 97, "wbgene00195590": 97, "wbgene00195592": 97, "wbgene00195596": 97, "wbgene00195605": 97, "wbgene00195606": 97, "wbgene00195608": 97, "wbgene00195610": 97, "wbgene00195613": 97, "wbgene00195615": 97, "wbgene00195618": 97, "wbgene00195645": 97, "wbgene00195672": 97, "wbgene00195683": 97, "wbgene00195719": 97, "wbgene00195749": 97, "wbgene00195751": 97, "wbgene00195752": 97, "wbgene00195755": 97, "wbgene00195771": 97, "wbgene00195776": 97, "wbgene00195813": 97, "wbgene00195817": 97, "wbgene00195833": 97, "wbgene00195835": 97, "wbgene00195861": 97, "wbgene00195883": 97, "wbgene00195884": 97, "wbgene00195888": 97, "wbgene00195909": 97, "wbgene00195916": 97, "wbgene00195923": 97, "wbgene00195924": 97, "wbgene00195926": 97, "wbgene00195955": 97, "wbgene00195962": 97, "wbgene00195985": 97, "wbgene00195989": 97, "wbgene00195998": 97, "wbgene00195999": 97, "wbgene00196006": 97, "wbgene00196011": 97, "wbgene00196017": 97, "wbgene00196043": 97, "wbgene00196062": 97, "wbgene00196075": 97, "wbgene00196076": 97, "wbgene00196097": 97, "wbgene00196099": 97, "wbgene00196100": 97, "wbgene00196101": 97, "wbgene00196116": 97, "wbgene00196124": 97, "wbgene00196129": 97, "wbgene00196143": 97, "wbgene00196146": 97, "wbgene00196187": 97, "wbgene00196188": 97, "wbgene00196196": 97, "wbgene00196204": 97, "wbgene00196211": 97, "wbgene00196215": 97, "wbgene00196219": 97, "wbgene00196224": 97, "wbgene00196234": 97, "wbgene00196235": 97, "wbgene00196243": 97, "wbgene00196260": 97, "wbgene00196276": 97, "wbgene00196296": 97, "wbgene00196297": 97, "wbgene00196342": 97, "wbgene00196343": 97, "wbgene00196360": 97, "wbgene00196367": 97, "wbgene00196389": 97, "wbgene00196394": 97, "wbgene00196396": 97, "wbgene00196397": 97, "wbgene00196398": 97, "wbgene00196406": 97, "wbgene00196417": 97, "wbgene00196418": 97, "wbgene00196421": 97, "wbgene00196428": 97, "wbgene00196465": 97, "wbgene00196468": 97, "wbgene00196479": 97, "wbgene00196480": 97, "wbgene00196493": 97, "wbgene00196502": 97, "wbgene00196508": 97, "wbgene00196517": 97, "wbgene00196533": 97, "wbgene00196551": 97, "wbgene00196566": 97, "wbgene00196610": 97, "wbgene00196622": 97, "wbgene00196636": 97, "wbgene00196638": 97, "wbgene00196639": 97, "wbgene00196658": 97, "wbgene00196671": 97, "wbgene00196679": 97, "wbgene00196703": 97, "wbgene00196705": 97, "wbgene00196717": 97, "wbgene00196718": 97, "wbgene00196720": 97, "wbgene00196721": 97, "wbgene00196743": 97, "wbgene00196754": 97, "wbgene00196756": 97, "wbgene00196768": 97, "wbgene00196780": 97, "wbgene00196781": 97, "wbgene00196791": 97, "wbgene00196796": 97, "wbgene00196802": 97, "wbgene00196824": 97, "wbgene00196837": 97, "wbgene00196879": 97, "wbgene00196880": 97, "wbgene00196881": 97, "wbgene00196890": 97, "wbgene00196897": 97, "wbgene00196903": 97, "wbgene00196907": 97, "wbgene00196917": 97, "wbgene00196934": 97, "wbgene00196963": 97, "wbgene00196978": 97, "wbgene00196993": 97, "wbgene00197005": 97, "wbgene00197014": 97, "wbgene00197026": 97, "wbgene00197032": 97, "wbgene00197034": 97, "wbgene00197035": 97, "wbgene00197044": 97, "wbgene00197059": 97, "wbgene00197062": 97, "wbgene00197063": 97, "wbgene00197076": 97, "wbgene00197084": 97, "wbgene00197112": 97, "wbgene00197121": 97, "wbgene00197138": 97, "wbgene00197140": 97, "wbgene00197142": 97, "wbgene00197150": 97, "wbgene00197156": 97, "wbgene00197162": 97, "wbgene00197166": 97, "wbgene00197167": 97, "wbgene00197177": 97, "wbgene00197182": 97, "wbgene00197193": 97, "wbgene00197229": 97, "wbgene00197232": 97, "wbgene00197234": 97, "wbgene00197258": 97, "wbgene00197259": 97, "wbgene00197263": 97, "wbgene00197264": 97, "wbgene00197271": 97, "wbgene00197277": 97, "wbgene00197303": 97, "wbgene00197305": 97, "wbgene00197324": 97, "wbgene00197341": 97, "wbgene00197353": 97, "wbgene00197361": 97, "wbgene00197364": 97, "wbgene00197378": 97, "wbgene00197411": 97, "wbgene00197432": 97, "wbgene00197441": 97, "wbgene00197447": 97, "wbgene00197457": 97, "wbgene00197503": 97, "wbgene00197505": 97, "wbgene00197508": 97, "wbgene00197519": 97, "wbgene00197526": 97, "wbgene00197538": 97, "wbgene00197549": 97, "wbgene00197559": 97, "wbgene00197565": 97, "wbgene00197570": 97, "wbgene00197585": 97, "wbgene00197595": 97, "wbgene00197613": 97, "wbgene00197618": 97, "wbgene00197627": 97, "wbgene00197673": 97, "wbgene00197693": 97, "wbgene00197696": 97, "wbgene00197704": 97, "wbgene00197712": 97, "wbgene00197713": 97, "wbgene00197714": 97, "wbgene00197716": 97, "wbgene00197725": 97, "wbgene00197736": 97, "wbgene00197738": 97, "wbgene00197757": 97, "wbgene00197758": 97, "wbgene00197772": 97, "wbgene00197776": 97, "wbgene00197781": 97, "wbgene00197785": 97, "wbgene00197788": 97, "wbgene00197789": 97, "wbgene00197794": 97, "wbgene00197823": 97, "wbgene00197825": 97, "wbgene00197864": 97, "wbgene00197871": 97, "wbgene00197872": 97, "wbgene00197888": 97, "wbgene00197900": 97, "wbgene00197940": 97, "wbgene00197941": 97, "wbgene00197950": 97, "wbgene00197957": 97, "wbgene00197961": 97, "wbgene00197965": 97, "wbgene00197971": 97, "wbgene00197978": 97, "wbgene00197993": 97, "wbgene00197996": 97, "wbgene00198001": 97, "wbgene00198011": 97, "wbgene00198026": 97, "wbgene00198042": 97, "wbgene00198047": 97, "wbgene00198052": 97, "wbgene00198059": 97, "wbgene00198061": 97, "wbgene00198066": 97, "wbgene00198071": 97, "wbgene00198089": 97, "wbgene00198093": 97, "wbgene00198097": 97, "wbgene00198101": 97, "wbgene00198102": 97, "wbgene00198120": 97, "wbgene00198131": 97, "wbgene00198144": 97, "wbgene00198146": 97, "wbgene00198151": 97, "wbgene00198170": 97, "wbgene00198187": 97, "wbgene00198190": 97, "wbgene00198202": 97, "wbgene00198205": 97, "wbgene00198207": 97, "wbgene00198208": 97, "wbgene00198214": 97, "wbgene00198221": 97, "wbgene00198238": 97, "wbgene00198245": 97, "wbgene00198267": 97, "wbgene00198277": 97, "wbgene00198280": 97, "wbgene00198315": 97, "wbgene00198317": 97, "wbgene00198324": 97, "wbgene00198328": 97, "wbgene00198335": 97, "wbgene00198369": 97, "wbgene00198375": 97, "wbgene00198377": 97, "wbgene00198389": 97, "wbgene00198391": 97, "wbgene00198411": 97, "wbgene00198423": 97, "wbgene00198482": 97, "wbgene00198497": 97, "wbgene00198499": 97, "wbgene00198507": 97, "wbgene00198540": 97, "wbgene00198554": 97, "wbgene00198570": 97, "wbgene00198585": 97, "wbgene00198586": 97, "wbgene00198588": 97, "wbgene00198609": 97, "wbgene00198612": 97, "wbgene00198649": 97, "wbgene00198651": 97, "wbgene00198657": 97, "wbgene00198691": 97, "wbgene00198708": 97, "wbgene00198727": 97, "wbgene00198736": 97, "wbgene00198744": 97, "wbgene00198757": 97, "wbgene00198773": 97, "wbgene00198788": 97, "wbgene00198814": 97, "wbgene00198816": 97, "wbgene00198823": 97, "wbgene00198824": 97, "wbgene00198826": 97, "wbgene00198838": 97, "wbgene00198839": 97, "wbgene00198848": 97, "wbgene00198876": 97, "wbgene00198883": 97, "wbgene00198884": 97, "wbgene00198893": 97, "wbgene00198900": 97, "wbgene00198922": 97, "wbgene00198941": 97, "wbgene00198946": 97, "wbgene00198957": 97, "wbgene00198984": 97, "wbgene00199005": 97, "wbgene00199008": 97, "wbgene00199010": 97, "wbgene00199013": 97, "wbgene00199017": 97, "wbgene00199036": 97, "wbgene00199039": 97, "wbgene00199044": 97, "wbgene00199061": 97, "wbgene00199062": 97, "wbgene00199064": 97, "wbgene00199070": 97, "wbgene00199077": 97, "wbgene00199081": 97, "wbgene00199088": 97, "wbgene00199103": 97, "wbgene00199106": 97, "wbgene00199113": 97, "wbgene00199116": 97, "wbgene00199148": 97, "wbgene00199160": 97, "wbgene00199182": 97, "wbgene00199191": 97, "wbgene00199192": 97, "wbgene00199200": 97, "wbgene00199201": 97, "wbgene00199211": 97, "wbgene00199215": 97, "wbgene00199217": 97, "wbgene00199244": 97, "wbgene00199250": 97, "wbgene00199256": 97, "wbgene00199257": 97, "wbgene00199280": 97, "wbgene00199297": 97, "wbgene00199300": 97, "wbgene00199318": 97, "wbgene00199333": 97, "wbgene00199339": 97, "wbgene00199346": 97, "wbgene00199362": 97, "wbgene00199394": 97, "wbgene00199400": 97, "wbgene00199407": 97, "wbgene00199408": 97, "wbgene00199411": 97, "wbgene00199416": 97, "wbgene00199417": 97, "wbgene00199422": 97, "wbgene00199432": 97, "wbgene00199436": 97, "wbgene00199463": 97, "wbgene00199467": 97, "wbgene00199469": 97, "wbgene00199486": 97, "wbgene00199495": 97, "wbgene00199505": 97, "wbgene00199506": 97, "wbgene00199508": 97, "wbgene00199511": 97, "wbgene00199523": 97, "wbgene00199530": 97, "wbgene00199531": 97, "wbgene00199533": 97, "wbgene00199566": 97, "wbgene00199582": 97, "wbgene00199586": 97, "wbgene00199597": 97, "wbgene00199602": 97, "wbgene00199607": 97, "wbgene00199609": 97, "wbgene00199622": 97, "wbgene00199623": 97, "wbgene00199629": 97, "wbgene00199635": 97, "wbgene00199640": 97, "wbgene00199648": 97, "wbgene00199650": 97, "wbgene00199662": 97, "wbgene00199669": 97, "wbgene00199670": 97, "wbgene00199683": 97, "wbgene00199697": 97, "wbgene00199710": 97, "wbgene00199718": 97, "wbgene00199719": 97, "wbgene00199734": 97, "wbgene00199737": 97, "wbgene00199757": 97, "wbgene00199760": 97, "wbgene00199766": 97, "wbgene00199768": 97, "wbgene00199775": 97, "wbgene00199781": 97, "wbgene00199790": 97, "wbgene00199799": 97, "wbgene00199814": 97, "wbgene00199816": 97, "wbgene00199825": 97, "wbgene00199840": 97, "wbgene00199872": 97, "wbgene00199873": 97, "wbgene00199884": 97, "wbgene00199892": 97, "wbgene00199899": 97, "wbgene00199900": 97, "wbgene00199915": 97, "wbgene00199923": 97, "wbgene00199928": 97, "wbgene00199929": 97, "wbgene00199930": 97, "wbgene00199946": 97, "wbgene00199971": 97, "wbgene00199978": 97, "wbgene00199987": 97, "wbgene00199992": 97, "wbgene00199998": 97, "wbgene00200012": 97, "wbgene00200022": 97, "wbgene00200024": 97, "wbgene00200034": 97, "wbgene00200037": 97, "wbgene00200046": 97, "wbgene00200048": 97, "wbgene00200067": 97, "wbgene00200084": 97, "wbgene00200093": 97, "wbgene00200096": 97, "wbgene00200098": 97, "wbgene00200101": 97, "wbgene00200104": 97, "wbgene00200117": 97, "wbgene00200124": 97, "wbgene00200158": 97, "wbgene00200159": 97, "wbgene00200165": 97, "wbgene00200171": 97, "wbgene00200203": 97, "wbgene00200218": 97, "wbgene00200232": 97, "wbgene00200243": 97, "wbgene00200247": 97, "wbgene00200253": 97, "wbgene00200254": 97, "wbgene00200262": 97, "wbgene00200264": 97, "wbgene00200265": 97, "wbgene00200276": 97, "wbgene00200277": 97, "wbgene00200286": 97, "wbgene00200290": 97, "wbgene00200294": 97, "wbgene00200300": 97, "wbgene00200301": 97, "wbgene00200307": 97, "wbgene00200310": 97, "wbgene00200317": 97, "wbgene00200345": 97, "wbgene00200353": 97, "wbgene00200364": 97, "wbgene00200365": 97, "wbgene00200387": 97, "wbgene00200408": 97, "wbgene00200417": 97, "wbgene00200422": 97, "wbgene00200427": 97, "wbgene00200428": 97, "wbgene00200441": 97, "wbgene00200442": 97, "wbgene00200482": 97, "wbgene00200484": 97, "wbgene00200496": 97, "wbgene00200506": 97, "wbgene00200507": 97, "wbgene00200510": 97, "wbgene00200517": 97, "wbgene00200519": 97, "wbgene00200521": 97, "wbgene00200550": 97, "wbgene00200556": 97, "wbgene00200571": 97, "wbgene00200577": 97, "wbgene00200606": 97, "wbgene00200608": 97, "wbgene00200634": 97, "wbgene00200644": 97, "wbgene00200648": 97, "wbgene00200654": 97, "wbgene00200656": 97, "wbgene00200661": 97, "wbgene00200668": 97, "wbgene00200669": 97, "wbgene00200672": 97, "wbgene00200688": 97, "wbgene00200693": 97, "wbgene00200700": 97, "wbgene00200705": 97, "wbgene00200707": 97, "wbgene00200715": 97, "wbgene00200720": 97, "wbgene00200726": 97, "wbgene00200742": 97, "wbgene00200760": 97, "wbgene00200766": 97, "wbgene00200768": 97, "wbgene00200773": 97, "wbgene00200786": 97, "wbgene00200810": 97, "wbgene00200833": 97, "wbgene00200840": 97, "wbgene00200854": 97, "wbgene00200860": 97, "wbgene00200878": 97, "wbgene00200888": 97, "wbgene00200900": 97, "wbgene00200910": 97, "wbgene00200924": 97, "wbgene00200936": 97, "wbgene00200953": 97, "wbgene00200957": 97, "wbgene00200970": 97, "wbgene00200985": 97, "wbgene00200987": 97, "wbgene00200992": 97, "wbgene00200994": 97, "wbgene00201013": 97, "wbgene00201017": 97, "wbgene00201018": 97, "wbgene00201019": 97, "wbgene00201068": 97, "wbgene00201075": 97, "wbgene00201084": 97, "wbgene00201096": 97, "wbgene00201101": 97, "wbgene00201104": 97, "wbgene00201106": 97, "wbgene00201107": 97, "wbgene00201128": 97, "wbgene00201134": 97, "wbgene00201147": 97, "wbgene00201162": 97, "wbgene00201164": 97, "wbgene00201165": 97, "wbgene00201170": 97, "wbgene00201172": 97, "wbgene00201181": 97, "wbgene00201187": 97, "wbgene00201188": 97, "wbgene00201190": 97, "wbgene00201192": 97, "wbgene00201193": 97, "wbgene00201202": 97, "wbgene00201209": 97, "wbgene00201222": 97, "wbgene00201225": 97, "wbgene00201255": 97, "wbgene00201270": 97, "wbgene00201274": 97, "wbgene00201300": 97, "wbgene00201317": 97, "wbgene00201318": 97, "wbgene00201319": 97, "wbgene00201331": 97, "wbgene00201336": 97, "wbgene00201351": 97, "wbgene00201383": 97, "wbgene00201393": 97, "wbgene00201398": 97, "wbgene00201435": 97, "wbgene00201436": 97, "wbgene00201440": 97, "wbgene00201448": 97, "wbgene00201449": 97, "wbgene00201455": 97, "wbgene00201456": 97, "wbgene00201458": 97, "wbgene00201470": 97, "wbgene00201478": 97, "wbgene00201484": 97, "wbgene00201494": 97, "wbgene00201499": 97, "wbgene00201508": 97, "wbgene00201517": 97, "wbgene00201534": 97, "wbgene00201569": 97, "wbgene00201573": 97, "wbgene00201588": 97, "wbgene00201589": 97, "wbgene00201611": 97, "wbgene00201627": 97, "wbgene00201662": 97, "wbgene00201665": 97, "wbgene00201667": 97, "wbgene00201669": 97, "wbgene00201676": 97, "wbgene00201678": 97, "wbgene00201682": 97, "wbgene00201688": 97, "wbgene00201694": 97, "wbgene00201710": 97, "wbgene00201723": 97, "wbgene00201737": 97, "wbgene00201753": 97, "wbgene00201754": 97, "wbgene00201755": 97, "wbgene00201765": 97, "wbgene00201768": 97, "wbgene00201777": 97, "wbgene00201782": 97, "wbgene00201794": 97, "wbgene00201801": 97, "wbgene00201816": 97, "wbgene00201824": 97, "wbgene00201829": 97, "wbgene00201869": 97, "wbgene00201890": 97, "wbgene00201901": 97, "wbgene00201916": 97, "wbgene00201925": 97, "wbgene00201926": 97, "wbgene00201927": 97, "wbgene00201953": 97, "wbgene00201965": 97, "wbgene00201973": 97, "wbgene00201974": 97, "wbgene00201976": 97, "wbgene00201989": 97, "wbgene00202007": 97, "wbgene00202025": 97, "wbgene00202027": 97, "wbgene00202039": 97, "wbgene00202040": 97, "wbgene00202055": 97, "wbgene00202057": 97, "wbgene00202063": 97, "wbgene00202085": 97, "wbgene00202087": 97, "wbgene00202093": 97, "wbgene00202110": 97, "wbgene00202130": 97, "wbgene00202136": 97, "wbgene00202137": 97, "wbgene00202142": 97, "wbgene00202148": 97, "wbgene00202152": 97, "wbgene00202155": 97, "wbgene00202156": 97, "wbgene00202162": 97, "wbgene00202170": 97, "wbgene00202173": 97, "wbgene00202175": 97, "wbgene00202230": 97, "wbgene00202233": 97, "wbgene00202237": 97, "wbgene00202238": 97, "wbgene00202255": 97, "wbgene00202259": 97, "wbgene00202263": 97, "wbgene00202277": 97, "wbgene00202295": 97, "wbgene00202319": 97, "wbgene00202331": 97, "wbgene00202346": 97, "wbgene00202349": 97, "wbgene00202359": 97, "wbgene00202365": 97, "wbgene00202368": 97, "wbgene00202369": 97, "wbgene00202384": 97, "wbgene00202405": 97, "wbgene00202408": 97, "wbgene00202420": 97, "wbgene00202441": 97, "wbgene00202444": 97, "wbgene00202449": 97, "wbgene00202452": 97, "wbgene00202469": 97, "wbgene00202489": 97, "wbgene00202494": 97, "wbgene00206356": 97, "wbgene00206357": 97, "wbgene00206362": 97, "wbgene00206363": 97, "wbgene00206393": 97, "wbgene00206464": 97, "wbgene00206474": 97, "wbgene00206497": 97, "wbgene00206528": 97, "wbgene00206530": 97, "wbgene00206532": 97, "wbgene00219206": 97, "wbgene00219219": 97, "wbgene00219227": 97, "wbgene00219231": 97, "wbgene00219234": 97, "wbgene00219253": 97, "wbgene00219261": 97, "wbgene00219263": 97, "wbgene00219275": 97, "wbgene00219281": 97, "wbgene00219282": 97, "wbgene00219283": 97, "wbgene00219284": 97, "wbgene00219285": 97, "wbgene00219286": 97, "wbgene00219287": 97, "wbgene00219288": 97, "wbgene00219310": 97, "wbgene00219313": 97, "wbgene00219319": 97, "wbgene00219422": 97, "wbgene00219450": 97, "wbgene00219460": 97, "wbgene00219498": 97, "wbgene00219557": 97, "wbgene00219578": 97, "wbgene00219580": 97, "wbgene00219581": 97, "wbgene00219582": 97, "wbgene00219588": 97, "wbgene00219591": 97, "wbgene00219592": 97, "wbgene00219598": 97, "wbgene00219608": 97, "wbgene00219621": 97, "wbgene00219622": 97, "wbgene00219637": 97, "wbgene00219654": 97, "wbgene00219663": 97, "wbgene00219678": 97, "wbgene00219692": 97, "wbgene00219703": 97, "wbgene00219705": 97, "wbgene00219710": 97, "wbgene00219712": 97, "wbgene00219721": 97, "wbgene00219725": 97, "wbgene00219727": 97, "wbgene00219733": 97, "wbgene00219746": 97, "wbgene00219749": 97, "wbgene00219754": 97, "wbgene00219760": 97, "wbgene00219766": 97, "wbgene00219767": 97, "wbgene00219778": 97, "wbgene00219779": 97, "wbgene00219787": 97, "wbgene00219788": 97, "wbgene00219789": 97, "wbgene00219796": 97, "wbgene00219798": 97, "wbgene00219811": 97, "wbgene00219817": 97, "wbgene00219820": 97, "wbgene00219821": 97, "wbgene00219830": 97, "wbgene00219833": 97, "wbgene00219834": 97, "wbgene00219835": 97, "wbgene00219845": 97, "wbgene00219857": 97, "wbgene00219863": 97, "wbgene00219870": 97, "wbgene00219871": 97, "wbgene00219882": 97, "wbgene00219894": 97, "wbgene00219895": 97, "wbgene00219910": 97, "wbgene00219911": 97, "wbgene00219918": 97, "wbgene00219919": 97, "wbgene00219920": 97, "wbgene00219923": 97, "wbgene00219926": 97, "wbgene00219927": 97, "wbgene00219929": 97, "wbgene00219930": 97, "wbgene00219937": 97, "wbgene00219940": 97, "wbgene00219943": 97, "wbgene00219950": 97, "wbgene00219951": 97, "wbgene00219953": 97, "wbgene00219955": 97, "wbgene00219972": 97, "wbgene00219973": 97, "wbgene00219976": 97, "wbgene00219983": 97, "wbgene00219984": 97, "wbgene00219985": 97, "wbgene00219987": 97, "wbgene00219998": 97, "wbgene00220000": 97, "wbgene00220004": 97, "wbgene00220006": 97, "wbgene00220010": 97, "wbgene00220015": 97, "wbgene00220016": 97, "wbgene00220018": 97, "wbgene00220019": 97, "wbgene00220027": 97, "wbgene00220039": 97, "wbgene00220041": 97, "wbgene00220054": 97, "wbgene00220064": 97, "wbgene00220065": 97, "wbgene00220069": 97, "wbgene00220081": 97, "wbgene00220085": 97, "wbgene00220086": 97, "wbgene00220087": 97, "wbgene00220089": 97, "wbgene00220100": 97, "wbgene00220106": 97, "wbgene00220112": 97, "wbgene00220118": 97, "wbgene00220126": 97, "wbgene00220127": 97, "wbgene00220128": 97, "wbgene00220135": 97, "wbgene00220136": 97, "wbgene00220142": 97, "wbgene00220147": 97, "wbgene00220148": 97, "wbgene00220165": 97, "wbgene00220166": 97, "wbgene00220167": 97, "wbgene00220171": 97, "wbgene00220179": 97, "wbgene00220188": 97, "wbgene00220189": 97, "wbgene00220190": 97, "wbgene00220191": 97, "wbgene00220195": 97, "wbgene00220197": 97, "wbgene00220198": 97, "wbgene00220212": 97, "wbgene00220217": 97, "wbgene00220225": 97, "wbgene00220226": 97, "wbgene00220231": 97, "wbgene00220232": 97, "wbgene00220240": 97, "wbgene00220241": 97, "wbgene00220243": 97, "wbgene00220246": 97, "wbgene00220261": 97, "wbgene00235158": 97, "wbgene00235197": 97, "wbgene00235237": 97, "wbgene00235254": 97, "wbgene00235381": 97, "wbgene00235385": 97, "wbgene00235387": 97, "wbgene00235388": 97, "wbgene00235390": 97, "wbgene00236789": 97, "wbgene00236797": 97, "wbgene00236798": 97, "wbgene00236800": 97, "wbgene00236808": 97, "wbgene00236809": 97, "wbgene00249808": 97, "wbgene00255420": 97, "wbgene00255457": 97, "wbgene00255549": 97, "wbgene00255550": 97, "wbgene00255568": 97, "wbgene00255576": 97, "wbgene00255577": 97, "wbgene00255578": 97, "wbgene00255584": 97, "wbgene00255594": 97, "wbgene00255605": 97, "wbgene00255606": 97, "wbgene00255714": 97, "wbgene00268216": 97, "wbgene00269382": 97, "wbgene00269393": 97, "wbgene00269435": 97, "wbgene00271567": 97, "wbgene00271598": 97, "wbgene00271605": 97, "wbgene00271632": 97, "wbgene00271639": 97, "wbgene00271648": 97, "wbgene00271649": 97, "wbgene00271653": 97, "wbgene00271694": 97, "wbgene00271776": 97, "wbgene00271777": 97, "wbgene00271778": 97, "wbgene00271779": 97, "wbgene00271780": 97, "wbgene00271781": 97, "wbgene00284845": 97, "wbgene00284852": 97, "wbgene00284853": 97, "wbgene00284854": 97, "wbgene00284857": 97, "wbgene00284858": 97, "wbgene00302974": 97, "wbgene00303028": 97, "wbgene00303030": 97, "wbgene00303032": 97, "wbgene00303055": 97, "wbgene00303056": 97, "wbgene00303057": 97, "wbgene00303058": 97, "wbgene00303070": 97, "wbgene00303078": 97, "wbgene00303082": 97, "wbgene00303088": 97, "wbgene00303090": 97, "wbgene00303094": 97, "wbgene00303097": 97, "wbgene00303103": 97, "wbgene00303104": 97, "wbgene00304792": 97, "wbgene00304811": 97, "wbgene00304981": 97, "wbgene00304985": 97, "wbgene00304992": 97, "wbgene00304996": 97, "wbgene00305018": 97, "wbgene00305047": 97, "wbgene00305048": 97, "wbgene00305049": 97, "wbgene00305050": 97, "wbgene00306076": 97, "wbgene00306080": 97, "wbgene00306081": 97, "wbgene00306121": 97, "3746": 97, "3909": 97, "4115": 97, "10230": 97, "17483": 97, "26781": 97, "27588": 97, "33150": 97, "43732": 97, "44677": 97, "47460": 97, "49860": 97, "49920": 97, "54426": 97, "55292": 97, "64066": 97, "71424": 97, "81156": 97, "81192": 97, "91296": 97, "91403": 97, "92720": 97, "93021": 97, "95312": 97, "96458": 97, "108223": 97, "108681": 97, "110057": 97, "110550": 97, "110771": 97, "111037": 97, "113751": 97, "113806": 97, "114708": 97, "115655": 97, "115676": 97, "115686": 97, "117498": 97, "118092": 97, "120901": 97, "127284": 97, "134270": 97, "134336": 97, "137282": 97, "137844": 97, "144565": 97, "144810": 97, "154855": 97, "160171": 97, "169763": 97, "171222": 97, "176040": 97, "178231": 97, "178291": 97, "178523": 97, "182772": 97, "183363": 97, "208384": 97, "209280": 97, "211738": 97, "212255": 97, "215491": 97, "216027": 97, "217002": 97, "217927": 97, "219137": 97, "219734": 97, "221575": 97, "231577": 97, "237853": 97, "238615": 97, "240250": 97, "240490": 97, "245414": 97, "248623": 97, "251580": 97, "252106": 97, "259157": 97, "263501": 97, "263618": 97, "272602": 97, "272627": 97, "280113": 97, "289185": 97, "291214": 97, "305477": 97, "305810": 97, "310790": 97, "310980": 97, "314989": 97, "316634": 97, "318066": 97, "318548": 97, "323352": 97, "323854": 97, "330987": 97, "332603": 97, "337845": 97, "348459": 97, "357236": 97, "357239": 97, "363901": 97, "364509": 97, "373465": 97, "373570": 97, "381902": 97, "382825": 97, "394415": 97, "398890": 97, "418677": 97, "420921": 97, "423713": 97, "444002": 97, "461605": 97, "461994": 97, "467137": 97, "471134": 97, "473890": 97, "477581": 97, "483880": 97, "484038": 97, "488392": 97, "488606": 97, "489905": 97, "489968": 97, "502042": 97, "502890": 97, "506250": 97, "506472": 97, "519646": 97, "520108": 97, "521554": 97, "526047": 97, "526139": 97, "530214": 97, "530326": 97, "530394": 97, "530683": 97, "530968": 97, "533084": 97, "534454": 97, "535344": 97, "535790": 97, "536587": 97, "536803": 97, "536931": 97, "537121": 97, "542204": 97, "550695": 97, "556709": 97, "557374": 97, "561671": 97, "562735": 97, "565184": 97, "565283": 97, "566588": 97, "572172": 97, "575120": 97, "582210": 97, "583729": 97, "585118": 97, "585376": 97, "585806": 97, "607571": 97, "613289": 97, "613379": 97, "614650": 97, "629444": 97, "629464": 97, "636345": 97, "636803": 97, "637852": 97, "638128": 97, "653988": 97, "654089": 97, "663610": 97, "664386": 97, "666902": 97, "667539": 97, "683472": 97, "683723": 97, "686599": 97, "688256": 97, "691332": 97, "692019": 97, "694948": 97, "694975": 97, "698324": 97, "700277": 97, "715875": 97, "717889": 97, "736562": 97, "740800": 97, "757010": 97, "757297": 97, "760447": 97, "760847": 97, "761849": 97, "763477": 97, "770720": 97, "770891": 97, "776369": 97, "779156": 97, "779241": 97, "788096": 97, "788219": 97, "796996": 97, "797295": 97, "801554": 97, "801698": 97, "803367": 97, "834765": 97, "837995": 97, "846763": 97, "853450": 97, "882713": 97, "882917": 97, "895099": 97, "897285": 97, "907370": 97, "907447": 97, "911189": 97, "912331": 97, "926916": 97, "938482": 97, "947710": 97, "948568": 97, "957456": 97, "963691": 97, "976560": 97, "979124": 97, "979274": 97, "989670": 97, "992178": 97, "995780": 97, "1005640": 97, "1006176": 97, "1014455": 97, "1015194": 97, "1015742": 97, "1016404": 97, "1017176": 97, "1018842": 97, "1019157": 97, "1019826": 97, "1029910": 97, "1030632": 97, "1033436": 97, "1034442": 97, "1041047": 97, "1041471": 97, "1053826": 97, "1053893": 97, "1066899": 97, "1068483": 97, "1074343": 97, "1077424": 97, "1095796": 97, "1107577": 97, "1112303": 97, "1112417": 97, "1115564": 97, "1126974": 97, "1127057": 97, "1128323": 97, "1131765": 97, "1136365": 97, "1154388": 97, "1154513": 97, "1156020": 97, "1156087": 97, "1156454": 97, "1156578": 97, "1157487": 97, "1157570": 97, "1175809": 97, "1176472": 97, "1190830": 97, "1193157": 97, "1211376": 97, "1211484": 97, "1254719": 97, "1254769": 97, "1258169": 97, "1258200": 97, "1268155": 97, "1271515": 97, "1273033": 97, "1278807": 97, "1279042": 97, "1279435": 97, "1279484": 97, "1282100": 97, "1285435": 97, "1287303": 97, "1287959": 97, "1305561": 97, "1328648": 97, "1332697": 97, "1334077": 97, "1335320": 97, "1336867": 97, "1337015": 97, "1338216": 97, "1338783": 97, "1339773": 97, "1340677": 97, "1341265": 97, "1341271": 97, "1344692": 97, "1348502": 97, "1359643": 97, "1365302": 97, "1376409": 97, "1376941": 97, "1379341": 97, "1383461": 97, "1385057": 97, "1389247": 97, "1392759": 97, "1393045": 97, "1402975": 97, "1405934": 97, "1413100": 97, "1413916": 97, "1415807": 97, "1416581": 97, "1425201": 97, "1427226": 97, "1433695": 97, "1436278": 97, "1441334": 97, "1442047": 97, "1443944": 97, "1444506": 97, "1444641": 97, "1446496": 97, "1465358": 97, "1465596": 97, "1469593": 97, "1471074": 97, "1479923": 97, "1483082": 97, "1514417": 97, "1514754": 97, "1540926": 97, "1543524": 97, "1556196": 97, "1556640": 97, "1556661": 97, "1567601": 97, "1580208": 97, "1581393": 97, "1593674": 97, "1594648": 97, "1596216": 97, "1600623": 97, "1601457": 97, "1601837": 97, "1607219": 97, "1607704": 97, "1610041": 97, "1610389": 97, "1628486": 97, "1629002": 97, "1633498": 97, "1634568": 97, "1644115": 97, "1644587": 97, "1651457": 97, "1652875": 97, "1655459": 97, "1655615": 97, "1656763": 97, "1657512": 97, "1663331": 97, "1663401": 97, "1669792": 97, "1670032": 97, "1672742": 97, "1672852": 97, "1676438": 97, "1680445": 97, "1685203": 97, "1686215": 97, "1693675": 97, "1696198": 97, "1697676": 97, "1698348": 97, "1701128": 97, "1701360": 97, "1701808": 97, "1702104": 97, "1708553": 97, "1709586": 97, "1715564": 97, "1721589": 97, "1751055": 97, "1751480": 97, "1754410": 97, "1755328": 97, "1766400": 97, "1767886": 97, "1790157": 97, "1791397": 97, "1791491": 97, "1793253": 97, "1796424": 97, "1797434": 97, "1798722": 97, "1799716": 97, "1806996": 97, "1808091": 97, "1811835": 97, "1812891": 97, "1813581": 97, "1813908": 97, "1823043": 97, "1823446": 97, "1825967": 97, "1828078": 97, "1831929": 97, "1832166": 97, "1832421": 97, "1832896": 97, "1834763": 97, "1834882": 97, "1835438": 97, "1835660": 97, "1841965": 97, "1842444": 97, "1843227": 97, "1843383": 97, "1843959": 97, "1845199": 97, "1850523": 97, "1851668": 97, "1853045": 97, "1856458": 97, "1860578": 97, "1862606": 97, "1872306": 97, "1874007": 97, "1884196": 97, "1885160": 97, "1894910": 97, "1895160": 97, "1923240": 97, "1924299": 97, "1932260": 97, "1932345": 97, "1945220": 97, "1945813": 97, "1949520": 97, "1950593": 97, "1958527": 97, "1958706": 97, "1965066": 97, "1967771": 97, "1973882": 97, "1974778": 97, "1974991": 97, "1978029": 97, "1983412": 97, "1988245": 97, "2010525": 97, "2019431": 97, "2019523": 97, "2026315": 97, "2033748": 97, "2034321": 97, "2043805": 97, "2046538": 97, "2048913": 97, "2049139": 97, "2050177": 97, "2061666": 97, "2063998": 97, "2064292": 97, "2064686": 97, "2064975": 97, "2065481": 97, "2065691": 97, "2069575": 97, "2069680": 97, "2070607": 97, "2070672": 97, "2070891": 97, "2071351": 97, "2072547": 97, "2072679": 97, "2076925": 97, "2078954": 97, "2093796": 97, "2097345": 97, "2123443": 97, "2128587": 97, "2145971": 97, "2149824": 97, "2151826": 97, "2160037": 97, "2209644": 97, "2216097": 97, "2222313": 97, "2223352": 97, "2233099": 97, "2233743": 97, "2234957": 97, "2235601": 97, "2241252": 97, "2242229": 97, "2247223": 97, "2250130": 97, "2254908": 97, "2255920": 97, "2272866": 97, "2279844": 97, "2280800": 97, "2281502": 97, "2291205": 97, "2293126": 97, "2297328": 97, "2297391": 97, "2304397": 97, "2304512": 97, "2306790": 97, "2307266": 97, "2312129": 97, "2312495": 97, "2312958": 97, "2313270": 97, "2315992": 97, "2316306": 97, "2321817": 97, "2322024": 97, "2322596": 97, "2323991": 97, "2327329": 97, "2327988": 97, "2330154": 97, "2330894": 97, "2332652": 97, "2333337": 97, "2338693": 97, "2342215": 97, "2350536": 97, "2350840": 97, "2350945": 97, "2352834": 97, "2356238": 97, "2357882": 97, "2372985": 97, "2377088": 97, "2381851": 97, "2382952": 97, "2401492": 97, "2402229": 97, "2409999": 97, "2410189": 97, "2410261": 97, "2415130": 97, "2420353": 97, "2420833": 97, "2421816": 97, "2422152": 97, "2425185": 97, "2429674": 97, "2432588": 97, "2432589": 97, "2433615": 97, "2434001": 97, "2435691": 97, "2436470": 97, "2437084": 97, "2438764": 97, "2442958": 97, "2445419": 97, "2445983": 97, "2446739": 97, "2448369": 97, "2449413": 97, "2451366": 97, "2451897": 97, "2464618": 97, "2468792": 97, "2471935": 97, "2472059": 97, "2485391": 97, "2485860": 97, "2489787": 97, "2489975": 97, "2497381": 97, "2498133": 97, "2506259": 97, "2506890": 97, "2513710": 97, "2514166": 97, "2514311": 97, "2524531": 97, "2524552": 97, "2533267": 97, "2542114": 97, "2544748": 97, "2546195": 97, "2546385": 97, "2548399": 97, "2549295": 97, "2550543": 97, "2551374": 97, "2551590": 97, "2552733": 97, "2555408": 97, "2556225": 97, "2557451": 97, "2558175": 97, "2560189": 97, "2560371": 97, "2561830": 97, "2562667": 97, "2562997": 97, "2568859": 97, "2571059": 97, "2571739": 97, "2576020": 97, "2581014": 97, "2586124": 97, "2587526": 97, "2595294": 97, "2599978": 97, "2602650": 97, "2605282": 97, "2605605": 97, "2606740": 97, "2617360": 97, "2617528": 97, "2620430": 97, "2620649": 97, "2621859": 97, "2621956": 97, "2628577": 97, "2629684": 97, "2632320": 97, "2632986": 97, "2634561": 97, "2636903": 97, "2637591": 97, "2638648": 97, "2639419": 97, "2642723": 97, "2643778": 97, "2644964": 97, "2657245": 97, "2666383": 97, "2666468": 97, "2668159": 97, "2672438": 97, "2672939": 97, "2682797": 97, "2682865": 97, "2683011": 97, "2684864": 97, "2684997": 97, "2686639": 97, "2689429": 97, "2692108": 97, "2692399": 97, "2692756": 97, "2694084": 97, "2697398": 97, "2699999": 97, "2700419": 97, "2702158": 97, "2703262": 97, "2703458": 97, "2706882": 97, "2717549": 97, "2718026": 97, "2721475": 97, "2721587": 97, "2726724": 97, "2727013": 97, "2727545": 97, "2730003": 97, "2731453": 97, "2731561": 97, "2742528": 97, "2744952": 97, "2745118": 97, "2755539": 97, "2758204": 97, "2758297": 97, "2758405": 97, "2759022": 97, "2776104": 97, "2776363": 97, "2778719": 97, "2780849": 97, "2784271": 97, "2784619": 97, "2786077": 97, "2786331": 97, "2787514": 97, "2787980": 97, "2788418": 97, "2788747": 97, "2790343": 97, "2791686": 97, "2794976": 97, "2796129": 97, "2797464": 97, "2798174": 97, "2800878": 97, "2802802": 97, "2815830": 97, "2816414": 97, "2817689": 97, "2818743": 97, "2822134": 97, "2822242": 97, "2830311": 97, "2830334": 97, "2830483": 97, "2831304": 97, "2831674": 97, "2835344": 97, "2835622": 97, "2835766": 97, "2835984": 97, "2837983": 97, "2838050": 97, "2845858": 97, "2849903": 97, "2851956": 97, "2853903": 97, "2853969": 97, "2855732": 97, "2858520": 97, "2859913": 97, "2864010": 97, "2864061": 97, "2866505": 97, "2875291": 97, "2875397": 97, "2876308": 97, "2876336": 97, "2876554": 97, "2876697": 97, "2876843": 97, "2876931": 97, "2878523": 97, "2878577": 97, "2883454": 97, "2883548": 97, "2893718": 97, "2895328": 97, "2900860": 97, "2901324": 97, "2903006": 97, "2903634": 97, "2928134": 97, "2928394": 97, "2929628": 97, "2929776": 97, "2931361": 97, "2931460": 97, "2947106": 97, "2948428": 97, "2948692": 97, "2949600": 97, "2957910": 97, "2967615": 97, "2967740": 97, "2973509": 97, "2973591": 97, "2974916": 97, "2974970": 97, "2981656": 97, "2983076": 97, "2983202": 97, "2985178": 97, "2986103": 97, "2995914": 97, "2996487": 97, "3001382": 97, "3001405": 97, "3002847": 97, "3004048": 97, "3013448": 97, "3015741": 97, "3021531": 97, "3021650": 97, "3031092": 97, "3031337": 97, "3047794": 97, "3052047": 97, "3070150": 97, "3070967": 97, "3084876": 97, "3085013": 97, "3096266": 97, "3099680": 97, "3099769": 97, "3101850": 97, "3110781": 97, "3115035": 97, "3117628": 97, "3122010": 97, "3127661": 97, "3132969": 97, "3135588": 97, "3137184": 97, "3138447": 97, "3138540": 97, "3140584": 97, "3141703": 97, "3143175": 97, "3144410": 97, "3147793": 97, "3148013": 97, "3152003": 97, "3153284": 97, "3154469": 97, "3158491": 97, "3162391": 97, "3162812": 97, "3163585": 97, "3163687": 97, "3168057": 97, "3168192": 97, "3171230": 97, "3173267": 97, "3176319": 97, "3176417": 97, "3192857": 97, "3193527": 97, "3198838": 97, "3199251": 97, "3203229": 97, "3206761": 97, "3210272": 97, "3211045": 97, "3217267": 97, "3217287": 97, "3222955": 97, "3223159": 97, "3228104": 97, "3229430": 97, "3233286": 97, "3233390": 97, "3256077": 97, "3256688": 97, "3256764": 97, "3258999": 97, "3259089": 97, "3259796": 97, "3266762": 97, "3267093": 97, "3269112": 97, "3269396": 97, "3280883": 97, "3287335": 97, "3293171": 97, "3293183": 97, "3294356": 97, "3299569": 97, "3300516": 97, "3301367": 97, "3307935": 97, "3317977": 97, "3318584": 97, "3318829": 97, "3330673": 97, "3338366": 97, "3349914": 97, "3352433": 97, "3359487": 97, "3362326": 97, "3363492": 97, "3364026": 97, "3365857": 97, "3367639": 97, "3368550": 97, "3368851": 97, "3371444": 97, "3371768": 97, "3373834": 97, "3374775": 97, "3407189": 97, "3410012": 97, "3416368": 97, "3419599": 97, "3424211": 97, "3427147": 97, "3438543": 97, "3439098": 97, "3449175": 97, "3449325": 97, "3462174": 97, "3462257": 97, "3478517": 97, "3479352": 97, "3481715": 97, "3481996": 97, "3484500": 97, "3487803": 97, "3499706": 97, "3502735": 97, "3512733": 97, "3516449": 97, "3529962": 97, "3533884": 97, "3546910": 97, "3547070": 97, "3559807": 97, "3559933": 97, "3562851": 97, "3564039": 97, "3600735": 97, "3601290": 97, "3602908": 97, "3603337": 97, "3605744": 97, "3606406": 97, "3608345": 97, "3608517": 97, "3611844": 97, "3611941": 97, "3618317": 97, "3618888": 97, "3619693": 97, "3620536": 97, "3625570": 97, "3628245": 97, "3636485": 97, "3637352": 97, "3638824": 97, "3638851": 97, "3638924": 97, "3639647": 97, "3641347": 97, "3641650": 97, "3647082": 97, "3651235": 97, "3652702": 97, "3653996": 97, "3655265": 97, "3655412": 97, "3662183": 97, "3666489": 97, "3671700": 97, "3680179": 97, "3680927": 97, "3682889": 97, "3684086": 97, "3684780": 97, "3694021": 97, "3694295": 97, "3697551": 97, "3697595": 97, "3697616": 97, "3698101": 97, "3699300": 97, "3703541": 97, "3704956": 97, "3706029": 97, "3709435": 97, "3710089": 97, "3713201": 97, "3713448": 97, "3721157": 97, "3727026": 97, "3731179": 97, "3731351": 97, "3740485": 97, "3741450": 97, "3742647": 97, "3745501": 97, "3745522": 97, "3745588": 97, "3748145": 97, "3748522": 97, "3753958": 97, "3755487": 97, "3759039": 97, "3769671": 97, "3774500": 97, "3774633": 97, "3777948": 97, "3778088": 97, "3781690": 97, "3782117": 97, "3783294": 97, "3783906": 97, "3784226": 97, "3786587": 97, "3787496": 97, "3788035": 97, "3788896": 97, "3789308": 97, "3792797": 97, "3794555": 97, "3798068": 97, "3798395": 97, "3805739": 97, "3807455": 97, "3816809": 97, "3818073": 97, "3821496": 97, "3821655": 97, "3821990": 97, "3822882": 97, "3826514": 97, "3827218": 97, "3828126": 97, "3828238": 97, "3829327": 97, "3829514": 97, "3837807": 97, "3838236": 97, "3839673": 97, "3839800": 97, "3841561": 97, "3853846": 97, "3859292": 97, "3859368": 97, "3862733": 97, "3862832": 97, "3865938": 97, "3867540": 97, "3869109": 97, "3869213": 97, "3870114": 97, "3870641": 97, "3871267": 97, "3871473": 97, "3873402": 97, "3873443": 97, "3876716": 97, "3877062": 97, "3880743": 97, "3881815": 97, "3891598": 97, "3892331": 97, "3895271": 97, "3895763": 97, "3897397": 97, "3898044": 97, "3899802": 97, "3900406": 97, "3905208": 97, "3908746": 97, "3910544": 97, "3910711": 97, "3912482": 97, "3912634": 97, "3915308": 97, "3916063": 97, "3916391": 97, "3917796": 97, "3925162": 97, "3925433": 97, "3927891": 97, "3930813": 97, "3931740": 97, "3932209": 97, "3934813": 97, "3935271": 97, "3953991": 97, "3956074": 97, "3956137": 97, "3960967": 97, "3962249": 97, "3963087": 97, "3964177": 97, "3964369": 97, "3965314": 97, "3965737": 97, "3967279": 97, "3968109": 97, "3970010": 97, "3970373": 97, "3971302": 97, "3972161": 97, "3973703": 97, "3974058": 97, "3977424": 97, "3978750": 97, "3979538": 97, "3983182": 97, "3986581": 97, "3987939": 97, "3988699": 97, "3995724": 97, "3996402": 97, "3999299": 97, "4031739": 97, "4035701": 97, "4090885": 97, "4094159": 97, "4098330": 97, "4103697": 97, "4108167": 97, "4109406": 97, "4112385": 97, "4114860": 97, "4116370": 97, "4116850": 97, "4118164": 97, "4120406": 97, "4123036": 97, "4123480": 97, "4124764": 97, "4126055": 97, "4129310": 97, "4129564": 97, "4132224": 97, "4132361": 97, "4137074": 97, "4137160": 97, "4138952": 97, "4139510": 97, "4144583": 97, "4145314": 97, "4147121": 97, "4147272": 97, "4148292": 97, "4148831": 97, "4149415": 97, "4149980": 97, "4150638": 97, "4151102": 97, "4151761": 97, "4153965": 97, "4154452": 97, "4155541": 97, "4158718": 97, "4159013": 97, "4161113": 97, "4162034": 97, "4165025": 97, "4165074": 97, "4167056": 97, "4168983": 97, "4171589": 97, "4172203": 97, "4172315": 97, "4172437": 97, "4173624": 97, "4173757": 97, "4174774": 97, "4175318": 97, "4177271": 97, "4177304": 97, "4178447": 97, "4178811": 97, "4182129": 97, "4182220": 97, "4184992": 97, "4185173": 97, "4189956": 97, "4190157": 97, "4193129": 97, "4193240": 97, "4203303": 97, "4203457": 97, "4210341": 97, "4210978": 97, "4215768": 97, "4229569": 97, "4236115": 97, "4236953": 97, "4238619": 97, "4239090": 97, "4242727": 97, "4242820": 97, "4247582": 97, "4247752": 97, "4249415": 97, "4249492": 97, "4253170": 97, "4253241": 97, "4254139": 97, "4254196": 97, "4264699": 97, "4265106": 97, "4267967": 97, "4268069": 97, "4270287": 97, "4270665": 97, "4273336": 97, "4273895": 97, "4274742": 97, "4275887": 97, "4276967": 97, "4277829": 97, "4279622": 97, "4295023": 97, "4296741": 97, "4298183": 97, "4302245": 97, "4303929": 97, "4308244": 97, "4311815": 97, "4311888": 97, "4318032": 97, "4359092": 97, "4359206": 97, "4362548": 97, "4363274": 97, "4364077": 97, "4364902": 97, "4367907": 97, "4368088": 97, "4372138": 97, "4372254": 97, "4373018": 97, "4373655": 97, "4381814": 97, "4382564": 97, "4385218": 97, "4386784": 97, "4401907": 97, "4401955": 97, "4404611": 97, "4409688": 97, "4426188": 97, "4427023": 97, "4428042": 97, "4428448": 97, "4444349": 97, "4444718": 97, "4448461": 97, "4448584": 97, "4449774": 97, "4449878": 97, "4450927": 97, "4451193": 97, "4456805": 97, "4457374": 97, "4469460": 97, "4479638": 97, "4479659": 97, "4481197": 97, "4511126": 97, "4511437": 97, "4516089": 97, "4517259": 97, "4518491": 97, "4521534": 97, "4522813": 97, "4525960": 97, "4534805": 97, "4537446": 97, "4539729": 97, "4539888": 97, "4540026": 97, "4549680": 97, "4552785": 97, "4552884": 97, "4553121": 97, "4554125": 97, "4555322": 97, "4555342": 97, "4556826": 97, "4557652": 97, "4563759": 97, "4564034": 97, "4565982": 97, "4566429": 97, "4568398": 97, "4568764": 97, "4570027": 97, "4571191": 97, "4575038": 97, "4575100": 97, "4577204": 97, "4578605": 97, "4579740": 97, "4579963": 97, "4580601": 97, "4580707": 97, "4583810": 97, "4583912": 97, "4584505": 97, "4584767": 97, "4584932": 97, "4585114": 97, "4586176": 97, "4586272": 97, "4589450": 97, "4589599": 97, "4589899": 97, "4597922": 97, "4602666": 97, "4603216": 97, "4604196": 97, "4604402": 97, "4605380": 97, "4605654": 97, "4633347": 97, "4634102": 97, "4635615": 97, "4635742": 97, "4637328": 97, "4637431": 97, "4640882": 97, "4641002": 97, "4644069": 97, "4644641": 97, "4645659": 97, "4645661": 97, "4646963": 97, "4647423": 97, "4650777": 97, "4652144": 97, "4652906": 97, "4653466": 97, "4660153": 97, "4660520": 97, "4660713": 97, "4660827": 97, "4662445": 97, "4664507": 97, "4665348": 97, "4665932": 97, "4671738": 97, "4675132": 97, "4679448": 97, "4679664": 97, "4682856": 97, "4683181": 97, "4683865": 97, "4684315": 97, "4684414": 97, "4685864": 97, "4698575": 97, "4699609": 97, "4702866": 97, "4704603": 97, "4705885": 97, "4706575": 97, "4708883": 97, "4709258": 97, "4710712": 97, "4711413": 97, "4713576": 97, "4714319": 97, "4715483": 97, "4716969": 97, "4719609": 97, "4719757": 97, "4720658": 97, "4721130": 97, "4723982": 97, "4724064": 97, "4726771": 97, "4727279": 97, "4730366": 97, "4731605": 97, "4738102": 97, "4738170": 97, "4744321": 97, "4745314": 97, "4745455": 97, "4746463": 97, "4746903": 97, "4746969": 97, "4747116": 97, "4747623": 97, "4759603": 97, "4759819": 97, "4761321": 97, "4761930": 97, "4762359": 97, "4763195": 97, "4765313": 97, "4766132": 97, "4767657": 97, "4768330": 97, "4769063": 97, "4770291": 97, "4773070": 97, "4773818": 97, "4788358": 97, "4789189": 97, "4789592": 97, "4790291": 97, "4790642": 97, "4790643": 97, "4792483": 97, "4799980": 97, "4804396": 97, "4805606": 97, "4809674": 97, "4821928": 97, "4826639": 97, "4827071": 97, "4829791": 97, "4830134": 97, "4835622": 97, "4836186": 97, "4847972": 97, "4848424": 97, "4867825": 97, "4868170": 97, "4868280": 97, "4876142": 97, "4876275": 97, "4884902": 97, "4895516": 97, "4895920": 97, "4900974": 97, "4901917": 97, "4903264": 97, "4903451": 97, "4905173": 97, "4906838": 97, "4914047": 97, "4918371": 97, "4926486": 97, "4926634": 97, "4932178": 97, "4934258": 97, "4950546": 97, "4950582": 97, "4951481": 97, "4951570": 97, "4957667": 97, "4957774": 97, "4958309": 97, "4959216": 97, "4961526": 97, "4962450": 97, "4964390": 97, "4964666": 97, "4967089": 97, "4967993": 97, "4972226": 97, "4975374": 97, "4975508": 97, "4980306": 97, "4983959": 97, "4984087": 97, "4986739": 97, "4986888": 97, "4989454": 97, "4989547": 97, "4994675": 97, "4996834": 97, "5003202": 97, "5003449": 97, "5006057": 97, "5006705": 97, "5008050": 97, "5008769": 97, "5013624": 97, "5014350": 97, "5016260": 97, "5018782": 97, "5020358": 97, "5020779": 97, "5023210": 97, "5027154": 97, "5041160": 97, "5041369": 97, "5042092": 97, "5042101": 97, "5043064": 97, "5044197": 97, "5045720": 97, "5046393": 97, "5048003": 97, "5050039": 97, "5055000": 97, "5055685": 97, "5056039": 97, "5058250": 97, "5068831": 97, "5073578": 97, "5079303": 97, "5079909": 97, "5082279": 97, "5084897": 97, "5085028": 97, "5086309": 97, "5093903": 97, "5096597": 97, "5100707": 97, "5100750": 97, "5103476": 97, "5103580": 97, "5104911": 97, "5104968": 97, "5105103": 97, "5105109": 97, "5106048": 97, "5106203": 97, "5107625": 97, "5107842": 97, "5113752": 97, "5114121": 97, "5118852": 97, "5119215": 97, "5127201": 97, "5127827": 97, "5129611": 97, "5129744": 97, "5131065": 97, "5131519": 97, "5134105": 97, "5134738": 97, "5137971": 97, "5138249": 97, "5139679": 97, "5141672": 97, "5149226": 97, "5154513": 97, "5158500": 97, "5158510": 97, "5162232": 97, "5162601": 97, "5164884": 97, "5165147": 97, "5176654": 97, "5176828": 97, "5186236": 97, "5186925": 97, "5189240": 97, "5190137": 97, "5195243": 97, "5196072": 97, "5203504": 97, "5204529": 97, "5219815": 97, "5230548": 97, "5241914": 97, "5244282": 97, "5245402": 97, "5245742": 97, "5263424": 97, "5263693": 97, "5268380": 97, "5268418": 97, "5269485": 97, "5269544": 97, "5270941": 97, "5271264": 97, "5272041": 97, "5272845": 97, "5274270": 97, "5274692": 97, "5278708": 97, "5278802": 97, "5281519": 97, "5282082": 97, "5283944": 97, "5284025": 97, "5291604": 97, "5292778": 97, "5292837": 97, "5298754": 97, "5300331": 97, "5300851": 97, "5317392": 97, "5317490": 97, "5318124": 97, "5318219": 97, "5319301": 97, "5319711": 97, "5321151": 97, "5325548": 97, "5330230": 97, "5330474": 97, "5330495": 97, "5330577": 97, "5332169": 97, "5332248": 97, "5332780": 97, "5333778": 97, "5334919": 97, "5335191": 97, "5338027": 97, "5338921": 97, "5340266": 97, "5340828": 97, "5342045": 97, "5342179": 97, "5344724": 97, "5344871": 97, "5345013": 97, "5345275": 97, "5345425": 97, "5345926": 97, "5353774": 97, "5354180": 97, "5357029": 97, "5357540": 97, "5357785": 97, "5358145": 97, "5358293": 97, "5358368": 97, "5358507": 97, "5358511": 97, "5365174": 97, "5365262": 97, "5366880": 97, "5366943": 97, "5367986": 97, "5368477": 97, "5372643": 97, "5372850": 97, "5384508": 97, "5388899": 97, "5388920": 97, "5401756": 97, "5412400": 97, "5412496": 97, "5412640": 97, "5412840": 97, "5415629": 97, "5416652": 97, "5420731": 97, "5421309": 97, "5428457": 97, "5428532": 97, "5429908": 97, "5429931": 97, "5430054": 97, "5430156": 97, "5431450": 97, "5431491": 97, "5431512": 97, "5432196": 97, "5433051": 97, "5433904": 97, "5443026": 97, "5443877": 97, "5446855": 97, "5450435": 97, "5450456": 97, "5452326": 97, "5459523": 97, "5460530": 97, "5460551": 97, "5463116": 97, "5469639": 97, "5472324": 97, "5479438": 97, "5479487": 97, "5484661": 97, "5484778": 97, "5486354": 97, "5486718": 97, "5487150": 97, "5487365": 97, "5488241": 97, "5488339": 97, "5490631": 97, "5491423": 97, "5493263": 97, "5494416": 97, "5494474": 97, "5497678": 97, "5507023": 97, "5507115": 97, "5509177": 97, "5509466": 97, "5511705": 97, "5512047": 97, "5514556": 97, "5514650": 97, "5516025": 97, "5516069": 97, "5518567": 97, "5518809": 97, "5518898": 97, "5520388": 97, "5529763": 97, "5530613": 97, "5534649": 97, "5540543": 97, "5540564": 97, "5546117": 97, "5561689": 97, "5563826": 97, "5566269": 97, "5566342": 97, "5570085": 97, "5571795": 97, "5572949": 97, "5573213": 97, "5576749": 97, "5577069": 97, "5579194": 97, "5579665": 97, "5581993": 97, "5582095": 97, "5607529": 97, "5607825": 97, "5608841": 97, "5609340": 97, "5610270": 97, "5610373": 97, "5616402": 97, "5616597": 97, "5618551": 97, "5619568": 97, "5620669": 97, "5620778": 97, "5624475": 97, "5624600": 97, "5626288": 97, "5627812": 97, "5637621": 97, "5643309": 97, "5644057": 97, "5644728": 97, "5649656": 97, "5649755": 97, "5653648": 97, "5653827": 97, "5655857": 97, "5655949": 97, "5658712": 97, "5659444": 97, "5661273": 97, "5662142": 97, "5669737": 97, "5669944": 97, "5673352": 97, "5674303": 97, "5676609": 97, "5676826": 97, "5677646": 97, "5678637": 97, "5691503": 97, "5692263": 97, "5697500": 97, "5702155": 97, "5705553": 97, "5707044": 97, "5707124": 97, "5716573": 97, "5725809": 97, "5726307": 97, "5729310": 97, "5729792": 97, "5735253": 97, "5735549": 97, "5739421": 97, "5739478": 97, "5740283": 97, "5741185": 97, "5741622": 97, "5741867": 97, "5743571": 97, "5744179": 97, "5745617": 97, "5746632": 97, "5754306": 97, "5754311": 97, "5760799": 97, "5760895": 97, "5762435": 97, "5764029": 97, "5768450": 97, "5768918": 97, "5773627": 97, "5774584": 97, "5775610": 97, "5776092": 97, "5788611": 97, "5788633": 97, "5791752": 97, "5792320": 97, "5795114": 97, "5795399": 97, "5803734": 97, "5803955": 97, "5807291": 97, "5807708": 97, "5818132": 97, "5818473": 97, "5821134": 97, "5822976": 97, "5826148": 97, "5829390": 97, "5837392": 97, "5838094": 97, "5838850": 97, "5840281": 97, "5841940": 97, "5842708": 97, "5844050": 97, "5844835": 97, "5846466": 97, "5847476": 97, "5849424": 97, "5850033": 97, "5851893": 97, "5852022": 97, "5852962": 97, "5854198": 97, "5855040": 97, "5857544": 97, "5862557": 97, "5862643": 97, "5866431": 97, "5866561": 97, "5868139": 97, "5868265": 97, "5869954": 97, "5871393": 97, "5871512": 97, "5872173": 97, "5874343": 97, "5874415": 97, "5878958": 97, "5879138": 97, "5879554": 97, "5883857": 97, "5883989": 97, "5886612": 97, "5895973": 97, "5896617": 97, "5897405": 97, "5898302": 97, "5904695": 97, "5906657": 97, "5918157": 97, "5918269": 97, "5918445": 97, "5919054": 97, "5936957": 97, "5937194": 97, "5938881": 97, "5942389": 97, "5947640": 97, "5949395": 97, "5949448": 97, "5949858": 97, "5957013": 97, "5957440": 97, "5958457": 97, "5959007": 97, "5959532": 97, "5962952": 97, "5964183": 97, "5964400": 97, "5967211": 97, "5967246": 97, "5973326": 97, "5981765": 97, "5985871": 97, "5986487": 97, "5990589": 97, "5990740": 97, "6003379": 97, "6004656": 97, "6007595": 97, "6008136": 97, "6009524": 97, "6009781": 97, "6011586": 97, "6011976": 97, "6026877": 97, "6027193": 97, "6028370": 97, "6028485": 97, "6033458": 97, "6035447": 97, "6037884": 97, "6038402": 97, "6041267": 97, "6041671": 97, "6046018": 97, "6046787": 97, "6050451": 97, "6051144": 97, "6051282": 97, "6053784": 97, "6055821": 97, "6056130": 97, "6058424": 97, "6058547": 97, "6060953": 97, "6061731": 97, "6068040": 97, "6068525": 97, "6070122": 97, "6070231": 97, "6078896": 97, "6081781": 97, "6086006": 97, "6087429": 97, "6087729": 97, "6090008": 97, "6091385": 97, "6092685": 97, "6092811": 97, "6093306": 97, "6094437": 97, "6095059": 97, "6096589": 97, "6097578": 97, "6097791": 97, "6098926": 97, "6099731": 97, "6100034": 97, "6100055": 97, "6100260": 97, "6101789": 97, "6102066": 97, "6102396": 97, "6104804": 97, "6105754": 97, "6105758": 97, "6105820": 97, "6105862": 97, "6107715": 97, "6107816": 97, "6109655": 97, "6110133": 97, "6114549": 97, "6123119": 97, "6126875": 97, "6133006": 97, "6133129": 97, "6133244": 97, "6137977": 97, "6138500": 97, "6139211": 97, "6139420": 97, "6140883": 97, "6141352": 97, "6144375": 97, "6145454": 97, "6147102": 97, "6148141": 97, "6148836": 97, "6149196": 97, "6150491": 97, "6153644": 97, "6153753": 97, "6154074": 97, "6157440": 97, "6157447": 97, "6159264": 97, "6159880": 97, "6161665": 97, "6162290": 97, "6162387": 97, "6163379": 97, "6163599": 97, "6164190": 97, "6164264": 97, "6164718": 97, "6166539": 97, "6167945": 97, "6168642": 97, "6169083": 97, "6169195": 97, "6171594": 97, "6171658": 97, "6172661": 97, "6172796": 97, "6172998": 97, "6173139": 97, "6174994": 97, "6175138": 97, "6175194": 97, "6180840": 97, "6181313": 97, "6183856": 97, "6184071": 97, "6185368": 97, "6185461": 97, "6194897": 97, "6196173": 97, "6196194": 97, "6199672": 97, "6200193": 97, "6200797": 97, "6202076": 97, "6203973": 97, "6206927": 97, "6206954": 97, "6211155": 97, "6211269": 97, "6211885": 97, "6211980": 97, "6219912": 97, "6220092": 97, "6220764": 97, "6221244": 97, "6223115": 97, "6224877": 97, "6226099": 97, "6231495": 97, "6232129": 97, "6232776": 97, "6234280": 97, "6234707": 97, "6235391": 97, "6236133": 97, "6250197": 97, "6250474": 97, "6252876": 97, "6253081": 97, "6253584": 97, "6253700": 97, "6254947": 97, "6255034": 97, "6257620": 97, "6260248": 97, "6264520": 97, "6264564": 97, "6264709": 97, "6265677": 97, "6269069": 97, "6269419": 97, "6271533": 97, "6271865": 97, "6273785": 97, "6274529": 97, "6275291": 97, "6280455": 97, "6280583": 97, "6283495": 97, "6283672": 97, "6284972": 97, "6289340": 97, "6289432": 97, "6294068": 97, "6295066": 97, "6297636": 97, "6297766": 97, "6299729": 97, "6300492": 97, "6302298": 97, "6302412": 97, "6304296": 97, "6304915": 97, "6306384": 97, "6307302": 97, "6308636": 97, "6309113": 97, "6310808": 97, "6311228": 97, "6312416": 97, "6312749": 97, "6314624": 97, "6315232": 97, "6317262": 97, "6317696": 97, "6324019": 97, "6326620": 97, "6327968": 97, "6329535": 97, "6330181": 97, "6342223": 97, "6358411": 97, "6358584": 97, "6360457": 97, "6360837": 97, "6364172": 97, "6365030": 97, "6366224": 97, "6366330": 97, "6368078": 97, "6368269": 97, "6369596": 97, "6369747": 97, "6394350": 97, "6402648": 97, "6402806": 97, "6404586": 97, "6405705": 97, "6405856": 97, "6406936": 97, "6407525": 97, "6416812": 97, "6418564": 97, "6418840": 97, "6420659": 97, "6421889": 97, "6422060": 97, "6428942": 97, "6429526": 97, "6431586": 97, "6432138": 97, "6432212": 97, "6436111": 97, "6441192": 97, "6441643": 97, "6446465": 97, "6447303": 97, "6456984": 97, "6457281": 97, "6458479": 97, "6459476": 97, "6459596": 97, "6460877": 97, "6467519": 97, "6468112": 97, "6471922": 97, "6473206": 97, "6488977": 97, "6490715": 97, "6496109": 97, "6497435": 97, "6499560": 97, "6499981": 97, "6501410": 97, "6502166": 97, "6503909": 97, "6507893": 97, "6513830": 97, "6513927": 97, "6517507": 97, "6517528": 97, "6520918": 97, "6521784": 97, "6523442": 97, "6525044": 97, "6528689": 97, "6529165": 97, "6530099": 97, "6530130": 97, "6531963": 97, "6531982": 97, "6533071": 97, "6534083": 97, "6541062": 97, "6542115": 97, "6544966": 97, "6545109": 97, "6546593": 97, "6546614": 97, "6550436": 97, "6550535": 97, "6552625": 97, "6552833": 97, "6553379": 97, "6553480": 97, "6554290": 97, "6554503": 97, "6554709": 97, "6554728": 97, "6558665": 97, "6558693": 97, "6562346": 97, "6562648": 97, "6562669": 97, "6562698": 97, "6564451": 97, "6564748": 97, "6565852": 97, "6566124": 97, "6568954": 97, "6569556": 97, "6572600": 97, "6574003": 97, "6587902": 97, "6592081": 97, "6592231": 97, "6592468": 97, "6598927": 97, "6598981": 97, "6607520": 97, "6608340": 97, "6608517": 97, "6612187": 97, "6615990": 97, "6616303": 97, "6618560": 97, "6620664": 97, "6621295": 97, "6621623": 97, "6624918": 97, "6625065": 97, "6626788": 97, "6627044": 97, "6627917": 97, "6629568": 97, "6637429": 97, "6640650": 97, "6642636": 97, "6642720": 97, "6643509": 97, "6651219": 97, "6655430": 97, "6655607": 97, "6658371": 97, "6659271": 97, "6659356": 97, "6660435": 97, "6662315": 97, "6663160": 97, "6673830": 97, "6682299": 97, "6683740": 97, "6686723": 97, "6686776": 97, "6687348": 97, "6691671": 97, "6695367": 97, "6695424": 97, "6705545": 97, "6706404": 97, "6706756": 97, "6708919": 97, "6710215": 97, "6710543": 97, "6710849": 97, "6712431": 97, "6715966": 97, "6716990": 97, "6717818": 97, "6723059": 97, "6724866": 97, "6729376": 97, "6730056": 97, "6730959": 97, "6731266": 97, "6732276": 97, "6734027": 97, "6736161": 97, "6736679": 97, "6741176": 97, "6741275": 97, "6741876": 97, "6741983": 97, "6745329": 97, "6745990": 97, "6753031": 97, "6753218": 97, "6756348": 97, "6757174": 97, "6757233": 97, "6757762": 97, "6758178": 97, "6758180": 97, "6760179": 97, "6760415": 97, "6767797": 97, "6768384": 97, "6768545": 97, "6773972": 97, "6780151": 97, "6780798": 97, "6784397": 97, "6784867": 97, "6787139": 97, "6788031": 97, "6789002": 97, "6789038": 97, "6789738": 97, "6790697": 97, "6790838": 97, "6790977": 97, "6798161": 97, "6798226": 97, "6799608": 97, "6800385": 97, "6801973": 97, "6802199": 97, "6810571": 97, "6812659": 97, "6814249": 97, "6814510": 97, "6834699": 97, "6835505": 97, "6835631": 97, "6836468": 97, "6838140": 97, "6838353": 97, "6843343": 97, "6843588": 97, "6845142": 97, "6845176": 97, "6846959": 97, "6847133": 97, "6847308": 97, "6847510": 97, "6849923": 97, "6850408": 97, "6851253": 97, "6851371": 97, "6854140": 97, "6854477": 97, "6857536": 97, "6860394": 97, "6861997": 97, "6862312": 97, "6870951": 97, "6871133": 97, "6872142": 97, "6872606": 97, "6873757": 97, "6874311": 97, "6877038": 97, "6877058": 97, "6892143": 97, "6893302": 97, "6893447": 97, "6897734": 97, "6900619": 97, "6900948": 97, "6913579": 97, "6915042": 97, "6916593": 97, "6916765": 97, "6917561": 97, "6917699": 97, "6922973": 97, "6923068": 97, "6923693": 97, "6924281": 97, "6929665": 97, "6931137": 97, "6936928": 97, "6937463": 97, "6939672": 97, "6940214": 97, "6943077": 97, "6943175": 97, "6945358": 97, "6945597": 97, "6950499": 97, "6951134": 97, "6954252": 97, "6954413": 97, "6961139": 97, "6967669": 97, "6970145": 97, "6970362": 97, "6971888": 97, "6972156": 97, "6973696": 97, "6974557": 97, "6977071": 97, "6979628": 97, "6979773": 97, "6989066": 97, "6999706": 97, "7002869": 97, "7003481": 97, "7005442": 97, "7015223": 97, "7015907": 97, "7020797": 97, "7021294": 97, "7021584": 97, "7021971": 97, "7029076": 97, "7029887": 97, "7030001": 97, "7033810": 97, "7033950": 97, "7034158": 97, "7034366": 97, "7035350": 97, "7035371": 97, "7038899": 97, "7048832": 97, "7050041": 97, "7051712": 97, "7053687": 97, "7056385": 97, "7057191": 97, "7059351": 97, "7059891": 97, "7061254": 97, "7065251": 97, "7069186": 97, "7069439": 97, "7074721": 97, "7075917": 97, "7082040": 97, "7088029": 97, "7090062": 97, "7090739": 97, "7094723": 97, "7095485": 97, "7098400": 97, "7098648": 97, "7099866": 97, "7100002": 97, "7101775": 97, "7102215": 97, "7103363": 97, "7103811": 97, "7104136": 97, "7105301": 97, "7106926": 97, "7110233": 97, "7112443": 97, "7112866": 97, "7115055": 97, "7116328": 97, "7116655": 97, "7116734": 97, "7116830": 97, "7117807": 97, "7121545": 97, "7121656": 97, "7122194": 97, "7122613": 97, "7128246": 97, "7132746": 97, "7134370": 97, "7134737": 97, "7147578": 97, "7149889": 97, "7151844": 97, "7152461": 97, "7156786": 97, "7159713": 97, "7160917": 97, "7160935": 97, "7166523": 97, "7166917": 97, "7169089": 97, "7169996": 97, "7172192": 97, "7172462": 97, "7174124": 97, "7175509": 97, "7176442": 97, "7176695": 97, "7176842": 97, "7177903": 97, "7179430": 97, "7181233": 97, "7181382": 97, "7183052": 97, "7185650": 97, "7185694": 97, "7188298": 97, "7188464": 97, "7190581": 97, "7190787": 97, "7193920": 97, "7201775": 97, "7201829": 97, "7202204": 97, "7203533": 97, "7204540": 97, "7207717": 97, "7208021": 97, "7209866": 97, "7210270": 97, "7212522": 97, "7214744": 97, "7221299": 97, "7222290": 97, "7224481": 97, "7224655": 97, "7227765": 97, "7227788": 97, "7233121": 97, "7233392": 97, "7234501": 97, "7235351": 97, "7235372": 97, "7235383": 97, "7238792": 97, "7238992": 97, "7243967": 97, "7244936": 97, "7246811": 97, "7246903": 97, "7248689": 97, "7248826": 97, "7251282": 97, "7251940": 97, "7255223": 97, "7255379": 97, "7258700": 97, "7258945": 97, "7267057": 97, "7267094": 97, "7267226": 97, "7269118": 97, "7273008": 97, "7274281": 97, "7278573": 97, "7278734": 97, "7279623": 97, "7279665": 97, "7282924": 97, "7282963": 97, "7283762": 97, "7283901": 97, "7285772": 97, "7286300": 97, "7286321": 97, "7290711": 97, "7290859": 97, "7290945": 97, "7291013": 97, "7291271": 97, "7292991": 97, "7294037": 97, "7299983": 97, "7300060": 97, "7300913": 97, "7300998": 97, "7302975": 97, "7303299": 97, "7304690": 97, "7304917": 97, "7307012": 97, "7307116": 97, "7308626": 97, "7308642": 97, "7311915": 97, "7312796": 97, "7313525": 97, "7313624": 97, "7314279": 97, "7317645": 97, "7321085": 97, "7322264": 97, "7324415": 97, "7327967": 97, "7327988": 97, "7333034": 97, "7334533": 97, "7339231": 97, "7352235": 97, "7352414": 97, "7353703": 97, "7354490": 97, "7359100": 97, "7360225": 97, "7371534": 97, "7372295": 97, "7372529": 97, "7376603": 97, "7383197": 97, "7384397": 97, "7388795": 97, "7389053": 97, "7395918": 97, "7398709": 97, "7401023": 97, "7401131": 97, "7402761": 97, "7403290": 97, "7404374": 97, "7404949": 97, "7408511": 97, "7422784": 97, "7454116": 97, "7454659": 97, "7456953": 97, "7457151": 97, "7460756": 97, "7460855": 97, "7466429": 97, "7472619": 97, "7476946": 97, "7480107": 97, "7483505": 97, "7484061": 97, "7486293": 97, "7486647": 97, "7494736": 97, "7495435": 97, "7505642": 97, "7505950": 97, "7506693": 97, "7509568": 97, "7513728": 97, "7514075": 97, "7515126": 97, "7518821": 97, "7519001": 97, "7519239": 97, "7519339": 97, "7522115": 97, "7526716": 97, "7527223": 97, "7531715": 97, "7532046": 97, "7542159": 97, "7544617": 97, "7544730": 97, "7553843": 97, "7554553": 97, "7554854": 97, "7562349": 97, "7564583": 97, "7567719": 97, "7567826": 97, "7570553": 97, "7574239": 97, "7580833": 97, "7580943": 97, "7581628": 97, "7582105": 97, "7583333": 97, "7583809": 97, "7588367": 97, "7588579": 97, "7591206": 97, "7591287": 97, "7595372": 97, "7595775": 97, "7602221": 97, "7602306": 97, "7608245": 97, "7611208": 97, "7611315": 97, "7614175": 97, "7634143": 97, "7634491": 97, "7639785": 97, "7640347": 97, "7641767": 97, "7641884": 97, "7643328": 97, "7643430": 97, "7649777": 97, "7650340": 97, "7656338": 97, "7656453": 97, "7656474": 97, "7656977": 97, "7658291": 97, "7667728": 97, "7669900": 97, "7670154": 97, "7672714": 97, "7674728": 97, "7676402": 97, "7676667": 97, "7679046": 97, "7679447": 97, "7683045": 97, "7683340": 97, "7694210": 97, "7694319": 97, "7695232": 97, "7695680": 97, "7698222": 97, "7698300": 97, "7699284": 97, "7699681": 97, "7700958": 97, "7701176": 97, "7701348": 97, "7701364": 97, "7702053": 97, "7702428": 97, "7718639": 97, "7718881": 97, "7718958": 97, "7722083": 97, "7723116": 97, "7723755": 97, "7724656": 97, "7725018": 97, "7727112": 97, "7727256": 97, "7729092": 97, "7729183": 97, "7729878": 97, "7731120": 97, "7737995": 97, "7738670": 97, "7738691": 97, "7755777": 97, "7756353": 97, "7766531": 97, "7772231": 97, "7773415": 97, "7777655": 97, "7777669": 97, "7778011": 97, "7779418": 97, "7785798": 97, "7785877": 97, "7793614": 97, "7798812": 97, "7798947": 97, "7800454": 97, "7801822": 97, "7813761": 97, "7819413": 97, "7819578": 97, "7820478": 97, "7820830": 97, "7826378": 97, "7826441": 97, "7831629": 97, "7832662": 97, "7835453": 97, "7835812": 97, "7836967": 97, "7837062": 97, "7840022": 97, "7840438": 97, "7853640": 97, "7853749": 97, "7859417": 97, "7859939": 97, "7860105": 97, "7862528": 97, "7863569": 97, "7866135": 97, "7875554": 97, "7884188": 97, "7885769": 97, "7887213": 97, "7887335": 97, "7887370": 97, "7887467": 97, "7889309": 97, "7894864": 97, "7896124": 97, "7897725": 97, "7898433": 97, "7903334": 97, "7906825": 97, "7918341": 97, "7918437": 97, "7926503": 97, "7926622": 97, "7934577": 97, "7936263": 97, "7938487": 97, "7938559": 97, "7940728": 97, "7940892": 97, "7941994": 97, "7942718": 97, "7945551": 97, "7946192": 97, "7951593": 97, "7951654": 97, "7952140": 97, "7952462": 97, "7952648": 97, "7952884": 97, "7953125": 97, "7954819": 97, "7955081": 97, "7955976": 97, "7958474": 97, "7958646": 97, "7960158": 97, "7960266": 97, "7961474": 97, "7962051": 97, "7972443": 97, "7972472": 97, "7977078": 97, "7980230": 97, "7984758": 97, "7984888": 97, "7993161": 97, "7993294": 97, "7993579": 97, "7995733": 97, "8003179": 97, "8004132": 97, "8004187": 97, "8005126": 97, "8006448": 97, "8006634": 97, "8009116": 97, "8010206": 97, "8010366": 97, "8014405": 97, "8024422": 97, "8024879": 97, "8026525": 97, "8026600": 97, "8028752": 97, "8028816": 97, "8028996": 97, "8030958": 97, "8035696": 97, "8035797": 97, "8039831": 97, "8039878": 97, "8040526": 97, "8040798": 97, "8043278": 97, "8043343": 97, "8044175": 97, "8046556": 97, "8046749": 97, "8047344": 97, "8049340": 97, "8050036": 97, "8057029": 97, "8059803": 97, "8060478": 97, "8060788": 97, "8061967": 97, "8062006": 97, "8081671": 97, "8083575": 97, "8095610": 97, "8095739": 97, "8098444": 97, "8103595": 97, "8109228": 97, "8109745": 97, "8119316": 97, "8125800": 97, "8130039": 97, "8134114": 97, "8135051": 97, "8135839": 97, "8135955": 97, "8137255": 97, "8137276": 97, "8138867": 97, "8138888": 97, "8139467": 97, "8142537": 97, "8147426": 97, "8149651": 97, "8150354": 97, "8151371": 97, "8151861": 97, "8159798": 97, "8160467": 97, "8168711": 97, "8172720": 97, "8173491": 97, "8174887": 97, "8210703": 97, "8210901": 97, "8218324": 97, "8219997": 97, "8223954": 97, "8224473": 97, "8226297": 97, "8226493": 97, "8240637": 97, "8242133": 97, "8243572": 97, "8243693": 97, "8244963": 97, "8245504": 97, "8250948": 97, "8253455": 97, "8254926": 97, "8255347": 97, "8258939": 97, "8259436": 97, "8259498": 97, "8262038": 97, "8268990": 97, "8270303": 97, "8288124": 97, "8288948": 97, "8291005": 97, "8291298": 97, "8293640": 97, "8294873": 97, "8307566": 97, "8307642": 97, "8307733": 97, "8312099": 97, "8312120": 97, "8313120": 97, "8315432": 97, "8315902": 97, "8318250": 97, "8318346": 97, "8323987": 97, "8324285": 97, "8328859": 97, "8329061": 97, "8329647": 97, "8330449": 97, "8332784": 97, "8333081": 97, "8336727": 97, "8336965": 97, "8346023": 97, "8353381": 97, "8363858": 97, "8363953": 97, "8369562": 97, "8375489": 97, "8392758": 97, "8394725": 97, "8398626": 97, "8398917": 97, "8400504": 97, "8401371": 97, "8403939": 97, "8404546": 97, "8405968": 97, "8406827": 97, "8410804": 97, "8412421": 97, "8416197": 97, "8416815": 97, "8426092": 97, "8427086": 97, "8429832": 97, "8429925": 97, "8435865": 97, "8435957": 97, "8438608": 97, "8439970": 97, "8440488": 97, "8441542": 97, "8442452": 97, "8442694": 97, "8444969": 97, "8445346": 97, "8451001": 97, "8451035": 97, "8451254": 97, "8452152": 97, "8452312": 97, "8459040": 97, "8459331": 97, "8460224": 97, "8463015": 97, "8463128": 97, "8463149": 97, "8463322": 97, "8467283": 97, "8467487": 97, "8469351": 97, "8469858": 97, "8471852": 97, "8472463": 97, "8473481": 97, "8474059": 97, "8474767": 97, "8474846": 97, "8476288": 97, "8479438": 97, "8479492": 97, "8481151": 97, "8482538": 97, "8482758": 97, "8484414": 97, "8484595": 97, "8487062": 97, "8487617": 97, "8490938": 97, "8491290": 97, "8495833": 97, "8498111": 97, "8502604": 97, "8503350": 97, "8503449": 97, "8503993": 97, "8505566": 97, "8509040": 97, "8511315": 97, "8511592": 97, "8512505": 97, "8513899": 97, "8526621": 97, "8526757": 97, "8529271": 97, "8529375": 97, "8531342": 97, "8531683": 97, "8534527": 97, "8539938": 97, "8544409": 97, "8546062": 97, "8546725": 97, "8549512": 97, "8570998": 97, "8571555": 97, "8573749": 97, "8573851": 97, "8580205": 97, "8584423": 97, "8587507": 97, "8591214": 97, "8591978": 97, "8592091": 97, "8592928": 97, "8593026": 97, "8596225": 97, "8596332": 97, "8598551": 97, "8598657": 97, "8600875": 97, "8601354": 97, "8602035": 97, "8602124": 97, "8605162": 97, "8605262": 97, "8608631": 97, "8608953": 97, "8609101": 97, "8609920": 97, "8612604": 97, "8612724": 97, "8615193": 97, "8615387": 97, "8616948": 97, "8617056": 97, "8618936": 97, "8623011": 97, "8631202": 97, "8631878": 97, "8632030": 97, "8633298": 97, "8633403": 97, "8633896": 97, "8637943": 97, "8638513": 97, "8640236": 97, "8640507": 97, "8644399": 97, "8644459": 97, "8646304": 97, "8646450": 97, "8651671": 97, "8658898": 97, "8659967": 97, "8660830": 97, "8664445": 97, "8664975": 97, "8666497": 97, "8666594": 97, "8669797": 97, "8669802": 97, "8673623": 97, "8676665": 97, "8681325": 97, "8683196": 97, "8687217": 97, "8687633": 97, "8692622": 97, "8692945": 97, "8696301": 97, "8696602": 97, "8701973": 97, "8702465": 97, "8724279": 97, "8727217": 97, "8728487": 97, "8728587": 97, "8728708": 97, "8728763": 97, "8730054": 97, "8730155": 97, "8731722": 97, "8732218": 97, "8735717": 97, "8736212": 97, "8737038": 97, "8737071": 97, "8742548": 97, "8743848": 97, "8746985": 97, "8749615": 97, "8751358": 97, "8752228": 97, "8755680": 97, "8755845": 97, "8757603": 97, "8758155": 97, "8758996": 97, "8759205": 97, "8759788": 97, "8763040": 97, "8765631": 97, "8765744": 97, "8777518": 97, "8779730": 97, "8785415": 97, "8790295": 97, "8790456": 97, "8791353": 97, "8791426": 97, "8792472": 97, "8792618": 97, "8792963": 97, "8797295": 97, "8797455": 97, "8804697": 97, "8804798": 97, "8808081": 97, "8808655": 97, "8813300": 97, "8813760": 97, "8814979": 97, "8815571": 97, "8816193": 97, "8816973": 97, "8821362": 97, "8822187": 97, "8823636": 97, "8824400": 97, "8825603": 97, "8826166": 97, "8826670": 97, "8828009": 97, "8838719": 97, "8840167": 97, "8841212": 97, "8841769": 97, "8842309": 97, "8842551": 97, "8845481": 97, "8845808": 97, "8851116": 97, "8852704": 97, "8852765": 97, "8852825": 97, "8852917": 97, "8853588": 97, "8861278": 97, "8864019": 97, "8865549": 97, "8865944": 97, "8866624": 97, "8866807": 97, "8866973": 97, "8867939": 97, "8868296": 97, "8869714": 97, "8871531": 97, "8871790": 97, "8875257": 97, "8876318": 97, "8894137": 97, "8897631": 97, "8901435": 97, "8901647": 97, "8901794": 97, "8902740": 97, "8905447": 97, "8905647": 97, "8916805": 97, "8917851": 97, "8918001": 97, "8919328": 97, "8920504": 97, "8921347": 97, "8925306": 97, "8928749": 97, "8942292": 97, "8945532": 97, "8946244": 97, "8946685": 97, "8947201": 97, "8947303": 97, "8948711": 97, "8948777": 97, "8954390": 97, "8954558": 97, "8957394": 97, "8957455": 97, "8957650": 97, "8958007": 97, "8960882": 97, "8962321": 97, "8970081": 97, "8970290": 97, "8971031": 97, "8971138": 97, "8974585": 97, "8974864": 97, "8975116": 97, "8975365": 97, "8986540": 97, "8987094": 97, "8987231": 97, "8989930": 97, "8993683": 97, "8994001": 97, "8999575": 97, "9000096": 97, "9001742": 97, "9001844": 97, "9003963": 97, "9004496": 97, "9008708": 97, "9009011": 97, "9013885": 97, "9015315": 97, "9016179": 97, "9016754": 97, "9017994": 97, "9018669": 97, "9020304": 97, "9020944": 97, "9025608": 97, "9025778": 97, "9031232": 97, "9031234": 97, "9036695": 97, "9039223": 97, "9039351": 97, "9039578": 97, "9039723": 97, "9039989": 97, "9040126": 97, "9041319": 97, "9042007": 97, "9042395": 97, "9042578": 97, "9043320": 97, "9046575": 97, "9048187": 97, "9049349": 97, "9049459": 97, "9055457": 97, "9056292": 97, "9057824": 97, "9057889": 97, "9057999": 97, "9058143": 97, "9063160": 97, "9063277": 97, "9064403": 97, "9065078": 97, "9077325": 97, "9077564": 97, "9080024": 97, "9085350": 97, "9085848": 97, "9087742": 97, "9087883": 97, "9089011": 97, "9089228": 97, "9095956": 97, "9108140": 97, "9108172": 97, "9110918": 97, "9118114": 97, "9124472": 97, "9124663": 97, "9127101": 97, "9132537": 97, "9135753": 97, "9135763": 97, "9138365": 97, "9138405": 97, "9145632": 97, "9149672": 97, "9153252": 97, "9154227": 97, "9154812": 97, "9155463": 97, "9157462": 97, "9158800": 97, "9158986": 97, "9159120": 97, "9159522": 97, "9159895": 97, "9163266": 97, "9163530": 97, "9166952": 97, "9168431": 97, "9177488": 97, "9177663": 97, "9178703": 97, "9179940": 97, "9181119": 97, "9181809": 97, "9220728": 97, "9221817": 97, "9226390": 97, "9226904": 97, "9233560": 97, "9234169": 97, "9245926": 97, "9246027": 97, "9249358": 97, "9249541": 97, "9250495": 97, "9250605": 97, "9251828": 97, "9251837": 97, "9261669": 97, "9265950": 97, "9271058": 97, "9271478": 97, "9278689": 97, "9280922": 97, "9286576": 97, "9287442": 97, "9303928": 97, "9305750": 97, "9306844": 97, "9308441": 97, "9310221": 97, "9310318": 97, "9314891": 97, "9317712": 97, "9327279": 97, "9327423": 97, "9327495": 97, "9327636": 97, "9327708": 97, "9327856": 97, "9330928": 97, "9332533": 97, "9332649": 97, "9332945": 97, "9333043": 97, "9334799": 97, "9342496": 97, "9344723": 97, "9349576": 97, "9350268": 97, "9352700": 97, "9352846": 97, "9354612": 97, "9355024": 97, "9357079": 97, "9359066": 97, "9389982": 97, "9390832": 97, "9393095": 97, "9393760": 97, "9404039": 97, "9407173": 97, "9408282": 97, "9408340": 97, "9410094": 97, "9410612": 97, "9411454": 97, "9412305": 97, "9413222": 97, "9414549": 97, "9418885": 97, "9419456": 97, "9420813": 97, "9420911": 97, "9421992": 97, "9422555": 97, "9431120": 97, "9431248": 97, "9433828": 97, "9435159": 97, "9435327": 97, "9435464": 97, "9444227": 97, "9447361": 97, "9447421": 97, "9448541": 97, "9448669": 97, "9454330": 97, "9454383": 97, "9456828": 97, "9456977": 97, "9457455": 97, "9458842": 97, "9459286": 97, "9460550": 97, "9463750": 97, "9468898": 97, "9469653": 97, "9470637": 97, "9471549": 97, "9474801": 97, "9476596": 97, "9477181": 97, "9477458": 97, "9478151": 97, "9478469": 97, "9479091": 97, "9479100": 97, "9480912": 97, "9481658": 97, "9482275": 97, "9482742": 97, "9483591": 97, "9483981": 97, "9486540": 97, "9486644": 97, "9488029": 97, "9488487": 97, "9494555": 97, "9500623": 97, "9500823": 97, "9501265": 97, "9505768": 97, "9506546": 97, "9512236": 97, "9512306": 97, "9512416": 97, "9512451": 97, "9514637": 97, "9514997": 97, "9516776": 97, "9517025": 97, "9518736": 97, "9518890": 97, "9518911": 97, "9519243": 97, "9521275": 97, "9522549": 97, "9531132": 97, "9531626": 97, "9532869": 97, "9533420": 97, "9540966": 97, "9541167": 97, "9541223": 97, "9543728": 97, "9543951": 97, "9544399": 97, "9544549": 97, "9544732": 97, "9558099": 97, "9558791": 97, "9558874": 97, "9561440": 97, "9561573": 97, "9562352": 97, "9562437": 97, "9563842": 97, "9563927": 97, "9565388": 97, "9574377": 97, "9574758": 97, "9576326": 97, "9576356": 97, "9577889": 97, "9578525": 97, "9581267": 97, "9581785": 97, "9582583": 97, "9582680": 97, "9583533": 97, "9583868": 97, "9584735": 97, "9585416": 97, "9588153": 97, "9588661": 97, "9589244": 97, "9589283": 97, "9589931": 97, "9590505": 97, "9591825": 97, "9591938": 97, "9593103": 97, "9595275": 97, "9598363": 97, "9600444": 97, "9601015": 97, "9604809": 97, "9605179": 97, "9605750": 97, "9605844": 97, "9605895": 97, "9611534": 97, "9611812": 97, "9615082": 97, "9615191": 97, "9616333": 97, "9616515": 97, "9618107": 97, "9618195": 97, "9619760": 97, "9620226": 97, "9622377": 97, "9622612": 97, "9624724": 97, "9625048": 97, "9625796": 97, "9626240": 97, "9630848": 97, "9631387": 97, "9632401": 97, "9633182": 97, "9635945": 97, "9638855": 97, "9641736": 97, "9642343": 97, "9643834": 97, "9644415": 97, "9644728": 97, "9645637": 97, "9649238": 97, "9650498": 97, "9652946": 97, "9653020": 97, "9658023": 97, "9658273": 97, "9660080": 97, "9660173": 97, "9664915": 97, "9665250": 97, "9670726": 97, "9673663": 97, "9678557": 97, "9679643": 97, "9679718": 97, "9685397": 97, "9688653": 97, "9689196": 97, "9690557": 97, "9692700": 97, "9693781": 97, "9694621": 97, "9695035": 97, "9695419": 97, "9695440": 97, "9695706": 97, "9696762": 97, "9697236": 97, "9699566": 97, "9703076": 97, "9703323": 97, "9704869": 97, "9705517": 97, "9708610": 97, "9708753": 97, "9710087": 97, "9710745": 97, "9711065": 97, "9712719": 97, "9712810": 97, "9715232": 97, "9715320": 97, "9728034": 97, "9731347": 97, "9731631": 97, "9734085": 97, "9734369": 97, "9736635": 97, "9736785": 97, "9737815": 97, "9744146": 97, "9744208": 97, "9747923": 97, "9748516": 97, "9749921": 97, "9751181": 97, "9751336": 97, "9751342": 97, "9751469": 97, "9752384": 97, "9752527": 97, "9752600": 97, "9752742": 97, "9754121": 97, "9760787": 97, "9762363": 97, "9767846": 97, "9768813": 97, "9772565": 97, "9773171": 97, "9774012": 97, "9774073": 97, "9779542": 97, "9780348": 97, "9785724": 97, "9785780": 97, "9787624": 97, "9788724": 97, "9790050": 97, "9793755": 97, "9796675": 97, "9797852": 97, "9797912": 97, "9806794": 97, "9806960": 97, "9808903": 97, "9815907": 97, "9829761": 97, "9830569": 97, "9839597": 97, "9844809": 97, "9847405": 97, "9851791": 97, "9852611": 97, "9852799": 97, "9853653": 97, "9863495": 97, "9863583": 97, "9869064": 97, "9869650": 97, "9874680": 97, "9874697": 97, "9881504": 97, "9883695": 97, "9883767": 97, "9884710": 97, "9884731": 97, "9886188": 97, "9888224": 97, "9888355": 97, "9892223": 97, "9893620": 97, "9900817": 97, "9901075": 97, "9902950": 97, "9904302": 97, "9910545": 97, "9914275": 97, "9914497": 97, "9914946": 97, "9915096": 97, "9916864": 97, "9916947": 97, "9919579": 97, "9919708": 97, "9921210": 97, "9921930": 97, "9923609": 97, "9924280": 97, "9925694": 97, "9925715": 97, "9925977": 97, "9930885": 97, "9930987": 97, "9934290": 97, "9934636": 97, "9936022": 97, "9936124": 97, "9938301": 97, "9940976": 97, "9941032": 97, "9942322": 97, "9942758": 97, "9942955": 97, "9943165": 97, "9947803": 97, "9953391": 97, "9953408": 97, "9955873": 97, "9956149": 97, "9958357": 97, "9958781": 97, "9960095": 97, "9960426": 97, "9961977": 97, "9962712": 97, "9962855": 97, "9965573": 97, "9973177": 97, "9973380": 97, "9976315": 97, "9976425": 97, "9979662": 97, "9980062": 97, "9984794": 97, "9986342": 97, "9986413": 97, "9988451": 97, "9988763": 97, "9989131": 97, "9989515": 97, "9989801": 97, "9999928": 97, "10001313": 97, "10001534": 97, "10005522": 97, "10005544": 97, "10011504": 97, "10011836": 97, "10014546": 97, "10015495": 97, "10016764": 97, "10018121": 97, "10019642": 97, "10021090": 97, "10021701": 97, "10022872": 97, "10023797": 97, "10025838": 97, "10026187": 97, "10030059": 97, "10030173": 97, "10047977": 97, "10048084": 97, "10062026": 97, "10062219": 97, "10062354": 97, "10066792": 97, "10066869": 97, "10070882": 97, "10071900": 97, "10072577": 97, "10074399": 97, "10074993": 97, "10077749": 97, "10080158": 97, "10085765": 97, "10086264": 97, "10102012": 97, "10102229": 97, "10102353": 97, "10103209": 97, "10103353": 97, "10103537": 97, "10103626": 97, "10107348": 97, "10108778": 97, "10110981": 97, "10111916": 97, "10112082": 97, "10117124": 97, "10117158": 97, "10122171": 97, "10122458": 97, "10130215": 97, "10133589": 97, "10133671": 97, "10134404": 97, "10134524": 97, "10147324": 97, "10149888": 97, "10150279": 97, "10155105": 97, "10155160": 97, "10158884": 97, "10158950": 97, "10161883": 97, "10162374": 97, "10165132": 97, "10169440": 97, "10169580": 97, "10169638": 97, "10172603": 97, "10174454": 97, "10175591": 97, "10177180": 97, "10178915": 97, "10179017": 97, "10179747": 97, "10179844": 97, "10185520": 97, "10185854": 97, "10190896": 97, "10191272": 97, "10192832": 97, "10193241": 97, "10196997": 97, "10197320": 97, "10197596": 97, "10198218": 97, "10200440": 97, "10200767": 97, "10201808": 97, "10203436": 97, "10203743": 97, "10220454": 97, "10221252": 97, "10221641": 97, "10222778": 97, "10222880": 97, "10233386": 97, "10235230": 97, "10235407": 97, "10237461": 97, "10237682": 97, "10244351": 97, "10244462": 97, "10246502": 97, "10246653": 97, "10248287": 97, "10255327": 97, "10255545": 97, "10262250": 97, "10264305": 97, "10279234": 97, "10290910": 97, "10297927": 97, "10298139": 97, "10327870": 97, "10328983": 97, "10330400": 97, "10330878": 97, "10331808": 97, "10331978": 97, "10333082": 97, "10333470": 97, "10334590": 97, "10334660": 97, "10336130": 97, "10336394": 97, "10345654": 97, "10345737": 97, "10349369": 97, "10356250": 97, "10360898": 97, "10366620": 97, "10371697": 97, "10373372": 97, "10373862": 97, "10374151": 97, "10374172": 97, "10374802": 97, "10379634": 97, "10380096": 97, "10380986": 97, "10381081": 97, "10382025": 97, "10382740": 97, "10391388": 97, "10398620": 97, "10398759": 97, "10398907": 97, "10400177": 97, "10400396": 97, "10400619": 97, "10400693": 97, "10400840": 97, "10401063": 97, "10402762": 97, "10406128": 97, "10406272": 97, "10407457": 97, "10407585": 97, "10409301": 97, "10414773": 97, "10418233": 97, "10421858": 97, "10422894": 97, "10429034": 97, "10429628": 97, "10432371": 97, "10432629": 97, "10432761": 97, "10432855": 97, "10435876": 97, "10436253": 97, "10436888": 97, "10436894": 97, "10437779": 97, "10438074": 97, "10443563": 97, "10443666": 97, "10446043": 97, "10446656": 97, "10452075": 97, "10452177": 97, "10452895": 97, "10454188": 97, "10455678": 97, "10457827": 97, "10459047": 97, "10464288": 97, "10471056": 97, "10471510": 97, "10471927": 97, "10472195": 97, "10473389": 97, "10473512": 97, "10474435": 97, "10474821": 97, "10478129": 97, "10479304": 97, "10484969": 97, "10486698": 97, "10487341": 97, "10488451": 97, "10489585": 97, "10491195": 97, "10491339": 97, "10493661": 97, "10493885": 97, "10494333": 97, "10494548": 97, "10497961": 97, "10498106": 97, "10501121": 97, "10501264": 97, "10501584": 97, "10505949": 97, "10506416": 97, "10506638": 97, "10506997": 97, "10515586": 97, "10516101": 97, "10516428": 97, "10516873": 97, "10516950": 97, "10516977": 97, "10517150": 97, "10517320": 97, "10518055": 97, "10518378": 97, "10519258": 97, "10519359": 97, "10520761": 97, "10520862": 97, "10522027": 97, "10522090": 97, "10523996": 97, "10524446": 97, "10525509": 97, "10526601": 97, "10530095": 97, "10530338": 97, "10531547": 97, "10532666": 97, "10534484": 97, "10536114": 97, "10538088": 97, "10543023": 97, "10546429": 97, "10547720": 97, "10549876": 97, "10551971": 97, "10553047": 97, "10553115": 97, "10553913": 97, "10554365": 97, "10557838": 97, "10558322": 97, "10560006": 97, "10562969": 97, "10564903": 97, "10565265": 97, "10565443": 97, "10566349": 97, "10567300": 97, "10567893": 97, "10569017": 97, "10569084": 97, "10571920": 97, "10571953": 97, "10577147": 97, "10579412": 97, "10580799": 97, "10581537": 97, "10582615": 97, "10588500": 97, "10590465": 97, "10590702": 97, "10593968": 97, "10594331": 97, "10598489": 97, "10598672": 97, "10606621": 97, "10608465": 97, "10621435": 97, "10623172": 97, "10624361": 97, "10624463": 97, "10628387": 97, "10628742": 97, "10631674": 97, "10631684": 97, "10633150": 97, "10633278": 97, "10634078": 97, "10634567": 97, "10636028": 97, "10636291": 97, "10636441": 97, "10636691": 97, "10638966": 97, "10639075": 97, "10640233": 97, "10640464": 97, "10642281": 97, "10643028": 97, "10643705": 97, "10644244": 97, "10645617": 97, "10646477": 97, "10647841": 97, "10648599": 97, "10654237": 97, "10654298": 97, "10666945": 97, "10667807": 97, "10671357": 97, "10671417": 97, "10672614": 97, "10672736": 97, "10674864": 97, "10675167": 97, "10676811": 97, "10676921": 97, "10682374": 97, "10682471": 97, "10683048": 97, "10683269": 97, "10685587": 97, "10685824": 97, "10687058": 97, "10687362": 97, "10688060": 97, "10688331": 97, "10690770": 97, "10691344": 97, "10696783": 97, "10699567": 97, "10705131": 97, "10708372": 97, "10710378": 97, "10713504": 97, "10718201": 97, "10720812": 97, "10723496": 97, "10724160": 97, "10727386": 97, "10727754": 97, "10728808": 97, "10728897": 97, "10730233": 97, "10730462": 97, "10732424": 97, "10732542": 97, "10733666": 97, "10734021": 97, "10736615": 97, "10736696": 97, "10739914": 97, "10740296": 97, "10740395": 97, "10741367": 97, "10744415": 97, "10750029": 97, "10750293": 97, "10750497": 97, "10776703": 97, "10781277": 97, "10781400": 97, "10782114": 97, "10782890": 97, "10784186": 97, "10784831": 97, "10785127": 97, "10787863": 97, "10789129": 97, "10793152": 97, "10793400": 97, "10798059": 97, "10799622": 97, "10808240": 97, "10808589": 97, "10810489": 97, "10810647": 97, "10812923": 97, "10813811": 97, "10814937": 97, "10817341": 97, "10820843": 97, "10823362": 97, "10828421": 97, "10830320": 97, "10830446": 97, "10831873": 97, "10834814": 97, "10836978": 97, "10839012": 97, "10841097": 97, "10844666": 97, "10844771": 97, "10845972": 97, "10846771": 97, "10850103": 97, "10850404": 97, "10851268": 97, "10855508": 97, "10855799": 97, "10855934": 97, "10857689": 97, "10858077": 97, "10860800": 97, "10861193": 97, "10863559": 97, "10863879": 97, "10866495": 97, "10866960": 97, "10867014": 97, "10867529": 97, "10868455": 97, "10869369": 97, "10869474": 97, "10869955": 97, "10875050": 97, "10876199": 97, "10877741": 97, "10878104": 97, "10878326": 97, "10879137": 97, "10879572": 97, "10879768": 97, "10894237": 97, "10899088": 97, "10902220": 97, "10904369": 97, "10912192": 97, "10912370": 97, "10915684": 97, "10917049": 97, "10919139": 97, "10919376": 97, "10919777": 97, "10921407": 97, "10923927": 97, "10924239": 97, "10925750": 97, "10926880": 97, "10933706": 97, "10933809": 97, "10935559": 97, "10936324": 97, "10936741": 97, "10936814": 97, "10940521": 97, "10940677": 97, "10944203": 97, "10944209": 97, "10945687": 97, "10945820": 97, "10945893": 97, "10952933": 97, "10955204": 97, "10958296": 97, "10959906": 97, "10964471": 97, "10970177": 97, "10970486": 97, "11004283": 97, "11011434": 97, "11014745": 97, "11015482": 97, "11017537": 97, "11018495": 97, "11024593": 97, "11032337": 97, "11038827": 97, "11039055": 97, "11052497": 97, "11059298": 97, "11061435": 97, "11063471": 97, "11065939": 97, "11067529": 97, "11070012": 97, "11075754": 97, "11134667": 97, "11142109": 97, "11144135": 97, "11145335": 97, "11145925": 97, "11146447": 97, "11148318": 97, "11148972": 97, "11150303": 97, "11151223": 97, "11151975": 97, "11152703": 97, "11155369": 97, "11156727": 97, "11158833": 97, "11159524": 97, "11162661": 97, "11163787": 97, "11177728": 97, "11177847": 97, "11182063": 97, "11182794": 97, "11186206": 97, "11198965": 97, "11199146": 97, "11206921": 97, "11211905": 97, "11212306": 97, "11215094": 97, "11216117": 97, "11221995": 97, "11222398": 97, "11224163": 97, "11224835": 97, "11233332": 97, "11234301": 97, "11235176": 97, "11235384": 97, "11235594": 97, "11235850": 97, "11236784": 97, "11237816": 97, "11237980": 97, "11238116": 97, "11238227": 97, "11239683": 97, "11240478": 97, "11241224": 97, "11241970": 97, "11242736": 97, "11243524": 97, "11243835": 97, "11245003": 97, "11245822": 97, "11246765": 97, "11248269": 97, "11250018": 97, "11250138": 97, "11251602": 97, "11252237": 97, "11252981": 97, "11253255": 97, "11255927": 97, "11256525": 97, "11259233": 97, "11260921": 97, "11262120": 97, "11263065": 97, "11263665": 97, "11264684": 97, "11264987": 97, "11265104": 97, "11265407": 97, "11265522": 97, "11265714": 97, "11266069": 97, "11266474": 97, "11268029": 97, "11268409": 97, "11268618": 97, "11268958": 97, "11269924": 97, "11271289": 97, "11271687": 97, "11272385": 97, "11272476": 97, "11273482": 97, "11274891": 97, "11276346": 97, "11276447": 97, "11280018": 97, "11282425": 97, "11286561": 97, "11287434": 97, "11287511": 97, "11287747": 97, "11287818": 97, "11289040": 97, "11291977": 97, "11292661": 97, "11294164": 97, "11294575": 97, "11297206": 97, "11300742": 97, "11301466": 97, "11302285": 97, "11305218": 97, "11306252": 97, "11307450": 97, "11308120": 97, "11311053": 97, "11311523": 97, "11323110": 97, "11323526": 97, "11333154": 97, "11334055": 97, "11338112": 97, "11338634": 97, "11338836": 97, "11339786": 97, "11341521": 97, "11342084": 97, "11347288": 97, "11355235": 97, "11356370": 97, "11358077": 97, "11359305": 97, "11361084": 97, "11362946": 97, "11364325": 97, "11374334": 97, "11374619": 97, "11380127": 97, "11380230": 97, "11396662": 97, "11400142": 97, "11416433": 97, "11417007": 97, "11421269": 97, "11422179": 97, "11423600": 97, "11423992": 97, "11426054": 97, "11428654": 97, "11428747": 97, "11429013": 97, "11432156": 97, "11433120": 97, "11433422": 97, "11433670": 97, "11436018": 97, "11436781": 97, "11437407": 97, "11439288": 97, "11440709": 97, "11443451": 97, "11446644": 97, "11449855": 97, "11451972": 97, "11453899": 97, "11454604": 97, "11454779": 97, "11455539": 97, "11456466": 97, "11459953": 97, "11460965": 97, "11463074": 97, "11465141": 97, "11467612": 97, "11469461": 97, "11471584": 97, "11473217": 97, "11475662": 97, "11477743": 97, "11480071": 97, "11483356": 97, "11484640": 97, "11484777": 97, "11486598": 97, "11486894": 97, "11488471": 97, "11489157": 97, "11490578": 97, "11492334": 97, "11492773": 97, "11493035": 97, "11495080": 97, "11495520": 97, "11496245": 97, "11498449": 97, "11498715": 97, "11498859": 97, "11499655": 97, "11501617": 97, "11507172": 97, "11510022": 97, "11513853": 97, "11515126": 97, "11517108": 97, "11517557": 97, "11526797": 97, "11526917": 97, "11557851": 97, "11557985": 97, "11558683": 97, "11559445": 97, "11560565": 97, "11560619": 97, "11564387": 97, "11565188": 97, "11570871": 97, "11570885": 97, "11571166": 97, "11572092": 97, "11577488": 97, "11578640": 97, "11579612": 97, "11579705": 97, "11579778": 97, "11579855": 97, "11581989": 97, "11582742": 97, "11587337": 97, "11587695": 97, "11587757": 97, "11592245": 97, "11601712": 97, "11601861": 97, "11602018": 97, "11604026": 97, "11611314": 97, "11611671": 97, "11616244": 97, "11616815": 97, "11620263": 97, "11621154": 97, "11621273": 97, "11621575": 97, "11621899": 97, "11623114": 97, "11626562": 97, "11628148": 97, "11628355": 97, "11628597": 97, "11628666": 97, "11629640": 97, "11629932": 97, "11631643": 97, "11632918": 97, "11632982": 97, "11640414": 97, "11640686": 97, "11642206": 97, "11643020": 97, "11645420": 97, "11646524": 97, "11647020": 97, "11647752": 97, "11648428": 97, "11648759": 97, "11649206": 97, "11649502": 97, "11649687": 97, "11649981": 97, "11651825": 97, "11652788": 97, "11654313": 97, "11655003": 97, "11655123": 97, "11666411": 97, "11666470": 97, "11667910": 97, "11667969": 97, "11668081": 97, "11668145": 97, "11668388": 97, "11668438": 97, "11669984": 97, "11670094": 97, "11670497": 97, "11670549": 97, "11675940": 97, "11682441": 97, "11686088": 97, "11686948": 97, "11687810": 97, "11688522": 97, "11688672": 97, "11690836": 97, "11694576": 97, "11697943": 97, "11699168": 97, "11701178": 97, "11701630": 97, "11703698": 97, "11703717": 97, "11706612": 97, "11707807": 97, "11712197": 97, "11714955": 97, "11717616": 97, "11718863": 97, "11722936": 97, "11723399": 97, "11726326": 97, "11731057": 97, "11733478": 97, "11733939": 97, "11735964": 97, "11736580": 97, "11737699": 97, "11738655": 97, "11740762": 97, "11741602": 97, "11743966": 97, "11744168": 97, "11804991": 97, "11809131": 97, "11811266": 97, "11813778": 97, "11814451": 97, "11815907": 97, "11819280": 97, "11819538": 97, "11820051": 97, "11820661": 97, "11822646": 97, "11824975": 97, "11825787": 97, "11827548": 97, "11828459": 97, "11830984": 97, "11833183": 97, "11836459": 97, "11849258": 97, "11851553": 97, "11868105": 97, "11877802": 97, "11887278": 97, "11888500": 97, "11890558": 97, "11891575": 97, "11893727": 97, "11893930": 97, "11896284": 97, "11896673": 97, "11898521": 97, "11898788": 97, "11901476": 97, "11901659": 97, "11903310": 97, "11903733": 97, "11905148": 97, "11905956": 97, "11907484": 97, "11907524": 97, "11909280": 97, "11909365": 97, "11909991": 97, "11910327": 97, "11911021": 97, "11911319": 97, "11912677": 97, "11912792": 97, "11917712": 97, "11917805": 97, "11923915": 97, "11924540": 97, "11929516": 97, "11930764": 97, "11931757": 97, "11933351": 97, "11933416": 97, "11933464": 97, "11933575": 97, "11943665": 97, "11943815": 97, "11947000": 97, "11953154": 97, "11953506": 97, "11963085": 97, "11966270": 97, "11967591": 97, "11968021": 97, "11969847": 97, "11971178": 97, "11971802": 97, "11977176": 97, "11977276": 97, "11977977": 97, "11978084": 97, "11978756": 97, "11978847": 97, "11979400": 97, "11985619": 97, "11996975": 97, "11997030": 97, "11998780": 97, "12004947": 97, "12005176": 97, "12006296": 97, "12006910": 97, "12008040": 97, "12008624": 97, "12009625": 97, "12011194": 97, "12018684": 97, "12020755": 97, "12022676": 97, "12024795": 97, "12028298": 97, "12029045": 97, "12029504": 97, "12029921": 97, "12032203": 97, "12032284": 97, "12033737": 97, "12034071": 97, "12037079": 97, "12041034": 97, "12046618": 97, "12047341": 97, "12059798": 97, "12060270": 97, "12064897": 97, "12065864": 97, "12065937": 97, "12065942": 97, "12069084": 97, "12069805": 97, "12072904": 97, "12073071": 97, "12084225": 97, "12084294": 97, "12087856": 97, "12088118": 97, "12090062": 97, "12091565": 97, "12094726": 97, "12095481": 97, "12097987": 97, "12098663": 97, "12106112": 97, "12107043": 97, "12108503": 97, "12108587": 97, "12112505": 97, "12113016": 97, "12113596": 97, "12114063": 97, "12116290": 97, "12116948": 97, "12117128": 97, "12117996": 97, "12118384": 97, "12119110": 97, "12119586": 97, "12120140": 97, "12121333": 97, "12121710": 97, "12122060": 97, "12122810": 97, "12125586": 97, "12126454": 97, "12128965": 97, "12130069": 97, "12131381": 97, "12132552": 97, "12133639": 97, "12134267": 97, "12136465": 97, "12140559": 97, "12142757": 97, "12142910": 97, "12142982": 97, "12144006": 97, "12146977": 97, "12148079": 97, "12154333": 97, "12155123": 97, "12156391": 97, "12157132": 97, "12158733": 97, "12160099": 97, "12162091": 97, "12162391": 97, "12163703": 97, "12165408": 97, "12177782": 97, "12181053": 97, "12183254": 97, "12183687": 97, "12189008": 97, "12189520": 97, "12190224": 97, "12195267": 97, "12195334": 97, "12198599": 97, "12198685": 97, "12202231": 97, "12203720": 97, "12203838": 97, "12205809": 97, "12207096": 97, "12212689": 97, "12213105": 97, "12215198": 97, "12215537": 97, "12217772": 97, "12218431": 97, "12222298": 97, "12223552": 97, "12223605": 97, "12225425": 97, "12225497": 97, "12229308": 97, "12229380": 97, "12230417": 97, "12232303": 97, "12232711": 97, "12235193": 97, "12236017": 97, "12238252": 97, "12239159": 97, "12241808": 97, "12245455": 97, "12246778": 97, "12247770": 97, "12250210": 97, "12251905": 97, "12253636": 97, "12254484": 97, "12257180": 97, "12258602": 97, "12258803": 97, "12259911": 97, "12262848": 97, "12263701": 97, "12264276": 97, "12264464": 97, "12266420": 97, "12266804": 97, "12268128": 97, "12269254": 97, "12272190": 97, "12272948": 97, "12275342": 97, "12276741": 97, "12276807": 97, "12276892": 97, "12278775": 97, "12279751": 97, "12280434": 97, "12281220": 97, "12282615": 97, "12283267": 97, "12285397": 97, "12285745": 97, "12285932": 97, "12286527": 97, "12289316": 97, "12290448": 97, "12293936": 97, "12294299": 97, "12296348": 97, "12297733": 97, "12300817": 97, "12301423": 97, "12303157": 97, "12303598": 97, "12306820": 97, "12307730": 97, "12310431": 97, "12312324": 97, "12314962": 97, "12315192": 97, "12316688": 97, "12317320": 97, "12318735": 97, "12319349": 97, "12320854": 97, "12321936": 97, "12324062": 97, "12324757": 97, "12324945": 97, "12326342": 97, "12327025": 97, "12327981": 97, "12329494": 97, "12331084": 97, "12333454": 97, "12335034": 97, "12336605": 97, "12337967": 97, "12339239": 97, "12341144": 97, "12342826": 97, "12344166": 97, "12345702": 97, "12345818": 97, "12347265": 97, "12347699": 97, "12349819": 97, "12350934": 97, "12352724": 97, "12353505": 97, "12356337": 97, "12356941": 97, "12359341": 97, "12359941": 97, "12363416": 97, "12364717": 97, "12365950": 97, "12366334": 97, "12368619": 97, "12369188": 97, "12370607": 97, "12371349": 97, "12372647": 97, "12374204": 97, "12376135": 97, "12376903": 97, "12378674": 97, "12379334": 97, "12381032": 97, "12381807": 97, "12383259": 97, "12384276": 97, "12385731": 97, "12387704": 97, "12388791": 97, "12389759": 97, "12390979": 97, "12392008": 97, "12393312": 97, "12394119": 97, "12396278": 97, "12396643": 97, "12398267": 97, "12399289": 97, "12401206": 97, "12403143": 97, "12404489": 97, "12405524": 97, "12406946": 97, "12407563": 97, "12411435": 97, "12413808": 97, "12415745": 97, "12417385": 97, "12418800": 97, "12421238": 97, "12426850": 97, "12427387": 97, "12429094": 97, "12430027": 97, "12431500": 97, "12433247": 97, "12434944": 97, "12435725": 97, "12437095": 97, "12439935": 97, "12441253": 97, "12442298": 97, "12443780": 97, "12444581": 97, "12446512": 97, "12447166": 97, "12448240": 97, "12449976": 97, "12452034": 97, "12453388": 97, "12454764": 97, "12454852": 97, "12455826": 97, "12456925": 97, "12457174": 97, "12458016": 97, "12460903": 97, "12461655": 97, "12461895": 97, "12462175": 97, "12465816": 97, "12470619": 97, "12473424": 97, "12474619": 97, "12475934": 97, "12476652": 97, "12478594": 97, "12483808": 97, "12486235": 97, "12486943": 97, "12494538": 97, "12494825": 97, "12497357": 97, "12497437": 97, "12505010": 97, "12505113": 97, "12507569": 97, "12508298": 97, "12513420": 97, "12513515": 97, "12518694": 97, "12518786": 97, "12532135": 97, "12532741": 97, "12534404": 97, "12535313": 97, "12537671": 97, "12537902": 97, "12538986": 97, "12551536": 97, "12552375": 97, "12557163": 97, "12557543": 97, "12558546": 97, "12558944": 97, "12559364": 97, "12559658": 97, "12560411": 97, "12560672": 97, "12561039": 97, "12561560": 97, "12562755": 97, "12564210": 97, "12564355": 97, "12572801": 97, "12577953": 97, "12579226": 97, "12579896": 97, "12580957": 97, "12581765": 97, "12585139": 97, "12585381": 97, "12586006": 97, "12587241": 97, "12591091": 97, "12591115": 97, "12592351": 97, "12594143": 97, "12594204": 97, "12594568": 97, "12594657": 97, "12595689": 97, "12595773": 97, "12596529": 97, "12598916": 97, "12601777": 97, "12601845": 97, "12601897": 97, "12602957": 97, "12603757": 97, "12606248": 97, "12608618": 97, "12608708": 97, "12615920": 97, "12625238": 97, "12626673": 97, "12629082": 97, "12629308": 97, "12630701": 97, "12631184": 97, "12632555": 97, "12635171": 97, "12636542": 97, "12637025": 97, "12638418": 97, "12638684": 97, "12640622": 97, "12640719": 97, "12641501": 97, "12641602": 97, "12642187": 97, "12642402": 97, "12642900": 97, "12643007": 97, "12644321": 97, "12647379": 97, "12652087": 97, "12652276": 97, "12654655": 97, "12655013": 97, "12656760": 97, "12657761": 97, "12659446": 97, "12659728": 97, "12660647": 97, "12661253": 97, "12661732": 97, "12662811": 97, "12663833": 97, "12665066": 97, "12668893": 97, "12669379": 97, "12674449": 97, "12674491": 97, "12674544": 97, "12677524": 97, "12677597": 97, "12679206": 97, "12681812": 97, "12681844": 97, "12682702": 97, "12683219": 97, "12684386": 97, "12685386": 97, "12685569": 97, "12686115": 97, "12688206": 97, "12688726": 97, "12690572": 97, "12691317": 97, "12691762": 97, "12692168": 97, "12693724": 97, "12694405": 97, "12695934": 97, "12696557": 97, "12698214": 97, "12698903": 97, "12699200": 97, "12699429": 97, "12701031": 97, "12701438": 97, "12702886": 97, "12703434": 97, "12704727": 97, "12705096": 97, "12706983": 97, "12707512": 97, "12708691": 97, "12708832": 97, "12711596": 97, "12712078": 97, "12714730": 97, "12715647": 97, "12716583": 97, "12718295": 97, "12719837": 97, "12720204": 97, "12722889": 97, "12724750": 97, "12726206": 97, "12727763": 97, "12727929": 97, "12728002": 97, "12729898": 97, "12730025": 97, "12732722": 97, "12733286": 97, "12741275": 97, "12741587": 97, "12749562": 97, "12750035": 97, "12752105": 97, "12754090": 97, "12755126": 97, "12758185": 97, "12759577": 97, "12759586": 97, "12764960": 97, "12773658": 97, "12782257": 97, "12783282": 97, "12784281": 97, "12787942": 97, "12806581": 97, "12807530": 97, "12811814": 97, "12815903": 97, "12816558": 97, "12819215": 97, "12825602": 97, "12825663": 97, "12834163": 97, "12835114": 97, "12843331": 97, "12844268": 97, "12858281": 97, "12859492": 97, "12861293": 97, "12861950": 97, "12863544": 97, "12864229": 97, "12865350": 97, "12866097": 97, "12866911": 97, "12866987": 97, "12869576": 97, "12878638": 97, "12902806": 97, "12903158": 97, "12903449": 97, "12904469": 97, "12906040": 97, "12906461": 97, "12907754": 97, "12908303": 97, "12909436": 97, "12915165": 97, "12918131": 97, "12918721": 97, "12919280": 97, "12922003": 97, "12923548": 97, "12927894": 97, "12928456": 97, "12929371": 97, "12931115": 97, "12932036": 97, "12933753": 97, "12934763": 97, "12937362": 97, "12938554": 97, "12942227": 97, "12942279": 97, "12946588": 97, "12946931": 97, "12951099": 97, "12951133": 97, "12955322": 97, "12955324": 97, "12958051": 97, "12958639": 97, "12959932": 97, "12960312": 97, "12961619": 97, "12962037": 97, "12964579": 97, "12964673": 97, "12966795": 97, "12967215": 97, "12968280": 97, "12968945": 97, "12978787": 97, "12978838": 97, "12983974": 97, "12988230": 97, "12995475": 97, "12995802": 97, "13023624": 97, "13033482": 97, "13045541": 97, "13050444": 97, "13062122": 97, "13066623": 97, "13069046": 97, "13069520": 97, "13071190": 97, "13072228": 97, "13073057": 97, "13073836": 97, "13075381": 97, "13076269": 97, "13077020": 97, "13077072": 97, "13077941": 97, "13077993": 97, "13078880": 97, "13078920": 97, "13079690": 97, "13079741": 97, "13080633": 97, "13081411": 97, "13082166": 97, "13082680": 97, "13082966": 97, "13083320": 97, "13103119": 97, "13104250": 97, "13106465": 97, "13107135": 97, "13107453": 97, "13107491": 97, "13116434": 97, "13117628": 97, "13120324": 97, "13121091": 97, "13123513": 97, "13124167": 97, "13126650": 97, "13127151": 97, "13127876": 97, "13128469": 97, "13130387": 97, "13130812": 97, "13132466": 97, "13133647": 97, "13136156": 97, "13136389": 97, "13138544": 97, "13139121": 97, "13141898": 97, "13143194": 97, "13144623": 97, "13144911": 97, "13146453": 97, "13152568": 97, "13153734": 97, "13155223": 97, "13161508": 97, "13162491": 97, "13182726": 97, "13183451": 97, "13183772": 97, "13184851": 97, "13188192": 97, "13189791": 97, "13190583": 97, "13191088": 97, "13194645": 97, "13197127": 97, "13198376": 97, "13199349": 97, "13201037": 97, "13201709": 97, "13204293": 97, "13204496": 97, "13205403": 97, "13205611": 97, "13207835": 97, "13208440": 97, "13210462": 97, "13210584": 97, "13211352": 97, "13211825": 97, "13213806": 97, "13214094": 97, "13216230": 97, "13216589": 97, "13218852": 97, "13219140": 97, "13219464": 97, "13221858": 97, "13221978": 97, "13224429": 97, "13225473": 97, "13227994": 97, "13229701": 97, "13232170": 97, "13234686": 97, "13235347": 97, "13236663": 97, "13237053": 97, "13238304": 97, "13238537": 97, "13240733": 97, "13241654": 97, "13244730": 97, "13246852": 97, "13249778": 97, "13250518": 97, "13252902": 97, "13254140": 97, "13257729": 97, "13258380": 97, "13260217": 97, "13260865": 97, "13262733": 97, "13263802": 97, "13265570": 97, "13269983": 97, "13272781": 97, "13274110": 97, "13276464": 97, "13277615": 97, "13280175": 97, "13280845": 97, "13286504": 97, "13287552": 97, "13289542": 97, "13292505": 97, "13297558": 97, "13297658": 97, "13297746": 97, "13297876": 97, "13297985": 97, "13298203": 97, "13300716": 97, "13302758": 97, "13304311": 97, "13307050": 97, "13308685": 97, "13309987": 97, "13310711": 97, "13310886": 97, "13318716": 97, "13324168": 97, "13324254": 97, "13324994": 97, "13325066": 97, "13325229": 97, "13336146": 97, "13337046": 97, "13337212": 97, "13337429": 97, "13338931": 97, "13339396": 97, "13340224": 97, "13340326": 97, "13343952": 97, "13344067": 97, "13346963": 97, "13347065": 97, "13359643": 97, "13360052": 97, "13366888": 97, "13369998": 97, "13370080": 97, "13370684": 97, "13370819": 97, "13376838": 97, "13377349": 97, "13381391": 97, "13384371": 97, "13384751": 97, "13387084": 97, "13387818": 97, "13391205": 97, "13392117": 97, "13394001": 97, "13397269": 97, "13398631": 97, "13402447": 97, "13404106": 97, "13408673": 97, "13408697": 97, "13409896": 97, "13411554": 97, "13411659": 97, "13413172": 97, "13414272": 97, "13414465": 97, "13418457": 97, "13423377": 97, "13423996": 97, "13425148": 97, "13426450": 97, "13428471": 97, "13428912": 97, "13434611": 97, "13435488": 97, "13437963": 97, "13438057": 97, "13450218": 97, "13451462": 97, "13452845": 97, "13455355": 97, "13470371": 97, "13470591": 97, "13474185": 97, "13477151": 97, "13487368": 97, "13489586": 97, "13491120": 97, "13491380": 97, "13507068": 97, "13508813": 97, "13512024": 97, "13512312": 97, "13514290": 97, "13514549": 97, "13526247": 97, "13527365": 97, "13527963": 97, "13528689": 97, "13531462": 97, "13534736": 97, "13542395": 97, "13543067": 97, "13545188": 97, "13548073": 97, "13559361": 97, "13560090": 97, "13563465": 97, "13564566": 97, "13572047": 97, "13572378": 97, "13575805": 97, "13576147": 97, "13581611": 97, "13581697": 97, "13585295": 97, "13586036": 97, "13588831": 97, "13589177": 97, "13598505": 97, "13598608": 97, "13603393": 97, "13603905": 97, "13626225": 97, "13626517": 97, "13628447": 97, "13629226": 97, "13633492": 97, "13635041": 97, "13635958": 97, "13637211": 97, "13637277": 97, "13637844": 97, "13639311": 97, "13640304": 97, "13648405": 97, "13652523": 97, "13652727": 97, "13652948": 97, "13653704": 97, "13654008": 97, "13658167": 97, "13658170": 97, "13659128": 97, "13659430": 97, "13662332": 97, "13663351": 97, "13674997": 97, "13676254": 97, "13677792": 97, "13680414": 97, "13681366": 97, "13682136": 97, "13684547": 97, "13685298": 97, "13687586": 97, "13692684": 97, "13702954": 97, "13709778": 97, "13714128": 97, "13714297": 97, "13716916": 97, "13720124": 97, "13724453": 97, "13724576": 97, "13732046": 97, "13734957": 97, "13751124": 97, "13751233": 97, "13756354": 97, "13756729": 97, "13771773": 97, "13773066": 97, "13778784": 97, "13778894": 97, "13792249": 97, "13792636": 97, "13797272": 97, "13797344": 97, "13802223": 97, "13802392": 97, "13806801": 97, "13806916": 97, "13814322": 97, "13814755": 97, "13827988": 97, "13828101": 97, "13832147": 97, "13834875": 97, "13834941": 97, "13835339": 97, "13840047": 97, "13840703": 97, "13843996": 97, "13844738": 97, "13846957": 97, "13849500": 97, "13850893": 97, "13852385": 97, "13854047": 97, "13854637": 97, "13859699": 97, "13861467": 97, "13887640": 97, "13890341": 97, "13891406": 97, "13893132": 97, "13894249": 97, "13899084": 97, "13914008": 97, "13915663": 97, "13917809": 97, "13919374": 97, "13922122": 97, "13922584": 97, "13922659": 97, "13923060": 97, "13923763": 97, "13926735": 97, "13927556": 97, "13927945": 97, "13928792": 97, "13938809": 97, "13942016": 97, "13942543": 97, "13951630": 97, "13951749": 97, "13952052": 97, "13952160": 97, "13953203": 97, "13957198": 97, "13960612": 97, "13961010": 97, "13969571": 97, "13969843": 97, "13970877": 97, "13971282": 97, "13971419": 97, "13972616": 97, "13973412": 97, "13978429": 97, "13980130": 97, "13980857": 97, "13980954": 97, "13983225": 97, "13989668": 97, "13992993": 97, "13996221": 97, "13997362": 97, "14002972": 97, "14004427": 97, "14008484": 97, "14009870": 97, "14011531": 97, "14012368": 97, "14013629": 97, "14015753": 97, "14018267": 97, "14018798": 97, "14019759": 97, "14020360": 97, "14021312": 97, "14027235": 97, "14027588": 97, "14027779": 97, "14029212": 97, "14029278": 97, "14029364": 97, "14031146": 97, "14031667": 97, "14034953": 97, "14036057": 97, "14037150": 97, "14037777": 97, "14041626": 97, "14043478": 97, "14043530": 97, "14045694": 97, "14046131": 97, "14048022": 97, "14048093": 97, "14051010": 97, "14052135": 97, "14054154": 97, "14054592": 97, "14056894": 97, "14058838": 97, "14058910": 97, "14059311": 97, "14062314": 97, "14062748": 97, "14068803": 97, "14070555": 97, "14070619": 97, "14075066": 97, "14075163": 97, "14075836": 97, "14082582": 97, "14083044": 97, "14084207": 97, "14084511": 97, "14085525": 97, "14085687": 97, "14086685": 97, "14088086": 97, "14089858": 97, "14090729": 97, "14096348": 97, "14097491": 97, "14101090": 97, "14101321": 97, "14104470": 97, "14104514": 97, "14113108": 97, "14113635": 97, "14114085": 97, "14114193": 97, "14118650": 97, "14118750": 97, "14127202": 97, "14128590": 97, "14142207": 97, "14150627": 97, "14151067": 97, "14151840": 97, "14152282": 97, "14153227": 97, "14154195": 97, "14154768": 97, "14155296": 97, "14155428": 97, "14156336": 97, "14157610": 97, "14158078": 97, "14158507": 97, "14161664": 97, "14162845": 97, "14162939": 97, "14163529": 97, "14168307": 97, "14171053": 97, "14179360": 97, "14182594": 97, "14196295": 97, "14198610": 97, "14199136": 97, "14200019": 97, "14204687": 97, "14205716": 97, "14208726": 97, "14209147": 97, "14212501": 97, "14213448": 97, "14213515": 97, "14213680": 97, "14215850": 97, "14216700": 97, "14220624": 97, "14220692": 97, "14231360": 97, "14233034": 97, "14235948": 97, "14236394": 97, "14241181": 97, "14241897": 97, "14244452": 97, "14245499": 97, "14245555": 97, "14246227": 97, "14247314": 97, "14251082": 97, "14252416": 97, "14252956": 97, "14254513": 97, "14255683": 97, "14257016": 97, "14263296": 97, "14271321": 97, "14271892": 97, "14277653": 97, "14278780": 97, "14278828": 97, "14282074": 97, "14282140": 97, "14283469": 97, "14285325": 97, "14285933": 97, "14287089": 97, "14287825": 97, "14295954": 97, "14297286": 97, "14298325": 97, "14298754": 97, "14299780": 97, "14305069": 97, "14307220": 97, "14311756": 97, "14312842": 97, "14316649": 97, "14318522": 97, "14319113": 97, "14319913": 97, "14320341": 97, "14320592": 97, "14322236": 97, "14328965": 97, "14331084": 97, "14339839": 97, "14340790": 97, "14343815": 97, "14347548": 97, "14358326": 97, "14358561": 97, "14367594": 97, "14367615": 97, "14369773": 97, "14371137": 97, "14376086": 97, "14376094": 97, "14376115": 97, "14378385": 97, "14379425": 97, "14381359": 97, "14384737": 97, "14390332": 97, "14400226": 97, "14400682": 97, "14405649": 97, "14406027": 97, "14417934": 97, "14418196": 97, "14431913": 97, "14432790": 97, "14433750": 97, "14434641": 97, "14435706": 97, "14436809": 97, "14451889": 97, "14461037": 97, "14465145": 97, "14465379": 97, "14468214": 97, "14468331": 97, "14469103": 97, "14469499": 97, "14486767": 97, "14486876": 97, "14496560": 97, "14496815": 97, "14498295": 97, "14499734": 97, "14510552": 97, "14511430": 97, "14518719": 97, "14529528": 97, "14546870": 97, "14552029": 97, "14565853": 97, "14566306": 97, "14566783": 97, "14567168": 97, "14616523": 97, "14620182": 97, "14620637": 97, "14621168": 97, "14631094": 97, "14634452": 97, "14642568": 97, "14642713": 97, "14646601": 97, "14647781": 97, "14651288": 97, "14652115": 97, "14657275": 97, "14657354": 97, "14661495": 97, "14662523": 97, "14663141": 97, "14664448": 97, "14674841": 97, "14675599": 97, "14682566": 97, "14688626": 97, "14692144": 97, "14694153": 97, "14700392": 97, "14701121": 97, "14706522": 97, "14707058": 97, "14707875": 97, "14708194": 97, "14719027": 97, "14719166": 97, "14720477": 97, "14720587": 97, "14726131": 97, "14726280": 97, "14730738": 97, "14732930": 97, "14733669": 97, "14735222": 97, "14737195": 97, "14737701": 97, "14738796": 97, "14738881": 97, "14742671": 97, "14742764": 97, "14747789": 97, "14748617": 97, "14753777": 97, "14755153": 97, "14756412": 97, "14756903": 97, "14759473": 97, "14759929": 97, "14760626": 97, "14760637": 97, "14768989": 97, "14770688": 97, "14775007": 97, "14775183": 97, "14776663": 97, "14777136": 97, "14787804": 97, "14788124": 97, "14789517": 97, "14790243": 97, "14790934": 97, "14791039": 97, "14797167": 97, "14797659": 97, "14798705": 97, "14806328": 97, "14806473": 97, "14807461": 97, "14820235": 97, "14820404": 97, "14821651": 97, "14822049": 97, "14823996": 97, "14824492": 97, "14825952": 97, "14826557": 97, "14827779": 97, "14828199": 97, "14829594": 97, "14829731": 97, "14834841": 97, "14838916": 97, "14839138": 97, "14839855": 97, "14843128": 97, "14846475": 97, "14855827": 97, "14855900": 97, "14863482": 97, "14867923": 97, "14871365": 97, "14872111": 97, "14875436": 97, "14875822": 97, "14900322": 97, "14906269": 97, "14906399": 97, "14906791": 97, "14913083": 97, "14913765": 97, "14952226": 97, "14953489": 97, "14955492": 97, "14955635": 97, "14957097": 97, "14961496": 97, "14965361": 97, "14967300": 97, "14968540": 97, "14975418": 97, "14980596": 97, "14984177": 97, "14990016": 97, "14993823": 97, "14993959": 97, "14994580": 97, "15001691": 97, "15001852": 97, "15013904": 97, "15014836": 97, "15016595": 97, "15017282": 97, "15022990": 97, "15023167": 97, "15030708": 97, "15031140": 97, "15033039": 97, "15034514": 97, "15035467": 97, "15036008": 97, "15041274": 97, "15041432": 97, "15050700": 97, "15050796": 97, "15052420": 97, "15053009": 97, "15058994": 97, "15060298": 97, "15061159": 97, "15062082": 97, "15063836": 97, "15064300": 97, "15064453": 97, "15064837": 97, "15068355": 97, "15069279": 97, "15071033": 97, "15072265": 97, "15072426": 97, "igcctaagcctaagcctaagcctaagcctaagcctaagcctaagcctaagcctaagcctaa": [97, 117], "no_cd": 97, "2575800": 97, "2575900": 97, "tttttta": 97, "ittttttaaactcctgtagcaattttatttaaattacttac": 97, "cccaaaaagggaa": 97, "ttttg": 97, "gone": 97, "aaaaag": 97, "aaaaagggaa": 97, "ttccctttttg": 97, "caaaa": 97, "xttccctttttggg": 97, "yaa": 97, "persist": 97, "ttcccttttt": 97, "xttcccttttt": 97, "16793": 97, "16833": 97, "15102": 97, "aaaaaaaaa": 97, "despit": 97, "cccccccccccccccccccc": 97, "match_exon": 97, "li": 97, "lost": 97, "unifi": 97, "cccccaaaaaaaaaattttttttttaaagg": 97, "plus_rpt": 97, "blah": 97, "aaaaaaa": 97, "noneaaaaaaaaaaaaa": 97, "minu": [97, 115, 135], "cctttaa": 97, "nonecctttaaaaaaaaaattttttttttggggg": 97, "minus_rpt": 97, "gctcatgccagctctttacagcatgagaaca": 98, "s2": [98, 115], "actcatgccaactcattacagcatgagaacagcagt": 98, "s3": 98, "actcatgccagctcattacagcatgagaacagcagt": 98, "s4": 98, "s5": 98, "actcatgccagctcagtacagcatgagaacagcagt": 98, "nt_seq": 98, "gctcatgccag": 98, "actcatgccaa": 98, "actcatgccag": 98, "s2actcatgccaactcattacagcatgagaacagcagt": 98, "s1g": 98, "ahasslqhen": 98, "thanslqhen": 98, "thasslqhen": 98, "s2thanslqhenss": 98, "s1a": 98, "standard_cod": [98, 104], "tttgcaaac": [98, 104], "fan": [98, 104], "atgctaacataaa": 98, "mlt": 98, "hk": 98, "fmla": 98, "lc": 98, "yv": 98, "stops_frame1": 98, "stop_index": 98, "nonetaa": 98, "flat_list": 98, "atgcactggtaa": 98, "mhw": 98, "my_genemhw": 98, "atgtgatggtaa": 98, "nucleicacidsequ": 98, "orig_codon": 98, "motif_set": 98, "unresolv": 98, "tran": 98, "proteinwithstopsequ": 98, "s1m": 98, "snippet": 99, "solv": [99, 135, 145, 146], "menu": 99, "taagtta": 100, "076": 100, "sequencetaagttattatttagttaatacttttaacaatattattaaggtatttaaaaaatactatt": 100, "bat": [100, 103, 110, 116], "flyingfoxtgtggcacaaatgctcatgccagctctttacagcatgagaac": 100, "agtttattatacact": 100, "githubusercont": [100, 101, 106], "com": [100, 101, 106, 147], "overridden": 100, "protein_seq": 100, "dekql": 100, "rg": 100, "ddk": 100, "srg": 100, "proteins_load": 100, "seq1dekql": 100, "make_": 100, "aatcg": 100, "aatcgga": 100, "seqs_load": 100, "seq2aatcgga": 100, "molecul": 100, "accomplish": 100, "whitespac": 100, "dna_seq": 100, "sample1": 100, "musculu": 100, "aacctgc": 100, "sample2": 100, "gallu": 100, "tgcaac": 100, "sample2aac": 100, "aatca": 100, "0x7f70f04bfdd0": 100, "minimalfastapars": 100, "pars": [100, 101, 106, 116, 130, 133], "tgtggcacaaatactcatgccagctcattacagcatgagaacagcagtttattactcactaaagacagaatgaatgtagaaaaggctgaattctgtaataaaagcaaacagcctggcttagcaaggagccaacataacagatgggctggaagtaaggaaacatgtaatgataggcggactcccagcgaaaaaaaggtagatctgaatgctgatcccctgtgtgagagaaaagaatggaataagcagaaactgccatgctcagagaatcctagagatactgaagatgttccttggataacactaaatagcagcattcagaaagttaatgagtggttttccagaagtgatgaactgttaggttctgatgactcacatgatggggagtctgaatcaaatgccttggacgttctaaatgaggtagatgaatattctggttcttcagagaaaatagacttactggccagtgatcctcatgaggctttaatatgtgaaagagttcactccaaatcagtagagagtaatattgaagacaaaatatttgggaaaacctatcggaagaaggcaagcctccccaacttaagccatgtaactgaaattataggagcatttgttactgagccacagataatacaagagcgtcccctcacaaataaattaaagcgtaaaaggacatcaggccttcatcctgaggattttatcaagaaagcagatttggcagttcaaaagactcctgaaatgataaatcagggaactaaccaaacggagcagaatggtcaagtgatgaatattactaatagtggtcatgagaataaaacaaaaggtgattctattcagaatgagaaaaatcctaacccaatagaatcactcgaaaaagaatctttcaaaacgaaagctgaacctataagcagcagtataagcaatatggaactcgaattaaatatccacaattcaaaagcacctaaaaagaatctgaggaggaagtctaccaggcatattcatgcgcttgaactagtcagtagaaatctaagcccacctaattgtactgaattgcaaattgatagttgttctagcagtgaagagataaagaaaaaaaagtacaaccaaatgccagtcaggcacagcagaaacctacaactcatggaaggtaaagaacctgcaactggagccaagaagaacaagccaaatgaacagacaagtaaaagacatgacagcgatactttcccagagctgaagaatgcacctggttcttttactaagtgttcaaataccagtgaacttaaagaatttaatcctagccttccaagagaagaaaaagagaaactagaaacagttaaagtgtctaataatgctgaagaccccaaagatctcatgttaagtggagaaagggttttgcaaactgaaagatctgtagagagtagcagtatttcattggtacctggtactgattatggcactcaggaaagtatctcgttactggaagttagcactctagggaaggcaaaaacagaaccaaataaatgtgtgagtcagtgtgcagcatttgaaaaccccaagggactaattcatggttccaaagataatagaaatgacacagaaggctttaagtatccattgggacatgaagttaaccactcaaatccagaagaggaatgtgcacactctgggtccttaaagaaacaaagtccaaaagtcacttttgaatgtgaacaaaaggaaaatcaaggaaagaatgagtctaataagcctgtacagacagttaatatcactgcaggctttcctgtggttggtcagaaagataagccagttgataatgccaaatgtaaaggaggctctaggttttgtctatcatctcagttcagaggcaacgaaactggactcattactccaaataaacatggacttttacaaaacccatatcgtataccaccactttttcccatcaagtcatttgttaaaactaaatgtaagaaaaatctgctagaggaaaactttgaggaacattcaatgtcacctgaaagagaaatgggaaatgagaacattccaagtacagtgagcacaattagccgtaataacagagaaaatgtttttaaagaagccagctcaagcaatattaatgaagtaggttccagtgatgaaaacattcaagcagaactaggtagaaacagagggccaaaattgaatgctatgcttagattaggggttttgcaacctgaggtctataaacaaagtcttcctggaagtaataagcatcctgaaataaaaaagcaagaagttcagactgttaatacagatttctctccactgatttcagataacttagaacagcctatgagtagtcatgcatctcaggtttgttctgagacacctgatgacctgttagatgatggtgaaataaaggaagatactagttttgctgaaaatgacattaaggaaagttctgctgtttttagcaaaagcgtccagaaaggagagcttagcaggagtcctagccctttcacccatacacatttggctcagggttaccgaagaggg": 100, "tgtggcacaaatactcatgccagctcattacagcatgagaacagcagtttgttactcactaaagacacactgaatgtagaaaaggctgaattctgtaataaaagcaaacagcctggcttagcaaggagccaacataacagatgggctgaaagtgaggaaacatgtaatgataggcagactcccagcgagaaaaaggtagatgtggatgctgatcccctgcatgggagaaaagaatggaataagcagaaacctccgtgctctgagaatcctagagatactgaagatgttgcttggataatgctaaatagcagcattcagaaagttaatgagtggttttccagaagtgatgaactgttaacttctgatgactcacatgatggggggtctgaatcaaatgccttggaagttctaaatgaggtagatggatattctagttcttcagagaaaatagacttactggccagtgatcctcatgatcatttgatatgtgaaagagttcactgcaaatcagtagagagtagtattgaagataaaatatttgggaaaacctatcggaggaaggcaagcctccctaacttgagccacgtaactgaaattataggagcatttgttactgagccacagataatacaagagcatcctctcacaaataaattaaagcgtaaaaggacatcaggacttcatcctgaggattttatcaagaaagcagatttggcagttcaaaagactcctgaaaagataaatcagggaactaaccaaacagagcggaatgatcaagtgatgaatattactaacagtggtcatgagaataaaacaaaaggtgattctattcagaatgagaacaatcctaacccagtagaatcactggaaaaagaatcattcaaaagtaaagctgaacctataagcagtagtataagcaatatggaattagaattgaatgtccacaattccaaagcatctaaaaagaatctgagaaggaagtctaccaggcatattcatgagcttgaactagtcagtagaaatctaagcccacctaattatactgaagtacaaattgatagttgttctagcagtgaagagataaagaaaaaaaattacaaccaaatgccagtcaggcacagcagaaagctacaactcatggaagataaagaacgtgcagctagagccaaaaagagcaagccaaatgaacaaacaagtaaaagacatgccagtgatactttcccagaactgaggaacatacctggttcttttactaactgttcaaatactaatgaatttaaagaatttaatcctagccttccaagagaacaaacagagaaactagaaacagttaaactgtctaataatgccaaagaccccaaagatctcatgttaagtggagaaagtgttttgcaaattgaaagatctgtagagagtagcagtattttgttgatacctggtactgattatggcactcaggaaagtatctcattactggaagttagcactctggggaaggcaaaaacagaaccaaataaatgtgtgagtcagtgtgcagcatttgaaaaccccaaggaactaattcatggttctaaagatactagaaatggcacagaaggcttgaagtatccattgggacctgaagttaactactcaaatccagaaaaggaatgtgcatgctctaggtccttaaagaaacaaagtccaaaggtcactcctgaatgtgaacaaaaggaaaatcaaggagagaaagagtctaatgagcttgtagagacagttaataccactgcaggctttcctatggtttgtcagaaagataagccagttgattatgccagatgtgaaggaggctctaggctttgtctatcatctcagttcagaggcaacgaaactggactcattattccaaataaacatggacttttacagaacccatatcatatgtcaccgcttattcccaccaggtcatttgttaaaactaaatgtaagaaaaacctgctagaagaaaactctgaggaacattcaatgtcacctgaaagagcaatgggaaacaagaacattccaagtacagtgagcacaattagccataataacagagaaaatgcttttaaagaaaccagctcaagcagtatttatgaagtaggttccagtgatgaaaacattcaagcagagctaggtagaaacagaaggccaaaattgaatgctatgcttagattagggcttctgcaacctgagatttgtaagcaaagtcttcctataagtgataaacatcctgaaattaaaaagcaagaagttcagactgttaatacagacgtctctctactgatttcatataacctagaacagcatatgagcagtcatacatctcaggtttgttctgagacacctgacaacctgttagatgatggtgaaataaaggaagatactagttttgctgaatatggcattaaggagacttctactgtttttagcaaaagtgtccagagaggagagctcagcaggagccctagccctttcacccatacacatttggctcaggtttaccaaagaggg": 100, "tgtggcacagatgctcatgccagctcattacagcctgagaccagcagtttattgctcattgaagacagaatgaatgcagaaaaggctgaattctgtaataaaagcaaacagcctggcatagcagtgagccagcagagcagatgggctgcaagtaaaggaacatgtaacgacaggcaggttcccagcggggaaaaggtaggtccaaacgctgactcccttagtgatagagagaagtggactcacccgcaaagtctgtgccctgagaattctggagctaccaccgatgttccttggataacactaaatagcagcgttcagaaagttaatgagtggttttccagaactggtgaaatgttaacttctgacagcgcatctgccaggaggcacgagtcaaatgctttggaagtttcaaacgaagtggatgggggttttagttcttcaaggaaaacagacttagtaacccccgacccccatcatactttaatgtgtggaagagacttctccaaaccagtagaggataatatcagtgataaaatatttgggaaatcctatcagagaaagggaagccgccctcacctgaaccatgtgactgaaattataggcacatttattacagaaccacagataacacaagagcagcccttcacaaataaattaaaacgtaagagaagtacatcccttcaacctgaggacttcatcaagaaagcagattcagcaggtcaaaggactcctgacaacataaatcagggaactgacctaatggagccaaatgagcaagcagtgagtactaccagtaactgtcaggagaacaaaatagcaggtagtaatctccagaaagagaaaagcgctcatccaactgaatcattgagaaaggaaccttccacagcaggagccaaatctataagcaacagtgtaagtgatttggaggtagaattaaacgtccacagttcaaaagcacctaagaaaaatctgaggaggaagtctatcaggtgtgctcttccacttgaaccaatcagtagaaatccaagcccacctacttgtgctgagcttcaaatcgatagttgtggtagcagtgaagaaacaaagaaaaaccattccaaccaacagccagccgggcaccttagagagcctcaactcatcgaagacactgaacctgcagcggatgccaagaagaacgagccaaatgaacacataaggaagagacgtgccagcgatgctttcccagaagagaaaaacaaagctggtttattaactagctgttcaagtcctagaaaatctcaagggcctaatcccagccctcagagaacaggaacagagcaacttgaaacacgccaaatgtctgacagtgccaaagaactcggggatcgggtcctaggaggagagcccagtggcaaaactgaccgatctgaggagagcaccagcgtatccttggtacctgacactgactacgacactcagaacagtgtctcagtcctggacgctcacactgtcagatatgcaagaacaggatccgctcagtgtatgactcagtttgtagcaagcgaaaaccccaaggaactcgtccatggctctaacaatgctgggagtggcacagagggtctcaagccccccttgagacacgcgcttaacctctcaaaacctcaaaaggactgtgctcactctgtgccctcaaaggaactgagtccaaaggtgacagctaaaggtaaacaaaaagaacgtcagggacaggaagaatttgaaagtcacgtacaagcagttgcggccacagtgggcttacctgtgccctgtcaagaaggtaagctagctgctgatacaatgtgtgatagaggttgtaggctttgtccatcatctcattacagaagcggggagaatggactcagcgccacaggtaaatcaggaatttcacaaaactcacattttaaacaatcagtttctcccatcaggtcatctataaaaactgacaataggaaacctctgacagagggacgatttgagagacatacatcatcaactgagatggcggtgggaaatgagaaccttcagagtacagtgcacacagttagcctgaataacagaggaaatgcttgtcaagaagccggctcgggcagtattcatgaagtatgttccactggtgactccttcccaggacaactaggtagaaacagagggcctaaggtgaacactgtgcctccattagatagtatgcagcctggtgtctgtcagcaaagtgttcctgtaagtgataagtatcttgaaataaaaaagcaggagggtgaggctgtctgtgcagacttctctccactattctcagaccatcttgagcaatctatgagtggtaaggtttttcaggtttgctctgagacacctgatgacctgctggatgatgttgaaatacagggacatactagctttggtgaaggtgacataatggagagatctgctgtctttaacggaagcatcctgagaagggagtccagtaggagccctagtcctgtaacccatgcatcgaagtctcagagtctccacagagcg": 100, "tgtggcacaaatactcatgccaacttattacagcatgagaacagcagtttattactcactaaagacagaatgaatgtagaaaaggctgaattctgtaataaaagcaaacagcctggcttagcaaggcgccaacagagcagatgggctgaaagtaaggaaacatgtaatgataggcagactcccagcgagaaaaaggtagatgtggatgctgatcccctgtatgggcgaaaagaactgaataagcagaaacctccatgctctgagagtcatagagatacccaagatattccttggataatgctgaatagtagcattcagaaagttaacgagtggttttccagaggtgatgacatattaacttctgatgactcacacgatagggggtctgaattaaatgcattgaaagtttcaaaagaagtagatgaatattctagtttttcagagaagatagacttaatggccattaatcctcatgatactttacaatttgaaagagtccaattgaaaccagcagagagtaacatcaaagataaaatatttgggaaaacctatcataggaaggcaagcctccctaacttgagccacataacccgatttataggagctattgctgcagagcccaagataacacaagagcattccctccaaaataaaataaagcgtaaaagggcatcaggccttcgtcctgaggatttatccaagaaagtagatttgacagttcaaaaaacccctgaaaagataaatcagggaactgaccaaatggagcagaatgatccagtgatgaatattgctaatagtggtcatgagaatgaaacaaaaggtgattgtgttcagaaagagaaaaatgctaatccgacagaatcattgggaaaagaatctttcagaactaaaggcgaacctataagcagcagtataagcaatatggaactagaattaaatattttaaattcaaaagcatctaagaagaatccgaagaggatgtccaccaggcatattcatgcacttgaactaggcagtagaaatccaagcccacctaatcatactgaactacaaattgatagttgttctagcattgaagagatagagaaaataaattctaaccaaaagccaatcagacacaacagaatgcttcaactcacgaaagaaaaagaaaccacaactggagccaaaaagaataagccaaatgaacaaataagtgaaagacatgccagtgatgctttcctagaacttaaaaatgtaactgattttcttcctaaatgttcaagttctgataaacttcaaaaatttaattctagcctgcaaggagaagtagcagagaacctagaaacaattcaagtgtctgatagtaccagggaccctgaagatctggtggtaagtggagaaaagtgtttgcaaactgaaagatctgcagagagtaccggtatttcagtggtacctgatactgattatggcactcaagacagtatctcattactggaagctgacaccctggggaaggcaaaaacagcactaaatcaacatgtgagtcagtatgtagcaattagaaatgccactgaactttcccatggttctaaagacactagaaatgacactgaagattttaaggattcattgagacatgaagttaaccactcgaatccagaaaatgaatgtgcacactccaggttcttagggaaacaaagtccaaaagtcacctttgaatgtagacataaagaaaatcaggggaagaaagagtctaaaaaacatgtgcaggtaattcacacaactgcaggctttcctatagtttgtcagaaagataagccaggtgattatgccaaaggtcaaggagtctctaggctttgtcagtcctctcaggccagaggcaatgaatctgaactcattaattcaaatgaacatgaaatttcacaaaacccagatcaaatgccatcactttctcacatgaagtcatctgttaaaactaaatgtaaggaaaacctgtcagaggaaaagtttgaggaacttacagtgtcacttgaaagaacaatggtaaatgagaacattcaaagtacagtaagcacaattagccacagtaacagagaaaacacttttaaagaagccagctcaagcagtattaatgaagtagggtccagtgatgagaacattcaagcagaagtaggtagaaacagagcacctaaattaaatgctatgctcagattaggtcttatgcaacctgaagtctataagcaaagtcttcctataaccaataaatatcctgaaataaaaagtcaaggaattcgggctgttgatatagacttctctccactaatttcagataacctacaactacctatgaatagttgtgcttcccagatttgttctgagacacctgatgacttgttagatgatgatgaaataaaggaaaataactgctttgctgaaagtgacattaaggaaagatctgctatttttagcaaaactgtccagaaaagagagttcagaaggagccctagccctttagtccatacaagttttgctcagggtcaccaaagaaag": 100, "tgtggcacaaatactcatgccaactcattacagcatgagaacagcagtttattatacactaaagacagaatgaatgtagaaaagactgacttctgtaataaaagcaaacagcctggcttagcaaggagccagcagaacagatgggttgaaactaaggaaacatgtaatgataggcagacttccagcgagaaaaaggtagttctgaatgctgatcccctgaatggaagaataaaactgaataagcagaaacctccatgctctgacagtcctagagattccaaagatattccttggataacacggaatagtagcatacagaaagttaatgagtggttttccagacgtgatgaaacattaacttctgatgtcttacttgatgagaggtctgaatcaaatgtggtagaagttccaaatgaagtagatggatactctggtgcttcagaggaaatagccttaaaggccagtgatcctcatggtgctttaatatgtgaaagagttcactccaaattgatagaaagtaatattgaagataaaatatttgggaaaacatatcggaggaaagcaagcctccctaacttaagccacataactgaaattacaagagcatctgctacagaacctcagataacacaagagtgccccctcacaaataaactaaaacgtaaaagaacatcaggccttcatcctgaggattttatcaagaaaatagatttgacaactcaaaaaacttctgaaaatataattgagggaactgaccaaatagagcagaatggtcatgtgatgaatagttctaatgatggtcatgagaatgaaacaaaaggtgattatgttcagaagaagaaaaatacaaacccaacagaatcattggaaaaagaatctttcagaactaaagttgagtctgtacccaacaacataagcaatgtggaactagaattaaatattcacggttcaaaagcactcaagaagaatctgaggaggaagtccaccaggcatattcatgcacttgaactagtcaatagaaattcaagcccacctaatcatactgaactacaaattgatagttgttccagcagtgaagaactgaaggaaaaaaattctgaccgaatgccagacagacacagcaaaaaacttcagttcgtagaagataaagaatctgcaactggagccaagaagaacatgccaaatgaggcaataaataaaagactttccagtgaagcttttcccgaattaaataacgtacctggtttttttactaatggttcaagttctaataaacgtcaagagtttaatcctagccttcaaggagaagaaatagagaatctacgaacaattcaagtgtctaatagcaccaaagaccccaaaattctaatctttggtgaaggaagaggttcacaaactgatcgatctacagagagtaccagtattttattgggacctgaaacggattatggcactcaagatagtatctcattactggaatctgacatcccagggagggcaaagacagcaccaaaccaacatgcagatctgtgtgcagcaattgaaaaccccagagaacttattcatgattttaaagaaactagaaatgacacagagagctttaaagatccattgagacatgaagttaactcctcagacccagaaaaggaatgtgcacactccaggtccttgataaaacaaagtccaaaagtcactcttgaatgtgaccgaaaaggaaatcagggaaagaaagagtctaacgagcatgtgcaggcagtttatacaactataggctttcctggggtttctgagaaagacaaaccaggagattatgccagatataaagaagtctctaggctttgtcagtcatttcagtctagaagaaatgaaactgagctcactattgcaaataaacttggactttcacaaaacccatatcatatgccatccatttctcccatcaagtcatctgttaaaactatatgtaagaaaaatctgtcagaggaaaagtttgaagaacattcaatattccctgaaagagcaataggaaatgagaccattcaaagtacagtgggcacaattagccaaaataacagagaaagcacttttaaagaaggcagctcaagcggtatttatgaagcaggttccagtggtgaaaacattcaagcagaactaagtagaaacagaggaccaaaattaaatgctgtgcttcagttgggtctcatgcagcctgaagtctatgagcaaagccttcctctaagtaataaacattctgaaataaaaaggcaaggagttcaggctgttaatgcagatgtctctccacaaatttcagataacttagagcaacctatgaacagtaatatttctcaggtttgttctgagacaccggatgacctgttaaatgatgacaaaataaaggacaatatcagctttgatgaaagtggcattcaggaaagatctgctgtttttagcaaaaatgtccagaaaggagaattcagaaggagccctagtcccttagcccatgcaagtttgtctcaaggtcgcccaagaagg": 100, "flexibli": 100, "address": [100, 145], "labelpars": 100, "latin_to_common": 100, "latin": 100, "homo": 100, "sapien": 100, "pan": 100, "troglodty": 100, "label_pars": 100, "split_with": 100, "abcd": [100, 101, 106, 108], "richlabel": 100, "fasta_data": 100, "gi": 100, "10047090": 100, "np_055147": 100, "muscl": 100, "mnmskqpvsnvraiqaninipmgafrpgagqpprrkectpeveegvpptsdeekkpipgakklpgpavnl": 100, "seiqnikselkyvpkaeq": 100, "10047092": 100, "np_037391": 100, "neuron": 100, "manrgpsyglsrevqekieqkydadlenklvdwiilqcaediehpppgrahfqkwlmdgtvlcklinsli": 100, "ppgqepipkiseskmafkqmeqisqflkaaetygvrttdifqtvdlwegkdmaavqrtlmalgsvavtkd": 100, "locu": [101, 106, 144], "np_003077": [101, 106], "con": [101, 106], "5386": [101, 106], "np_004893": [101, 106], "121351": [101, 106], "4264": [101, 106], "np_005079": [101, 106], "9516594": [101, 106], "9789": [101, 106], "np_005500": [101, 106], "noncon": [101, 106], "np_055852": [101, 106], "10933217": [101, 106], "7090": [101, 106], "locusregionratio": [101, 106], "np_003077con2": [101, 106], "np_004893con121351": [101, 106], "np_005079con9516594": [101, 106], "np_005500noncon0": [101, 106], "np_055852noncon10933217": [101, 106], "pkl": [101, 106], "cerebellumdukednaseseq": [101, 106, 110], "pk": [101, 106, 110], "chr1": [101, 106], "29214": [101, 106], "29566": [101, 106], "89933": [101, 106], "90118": [101, 106], "0313": [101, 106], "545979": [101, 106], "546193": [101, 106], "0428": [101, 106], "713797": [101, 106], "714639": [101, 106], "3215": [101, 106], "9516595": [101, 106], "np_005079con9516595": [101, 106], "locusratio": [101, 106], "np_0030772": [101, 106], "np_004893121351": [101, 106], "np_0050799516594": [101, 106], "np_0055000": [101, 106], "np_05585210933217": [101, 106], "5386013224378985": [101, 106], "abc": [101, 106, 108], "91011": [101, 106], "cab": [101, 106], "ab": [101, 103, 106, 108, 137], "0a": [101, 106], "3c": [101, 106], "d2d": [101, 106], "parentxlength": [101, 106], "root1": [101, 106], "00004": [101, 106], "abcddata": [101, 106], "x5": [101, 106], "ynone": [101, 106], "overload": 102, "bulk": 102, "annotationdb": 102, "verifi": 102, "recod": [103, 128, 129], "maintain": [103, 108], "protein_with_stop": 103, "abbreviationnumb": 103, "statesmoltyp": 103, "2moltyp": 103, "4moltyp": 103, "21moltyp": 103, "22moltyp": 103, "52moltyp": 103, "256moltyp": 103, "statement": [103, 128, 149], "aggctt": 103, "seq1aggctt": 103, "customis": 103, "mt": 103, "dnagap": 103, "iupac_dna_char": 103, "iupac_dna_ambigu": 103, "iupac_dna_ambiguities_compl": 103, "dnastandardpair": 103, "noneacg": 103, "builtin": [103, 108, 135], "thisisaprqtein": 104, "myprotein": 104, "thisisa": 104, "myproteinthisisaprqtein": 104, "nonefan": 104, "abglobin_aa": [104, 110, 130], "tr": 105, "temp": 105, "names_nod": 105, "hu": 105, "0311054096183": 105, "0415847131449": 105, "277353608988": 105, "0939768158209": 105, "113211053859": 105, "human_dist": 105, "0726901227632": 105, "3467553610937": 105, "18310641816450002": 105, "2023406562026": 105, "4102925130849": 105, "0382963424874": 105, "0197278502379": 105, "splitlin": 105, "sub_tre": 105, "simple_tree_str": [105, 133], "simple_tre": [105, 133], "tr1": 105, "tr2": 105, "fewer": 105, "tree_str": 105, "tipdist": 105, "perfectli": [105, 129], "08352668213457076": 105, "my": [106, 127], "u9": 106, "u6": 106, "float64": 106, "regionratio": 106, "con2": 106, "con121351": 106, "scientif": [106, 145], "5e": 106, "2e": 106, "4e": 106, "08": [106, 128], "np_004893con1": 106, "np_005079con9": 106, "np_005500noncon7": 106, "np_055852noncon1": 106, "neat": 106, "tardigrad": 106, "0425": 106, "wrap_tabl": 106, "namea": 106, "tardigrade0": 106, "04250": 106, "largecon": 106, "r_v": 106, "locusregionratiolargecon": 106, "5386fals": 106, "4264true": 106, "9789true": 106, "0000fals": 106, "7090fals": 106, "42635634111": 106, "978886133": 106, "382703020266491e": 106, "708952725": 106, "dictat": 106, "538601e": 106, "213514e": 106, "516595e": 106, "382703e": 106, "093322e": 106, "chisquar": 106, "tv": 106, "syn": 106, "nsyn": 106, "tstv": 106, "syn3136": 106, "nsyn58138": 106, "6730": 106, "3270": 106, "7488": 106, "0225": 106, "7312": 106, "syn22": 106, "673044": 106, "nsyn66": 106, "3270129": 106, "syn1": 106, "02250": 106, "g_test": 106, "g_independ": 106, "william": 106, "gdfpvalu": 106, "97310": 106, "table1": 106, "table2": 106, "data1": 106, "data2": 106, "data1np_003077con2": 106, "data1np_004893con121351": 106, "data1np_005079con9516594": 106, "data1np_005500noncon0": 106, "data1np_055852noncon10933217": 106, "data2np_003077con2": 106, "data2np_004893con121351": 106, "data2np_005079con9516594": 106, "data2np_005500noncon0": 106, "data2np_055852noncon10933217": 106, "20571166": 106, "652796596": 106, "all_numer": 106, "extern": [106, 149, 151], "sub_tabl": 106, "syntax": [106, 138], "big_numer": 106, "math": [106, 108, 135, 137, 149, 151], "keycount": 106, "restrict": [106, 131], "region_typ": 106, "stats_tabl": 106, "right_largecon": 106, "locusregionratioright_largecon": 106, "prefix": 106, "cartesian": 106, "14sk041": 106, "14sk802": 106, "2920": 106, "id14sk04114sk802": 106, "2920332294": 106, "1606302229": 106, "393141125": 106, "2109138120": 106, "tp": 106, "14sk041332302141138": 106, "14sk802294229125120": 106, "finer": 106, "tex": 106, "htp": 106, "hline": 106, "bf": 106, "ccr": 106, "browser": [106, 110], "bigger": 106, "bgraph": 106, "chromstartendvalu": 106, "11001011": 106, "11011021": 106, "11021031": 106, "11031041": 106, "11041051": 106, "straight_html": 106, "known_format": 106, "stats_tab": 106, "implicitli": 106, "txt": 106, "union_dict": [107, 108], "bitwis": [107, 108], "attributeerror": [107, 108], "__getattr__": [107, 108], "super": [107, 108], "minimis": 108, "lie": 108, "simulatedann": 108, "standardis": 108, "deviat": 108, "diffomega": 108, "omega_from_": 108, "omega_est": 108, "xinit": 108, "6150": 108, "multidimension": 108, "my_var": 108, "cookbook": [108, 146], "carri": 108, "foo": 108, "__doc__": 108, "is_iter": 108, "can_it": 108, "cannot_it": 108, "is_char": 108, "recursive_flatten": 108, "not_list_tupl": 108, "add_lowercas": 108, "classcheck": 108, "not_okai": 108, "okai": 108, "my_dict": 108, "asasa": 108, "assur": [108, 141], "listandstr": 108, "ab_cd": 108, "isn": 108, "functionwrapp": 108, "0x7fc8bb1e6950": 108, "constrainedcontain": 108, "constrainedstr": 108, "constrainedlist": 108, "constraineddict": 108, "stai": 108, "light": 108, "constrainterror": 108, "__setitem__": 108, "item_is_valid": 108, "value_mask": 108, "vertebr": [109, 135], "yeast": 109, "mold": 109, "protozoan": 109, "coelenter": 109, "spiroplasma": 109, "invertebr": 109, "ciliat": 109, "nuclear": 109, "dasycladacean": 109, "hexamita": 109, "echinoderm": 109, "flatworm": 109, "euplotid": 109, "archaeal": 109, "plant": 109, "plastid": 109, "ascidian": 109, "blepharisma": 109, "macronuclear": 109, "chlorophycean": 109, "trematod": 109, "scenedesmu": 109, "obliquu": 109, "thraustochytrium": 109, "rhabdopleurida": 109, "candid": 109, "sr1": 109, "gracilibacteria": 109, "pachysolen": 109, "tannophilu": 109, "karyorelict": 109, "condylostoma": 109, "mesodinium": 109, "peritrich": 109, "blastocrithidia": 109, "balanophoracea": 109, "cephalodiscida": 109, "idnam": 109, "1standard": 109, "2vertebr": 109, "3yeast": 109, "4mold": 109, "5invertebr": 109, "6ciliat": 109, "9echinoderm": 109, "10euplotid": 109, "11bacteri": 109, "12altern": 109, "13ascidian": 109, "14altern": 109, "15blepharisma": 109, "16chlorophycean": 109, "21trematod": 109, "22scenedesmu": 109, "23thraustochytrium": 109, "24rhabdopleurida": 109, "25candid": 109, "26pachysolen": 109, "27karyorelict": 109, "28condylostoma": 109, "29mesodinium": 109, "30peritrich": 109, "31blastocrithidia": 109, "32balanophoracea": 109, "33cephalodiscida": 109, "alanin": 109, "cystein": 109, "aspart": 109, "glutam": 109, "phenylalanin": 109, "glycin": 109, "histidin": 109, "isoleucin": 109, "lysin": 109, "leucin": 109, "methionin": 109, "asparagin": 109, "prolin": 109, "glutamin": 109, "arginin": 109, "serin": 109, "threonin": 109, "valin": 109, "tryptophan": 109, "tyrosin": 109, "aaiupac": 109, "codecodon": 109, "alanineagct": 109, "cysteinectgt": 109, "aciddgat": 109, "acidegaa": 109, "phenylalaninefttt": 109, "glycinegggt": 109, "histidinehcat": 109, "isoleucineiatt": 109, "lysinekaaa": 109, "leucineltta": 109, "methioninematg": 109, "asparaginenaat": 109, "prolinepcct": 109, "glutamineqcaa": 109, "argininercgt": 109, "serinestct": 109, "threoninetact": 109, "valinevgtt": 109, "tryptophanwtga": 109, "tyrosineytat": 109, "click": [110, 112, 115, 149, 151], "trna_profil": 110, "refseqs_protein": 110, "inseq": 110, "inseqs_protein": 110, "f9": 110, "tbp": [110, 116], "yet": [111, 145], "fast": [111, 115], "citat": [111, 112, 152], "coevo": 111, "techniqu": [112, 137], "gibb": 112, "mcintyr": 112, "tp53": 113, "ensembl": [113, 149, 151, 153], "ortholog": [113, 135], "marmoset": 113, "write_json": 113, "load_json": [113, 119, 120, 121, 122, 123], "dp": 113, "remove_track": 113, "left_track": 113, "bottom_track": 113, "visualis": [114, 118, 149, 151], "highli": 114, "diverg": 114, "pangolin": 114, "dog": 114, "llama": 114, "pig": [114, 129], "cow": [114, 130], "hippo": 114, "spermwhal": 114, "humpbackw": 114, "mole": 114, "pangolincatdogllamapigcowhippospermwhalehumpbackwmol": 114, "0000030000": 114, "pointer": 114, "tgatgtaaggtagtt": 115, "ctggaagggt": 115, "disappear": 115, "factor": 116, "tata": 116, "pwm": 116, "freqarr": 116, "to_freq_arrai": 116, "0797": 116, "3728": 116, "3907": 116, "7943": 116, "0463": 116, "0900": [116, 131], "9049": 116, "9614": 116, "0257": 116, "0771": 116, "9100": 116, "0129": 116, "07970": 116, "37280": 116, "15680": 116, "79430": 116, "11830": 116, "09000": 116, "90490": 116, "96140": 116, "02570": 116, "07710": 116, "91000": 116, "bear": 116, "mind": 116, "render": 116, "scheme": 116, "repeat": 117, "classif": [117, 128, 131], "experiment": [117, 149, 151], "polymorph": 117, "10kbp": 117, "backend": 118, "excel": 118, "graph": 118, "ens_tre": [119, 120, 121, 122], "placement": [120, 122], "label_pad": [120, 121], "africanel": [120, 122], "manate": [120, 122], "legendgroup": [120, 122], "afrotheria": [120, 122], "magenta": [120, 122], "show_support": 123, "support_xshift": 123, "support_yshift": 123, "yshift": 123, "xshift": 123, "author": [124, 125, 126, 127, 128, 129, 130, 131, 133, 134, 136, 137, 138, 139, 140, 141, 142, 143, 144, 151], "paradigm": [124, 128], "artifici": 124, "0x7f7f13074cd0": 124, "unaligned_aa": 124, "0x7f7f13021e10": 124, "serv": 124, "won": [124, 138, 141], "catherin": 125, "lozupon": [125, 151], "own": [125, 126, 127, 134, 144], "myclust": 125, "test_upgma": 125, "phylo": [126, 138], "nj": 126, "mytre": 126, "test_nj": 126, "4022": 127, "0730": 127, "3487": 127, "3363": 127, "namesdogfacedhowlermonhumanmousenineband": 127, "dogfaced0": 127, "19720": 127, "40220": 127, "07300": 127, "34870": 127, "33630": 127, "mouse0": 127, "ninebande0": 127, "20190": 127, "18650": 127, "18040": 127, "38130": 127, "cpu": [127, 135], "master": [127, 135], "wb": 127, "dump": 127, "sake": 128, "nf": 128, "ii": [128, 131], "tf": 128, "iv": 128, "cnf": 128, "mprob_model": 128, "overhead": 128, "argument_nam": 128, "argument_valu": 128, "prefac": 128, "optimiser_arg": 128, "6767": 128, "0980": 128, "04": [128, 131, 140, 141], "070": 128, "060": [128, 134, 141], "040": 128, "080": 128, "mle": 128, "nearli": [128, 131], "procedur": [128, 133], "neutral_lnl": 128, "get_log_likelihood": [128, 131, 134, 140], "neutral_nfp": 128, "get_num_free_param": [128, 131, 134, 140], "non_neutral_lnl": 128, "non_neutral_nfp": 128, "6762": 128, "5761": 128, "083": 128, "conduct": [128, 131, 144, 145], "0026357631759325074": 128, "surprisingli": 128, "ask": [128, 131], "chimp_human_clade_lnl": 128, "chimp_human_clade_nfp": 128, "028426324908180867": 128, "consum": 128, "richer": 128, "previou": 128, "annot_tre": 128, "get_annotated_tre": [128, 134], "omega_ml": 128, "rate_lf": 128, "epsilon": [128, 131], "rate_lnl": 128, "rate_nfp": 128, "6755": 128, "4520": 128, "073": 128, "adaptive0": 128, "0008054431247037354": 128, "unfortun": [128, 149, 151], "ugli": 128, "bug": 128, "bin_param": 128, "rate_class_omega": 128, "rate_class_prob": 128, "rate_branch_lf": 128, "6753": 128, "4561": 128, "greg": 129, "caporaso": [129, 151], "poorli": 129, "mislead": 129, "coupl": 129, "strategi": 129, "validate_align": 129, "coevolve_pair": 129, "coevolve_pair_funct": 129, "pos1": 129, "pos2": 129, "31127812445913294": 129, "sca": 129, "9805368955362849": 129, "coevolve_posit": 129, "coevolve_position_funct": 129, "81127812": 129, "31127812": 129, "coevolve_align": 129, "coevolve_alignment_funct": 129, "dict_kei": 129, "intermolecular": 129, "consider": 129, "briefli": 129, "chicken": 129, "echidna": 129, "protein1": 129, "weird_db_identifi": 129, "protein2": 129, "aaai": 129, "ctai": 129, "ctcf": 129, "tcf": 129, "12255625": 129, "globin": 130, "substitution_model": [130, 131, 139], "empiricalproteinmatrix": 130, "paml_matrix": 130, "pamlmatrixpars": 130, "rabbit": 130, "goat": 130, "marsupi": 130, "matrix_fil": 130, "half": [130, 144], "white": 130, "empirical_matrix": 130, "empirical_frequ": 130, "unscal": 130, "0785": 130, "0545": 130, "0269": 130, "0972": 130, "0871": 130, "0335": 130, "0495": 130, "0398": 130, "0886": 130, "0336": 130, "0369": 130, "0805": 130, "0854": 130, "0507": 130, "0383": 130, "0696": 130, "0647": 130, "0299": 130, "rabbitedg": 130, "ratedg": 130, "1root0": [130, 131, 134, 140, 141], "cowroot0": 130, "marsupialroot0": 130, "acdefghikl": 130, "08710": 130, "03350": 130, "04690": 130, "04950": 130, "03980": 130, "08860": 130, "03360": 130, "03690": 130, "08050": 130, "mnpqrstvwy": 130, "04040": 130, "05070": 130, "03830": 130, "04090": 130, "06960": 130, "06470": 130, "postul": 131, "assumpt": 131, "question": 131, "throughout": 131, "fact": [131, 141], "tend": 131, "cluster": [131, 132], "priori": 131, "basi": 131, "classifi": [131, 153], "post": 131, "compon": [131, 133, 134, 136, 138, 140], "assess": [131, 137, 141], "motifchang": 131, "treat_gap": 131, "model_gap": 131, "alias": 131, "lf_one": 131, "lnl_one": 131, "df_one": 131, "5889": [131, 140], "howlermonedg": [131, 134, 140, 141], "mouseedg": [131, 134, 140, 141], "ninebanderoot0": [131, 134, 140, 141], "dogfacedroot0": [131, 134, 140, 141], "bin_submod": 131, "ordered_param": [131, 139], "lf_bin": 131, "lnl_bin": 131, "df_bin": 131, "8739": 131, "rate_shap": 131, "bin0": [131, 139], "bin1": [131, 139], "kapparate_shap": 131, "binbprobsr": [131, 139], "bin00": [131, 139], "bin10": [131, 139], "switch": [131, 134, 151], "sole": 131, "lf_patch": 131, "lnl_patch": 131, "df_patch": 131, "8728": 131, "bin_switch": 131, "bin_switchkapparate_shap": 131, "short": [131, 146], "997883439555153": 131, "1f": 131, "behav": [131, 135], "21st": 131, "8034881154053909": 131, "releas": [131, 148], "silli": 131, "formattedi": 131, "single_kappa": 131, "kappa_bin_submod": 131, "lf_kappa": 131, "smaller": [131, 138], "8749": 131, "8958": 131, "binbprobskappa": 131, "slow1": 131, "fast0": 131, "period": [132, 141], "signal": 132, "simplest": [132, 135], "script": [132, 135, 141, 149, 151], "loci": 132, "coevolutionari": 132, "heterogen": 132, "neighbor": 132, "upgma": 132, "toni": 133, "walter": 133, "variou": 133, "dndparser": 133, "exception": 133, "rangenod": 133, "inherit": 133, "complex_tree_str": 133, "363564": 133, "ab294167": 133, "alkalibacterium": 133, "putridalgicola": 133, "0028006": 133, "55874": 133, "ab083411": 133, "marinilactibacillu": 133, "psychrotoleran": 133, "0022089": 133, "40998": 133, "15050": 133, "y10772": 133, "facklamia": 133, "homini": 133, "32304": 133, "132509": 133, "ay707780": 133, "aerococcu": 133, "viridan": 133, "58815": 133, "143063": 133, "ay879307": 133, "abiotrophia": 133, "defectiva": 133, "5807": 133, "83619": 133, "ab042060": 133, "bacillu": 133, "schlegelii": 133, "23569": 133, "03586": 133, "169722": 133, "ab275483": 133, "fibrobact": 133, "succinogen": 133, "38272": 133, "06516": 133, "03492": 133, "14265": 133, "63594": 133, "3589": 133, "m62687": 133, "intestinali": 133, "65866": 133, "314063": 133, "cp001146": 133, "dictyoglomu": 133, "thermophilum": 133, "38791": 133, "32147": 133, "276579": 133, "eu652053": 133, "thermu": 133, "scotoductu": 133, "57336": 133, "complex_tre": 133, "a_nod": 133, "wish": 133, "alter": 133, "unbranch": 133, "With": 133, "realist": 133, "manner": 133, "genu": 133, "suppress": 133, "ungainli": 133, "suppos": 133, "tips_to_delet": 133, "aerococcus_index": 133, "prevent": 133, "influenc": 134, "toolkit": [134, 151], "earli": 134, "cours": 134, "nonsens": 134, "8636": [134, 141], "8632": 134, "033": 134, "090": [134, 141], "sq": 134, "089238554377516": 134, "2316381153411136": 134, "homologs1": 135, "serial": 135, "adopt": [135, 145], "helper": 135, "worker": 135, "amongst": 135, "gain": 135, "stipul": 135, "prove": 135, "ineffici": 135, "concurr": [135, 151], "par_kw": 135, "undertaken": 135, "max_work": 135, "use_mpi": 135, "prime": 135, "chunk": 135, "is_prim": 135, "broken": 135, "get_rank": 135, "rank": 135, "sqrt_n": 135, "floor": 135, "112272535095293": 135, "112582705942171": 135, "115280095190773": 135, "115797848077099": 135, "117450548693743": 135, "993960000099397": 135, "world": 135, "On": 135, "mpi4pi": [135, 151], "tool": [135, 145, 153], "openmpi": 135, "conda": 135, "homebrew": 135, "prefer": 135, "manag": [135, 153], "pip": [135, 147], "supercomput": 135, "facil": 135, "submit": 135, "job": 135, "queu": 135, "pb": 135, "schedul": 135, "resourc": 135, "ram": 135, "vari": 135, "experi": [135, 145, 152], "care": 135, "bash": 135, "pbs_ncpu": 135, "stdout": 135, "mpiexec": 135, "pbs_cpu": 135, "migrat": 135, "runtimeerror": 135, "postprocess": 135, "__name__": 135, "__main__": 135, "readthedoc": 135, "stabl": 135, "architectur": 136, "properli": 136, "assembl": 136, "create_alt_funct": 136, "create_null_funct": 136, "howler": [136, 140], "monkei": [136, 140], "set_local_clock": [136, 140], "estimateprob": 136, "estimatep": 136, "set_num_repl": 136, "get_estimated_prob": 136, "get_observed_lnl": 136, "8751": [136, 140], "julien": 137, "epp": 137, "hua": 137, "ying": [137, 151], "scenario": 137, "nois": 137, "arang": 137, "randn": 137, "nse": 137, "convolv": 137, "exp": 137, "sig": 137, "sin": 137, "pi": 137, "dft": 137, "pwr": 137, "04081633": 137, "08333333": 137, "12765957": 137, "17391304": 137, "22222222": 137, "27272727": 137, "3255814": 137, "38095238": 137, "43902439": 137, "56410256": 137, "63157895": 137, "7027027": 137, "77777778": 137, "85714286": 137, "94117647": 137, "03030303": 137, "22580645": 137, "33333333": 137, "44827586": 137, "57142857": 137, "7037037": 137, "84615385": 137, "16666667": 137, "34782609": 137, "54545455": 137, "76190476": 137, "26315789": 137, "55555556": 137, "88235294": 137, "66666667": 137, "14285714": 137, "69230769": 137, "09090909": 137, "11111111": 137, "28571429": 137, "06015801": 137, "00000000e": 137, "00j": 137, "74686707": 137, "93971914e": 137, "02j": 137, "36784793": 137, "66370366e": 137, "04384413": 137, "86970840e": 137, "54473269": 137, "43777386e": 137, "28522968": 137, "33602932e": 137, "01j": 137, "09908167": 137, "09083592e": 137, "17082184": 137, "71376271e": 137, "89062721": 137, "28548281e": 137, "7963791": 137, "10035336e": 137, "01840271": 137, "80492960e": 137, "88651578": 137, "41151331e": 137, "19530165": 137, "51775974e": 137, "15022781": 137, "86446405e": 137, "08988438": 137, "80200034e": 137, "43529315": 137, "96947078e": 137, "02022101": 137, "21803410e": 137, "85047145": 137, "15731607e": 137, "43688846": 137, "25736906e": 137, "24122185": 137, "99636684e": 137, "07237075": 137, "52126090e": 137, "82213276": 137, "00931516e": 137, "13867235": 137, "81517725e": 137, "49837198": 137, "77574035e": 137, "46785187": 137, "22595745e": 137, "11562242": 137, "49254299e": 137, "1923063": 137, "71044818e": 137, "13909144": 137, "13690934e": 137, "25347752": 137, "74139986e": 137, "31153602": 137, "31846596e": 137, "40472419": 137, "65748222e": 137, "20432603": 137, "45226487e": 137, "7243685": 137, "04775797e": 137, "1815508": 137, "80212265e": 137, "28830449": 137, "72824059e": 137, "06062707": 137, "52301510e": 137, "02841505": 137, "00362778e": 137, "54158937": 137, "05374577e": 137, "79192147": 137, "74568790e": 137, "37803411": 137, "15026155e": 137, "9707734": 137, "07593113e": 137, "00458776": 137, "01619914e": 137, "72674876": 137, "73631881e": 137, "03109358": 137, "27252853e": 137, "07118569": 137, "66787987e": 137, "3787156": 137, "78325775e": 137, "74358583": 137, "70454093e": 137, "09857348": 137, "64330816e": 137, "58344276": 137, "46465366e": 137, "46042799": 137, "39206718e": 137, "max_pwr": 137, "max_period": 137, "768593471914606": 137, "auto_corr": 137, "63366075e": 137, "47309007e": 137, "99310414e": 137, "94779387e": 137, "02111589e": 137, "59402206e": 137, "38935958e": 137, "78082033e": 137, "67917301e": 137, "80558458e": 137, "50298023e": 137, "31498874e": 137, "58750562e": 137, "44274029e": 137, "59442269e": 137, "42494835e": 137, "23571124e": 137, "37998464e": 137, "19246214e": 137, "40423905e": 137, "37305496e": 137, "13403096e": 137, "11639561e": 137, "90121298e": 137, "19165151e": 137, "29071920e": 137, "03347404e": 137, "88866727e": 137, "61923373e": 137, "95836846e": 137, "19272046e": 137, "60842692e": 137, "70680982e": 137, "36897636e": 137, "74936245e": 137, "12432553e": 137, "85493706e": 137, "50657815e": 137, "12033008e": 137, "55562690e": 137, "03888477e": 137, "05790735e": 137, "29155248e": 137, "87540424e": 137, "35507983e": 137, "80308843e": 137, "14561492e": 137, "05380855e": 137, "57732301e": 137, "10932490e": 137, "86322889e": 137, "14559534e": 137, "80666743e": 137, "27850512e": 137, "87271137e": 137, "81441259e": 137, "36167153e": 137, "61436543e": 137, "02975923e": 137, "66247570e": 137, "05138114e": 137, "63658173e": 137, "41895898e": 137, "78396501e": 137, "46634150e": 137, "32607996e": 137, "90027551e": 137, "21450065e": 137, "54316580e": 137, "27121176e": 137, "63814161e": 137, "03866397e": 137, "82623015e": 137, "24702344e": 137, "03525898e": 137, "73098658e": 137, "24573472e": 137, "60152097e": 137, "58897479e": 137, "92571369e": 137, "56836331e": 137, "61934286e": 137, "69234791e": 137, "21888050e": 137, "98178529e": 137, "74044320e": 137, "40442056e": 137, "60242842e": 137, "64669169e": 137, "90300288e": 137, "05204196e": 137, "23056837e": 137, "50585679e": 137, "11958968e": 137, "84011202e": 137, "16394993e": 137, "59262996e": 137, "29507813e": 137, "791730073275666": 137, "atcgttgggaccggttcaagttttggaactcgcaaggggtgaatggtcttcgtctaacgctgg": 137, "ggaaccctgaatcgttgtaacgctggggtctttaaccgttctaatttaacgctggggggttct": 137, "aatttttaaccgcggaattgcgtc": 137, "seqtosymbol": 137, "seq_to_symbol": 137, "ipdft": 137, "22082108e": 137, "48683298e": 137, "74585634e": 137, "46410162e": 137, "20674669e": 137, "13171488e": 137, "21157382e": 137, "24998151e": 137, "17918725e": 137, "83176087e": 137, "68973168e": 137, "30390506e": 137, "77601816e": 137, "39581554e": 137, "80089521e": 137, "28140014e": 137, "59887450e": 137, "59868328e": 137, "51990117e": 137, "87861072e": 137, "21002402e": 137, "99221455e": 137, "02839146e": 137, "56255506e": 137, "06605556e": 137, "06350498e": 137, "87505455e": 137, "75521377e": 137, "58223742e": 137, "57383339e": 137, "86043328e": 137, "48856222e": 137, "41967659e": 137, "54831380e": 137, "74584888e": 137, "89930756e": 137, "92786864e": 137, "78419759e": 137, "45019553e": 137, "93168494e": 137, "25398249e": 137, "46051662e": 137, "62061706e": 137, "86912424e": 137, "51346882e": 137, "83960376e": 137, "57129507e": 137, "40313085e": 137, "21317980e": 137, "95053395e": 137, "58947522e": 137, "11597773e": 137, "52293480e": 137, "80798765e": 137, "97227258e": 137, "01955788e": 137, "95558284e": 137, "78752487e": 137, "52356140e": 137, "17250947e": 137, "74353209e": 137, "24590403e": 137, "68883280e": 137, "08133521e": 137, "43218310e": 137, "74997407e": 137, "04355896e": 137, "32410691e": 137, "22045261e": 137, "65309295e": 137, "00750601e": 137, "73887675e": 137, "47484570e": 137, "20342519e": 137, "91921485e": 137, "61856189e": 137, "29863885e": 137, "95716246e": 137, "59227384e": 137, "20247125e": 137, "78656372e": 137, "34363454e": 137, "87301027e": 137, "37423335e": 137, "84703756e": 137, "02913256e": 137, "07071489e": 137, "10946887e": 137, "14542396e": 137, "17861941e": 137, "20910287e": 137, "23692910e": 137, "26215890e": 137, "28485807e": 137, "30509645e": 137, "32294720e": 137, "33848600e": 137, "35179043e": 137, "36293943e": 137, "37201278e": 137, "37909065e": 137, "38425325e": 137, "38758049e": 137, "38915172e": 137, "38904543e": 137, "38733912e": 137, "38410910e": 137, "37943034e": 137, "37337637e": 137, "36601922e": 137, "35742932e": 137, "34767546e": 137, "33682480e": 137, "32494280e": 137, "31209329e": 137, "29833845e": 137, "28373882e": 137, "26835338e": 137, "25223958e": 137, "23545340e": 137, "21804940e": 137, "20008083e": 137, "18159967e": 137, "16265675e": 137, "14330180e": 137, "12358361e": 137, "10355008e": 137, "08324839e": 137, "06272504e": 137, "04202606e": 137, "02119707e": 137, "00028347e": 137, "79330530e": 137, "58383576e": 137, "37488120e": 137, "16690010e": 137, "96035593e": 137, "75571856e": 137, "55346580e": 137, "35408477e": 137, "15807318e": 137, "96594040e": 137, "77820828e": 137, "59541162e": 137, "41809819e": 137, "24682812e": 137, "08217267e": 137, "hybrid": 137, "54290319e": 137, "60000000e": 137, "04355163e": 137, "07127071e": 137, "07846097e": 137, "88607202e": 137, "89220041e": 137, "48101672e": 137, "62499076e": 137, "90751235e": 137, "71493695e": 137, "02075851e": 137, "07351455e": 137, "62081453e": 137, "82080569e": 137, "12560056e": 137, "91921215e": 137, "02238814e": 137, "56647179e": 137, "54701681e": 137, "69299309e": 137, "91987402e": 137, "65004405e": 137, "33027778e": 137, "50803983e": 137, "88754909e": 137, "50208551e": 137, "30756620e": 137, "60168337e": 137, "44647661e": 137, "93970600e": 137, "43865104e": 137, "02209421e": 137, "53958454e": 137, "96393432e": 137, "89209880e": 137, "27011732e": 137, "47950548e": 137, "50796497e": 137, "03815499e": 137, "57237024e": 137, "34562120e": 137, "05387527e": 137, "28772263e": 137, "28564753e": 137, "04187851e": 137, "37054384e": 137, "46537377e": 137, "35368513e": 137, "44639109e": 137, "21834784e": 137, "40399383e": 137, "48613629e": 137, "80782315e": 137, "47779142e": 137, "75126741e": 137, "91413684e": 137, "85175284e": 137, "29741283e": 137, "62295201e": 137, "34441640e": 137, "63253408e": 137, "37287324e": 137, "64998444e": 137, "17423584e": 137, "97232072e": 137, "86613578e": 137, "82654647e": 137, "04503603e": 137, "69438374e": 137, "89938281e": 137, "28137008e": 137, "95960742e": 137, "38556857e": 137, "64931942e": 137, "97858123e": 137, "29613692e": 137, "16074137e": 137, "55731274e": 137, "17181727e": 137, "32380616e": 137, "62454001e": 137, "90822254e": 137, "17479537e": 137, "42428932e": 137, "43787546e": 137, "43627188e": 137, "53585824e": 137, "04551433e": 137, "94771639e": 137, "52431781e": 137, "13943227e": 137, "61019291e": 137, "75895216e": 137, "17763660e": 137, "48805111e": 137, "75818129e": 137, "15275974e": 137, "93790246e": 137, "94575858e": 137, "94522714e": 137, "32403473e": 137, "92054550e": 137, "89715168e": 137, "12012911e": 137, "09805767e": 137, "07228795e": 137, "69535092e": 137, "67364959e": 137, "97482840e": 137, "62418659e": 137, "56747763e": 137, "53670676e": 137, "75671874e": 137, "94181358e": 137, "43609880e": 137, "40016166e": 137, "36319935e": 137, "48797024e": 137, "42990539e": 137, "24716721e": 137, "31065025e": 137, "goertzel": 137, "76859347191462": 137, "report": 137, "llim": 137, "period5": 137, "ipdft_pow": 137, "round": [137, 138], "486832980505154": 137, "alon": 137, "35516278555667": 137, "precomput": 137, "goertzel_calc": 137, "blockwise_bootstrap": 137, "contigu": 137, "num_rep": 137, "obs_stat": 137, "notion": 137, "quick": 137, "front": 137, "accordingli": 137, "hybrid_calcul": 137, "rb": 138, "extrem": 138, "exercis": 138, "ls_distance_matrix": 138, "ls_pairwise_matrix": 138, "hereaft": 138, "asaa": 138, "pick": 138, "graft": 138, "inspect": 138, "wls_stat": 138, "3308768548934439e": 138, "0015588630350439783": 138, "t1": 138, "t2": 138, "jackrabbit": 138, "treeshrew": 138, "literatur": 138, "seek": 138, "query_tre": 138, "evaluate_tre": 138, "893810255506769": 138, "evaluate_topologi": 138, "0084": 138, "mirror": 138, "ml": 138, "among": 139, "recov": 139, "equal_motif_prob": 139, "sequence_length": [139, 143], "10000": [139, 143], "scratch": 139, "densiti": 139, "decreas": 140, "chanc": 140, "captur": 140, "9425": 140, "7071645286014245": 140, "09989841175349772": 140, "facilit": 141, "remaind": 141, "attain": 141, "9489": 141, "9506": 141, "031": 141, "041": 141, "022": 141, "092": 141, "readabl": 141, "explicit": 141, "9424": 141, "8896": 141, "042": 141, "091": 141, "9442": 141, "4271": 141, "032": 141, "combo": 141, "gradual": 141, "8640": 141, "9290": 141, "9218158333834535": 141, "8639": 141, "7171": 141, "8638": 141, "9572": 141, "9537": 142, "9589": 142, "macaqueroot0": 142, "chimproot0": 142, "24390": 142, "25810": 142, "24280": 142, "taxon": 143, "set_constant_length": 143, "set_motif_prob": 143, "4000": 143, "3000": 143, "aroot0": 143, "broot0": 143, "cedg": 143, "dedg": 143, "0root0": 143, "20000": 143, "30000": 143, "cccgtctccga": 143, "gtccgtgccgg": 143, "tacggggccgc": 143, "acccgtctccgaggagactggttgtgttgatgctgctatttgctttatccgtgagagtgat": 143, "bgt": 143, "cgtg": 143, "gtca": 143, "dttgtgtg": 143, "cgttc": 143, "piec": 144, "recalcul": 144, "loci_nam": 144, "mod": 144, "9168": 144, "3331": 144, "kappalength": 144, "locusacgt": 144, "half0": 144, "all_lnl": 144, "all_nfp": 144, "9167": 144, "locuskappa": 144, "half4": 144, "half3": 144, "each_lnl": 144, "each_nfp": 144, "fly": 144, "lrdfp": 144, "5910": 144, "passion": 145, "scienc": 145, "role": 145, "necess": 145, "high": 145, "freeli": 145, "everyon": 145, "arguabl": 145, "greatest": 145, "pleasur": 145, "opportun": 145, "collabor": 145, "mission": 145, "sophist": 145, "incred": 145, "pace": 145, "reward": 145, "choos": 145, "And": 145, "feel": 145, "enthusiast": 145, "gratefulli": 145, "receiv": 145, "newcom": 145, "adher": 145, "pleas": 145, "cultur": 145, "grow": 145, "hope": 145, "companion": 145, "repo": 145, "technic": 145, "hand": 145, "discov": 145, "ticket": 145, "grate": [145, 151], "chan": 145, "zuckerberg": 145, "fund": 145, "acknowledg": [145, 151], "provis": 145, "wingwar": 145, "licens": 145, "profession": 145, "Their": 145, "commit": 145, "decad": [145, 151], "greatli": 145, "appreci": 145, "port": 145, "pycog": [145, 151], "wing": 145, "refactor": 145, "publish": [145, 151], "cite": 145, "knight": [145, 151], "r171": [145, 151], "yourself": 146, "recip": 146, "tutori": 146, "api": [146, 149, 151, 153], "git": 147, "egg": 147, "myenv": 147, "bsd": 148, "incorpor": 148, "emphasis": 149, "cogent": [149, 151], "pyevolv": [149, 151], "isort": 149, "rationalis": 149, "intend": 149, "rewrit": [149, 151], "massiv": [149, 151], "indirectli": [149, 151], "virtu": [149, 151], "older": [149, 151], "repositori": [149, 151], "histori": 149, "3rd": [149, 151], "parti": [149, 151], "burrito": [149, 151], "focuss": [149, 151], "ensembldb3": [149, 151, 153], "eutil": [149, 151], "biocommon": [149, 151], "struct": [149, 151], "3d": [149, 151], "seqsim": [149, 151], "evo": [149, 151], "unifrac": [149, 151], "microbiom": [149, 151], "scikit": [149, 151], "bio": [149, 151], "motiv": 151, "multitud": 151, "contribut": 151, "year": 151, "co": 151, "lab": 151, "modernis": 151, "tqdm": 151, "tox": 151, "pytest": 151, "calendar": 151, "multpl": 151, "amd": 151, "butterfield": 151, "vedagiri": 151, "lang": 151, "lawrenc": 151, "wakefield": 151, "isaev": 151, "bmc": 151, "www": 151, "nlm": 151, "nih": 151, "gov": 151, "pubm": 151, "14706121": 151, "maxwel": 151, "birmingham": 151, "carn": 151, "easton": 151, "eaton": 151, "hamadi": 151, "liu": 151, "mcdonald": 151, "robeson": 151, "sammut": 151, "smit": 151, "widmann": 151, "wikman": 151, "wilson": 151, "17708774": 151, "matur": 152, "endeavour": 152, "pr": 153, "mysql": 153, "homologsampl": 153, "replat": 153, "mutationmotif": 153, "spectra": 153, "mutationorigin": 153, "learn": 153, "predict": 153, "geneticdist": 153, "distanxc": 153, "darwinian": 153}, "objects": {"cogent3.__init__": [[1, 0, 1, "", "available_apps"], [2, 0, 1, "", "available_codes"], [3, 0, 1, "", "available_models"], [4, 0, 1, "", "available_moltypes"], [5, 0, 1, "", "get_code"], [6, 0, 1, "", "get_model"], [7, 0, 1, "", "get_moltype"], [8, 0, 1, "", "load_aligned_seqs"], [9, 0, 1, "", "load_annotations"], [10, 0, 1, "", "load_delimited"], [11, 0, 1, "", "load_seq"], [12, 0, 1, "", "load_table"], [13, 0, 1, "", "load_tree"], [14, 0, 1, "", "load_unaligned_seqs"], [15, 0, 1, "", "make_aligned_seqs"], [16, 0, 1, "", "make_seq"], [17, 0, 1, "", "make_table"], [18, 0, 1, "", "make_tree"], [19, 0, 1, "", "make_unaligned_seqs"], [20, 0, 1, "", "open_"], [21, 0, 1, "", "open_data_store"]], "cogent3.app.composable": [[34, 0, 1, "", "define_app"]], "cogent3.app.data_store": [[35, 1, 1, "", "DataMember"], [36, 1, 1, "", "DataStoreDirectory"], [37, 1, 1, "", "ReadOnlyDataStoreZipped"]], "cogent3.app.data_store.DataMember": [[35, 2, 1, "", "data_store"], [35, 2, 1, "", "md5"], [35, 3, 1, "", "read"], [35, 2, 1, "", "unique_id"]], "cogent3.app.data_store.DataStoreDirectory": [[36, 2, 1, "", "completed"], [36, 2, 1, "", "describe"], [36, 3, 1, "", "drop_not_completed"], [36, 2, 1, "", "limit"], [36, 2, 1, "", "logs"], [36, 3, 1, "", "md5"], [36, 2, 1, "", "members"], [36, 2, 1, "", "mode"], [36, 2, 1, "", "not_completed"], [36, 3, 1, "", "read"], [36, 2, 1, "", "source"], [36, 2, 1, "", "summary_logs"], [36, 2, 1, "", "summary_not_completed"], [36, 3, 1, "", "validate"], [36, 3, 1, "", "write"], [36, 3, 1, "", "write_log"], [36, 3, 1, "", "write_not_completed"]], "cogent3.app.data_store.ReadOnlyDataStoreZipped": [[37, 2, 1, "", "completed"], [37, 2, 1, "", "describe"], [37, 3, 1, "", "drop_not_completed"], [37, 2, 1, "", "limit"], [37, 2, 1, "", "logs"], [37, 3, 1, "", "md5"], [37, 2, 1, "", "members"], [37, 2, 1, "", "mode"], [37, 2, 1, "", "not_completed"], [37, 3, 1, "", "read"], [37, 2, 1, "", "source"], [37, 2, 1, "", "summary_logs"], [37, 2, 1, "", "summary_not_completed"], [37, 3, 1, "", "validate"], [37, 3, 1, "", "write"], [37, 3, 1, "", "write_log"], [37, 3, 1, "", "write_not_completed"]], "cogent3.app.io": [[38, 0, 1, "", "register_datastore_reader"]], "cogent3.app.sqlite_data_store": [[39, 1, 1, "", "DataStoreSqlite"]], "cogent3.app.sqlite_data_store.DataStoreSqlite": [[39, 3, 1, "", "close"], [39, 2, 1, "", "completed"], [39, 2, 1, "", "db"], [39, 2, 1, "", "describe"], [39, 3, 1, "", "drop_not_completed"], [39, 2, 1, "", "limit"], [39, 3, 1, "", "lock"], [39, 2, 1, "", "locked"], [39, 2, 1, "", "logs"], [39, 3, 1, "", "md5"], [39, 2, 1, "", "members"], [39, 2, 1, "", "mode"], [39, 2, 1, "", "not_completed"], [39, 3, 1, "", "read"], [39, 2, 1, "", "record_type"], [39, 2, 1, "", "source"], [39, 4, 1, "", "store_suffix"], [39, 2, 1, "", "summary_logs"], [39, 2, 1, "", "summary_not_completed"], [39, 3, 1, "", "unlock"], [39, 3, 1, "", "validate"], [39, 3, 1, "", "write"], [39, 3, 1, "", "write_log"], [39, 3, 1, "", "write_not_completed"]], "cogent3.core.alignment": [[23, 1, 1, "", "Alignment"], [24, 1, 1, "", "ArrayAlignment"], [25, 1, 1, "", "SequenceCollection"]], "cogent3.core.alignment.Alignment": [[23, 3, 1, "", "add_feature"], [23, 3, 1, "", "add_from_ref_aln"], [23, 3, 1, "", "add_seqs"], [23, 3, 1, "", "alignment_quality"], [23, 3, 1, "", "annotate_from_gff"], [23, 2, 1, "", "annotation_db"], [23, 3, 1, "", "apply_pssm"], [23, 3, 1, "", "coevolution"], [23, 3, 1, "", "copy"], [23, 3, 1, "", "copy_annotations"], [23, 3, 1, "", "count_gaps_per_pos"], [23, 3, 1, "", "count_gaps_per_seq"], [23, 3, 1, "", "counts"], [23, 3, 1, "", "counts_per_pos"], [23, 3, 1, "", "counts_per_seq"], [23, 3, 1, "", "deepcopy"], [23, 4, 1, "", "default_gap"], [23, 3, 1, "", "degap"], [23, 3, 1, "", "distance_matrix"], [23, 3, 1, "", "dotplot"], [23, 3, 1, "", "entropy_per_pos"], [23, 3, 1, "", "entropy_per_seq"], [23, 3, 1, "", "filtered"], [23, 4, 1, "", "gap_chars"], [23, 3, 1, "", "gapped_by_map"], [23, 3, 1, "", "get_ambiguous_positions"], [23, 3, 1, "", "get_degapped_relative_to"], [23, 3, 1, "", "get_drawable"], [23, 3, 1, "", "get_drawables"], [23, 3, 1, "", "get_features"], [23, 3, 1, "", "get_gap_array"], [23, 3, 1, "", "get_gapped_seq"], [23, 3, 1, "", "get_identical_sets"], [23, 3, 1, "", "get_lengths"], [23, 3, 1, "", "get_motif_probs"], [23, 3, 1, "", "get_position_indices"], [23, 3, 1, "", "get_projected_feature"], [23, 3, 1, "", "get_projected_features"], [23, 3, 1, "", "get_seq"], [23, 3, 1, "", "get_seq_indices"], [23, 3, 1, "", "get_similar"], [23, 3, 1, "", "get_translation"], [23, 3, 1, "", "has_terminal_stop"], [23, 3, 1, "", "has_terminal_stops"], [23, 3, 1, "", "information_plot"], [23, 4, 1, "", "is_array"], [23, 3, 1, "", "is_ragged"], [23, 3, 1, "", "iter_positions"], [23, 3, 1, "", "iter_selected"], [23, 3, 1, "", "iter_seqs"], [23, 3, 1, "", "iupac_consensus"], [23, 3, 1, "", "majority_consensus"], [23, 3, 1, "", "make_feature"], [23, 3, 1, "", "matching_ref"], [23, 4, 1, "", "moltype"], [23, 3, 1, "", "no_degenerates"], [23, 2, 1, "", "num_seqs"], [23, 3, 1, "", "omit_bad_seqs"], [23, 3, 1, "", "omit_gap_pos"], [23, 3, 1, "", "omit_gap_runs"], [23, 3, 1, "", "omit_gap_seqs"], [23, 3, 1, "", "pad_seqs"], [23, 2, 1, "", "positions"], [23, 3, 1, "", "probs_per_pos"], [23, 3, 1, "", "probs_per_seq"], [23, 3, 1, "", "quick_tree"], [23, 3, 1, "", "rc"], [23, 3, 1, "", "rename_seqs"], [23, 3, 1, "", "replace_seqs"], [23, 3, 1, "", "reverse_complement"], [23, 3, 1, "", "sample"], [23, 3, 1, "", "seqlogo"], [23, 2, 1, "", "seqs"], [23, 3, 1, "", "set_repr_policy"], [23, 3, 1, "", "sliding_windows"], [23, 3, 1, "", "strand_symmetry"], [23, 3, 1, "", "take_positions"], [23, 3, 1, "", "take_positions_if"], [23, 3, 1, "", "take_seqs"], [23, 3, 1, "", "take_seqs_if"], [23, 3, 1, "", "to_dict"], [23, 3, 1, "", "to_dna"], [23, 3, 1, "", "to_fasta"], [23, 3, 1, "", "to_html"], [23, 3, 1, "", "to_json"], [23, 3, 1, "", "to_moltype"], [23, 3, 1, "", "to_nexus"], [23, 3, 1, "", "to_phylip"], [23, 3, 1, "", "to_pretty"], [23, 3, 1, "", "to_protein"], [23, 3, 1, "", "to_rich_dict"], [23, 3, 1, "", "to_rna"], [23, 3, 1, "", "to_type"], [23, 3, 1, "", "trim_stop_codons"], [23, 3, 1, "", "variable_positions"], [23, 3, 1, "", "with_gaps_from"], [23, 3, 1, "", "with_masked_annotations"], [23, 3, 1, "", "with_modified_termini"], [23, 3, 1, "", "write"]], "cogent3.core.alignment.ArrayAlignment": [[24, 3, 1, "", "add_from_ref_aln"], [24, 3, 1, "", "add_seqs"], [24, 3, 1, "", "alignment_quality"], [24, 4, 1, "", "alphabet"], [24, 2, 1, "", "annotation_db"], [24, 3, 1, "", "apply_pssm"], [24, 3, 1, "", "coevolution"], [24, 3, 1, "", "copy"], [24, 3, 1, "", "count_gaps_per_pos"], [24, 3, 1, "", "count_gaps_per_seq"], [24, 3, 1, "", "counts"], [24, 3, 1, "", "counts_per_pos"], [24, 3, 1, "", "counts_per_seq"], [24, 3, 1, "", "deepcopy"], [24, 4, 1, "", "default_gap"], [24, 3, 1, "", "degap"], [24, 3, 1, "", "distance_matrix"], [24, 3, 1, "", "dotplot"], [24, 3, 1, "", "entropy_per_pos"], [24, 3, 1, "", "entropy_per_seq"], [24, 3, 1, "", "filtered"], [24, 4, 1, "", "gap_chars"], [24, 3, 1, "", "get_ambiguous_positions"], [24, 3, 1, "", "get_degapped_relative_to"], [24, 3, 1, "", "get_gap_array"], [24, 3, 1, "", "get_gapped_seq"], [24, 3, 1, "", "get_identical_sets"], [24, 3, 1, "", "get_lengths"], [24, 3, 1, "", "get_motif_probs"], [24, 3, 1, "", "get_position_indices"], [24, 3, 1, "", "get_seq"], [24, 3, 1, "", "get_seq_indices"], [24, 3, 1, "", "get_similar"], [24, 3, 1, "", "get_sub_alignment"], [24, 3, 1, "", "get_translation"], [24, 3, 1, "", "has_terminal_stop"], [24, 3, 1, "", "has_terminal_stops"], [24, 3, 1, "", "information_plot"], [24, 4, 1, "", "is_array"], [24, 3, 1, "", "is_ragged"], [24, 3, 1, "", "iter_positions"], [24, 3, 1, "", "iter_selected"], [24, 3, 1, "", "iter_seqs"], [24, 3, 1, "", "iupac_consensus"], [24, 3, 1, "", "majority_consensus"], [24, 3, 1, "", "matching_ref"], [24, 4, 1, "", "moltype"], [24, 2, 1, "", "named_seqs"], [24, 3, 1, "", "no_degenerates"], [24, 2, 1, "", "num_seqs"], [24, 3, 1, "", "omit_bad_seqs"], [24, 3, 1, "", "omit_gap_pos"], [24, 3, 1, "", "omit_gap_runs"], [24, 3, 1, "", "omit_gap_seqs"], [24, 3, 1, "", "pad_seqs"], [24, 2, 1, "", "positions"], [24, 3, 1, "", "probs_per_pos"], [24, 3, 1, "", "probs_per_seq"], [24, 3, 1, "", "quick_tree"], [24, 3, 1, "", "rc"], [24, 3, 1, "", "rename_seqs"], [24, 3, 1, "", "replace_seqs"], [24, 3, 1, "", "reverse_complement"], [24, 3, 1, "", "sample"], [24, 3, 1, "", "seqlogo"], [24, 2, 1, "", "seqs"], [24, 3, 1, "", "set_repr_policy"], [24, 3, 1, "", "sliding_windows"], [24, 3, 1, "", "strand_symmetry"], [24, 3, 1, "", "take_positions"], [24, 3, 1, "", "take_positions_if"], [24, 3, 1, "", "take_seqs"], [24, 3, 1, "", "take_seqs_if"], [24, 3, 1, "", "to_dict"], [24, 3, 1, "", "to_dna"], [24, 3, 1, "", "to_fasta"], [24, 3, 1, "", "to_html"], [24, 3, 1, "", "to_json"], [24, 3, 1, "", "to_moltype"], [24, 3, 1, "", "to_nexus"], [24, 3, 1, "", "to_phylip"], [24, 3, 1, "", "to_pretty"], [24, 3, 1, "", "to_protein"], [24, 3, 1, "", "to_rich_dict"], [24, 3, 1, "", "to_rna"], [24, 3, 1, "", "to_type"], [24, 3, 1, "", "trim_stop_codons"], [24, 3, 1, "", "variable_positions"], [24, 3, 1, "", "with_modified_termini"], [24, 3, 1, "", "write"]], "cogent3.core.alignment.SequenceCollection": [[25, 3, 1, "", "add_feature"], [25, 3, 1, "", "add_seqs"], [25, 3, 1, "", "annotate_from_gff"], [25, 2, 1, "", "annotation_db"], [25, 3, 1, "", "apply_pssm"], [25, 3, 1, "", "copy"], [25, 3, 1, "", "copy_annotations"], [25, 3, 1, "", "counts"], [25, 3, 1, "", "counts_per_seq"], [25, 3, 1, "", "deepcopy"], [25, 3, 1, "", "degap"], [25, 3, 1, "", "distance_matrix"], [25, 3, 1, "", "dotplot"], [25, 3, 1, "", "entropy_per_seq"], [25, 3, 1, "", "get_ambiguous_positions"], [25, 3, 1, "", "get_features"], [25, 3, 1, "", "get_identical_sets"], [25, 3, 1, "", "get_lengths"], [25, 3, 1, "", "get_motif_probs"], [25, 3, 1, "", "get_seq"], [25, 3, 1, "", "get_seq_indices"], [25, 3, 1, "", "get_similar"], [25, 3, 1, "", "get_translation"], [25, 3, 1, "", "has_terminal_stop"], [25, 3, 1, "", "has_terminal_stops"], [25, 4, 1, "", "is_array"], [25, 3, 1, "", "is_ragged"], [25, 3, 1, "", "iter_selected"], [25, 3, 1, "", "iter_seqs"], [25, 3, 1, "", "make_feature"], [25, 4, 1, "", "moltype"], [25, 2, 1, "", "num_seqs"], [25, 3, 1, "", "omit_gap_runs"], [25, 3, 1, "", "omit_gap_seqs"], [25, 3, 1, "", "pad_seqs"], [25, 3, 1, "", "probs_per_seq"], [25, 3, 1, "", "rc"], [25, 3, 1, "", "rename_seqs"], [25, 3, 1, "", "reverse_complement"], [25, 2, 1, "", "seqs"], [25, 3, 1, "", "set_repr_policy"], [25, 3, 1, "", "strand_symmetry"], [25, 3, 1, "", "take_seqs"], [25, 3, 1, "", "take_seqs_if"], [25, 3, 1, "", "to_dict"], [25, 3, 1, "", "to_dna"], [25, 3, 1, "", "to_fasta"], [25, 3, 1, "", "to_json"], [25, 3, 1, "", "to_moltype"], [25, 3, 1, "", "to_nexus"], [25, 3, 1, "", "to_phylip"], [25, 3, 1, "", "to_protein"], [25, 3, 1, "", "to_rich_dict"], [25, 3, 1, "", "to_rna"], [25, 3, 1, "", "trim_stop_codons"], [25, 3, 1, "", "with_modified_termini"], [25, 3, 1, "", "write"]], "cogent3.core.alphabet": [[27, 1, 1, "", "Alphabet"]], "cogent3.core.alphabet.Alphabet": [[27, 5, 1, "", "AlphabetError"], [27, 3, 1, "", "adapt_motif_probs"], [27, 3, 1, "", "count"], [27, 3, 1, "", "counts"], [27, 3, 1, "", "from_indices"], [27, 3, 1, "", "get_gap_motif"], [27, 3, 1, "", "get_matched_array"], [27, 3, 1, "", "get_motif_len"], [27, 3, 1, "", "get_subset"], [27, 3, 1, "", "get_word_alphabet"], [27, 3, 1, "", "includes_gap_motif"], [27, 3, 1, "", "index"], [27, 3, 1, "", "is_valid"], [27, 3, 1, "", "resolve_ambiguity"], [27, 3, 1, "", "to_indices"], [27, 3, 1, "", "to_json"], [27, 3, 1, "", "to_rich_dict"], [27, 3, 1, "", "with_gap_motif"]], "cogent3.core.alphabet.Alphabet.AlphabetError": [[27, 3, 1, "", "add_note"], [27, 4, 1, "", "args"], [27, 3, 1, "", "with_traceback"]], "cogent3.core.annotation": [[29, 1, 1, "", "Feature"]], "cogent3.core.annotation.Feature": [[29, 3, 1, "", "as_one_span"], [29, 2, 1, "", "biotype"], [29, 3, 1, "", "get_children"], [29, 3, 1, "", "get_coordinates"], [29, 3, 1, "", "get_drawable"], [29, 3, 1, "", "get_parent"], [29, 3, 1, "", "get_slice"], [29, 2, 1, "", "map"], [29, 2, 1, "", "name"], [29, 2, 1, "", "parent"], [29, 3, 1, "", "remapped_to"], [29, 2, 1, "", "seqid"], [29, 3, 1, "", "shadow"], [29, 3, 1, "", "to_dict"], [29, 3, 1, "", "union"], [29, 3, 1, "", "without_lost_spans"]], "cogent3.core.annotation_db": [[31, 1, 1, "", "BasicAnnotationDb"], [32, 1, 1, "", "GenbankAnnotationDb"], [33, 1, 1, "", "GffAnnotationDb"]], "cogent3.core.annotation_db.BasicAnnotationDb": [[31, 4, 1, "", "StrOrBool"], [31, 3, 1, "", "add_feature"], [31, 3, 1, "", "add_records"], [31, 3, 1, "", "biotype_counts"], [31, 3, 1, "", "compatible"], [31, 3, 1, "", "count_distinct"], [31, 2, 1, "", "db"], [31, 2, 1, "", "describe"], [31, 3, 1, "", "from_dict"], [31, 3, 1, "", "get_feature_children"], [31, 3, 1, "", "get_feature_parent"], [31, 3, 1, "", "get_features_matching"], [31, 3, 1, "", "get_records_matching"], [31, 3, 1, "", "num_matches"], [31, 2, 1, "", "table_names"], [31, 3, 1, "", "to_json"], [31, 3, 1, "", "to_rich_dict"], [31, 3, 1, "", "union"], [31, 3, 1, "", "update"], [31, 3, 1, "", "write"]], "cogent3.core.annotation_db.GenbankAnnotationDb": [[32, 4, 1, "", "StrOrBool"], [32, 3, 1, "", "add_feature"], [32, 3, 1, "", "add_records"], [32, 3, 1, "", "biotype_counts"], [32, 3, 1, "", "compatible"], [32, 3, 1, "", "count_distinct"], [32, 2, 1, "", "db"], [32, 2, 1, "", "describe"], [32, 3, 1, "", "from_dict"], [32, 3, 1, "", "get_feature_children"], [32, 3, 1, "", "get_feature_parent"], [32, 3, 1, "", "get_features_matching"], [32, 3, 1, "", "get_records_matching"], [32, 3, 1, "", "num_matches"], [32, 2, 1, "", "table_names"], [32, 3, 1, "", "to_json"], [32, 3, 1, "", "to_rich_dict"], [32, 3, 1, "", "union"], [32, 3, 1, "", "update"], [32, 3, 1, "", "write"]], "cogent3.core.annotation_db.GffAnnotationDb": [[33, 4, 1, "", "StrOrBool"], [33, 3, 1, "", "add_feature"], [33, 3, 1, "", "add_records"], [33, 3, 1, "", "biotype_counts"], [33, 3, 1, "", "compatible"], [33, 3, 1, "", "count_distinct"], [33, 2, 1, "", "db"], [33, 2, 1, "", "describe"], [33, 3, 1, "", "from_dict"], [33, 3, 1, "", "get_feature_children"], [33, 3, 1, "", "get_feature_parent"], [33, 3, 1, "", "get_features_matching"], [33, 3, 1, "", "get_records_matching"], [33, 3, 1, "", "num_matches"], [33, 2, 1, "", "table_names"], [33, 3, 1, "", "to_json"], [33, 3, 1, "", "to_rich_dict"], [33, 3, 1, "", "union"], [33, 3, 1, "", "update"], [33, 3, 1, "", "write"]], "cogent3.core.genetic_code": [[40, 1, 1, "", "GeneticCode"]], "cogent3.core.genetic_code.GeneticCode": [[40, 2, 1, "", "blocks"], [40, 3, 1, "", "changes"], [40, 3, 1, "", "get_alphabet"], [40, 3, 1, "", "get_stop_indices"], [40, 3, 1, "", "is_start"], [40, 3, 1, "", "is_stop"], [40, 3, 1, "", "sixframes"], [40, 3, 1, "", "to_regex"], [40, 3, 1, "", "to_table"], [40, 3, 1, "", "translate"]], "cogent3.core.moltype": [[43, 1, 1, "", "MolType"]], "cogent3.core.moltype.MolType": [[43, 3, 1, "", "can_match"], [43, 3, 1, "", "can_mismatch"], [43, 3, 1, "", "can_mispair"], [43, 3, 1, "", "can_pair"], [43, 3, 1, "", "coerce_str"], [43, 3, 1, "", "complement"], [43, 3, 1, "", "count_degenerate"], [43, 3, 1, "", "count_gaps"], [43, 3, 1, "", "degap"], [43, 3, 1, "", "degenerate_from_seq"], [43, 3, 1, "", "disambiguate"], [43, 3, 1, "", "first_degenerate"], [43, 3, 1, "", "first_gap"], [43, 3, 1, "", "first_invalid"], [43, 3, 1, "", "first_non_strict"], [43, 3, 1, "", "first_not_in_alphabet"], [43, 3, 1, "", "gap_indices"], [43, 3, 1, "", "gap_maps"], [43, 3, 1, "", "gap_vector"], [43, 3, 1, "", "get_css_style"], [43, 3, 1, "", "get_degenerate_positions"], [43, 3, 1, "", "get_type"], [43, 3, 1, "", "is_ambiguity"], [43, 3, 1, "", "is_degenerate"], [43, 3, 1, "", "is_gap"], [43, 3, 1, "", "is_gapped"], [43, 3, 1, "", "is_strict"], [43, 3, 1, "", "is_valid"], [43, 3, 1, "", "make_array_seq"], [43, 3, 1, "", "make_seq"], [43, 3, 1, "", "must_match"], [43, 3, 1, "", "must_pair"], [43, 3, 1, "", "mw"], [43, 3, 1, "", "possibilities"], [43, 3, 1, "", "rc"], [43, 3, 1, "", "strand_symmetric_motifs"], [43, 3, 1, "", "to_json"], [43, 3, 1, "", "to_regex"], [43, 3, 1, "", "to_rich_dict"], [43, 3, 1, "", "valid_on_alphabet"], [43, 3, 1, "", "verify_sequence"], [43, 3, 1, "", "what_ambiguity"]], "cogent3.core.sequence": [[45, 1, 1, "", "DnaSequence"], [46, 1, 1, "", "ProteinSequence"], [47, 1, 1, "", "RnaSequence"]], "cogent3.core.sequence.DnaSequence": [[45, 3, 1, "", "add_feature"], [45, 3, 1, "", "annotate_from_gff"], [45, 3, 1, "", "annotate_matches_to"], [45, 2, 1, "", "annotation_db"], [45, 2, 1, "", "annotation_offset"], [45, 3, 1, "", "can_match"], [45, 3, 1, "", "can_mismatch"], [45, 3, 1, "", "can_mispair"], [45, 3, 1, "", "can_pair"], [45, 4, 1, "", "codon_alphabet"], [45, 3, 1, "", "complement"], [45, 3, 1, "", "copy"], [45, 3, 1, "", "copy_annotations"], [45, 3, 1, "", "count"], [45, 3, 1, "", "count_degenerate"], [45, 3, 1, "", "count_gaps"], [45, 3, 1, "", "counts"], [45, 3, 1, "", "degap"], [45, 3, 1, "", "diff"], [45, 3, 1, "", "disambiguate"], [45, 3, 1, "", "distance"], [45, 3, 1, "", "first_degenerate"], [45, 3, 1, "", "first_gap"], [45, 3, 1, "", "first_invalid"], [45, 3, 1, "", "first_non_strict"], [45, 3, 1, "", "frac_diff"], [45, 3, 1, "", "frac_diff_gaps"], [45, 3, 1, "", "frac_diff_non_gaps"], [45, 3, 1, "", "frac_same"], [45, 3, 1, "", "frac_same_gaps"], [45, 3, 1, "", "frac_same_non_gaps"], [45, 3, 1, "", "frac_similar"], [45, 3, 1, "", "gap_indices"], [45, 3, 1, "", "gap_maps"], [45, 3, 1, "", "gap_vector"], [45, 3, 1, "", "gapped_by_map"], [45, 3, 1, "", "gapped_by_map_motif_iter"], [45, 3, 1, "", "gapped_by_map_segment_iter"], [45, 3, 1, "", "get_drawable"], [45, 3, 1, "", "get_drawables"], [45, 3, 1, "", "get_features"], [45, 3, 1, "", "get_in_motif_size"], [45, 3, 1, "", "get_kmers"], [45, 3, 1, "", "get_name"], [45, 3, 1, "", "get_translation"], [45, 3, 1, "", "get_type"], [45, 3, 1, "", "has_terminal_stop"], [45, 3, 1, "", "is_annotated"], [45, 3, 1, "", "is_degenerate"], [45, 3, 1, "", "is_gap"], [45, 3, 1, "", "is_gapped"], [45, 3, 1, "", "is_strict"], [45, 3, 1, "", "is_valid"], [45, 3, 1, "", "iter_kmers"], [45, 4, 1, "", "line_wrap"], [45, 3, 1, "", "make_feature"], [45, 3, 1, "", "matrix_distance"], [45, 4, 1, "", "moltype"], [45, 3, 1, "", "must_match"], [45, 3, 1, "", "must_pair"], [45, 3, 1, "", "mw"], [45, 3, 1, "", "parse_out_gaps"], [45, 3, 1, "", "possibilities"], [45, 4, 1, "", "protein"], [45, 3, 1, "", "rc"], [45, 3, 1, "", "replace"], [45, 3, 1, "", "replace_annotation_db"], [45, 3, 1, "", "resolved_ambiguities"], [45, 3, 1, "", "reverse_complement"], [45, 3, 1, "", "shuffle"], [45, 3, 1, "", "sliding_windows"], [45, 3, 1, "", "strand_symmetry"], [45, 3, 1, "", "strip_bad"], [45, 3, 1, "", "strip_bad_and_gaps"], [45, 3, 1, "", "strip_degenerate"], [45, 3, 1, "", "to_dna"], [45, 3, 1, "", "to_fasta"], [45, 3, 1, "", "to_html"], [45, 3, 1, "", "to_json"], [45, 3, 1, "", "to_moltype"], [45, 3, 1, "", "to_rich_dict"], [45, 3, 1, "", "to_rna"], [45, 3, 1, "", "trim_stop_codon"], [45, 3, 1, "", "with_masked_annotations"], [45, 3, 1, "", "with_termini_unknown"]], "cogent3.core.sequence.ProteinSequence": [[46, 3, 1, "", "add_feature"], [46, 3, 1, "", "annotate_from_gff"], [46, 3, 1, "", "annotate_matches_to"], [46, 2, 1, "", "annotation_db"], [46, 2, 1, "", "annotation_offset"], [46, 3, 1, "", "can_match"], [46, 3, 1, "", "can_mismatch"], [46, 3, 1, "", "can_mispair"], [46, 3, 1, "", "can_pair"], [46, 3, 1, "", "complement"], [46, 3, 1, "", "copy"], [46, 3, 1, "", "copy_annotations"], [46, 3, 1, "", "count"], [46, 3, 1, "", "count_degenerate"], [46, 3, 1, "", "count_gaps"], [46, 3, 1, "", "counts"], [46, 3, 1, "", "degap"], [46, 3, 1, "", "diff"], [46, 3, 1, "", "disambiguate"], [46, 3, 1, "", "distance"], [46, 3, 1, "", "first_degenerate"], [46, 3, 1, "", "first_gap"], [46, 3, 1, "", "first_invalid"], [46, 3, 1, "", "first_non_strict"], [46, 3, 1, "", "frac_diff"], [46, 3, 1, "", "frac_diff_gaps"], [46, 3, 1, "", "frac_diff_non_gaps"], [46, 3, 1, "", "frac_same"], [46, 3, 1, "", "frac_same_gaps"], [46, 3, 1, "", "frac_same_non_gaps"], [46, 3, 1, "", "frac_similar"], [46, 3, 1, "", "gap_indices"], [46, 3, 1, "", "gap_maps"], [46, 3, 1, "", "gap_vector"], [46, 3, 1, "", "gapped_by_map"], [46, 3, 1, "", "gapped_by_map_motif_iter"], [46, 3, 1, "", "gapped_by_map_segment_iter"], [46, 3, 1, "", "get_drawable"], [46, 3, 1, "", "get_drawables"], [46, 3, 1, "", "get_features"], [46, 3, 1, "", "get_in_motif_size"], [46, 3, 1, "", "get_kmers"], [46, 3, 1, "", "get_name"], [46, 3, 1, "", "get_type"], [46, 3, 1, "", "is_annotated"], [46, 3, 1, "", "is_degenerate"], [46, 3, 1, "", "is_gap"], [46, 3, 1, "", "is_gapped"], [46, 3, 1, "", "is_strict"], [46, 3, 1, "", "is_valid"], [46, 3, 1, "", "iter_kmers"], [46, 4, 1, "", "line_wrap"], [46, 3, 1, "", "make_feature"], [46, 3, 1, "", "matrix_distance"], [46, 4, 1, "", "moltype"], [46, 3, 1, "", "must_match"], [46, 3, 1, "", "must_pair"], [46, 3, 1, "", "mw"], [46, 3, 1, "", "parse_out_gaps"], [46, 3, 1, "", "possibilities"], [46, 3, 1, "", "rc"], [46, 3, 1, "", "replace"], [46, 3, 1, "", "replace_annotation_db"], [46, 3, 1, "", "resolved_ambiguities"], [46, 3, 1, "", "shuffle"], [46, 3, 1, "", "sliding_windows"], [46, 3, 1, "", "strand_symmetry"], [46, 3, 1, "", "strip_bad"], [46, 3, 1, "", "strip_bad_and_gaps"], [46, 3, 1, "", "strip_degenerate"], [46, 3, 1, "", "to_fasta"], [46, 3, 1, "", "to_html"], [46, 3, 1, "", "to_json"], [46, 3, 1, "", "to_moltype"], [46, 3, 1, "", "to_rich_dict"], [46, 3, 1, "", "with_masked_annotations"], [46, 3, 1, "", "with_termini_unknown"]], "cogent3.core.sequence.RnaSequence": [[47, 3, 1, "", "add_feature"], [47, 3, 1, "", "annotate_from_gff"], [47, 3, 1, "", "annotate_matches_to"], [47, 2, 1, "", "annotation_db"], [47, 2, 1, "", "annotation_offset"], [47, 3, 1, "", "can_match"], [47, 3, 1, "", "can_mismatch"], [47, 3, 1, "", "can_mispair"], [47, 3, 1, "", "can_pair"], [47, 4, 1, "", "codon_alphabet"], [47, 3, 1, "", "complement"], [47, 3, 1, "", "copy"], [47, 3, 1, "", "copy_annotations"], [47, 3, 1, "", "count"], [47, 3, 1, "", "count_degenerate"], [47, 3, 1, "", "count_gaps"], [47, 3, 1, "", "counts"], [47, 3, 1, "", "degap"], [47, 3, 1, "", "diff"], [47, 3, 1, "", "disambiguate"], [47, 3, 1, "", "distance"], [47, 3, 1, "", "first_degenerate"], [47, 3, 1, "", "first_gap"], [47, 3, 1, "", "first_invalid"], [47, 3, 1, "", "first_non_strict"], [47, 3, 1, "", "frac_diff"], [47, 3, 1, "", "frac_diff_gaps"], [47, 3, 1, "", "frac_diff_non_gaps"], [47, 3, 1, "", "frac_same"], [47, 3, 1, "", "frac_same_gaps"], [47, 3, 1, "", "frac_same_non_gaps"], [47, 3, 1, "", "frac_similar"], [47, 3, 1, "", "gap_indices"], [47, 3, 1, "", "gap_maps"], [47, 3, 1, "", "gap_vector"], [47, 3, 1, "", "gapped_by_map"], [47, 3, 1, "", "gapped_by_map_motif_iter"], [47, 3, 1, "", "gapped_by_map_segment_iter"], [47, 3, 1, "", "get_drawable"], [47, 3, 1, "", "get_drawables"], [47, 3, 1, "", "get_features"], [47, 3, 1, "", "get_in_motif_size"], [47, 3, 1, "", "get_kmers"], [47, 3, 1, "", "get_name"], [47, 3, 1, "", "get_translation"], [47, 3, 1, "", "get_type"], [47, 3, 1, "", "has_terminal_stop"], [47, 3, 1, "", "is_annotated"], [47, 3, 1, "", "is_degenerate"], [47, 3, 1, "", "is_gap"], [47, 3, 1, "", "is_gapped"], [47, 3, 1, "", "is_strict"], [47, 3, 1, "", "is_valid"], [47, 3, 1, "", "iter_kmers"], [47, 4, 1, "", "line_wrap"], [47, 3, 1, "", "make_feature"], [47, 3, 1, "", "matrix_distance"], [47, 4, 1, "", "moltype"], [47, 3, 1, "", "must_match"], [47, 3, 1, "", "must_pair"], [47, 3, 1, "", "mw"], [47, 3, 1, "", "parse_out_gaps"], [47, 3, 1, "", "possibilities"], [47, 4, 1, "", "protein"], [47, 3, 1, "", "rc"], [47, 3, 1, "", "replace"], [47, 3, 1, "", "replace_annotation_db"], [47, 3, 1, "", "resolved_ambiguities"], [47, 3, 1, "", "reverse_complement"], [47, 3, 1, "", "shuffle"], [47, 3, 1, "", "sliding_windows"], [47, 3, 1, "", "strand_symmetry"], [47, 3, 1, "", "strip_bad"], [47, 3, 1, "", "strip_bad_and_gaps"], [47, 3, 1, "", "strip_degenerate"], [47, 3, 1, "", "to_dna"], [47, 3, 1, "", "to_fasta"], [47, 3, 1, "", "to_html"], [47, 3, 1, "", "to_json"], [47, 3, 1, "", "to_moltype"], [47, 3, 1, "", "to_rich_dict"], [47, 3, 1, "", "to_rna"], [47, 3, 1, "", "trim_stop_codon"], [47, 3, 1, "", "with_masked_annotations"], [47, 3, 1, "", "with_termini_unknown"]], "cogent3.core.tree": [[53, 1, 1, "", "PhyloNode"]], "cogent3.core.tree.PhyloNode": [[53, 3, 1, "", "ancestors"], [53, 3, 1, "", "append"], [53, 3, 1, "", "ascii_art"], [53, 3, 1, "", "balanced"], [53, 3, 1, "", "bifurcating"], [53, 3, 1, "", "child_groups"], [53, 3, 1, "", "child_parent_map"], [53, 3, 1, "", "compare_by_names"], [53, 3, 1, "", "compare_by_subsets"], [53, 3, 1, "", "compare_by_tip_distances"], [53, 3, 1, "", "compare_name"], [53, 3, 1, "", "copy"], [53, 3, 1, "", "copy_topology"], [53, 3, 1, "", "deepcopy"], [53, 3, 1, "", "descendant_array"], [53, 3, 1, "", "distance"], [53, 3, 1, "", "extend"], [53, 3, 1, "", "get_connecting_edges"], [53, 3, 1, "", "get_connecting_node"], [53, 3, 1, "", "get_distances"], [53, 3, 1, "", "get_edge_names"], [53, 3, 1, "", "get_edge_vector"], [53, 3, 1, "", "get_figure"], [53, 3, 1, "", "get_max_tip_tip_distance"], [53, 3, 1, "", "get_newick"], [53, 3, 1, "", "get_node_matching_name"], [53, 3, 1, "", "get_node_names"], [53, 3, 1, "", "get_nodes_dict"], [53, 3, 1, "", "get_param_value"], [53, 3, 1, "", "get_sub_tree"], [53, 3, 1, "", "get_tip_names"], [53, 3, 1, "", "get_xml"], [53, 3, 1, "", "index_in_parent"], [53, 3, 1, "", "insert"], [53, 3, 1, "", "is_root"], [53, 3, 1, "", "is_tip"], [53, 3, 1, "", "isroot"], [53, 3, 1, "", "istip"], [53, 3, 1, "", "iter_nontips"], [53, 3, 1, "", "iter_tips"], [53, 3, 1, "", "last_common_ancestor"], [53, 3, 1, "", "lca"], [53, 2, 1, "", "length"], [53, 3, 1, "", "levelorder"], [53, 3, 1, "", "lin_rajan_moret"], [53, 3, 1, "", "lowest_common_ancestor"], [53, 3, 1, "", "make_tree_array"], [53, 3, 1, "", "max_tip_tip_distance"], [53, 3, 1, "", "multifurcating"], [53, 3, 1, "", "name_unnamed_nodes"], [53, 3, 1, "", "non_tip_children"], [53, 3, 1, "", "nontips"], [53, 2, 1, "", "parent"], [53, 3, 1, "", "pop"], [53, 3, 1, "", "postorder"], [53, 3, 1, "", "pre_and_postorder"], [53, 3, 1, "", "preorder"], [53, 3, 1, "", "prune"], [53, 3, 1, "", "reassign_names"], [53, 3, 1, "", "remove"], [53, 3, 1, "", "remove_deleted"], [53, 3, 1, "", "remove_node"], [53, 3, 1, "", "root"], [53, 3, 1, "", "root_at_midpoint"], [53, 3, 1, "", "rooted_at"], [53, 3, 1, "", "rooted_with_tip"], [53, 3, 1, "", "same_shape"], [53, 3, 1, "", "same_topology"], [53, 3, 1, "", "scale_branch_lengths"], [53, 3, 1, "", "separation"], [53, 3, 1, "", "set_max_tip_tip_distance"], [53, 3, 1, "", "set_param_value"], [53, 3, 1, "", "set_tip_distances"], [53, 3, 1, "", "siblings"], [53, 3, 1, "", "sorted"], [53, 3, 1, "", "subset"], [53, 3, 1, "", "subsets"], [53, 3, 1, "", "tip_children"], [53, 3, 1, "", "tip_to_tip_distances"], [53, 3, 1, "", "tips"], [53, 3, 1, "", "tips_within_distance"], [53, 3, 1, "", "to_json"], [53, 3, 1, "", "to_rich_dict"], [53, 3, 1, "", "total_descending_branch_length"], [53, 3, 1, "", "total_length"], [53, 3, 1, "", "traverse"], [53, 3, 1, "", "unrooted"], [53, 3, 1, "", "unrooted_deepcopy"], [53, 3, 1, "", "write"]], "cogent3.parse.table": [[49, 1, 1, "", "FilteringParser"]], "cogent3.util.deserialise": [[56, 0, 1, "", "deserialise_object"], [55, 1, 1, "", "register_deserialiser"]], "cogent3.util.table": [[50, 1, 1, "", "Columns"], [51, 1, 1, "", "Table"]], "cogent3.util.table.Columns": [[50, 3, 1, "", "add_column_from_str"], [50, 2, 1, "", "array"], [50, 3, 1, "", "clear"], [50, 3, 1, "", "get"], [50, 2, 1, "", "index_name"], [50, 3, 1, "", "items"], [50, 3, 1, "", "iter_rows"], [50, 3, 1, "", "keys"], [50, 2, 1, "", "order"], [50, 3, 1, "", "pop"], [50, 3, 1, "", "popitem"], [50, 3, 1, "", "setdefault"], [50, 3, 1, "", "take_columns"], [50, 3, 1, "", "to_dict"], [50, 3, 1, "", "to_rich_dict"], [50, 3, 1, "", "update"], [50, 3, 1, "", "values"]], "cogent3.util.table.Table": [[51, 3, 1, "", "appended"], [51, 2, 1, "", "array"], [51, 3, 1, "", "count"], [51, 3, 1, "", "count_unique"], [51, 3, 1, "", "cross_join"], [51, 3, 1, "", "distinct_values"], [51, 3, 1, "", "filtered"], [51, 3, 1, "", "filtered_by_column"], [51, 2, 1, "", "format"], [51, 3, 1, "", "format_column"], [51, 3, 1, "", "get_columns"], [51, 3, 1, "", "get_row_indices"], [51, 3, 1, "", "head"], [51, 2, 1, "", "header"], [51, 2, 1, "", "index_name"], [51, 3, 1, "", "inner_join"], [51, 3, 1, "", "joined"], [51, 2, 1, "", "legend"], [51, 3, 1, "", "normalized"], [51, 3, 1, "", "set_repr_policy"], [51, 2, 1, "", "shape"], [51, 3, 1, "", "sorted"], [51, 2, 1, "", "space"], [51, 3, 1, "", "sum_columns"], [51, 3, 1, "", "sum_rows"], [51, 3, 1, "", "summed"], [51, 3, 1, "", "tail"], [51, 2, 1, "", "title"], [51, 3, 1, "", "to_categorical"], [51, 3, 1, "", "to_csv"], [51, 3, 1, "", "to_dataframe"], [51, 3, 1, "", "to_dict"], [51, 3, 1, "", "to_html"], [51, 3, 1, "", "to_json"], [51, 3, 1, "", "to_latex"], [51, 3, 1, "", "to_markdown"], [51, 3, 1, "", "to_plotly"], [51, 3, 1, "", "to_rich_dict"], [51, 3, 1, "", "to_rst"], [51, 3, 1, "", "to_string"], [51, 3, 1, "", "to_tsv"], [51, 3, 1, "", "tolist"], [51, 3, 1, "", "transposed"], [51, 3, 1, "", "with_new_column"], [51, 3, 1, "", "with_new_header"], [51, 3, 1, "", "write"]]}, "objtypes": {"0": "py:function", "1": "py:class", "2": "py:property", "3": "py:method", "4": "py:attribute", "5": "py:exception"}, "objnames": {"0": ["py", "function", "Python function"], "1": ["py", "class", "Python class"], "2": ["py", "property", "Python property"], "3": ["py", "method", "Python method"], "4": ["py", "attribute", "Python attribute"], "5": ["py", "exception", "Python exception"]}, "titleterms": {"cogent3": [0, 42, 93, 94, 108, 135, 148, 149, 151, 153], "licens": [0, 148], "available_app": 1, "available_cod": 2, "available_model": 3, "available_moltyp": 4, "get_cod": [5, 109], "get_model": [6, 96], "get_moltyp": 7, "load_aligned_seq": 8, "load_annot": 9, "load_delimit": [10, 101, 106], "load_seq": [11, 92], "load_tabl": 12, "load_tre": 13, "load_unaligned_seq": 14, "make_aligned_seq": [15, 90], "make_seq": 16, "make_t": 17, "make_tre": 18, "make_unaligned_seq": 19, "open": [20, 64, 100], "open_data_stor": 21, "align": [22, 23, 57, 58, 59, 69, 71, 80, 90, 93, 94, 95, 96, 97, 100, 102, 115, 116, 118, 124, 129, 143], "arrayalign": [24, 90], "sequencecollect": [25, 90], "alphabet": [26, 27, 91], "annot": [28, 92, 97, 113], "featur": [29, 62, 92, 97, 117], "annotation_db": 30, "basicannotationdb": [31, 92], "genbankannotationdb": 32, "gffannotationdb": 33, "define_app": 34, "datamemb": 35, "datastoredirectori": 36, "readonlydatastorezip": 37, "register_datastore_read": 38, "datastoresqlit": [39, 64], "geneticcod": 40, "genetic_cod": 41, "api": 42, "util": [42, 108, 132, 135], "function": [42, 62, 87, 88, 90, 92, 96, 108], "For": [42, 92, 96, 137], "load": [42, 92, 97, 100, 101, 104, 105, 106], "data": [42, 62, 64, 92, 97, 101, 102, 106, 110, 115, 132, 137], "from": [42, 62, 67, 89, 90, 92, 93, 94, 97, 98, 100, 101, 104, 105, 106, 108, 113, 116, 152], "file": [42, 57, 58, 59, 90, 92, 97, 100, 101, 104, 105, 106, 110], "make": [42, 64, 96, 100, 101, 103, 106, 125, 126, 152], "type": [42, 62, 64, 87, 88, 89, 92, 100, 103, 105, 108], "standard": [42, 100, 106, 128], "python": [42, 100, 101, 106], "get": [42, 60, 61, 64, 66, 73, 75, 89, 90, 96, 97, 98, 103, 105, 106, 109], "commonli": 42, "us": [42, 57, 58, 59, 62, 64, 77, 78, 90, 92, 93, 94, 95, 96, 97, 98, 100, 101, 103, 105, 106, 108, 110, 128, 130, 131, 135, 138, 147, 153], "displai": [42, 63, 97, 106, 111, 112, 114], "builtin": 42, "The": [42, 62, 64, 68, 87, 90, 96, 105, 142], "major": 42, "compos": [42, 62, 87, 88], "app": [42, 60, 61, 62, 63, 64, 65, 67, 79, 81, 82, 88, 135], "datastor": 42, "deserialis": 42, "moltyp": [43, 44, 90, 91, 103], "dnasequ": [45, 89, 98], "proteinsequ": [46, 104], "rnasequ": 47, "sequenc": [48, 69, 80, 83, 84, 88, 89, 90, 91, 92, 96, 97, 98, 100, 102, 103, 104, 113, 114, 116, 117, 118, 127, 129, 152], "filteringpars": [49, 101, 106], "column": [50, 90, 101, 106], "tabl": [51, 52, 96, 101, 106], "phylonod": 53, "tree": [54, 57, 58, 59, 66, 71, 76, 94, 96, 102, 105, 118, 126, 133, 138], "register_deserialis": 55, "deserialise_object": 56, "codon": [57, 69, 76, 77, 89, 90, 93, 96, 98, 128], "model": [57, 58, 59, 66, 69, 70, 71, 76, 77, 78, 84, 96, 128, 130, 131, 132, 141], "default": [57, 58, 59], "set": [57, 58, 59, 62, 89, 96, 101, 106, 107, 108, 112, 115, 120, 122], "specifi": [57, 58, 59, 70, 71, 96, 100, 101, 106, 137, 138, 141], "differ": [57, 58, 59, 88, 90, 92, 141], "distanc": [57, 58, 59, 94, 95, 105, 108, 127], "measur": [57, 58, 59, 137, 138], "estim": [57, 58, 59, 66, 67, 95, 96, 137], "guid": [57, 58, 59, 146], "provid": [57, 58, 96], "gap": [57, 89, 90, 93, 97, 114, 124], "paramet": [57, 66, 67, 70, 96, 112, 141], "substitut": [57, 58, 96, 128, 130, 141], "proven": [57, 58, 59], "ar": [57, 58, 59, 62, 92, 105, 106, 131], "record": [57, 58, 59, 62, 64, 87, 92], "info": [57, 58, 59], "attribut": [57, 58, 59, 68, 92, 107, 108, 112], "nucleotid": [58, 66, 69, 71, 77, 78, 90, 93, 96], "protein": [59, 89, 90, 96, 104, 116, 124, 130], "an": [60, 61, 62, 64, 69, 71, 89, 90, 92, 96, 97, 100, 101, 106, 108, 115, 130, 133, 143], "help": [61, 145], "overview": [62, 81, 96], "rule": 62, "exampl": [62, 88, 97, 115, 133], "sequenti": 62, "like": [62, 90, 107, 108], "multi": 62, "step": 62, "process": [62, 87, 131], "sever": 62, "appli": [62, 64, 66, 67, 69, 71, 76, 77, 78], "multipl": [62, 106, 116, 135, 144], "other": 62, "import": 62, "analys": 62, "log": [62, 64, 96], "failur": 62, "you": 62, "can": [62, 64, 76, 106], "track": [62, 87, 113], "progress": [62, 93], "do": [62, 64, 105, 149, 151], "parallel": [62, 135], "comput": [62, 90, 95, 135], "all": [62, 64, 75, 90, 98, 105, 117], "abov": 62, "instal": [63, 147], "store": 64, "collect": [64, 90, 100], "how": [64, 92, 96, 97, 98, 106, 149], "i": [64, 90, 105, 108, 149, 151], "structur": 64, "support": [64, 98, 123, 145], "oper": [64, 107, 108], "read": 64, "onli": [64, 101, 106], "summaris": 64, "member": 64, "one": [64, 97, 98, 106], "loop": 64, "over": [64, 90, 106], "own": [64, 82, 108], "writeabl": 64, "serialis": 64, "interrog": [64, 92], "run": 64, "pull": 64, "togeth": 64, "defin": [64, 65, 96], "analysi": [64, 96, 111, 115, 129, 132, 139, 144], "creat": [64, 67, 89, 90, 91, 92, 97, 101, 104, 105, 106, 108], "inspect": 64, "outcom": 64, "reconstruct": [65, 96, 132, 138], "ancestr": [65, 96], "state": 65, "ancestral_st": 65, "discret": [66, 137], "time": [66, 68, 70, 77, 78, 96], "non": [66, 68, 69, 70, 71, 76, 90, 106, 107, 108], "stationari": [66, 68, 69, 70, 71, 76], "branch": [66, 74, 75, 76, 96, 105, 128, 141], "length": [66, 76, 96, 105], "paralinear": 66, "extract": [67, 90], "maximum": [67, 96, 105, 138], "likelihood": [67, 95, 96, 138, 144], "model_result": [67, 69], "tabulate_stat": 67, "edg": [67, 105, 120, 122, 141], "global": 67, "motif": [67, 90, 96], "test": [68, 72, 73, 74, 75, 83, 85, 89, 96, 105, 108, 128, 134, 137, 140], "hypothesi": 68, "revers": [68, 77, 78, 89, 106, 112], "hypothesis_result": 68, "ha": [68, 101, 106, 131], "kei": [68, 107, 108], "access": [68, 90, 107, 108], "statist": [68, 75, 90, 137], "null": 68, "altern": [68, 141], "save": [68, 96], "result": [68, 87, 96], "3": 69, "fit": [69, 96, 138], "separ": [69, 108], "each": [69, 105], "posit": [69, 89, 90, 97], "heterogen": [70, 73, 74, 96, 128, 131, 139], "distinct": [70, 106], "rate": [70, 96, 128, 131, 139, 140], "matrix": [70, 108], "great": 70, "ap": 70, "via": [71, 92, 94, 97], "instanc": [71, 92], "path": [71, 105], "natsel_neutr": 72, "select": [72, 85, 98, 101, 105, 106, 117], "neutral": [72, 128, 134], "natsel_sitehet": 73, "site": [73, 75, 128, 131], "individu": [73, 90, 105], "posterior": [73, 75], "probabl": [73, 75, 90, 96], "natsel_timehet": 74, "natsel_zhang": 75, "class": [75, 108, 131], "membership": 75, "tabular": [75, 106], "form": [75, 77], "gnc": 76, "we": 76, "obtain": [76, 98], "en": 76, "condit": [77, 133], "gtr": 78, "write": [82, 90, 92, 105, 106], "your": [82, 88, 96, 108], "hypothes": [83, 96], "about": 83, "evolut": [83, 84, 132], "natur": 85, "could": 87, "notcomplet": 87, "object": [87, 90, 94, 95, 98, 100, 101, 104, 105, 106, 108, 133], "fals": 87, "error": 87, "propag": 87, "turn": 88, "A": [88, 94, 131, 134, 138], "simpl": [88, 115], "renam": 88, "user": [88, 146], "output": [88, 105], "gener": [89, 92, 132], "molecular": [89, 100, 103], "dna": [89, 90, 98, 104, 124], "rna": [89, 90], "string": [89, 90, 100, 101, 104, 106], "convert": [89, 90, 91, 93, 98, 104], "fasta": [89, 90, 92, 100], "format": [89, 90, 100, 101, 105, 106], "name": [89, 90, 92, 97, 104, 105, 106], "chang": [89, 106, 123], "complement": [89, 103, 112], "translat": [89, 98], "complementar": 89, "join": [89, 106, 126], "two": [89, 92, 105, 131], "slice": [89, 90, 97, 106], "3rd": [89, 90], "1st": 89, "2nd": 89, "return": [89, 97], "random": [89, 106], "version": [89, 147], "remov": [89, 90, 113], "what": [90, 92, 106, 149, 151], "": [90, 105, 108], "between": [90, 105, 127, 141], "basic": [90, 112], "construct": [90, 108, 128], "ad": [90, 106], "new": [90, 106], "exist": [90, 97, 106, 107, 108], "append": [90, 106], "insert": 90, "base": [90, 95], "refer": 90, "element": [90, 101, 106, 107, 108], "list": [90, 100, 101, 106, 108], "subset": 90, "handl": [90, 100], "phylip": [90, 104], "By": [90, 94, 96], "row": [90, 101, 106], "singl": [90, 92, 98, 106, 108, 135, 138], "region": [90, 92, 97], "contigu": 90, "iter": [90, 106, 108], "filter": [90, 106], "trim": 90, "termin": 90, "stop": [90, 98], "elimin": 90, "charact": [90, 100], "variabl": [90, 108], "constant": [90, 96], "identifi": 90, "arbitrari": 90, "count": [90, 106, 114], "work": [90, 105], "calcul": [90, 95, 105, 127], "fraction": 90, "map": [90, 124, 135], "unalign": [90, 100], "e": 90, "tupl": [91, 108], "integ": [91, 105], "databas": 92, "annotationdb": [92, 97], "standalon": 92, "gff": [92, 97], "genbank": [92, 97], "summari": 92, "add": [92, 106], "custom": [92, 97, 103], "disk": 92, "effici": 92, "re": 92, "queri": [92, 97], "biotyp": [92, 97, 117], "interest": [92, 97], "extend": 92, "field": 92, "mani": [92, 98, 106], "uniqu": [92, 106, 114], "gene": 92, "given": [92, 105], "genom": 92, "find": [92, 97, 98], "children": [92, 97, 105], "parent": [92, 97], "combin": 92, "check": [92, 96, 108], "compat": 92, "take": [92, 97], "union": [92, 97], "updat": [92, 107, 108], "anoth": 92, "initialis": 92, "assign": 92, "directli": [92, 94, 95, 135], "associ": [92, 97], "build": [93, 94], "aa": 93, "seq": 93, "nuc": 93, "phylogeni": 94, "phylogenet": [94, 118, 132, 138], "pairwis": [94, 95, 127], "quick_tre": 94, "distancematrix": 94, "explicitli": 94, "phylo": [94, 96], "nj": 94, "dict": [94, 100, 101, 106, 107, 108], "least": [94, 138], "squar": [94, 122, 138], "ml": 94, "genet": [95, 98, 102, 109], "fast": [95, 131], "evolutionari": 96, "avail": [96, 97, 103, 109], "pre": [96, 138], "scope": [96, 141], "start": 96, "valu": [96, 106], "bound": 96, "optimis": [96, 108], "upper": 96, "hmm": 96, "choic": 96, "wa": 96, "success": 96, "number": [96, 101, 106], "free": 96, "aikak": 96, "inform": [96, 115], "criterion": 96, "bayesian": 96, "One": [96, 105], "just": 96, "As": 96, "ratio": 96, "parametr": [96, 136], "bootstrap": [96, 123, 136], "determin": [96, 108], "confid": 96, "interv": 96, "mle": 96, "add_featur": 97, "On": [97, 115], "within": [97, 105], "bulk": 97, "them": [97, 98], "ani": 97, "span": 97, "method": [97, 98, 105], "its": [97, 105], "coordin": 97, "shadow": 97, "intergen": 97, "mask": 97, "copi": [97, 105], "behaviour": 97, "nucleic": [97, 103, 104], "acid": [97, 98, 103, 104], "code": [98, 102, 103, 109], "six": 98, "frame": 98, "out": 98, "look": [98, 138], "up": 98, "amino": 98, "correspond": 98, "group": 98, "codonalphabet": 98, "seri": [98, 100], "contain": [98, 108], "cookbook": 99, "url": [100, 101, 106], "todo": [100, 111, 112, 127, 131], "strip": 100, "label": 100, "parser": 100, "line": [100, 101, 106], "overload": 100, "csv": [101, 106], "delimit": [101, 106], "without": [101, 106], "header": [101, 106], "part": [101, 106], "big": [101, 106], "some": [101, 106], "raw": [101, 106], "order": [101, 106], "when": [101, 106], "index": [101, 106, 150], "panda": [101, 106], "datafram": [101, 106], "2d": [101, 106], "complex": [101, 106], "empti": [101, 106], "manipul": [102, 105, 132, 133], "biolog": [102, 129], "ambigu": 103, "definit": 103, "degener": 103, "verifi": 103, "visual": 105, "ascii_art": 105, "node": [105, 133], "same": 105, "tip": [105, 119, 120, 121, 122], "connect": 105, "last": 105, "common": 105, "ancestor": 105, "lca": 105, "farthest": 105, "apart": 105, "reroot": 105, "At": 105, "midpoint": 105, "Near": 105, "represent": 105, "newick": 105, "xml": 105, "travers": 105, "preorder": 105, "postord": 105, "subtre": 105, "wai": 105, "prune": 105, "full": 105, "unroot": 105, "transform": [105, 137], "bifurc": 105, "balanc": 105, "topologi": [105, 138], "scale": 105, "place": 105, "ascii": 105, "compar": 105, "matric": 105, "titl": 106, "legend": 106, "indic": 106, "numer": [106, 137], "precis": 106, "digit": 106, "space": [106, 138], "wrap": [106, 108], "top": 106, "head": 106, "bottom": 106, "tail": 106, "repr": 106, "ones": 106, "numpi": 106, "arrai": 106, "orient": 106, "conting": 106, "sum": 106, "strictli": 106, "mix": [106, 128], "sort": 106, "involv": 106, "occurr": 106, "merg": 106, "transpos": 106, "markdown": 106, "str": 106, "latex": 106, "restructur": 106, "text": [106, 123], "grid": 106, "to_str": 106, "bedgraph": 106, "html": 106, "written": 106, "formmat": 106, "uniondict": [107, 108], "miscellan": 108, "forc": 108, "curri": 108, "see": 108, "char": 108, "flatten": 108, "deepli": 108, "nest": 108, "case": 108, "insensit": 108, "lookup": 108, "deleg": 108, "hide": 108, "constrain": 108, "document": 110, "coevolut": 111, "heatmap": 111, "score": 111, "violin": [111, 114], "plot": [111, 112, 114], "boxplot": 111, "dotplot": [112, 113], "modifi": 112, "match": 112, "reload": 113, "json": 113, "per": 114, "bar": 114, "chart": 114, "box": 114, "illustr": 115, "sampl": 115, "logo": 116, "draw": [116, 117], "tfb": 116, "segment": 117, "imag": 118, "galleri": 118, "angular": 119, "dendrogram": [119, 120, 121, 122], "style": [119, 120, 121, 122], "With": [119, 120, 121, 122], "contemporan": [119, 120, 121, 122], "circular": 120, "colour": [120, 122], "radial": 121, "show": 123, "placement": 123, "upgma": 125, "cluster": 125, "neighbor": 126, "variant": 128, "perform": [129, 136, 140], "coevolutionari": 129, "empir": 130, "evalu": 131, "hidden": 131, "markov": 131, "ho": 131, "1": 131, "gamma": 131, "distribut": 131, "independ": 131, "2": 131, "slowli": 131, "evolv": 131, "auto": [131, 137], "correl": [131, 137], "patch": 131, "kappa": 131, "tutori": 132, "modif": 133, "theori": 134, "apply_to": 135, "period": 137, "signal": 137, "continu": 137, "fourier": 137, "symbol": 137, "power": 137, "signific": 137, "permut": 137, "best": 138, "more": 138, "rigor": 138, "search": 138, "assess": 138, "rel": 140, "allow": 141, "clade": 141, "stem": 141, "argument": 141, "applic": 141, "simplest": 142, "script": 142, "simul": 143, "loci": 144, "commun": 145, "contribut": 145, "ask": 145, "post": 145, "bug": 145, "citat": 145, "minim": 147, "graph": 147, "tool": 147, "develop": 147, "conda": 147, "mamba": 147, "doe": 149, "relat": 149, "pycog": 149, "longer": [149, 151], "includ": [149, 151], "modul": [149, 151], "x": [149, 151], "project": [151, 153], "histori": 151, "sens": 152}, "envversion": {"sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "nbsphinx": 4, "sphinx.ext.todo": 2, "sphinxcontrib.bibtex": 9, "sphinx": 60}, "alltitles": {"Cogent3 License": [[0, "cogent3-license"], [148, "cogent3-license"]], "available_apps": [[1, "available-apps"]], "available_codes": [[2, "available-codes"]], "available_models": [[3, "available-models"]], "available_moltypes": [[4, "available-moltypes"]], "get_code": [[5, "get-code"]], "get_model": [[6, "get-model"]], "get_moltype": [[7, "get-moltype"]], "load_aligned_seqs": [[8, "load-aligned-seqs"]], "load_annotations": [[9, "load-annotations"]], "load_delimited": [[10, "load-delimited"]], "load_seq": [[11, "load-seq"]], "load_table": [[12, "load-table"]], "load_tree": [[13, "load-tree"]], "load_unaligned_seqs": [[14, "load-unaligned-seqs"]], "make_aligned_seqs": [[15, "make-aligned-seqs"]], "make_seq": [[16, "make-seq"]], "make_table": [[17, "make-table"]], "make_tree": [[18, "make-tree"]], "make_unaligned_seqs": [[19, "make-unaligned-seqs"]], "open": [[20, "open"]], "open_data_store": [[21, "open-data-store"]], "alignment": [[22, "alignment"]], "Alignment": [[23, "alignment"]], "ArrayAlignment": [[24, "arrayalignment"]], "SequenceCollection": [[25, "sequencecollection"]], "alphabet": [[26, "alphabet"]], "Alphabet": [[27, "alphabet"]], "annotation": [[28, "annotation"]], "Feature": [[29, "feature"]], "annotation_db": [[30, "annotation-db"]], "BasicAnnotationDb": [[31, "basicannotationdb"]], "GenbankAnnotationDb": [[32, "genbankannotationdb"]], "GffAnnotationDb": [[33, "gffannotationdb"]], "define_app": [[34, "define-app"]], "DataMember": [[35, "datamember"]], "DataStoreDirectory": [[36, "datastoredirectory"]], "ReadOnlyDataStoreZipped": [[37, "readonlydatastorezipped"]], "register_datastore_reader": [[38, "register-datastore-reader"]], "DataStoreSqlite": [[39, "datastoresqlite"]], "GeneticCode": [[40, "geneticcode"]], "genetic_code": [[41, "genetic-code"]], "API": [[42, "api"]], "Utility Functions For": [[42, "utility-functions-for"]], "Loading data from file": [[42, "loading-data-from-file"]], "Making cogent3 types from standard Python types": [[42, "making-cogent3-types-from-standard-python-types"]], "Getting commonly used cogent3 types": [[42, "getting-commonly-used-cogent3-types"]], "Displaying cogent3 builtins": [[42, "displaying-cogent3-builtins"]], "The Major cogent3 Data Types": [[42, "the-major-cogent3-data-types"]], "Composable Apps": [[42, "composable-apps"]], "Datastore": [[42, "datastore"]], "Deserialising": [[42, "deserialising"]], "MolType": [[43, "moltype"]], "moltype": [[44, "moltype"]], "DnaSequence": [[45, "dnasequence"]], "ProteinSequence": [[46, "proteinsequence"]], "RnaSequence": [[47, "rnasequence"]], "sequence": [[48, "sequence"]], "FilteringParser": [[49, "filteringparser"]], "Columns": [[50, "columns"]], "Table": [[51, "table"]], "table": [[52, "table"]], "PhyloNode": [[53, "phylonode"]], "tree": [[54, "tree"]], "register_deserialiser": [[55, "register-deserialiser"]], "deserialise_object": [[56, "deserialise-object"]], "Using a codon model": [[57, "using-a-codon-model"]], "Codon alignment with default settings": [[57, "codon-alignment-with-default-settings"]], "Specify a different distance measure for estimating the guide tree": [[57, "specify-a-different-distance-measure-for-estimating-the-guide-tree"], [58, "specify-a-different-distance-measure-for-estimating-the-guide-tree"], [59, "specify-a-different-distance-measure-for-estimating-the-guide-tree"]], "Providing a guide tree": [[57, "providing-a-guide-tree"], [58, "providing-a-guide-tree"]], "Specifying the gap parameters": [[57, "specifying-the-gap-parameters"]], "Specifying the substitution model and parameters": [[57, "specifying-the-substitution-model-and-parameters"]], "Alignment settings and file provenance are recorded in the info attribute": [[57, "alignment-settings-and-file-provenance-are-recorded-in-the-info-attribute"], [58, "alignment-settings-and-file-provenance-are-recorded-in-the-info-attribute"], [59, "alignment-settings-and-file-provenance-are-recorded-in-the-info-attribute"]], "Using a nucleotide model": [[58, "using-a-nucleotide-model"]], "Nucleotide alignment with default settings": [[58, "nucleotide-alignment-with-default-settings"]], "Specifying the substitution model": [[58, "specifying-the-substitution-model"]], "Using a protein model": [[59, "using-a-protein-model"]], "Protein alignment with default settings": [[59, "protein-alignment-with-default-settings"]], "Getting an app": [[60, "getting-an-app"]], "Getting help on an app": [[61, "getting-help-on-an-app"]], "Overview of using apps": [[62, "overview-of-using-apps"]], "Types of apps": [[62, "types-of-apps"]], "Composability": [[62, "composability"]], "Composability rules": [[62, "composability-rules"]], "An example": [[62, "an-example"]], "Using apps sequentially like functions": [[62, "using-apps-sequentially-like-functions"]], "Composing a multi-step process from several apps": [[62, "composing-a-multi-step-process-from-several-apps"]], "Applying a process to multiple data records": [[62, "applying-a-process-to-multiple-data-records"]], "Other important features": [[62, "other-important-features"]], "The settings and data analysed will be logged": [[62, "the-settings-and-data-analysed-will-be-logged"]], "Failures are recorded": [[62, "failures-are-recorded"]], "You can track progress": [[62, "you-can-track-progress"]], "You can do parallel computation": [[62, "you-can-do-parallel-computation"]], "All of the above": [[62, "all-of-the-above"]], "Displaying installed apps": [[63, "displaying-installed-apps"]], "Data stores \u2013 collections of data records": [[64, "data-stores-collections-of-data-records"]], "How do I use a data store?": [[64, "how-do-i-use-a-data-store"]], "Types of data store": [[64, "types-of-data-store"]], "The structure of data stores": [[64, "the-structure-of-data-stores"]], "Supported operations on a data store": [[64, "supported-operations-on-a-data-store"]], "Opening a data store": [[64, "opening-a-data-store"]], "Opening a read only data store": [[64, "opening-a-read-only-data-store"]], "Summarising the data store": [[64, "summarising-the-data-store"]], "Data store \u201cmembers\u201d": [[64, "data-store-members"]], "Get one member": [[64, "get-one-member"]], "Looping over a data store": [[64, "looping-over-a-data-store"]], "Members can read their own data": [[64, "members-can-read-their-own-data"]], "Making a writeable data store": [[64, "making-a-writeable-data-store"]], "DataStoreSqlite stores serialised data": [[64, "datastoresqlite-stores-serialised-data"]], "Interrogating run logs": [[64, "interrogating-run-logs"]], "Pulling it all together": [[64, "pulling-it-all-together"]], "Defining the data stores for analysis": [[64, "defining-the-data-stores-for-analysis"]], "Create an app and apply it": [[64, "create-an-app-and-apply-it"]], "Inspecting the outcome": [[64, "inspecting-the-outcome"]], "Reconstructing ancestral states": [[65, "reconstructing-ancestral-states"]], "Define the ancestral_states app": [[65, "define-the-ancestral-states-app"]], "Applying a discrete-time, non-stationary nucleotide model": [[66, "applying-a-discrete-time-non-stationary-nucleotide-model"]], "Get a tree with branch lengths as paralinear": [[66, "get-a-tree-with-branch-lengths-as-paralinear"]], "Getting parameter estimates": [[66, "getting-parameter-estimates"]], "Extracting maximum likelihood estimates from a model_result": [[67, "extracting-maximum-likelihood-estimates-from-a-model-result"]], "Create and apply tabulate_stats app": [[67, "create-and-apply-tabulate-stats-app"]], "Edge parameters": [[67, "edge-parameters"]], "Global parameters": [[67, "global-parameters"]], "Motif parameters": [[67, "motif-parameters"]], "Testing a hypothesis \u2013 non-stationary or time-reversible": [[68, "testing-a-hypothesis-non-stationary-or-time-reversible"]], "hypothesis_result has attributes and keys": [[68, "hypothesis-result-has-attributes-and-keys"]], "Accessing the test statistics": [[68, "accessing-the-test-statistics"]], "The null hypothesis": [[68, "the-null-hypothesis"]], "The alternate hypothesis": [[68, "the-alternate-hypothesis"]], "Saving hypothesis results": [[68, "saving-hypothesis-results"]], "Apply a non-stationary nucleotide model to an alignment with 3 sequences": [[69, "apply-a-non-stationary-nucleotide-model-to-an-alignment-with-3-sequences"]], "model_result": [[69, "model-result"]], "Fitting a separate nucleotide model to each codon position": [[69, "fitting-a-separate-nucleotide-model-to-each-codon-position"]], "Specifying a non-stationary model with time-heterogeneous parameters": [[70, "specifying-a-non-stationary-model-with-time-heterogeneous-parameters"]], "Specify a distinct rate matrix for the great apes": [[70, "specify-a-distinct-rate-matrix-for-the-great-apes"]], "Apply a non-stationary nucleotide model to an alignment with a tree": [[71, "apply-a-non-stationary-nucleotide-model-to-an-alignment-with-a-tree"]], "Specify the tree via a tree instance": [[71, "specify-the-tree-via-a-tree-instance"]], "Specify the tree via a path.": [[71, "specify-the-tree-via-a-path"]], "Apply the model to an alignment": [[71, "apply-the-model-to-an-alignment"]], "natsel_neutral \u2013 a test for selective neutrality": [[72, "natsel-neutral-a-test-for-selective-neutrality"]], "natsel_sitehet \u2013 a test of site heterogeneity": [[73, "natsel-sitehet-a-test-of-site-heterogeneity"]], "Getting the individual site posterior probabilities": [[73, "getting-the-individual-site-posterior-probabilities"]], "natsel_timehet \u2013 a test of branch heterogeneity": [[74, "natsel-timehet-a-test-of-branch-heterogeneity"]], "natsel_zhang \u2013 a branch-site test": [[75, "natsel-zhang-a-branch-site-test"]], "Getting the posterior probabilities of site-class membership": [[75, "getting-the-posterior-probabilities-of-site-class-membership"]], "Getting all the statistics in tabular form": [[75, "getting-all-the-statistics-in-tabular-form"]], "Applying GNC, a non-stationary codon model": [[76, "applying-gnc-a-non-stationary-codon-model"]], "We can obtain the tree with branch lengths as ENS": [[76, "we-can-obtain-the-tree-with-branch-lengths-as-ens"]], "Applying a time-reversible codon model": [[77, "applying-a-time-reversible-codon-model"]], "Using the conditional nucleotide form codon model": [[77, "using-the-conditional-nucleotide-form-codon-model"]], "Applying a time-reversible nucleotide model": [[78, "applying-a-time-reversible-nucleotide-model"]], "Using the GTR model": [[78, "using-the-gtr-model"]], "apps": [[79, "apps"]], "Sequence Alignment": [[80, "sequence-alignment"]], "Overview of apps": [[81, "overview-of-apps"]], "Write your own Apps": [[82, "write-your-own-apps"]], "Testing hypotheses about sequence evolution": [[83, "testing-hypotheses-about-sequence-evolution"]], "Modelling sequence evolution": [[84, "modelling-sequence-evolution"]], "Testing for natural selection": [[85, "testing-for-natural-selection"]], "Tracking records that could not be processed": [[87, "tracking-records-that-could-not-be-processed"]], "The NotCompleted object": [[87, "the-notcompleted-object"]], "NotCompleted FALSE type": [[87, "notcompleted-false-type"]], "NotCompleted ERROR type": [[87, "notcompleted-error-type"]], "Composed functions propagate NotCompleted results": [[87, "composed-functions-propagate-notcompleted-results"]], "Turn your functions into composable apps": [[88, "turn-your-functions-into-composable-apps"]], "A simple example": [[88, "a-simple-example"]], "Renaming sequences": [[88, "renaming-sequences"]], "A user app with a different output type": [[88, "a-user-app-with-a-different-output-type"]], "Sequences": [[89, "sequences"]], "Generic molecular types": [[89, "generic-molecular-types"]], "DNA and RNA sequences": [[89, "dna-and-rna-sequences"]], "Creating a DNA sequence from a string": [[89, "creating-a-dna-sequence-from-a-string"]], "Creating a RNA sequence from a string": [[89, "creating-a-rna-sequence-from-a-string"]], "Converting to FASTA format": [[89, "converting-to-fasta-format"]], "Convert a RNA sequence to FASTA format": [[89, "convert-a-rna-sequence-to-fasta-format"]], "Creating a named sequence": [[89, "creating-a-named-sequence"]], "Setting or changing the name of a sequence": [[89, "setting-or-changing-the-name-of-a-sequence"]], "Complementing a DNA sequence": [[89, "complementing-a-dna-sequence"]], "Reverse complementing a DNA sequence": [[89, "reverse-complementing-a-dna-sequence"]], "Translate a DnaSequence to protein": [[89, "translate-a-dnasequence-to-protein"]], "Converting a DNA sequence to RNA": [[89, "converting-a-dna-sequence-to-rna"]], "Convert an RNA sequence to DNA": [[89, "convert-an-rna-sequence-to-dna"]], "Testing complementarity": [[89, "testing-complementarity"]], "Joining two DNA sequences": [[89, "joining-two-dna-sequences"]], "Slicing DNA sequences": [[89, "slicing-dna-sequences"]], "Getting 3rd positions from codons": [[89, "getting-3rd-positions-from-codons"]], "Getting 1st and 2nd positions from codons": [[89, "getting-1st-and-2nd-positions-from-codons"]], "Return a randomized version of the sequence": [[89, "return-a-randomized-version-of-the-sequence"]], "Remove gaps from a sequence": [[89, "remove-gaps-from-a-sequence"]], "Sequence Collections and Alignments": [[90, "sequence-collections-and-alignments"]], "What\u2019s the difference between Alignment and ArrayAlignment?": [[90, "what-s-the-difference-between-alignment-and-arrayalignment"]], "Basic Collection objects": [[90, "basic-collection-objects"]], "Constructing a SequenceCollection or Alignment object from strings": [[90, "constructing-a-sequencecollection-or-alignment-object-from-strings"]], "Constructing a ArrayAlignment using make_aligned_seqs": [[90, "constructing-a-arrayalignment-using-make-aligned-seqs"]], "Converting a SequenceCollection to FASTA format": [[90, "converting-a-sequencecollection-to-fasta-format"]], "Adding new sequences to an existing collection or alignment": [[90, "adding-new-sequences-to-an-existing-collection-or-alignment"]], "Appending the sequences": [[90, "appending-the-sequences"]], "Inserting the sequences": [[90, "inserting-the-sequences"]], "Inserting sequence(s) based on their alignment to a reference sequence": [[90, "inserting-sequence-s-based-on-their-alignment-to-a-reference-sequence"]], "Removing all columns with gaps in a named sequence": [[90, "removing-all-columns-with-gaps-in-a-named-sequence"]], "The elements of a collection or alignment": [[90, "the-elements-of-a-collection-or-alignment"]], "Accessing individual sequences from a collection or alignment by name": [[90, "accessing-individual-sequences-from-a-collection-or-alignment-by-name"]], "Slice the sequences from an alignment like a list": [[90, "slice-the-sequences-from-an-alignment-like-a-list"]], "Getting a subset of sequences from the alignment": [[90, "getting-a-subset-of-sequences-from-the-alignment"]], "Alignments": [[90, "alignments"]], "Creating an Alignment object from a SequenceCollection": [[90, "creating-an-alignment-object-from-a-sequencecollection"]], "Convert alignment to DNA, RNA or PROTEIN moltypes": [[90, "convert-alignment-to-dna-rna-or-protein-moltypes"]], "Handling gaps": [[90, "handling-gaps"]], "Remove all gaps from an alignment in FASTA format": [[90, "remove-all-gaps-from-an-alignment-in-fasta-format"]], "Writing sequences to file": [[90, "writing-sequences-to-file"]], "Converting an alignment to FASTA format": [[90, "converting-an-alignment-to-fasta-format"]], "Converting an alignment into Phylip format": [[90, "converting-an-alignment-into-phylip-format"]], "Converting an alignment to a list of strings": [[90, "converting-an-alignment-to-a-list-of-strings"]], "Slicing an alignment": [[90, "slicing-an-alignment"]], "By rows (sequences)": [[90, "by-rows-sequences"]], "Getting a single column from an alignment": [[90, "getting-a-single-column-from-an-alignment"]], "Getting a region of contiguous columns": [[90, "getting-a-region-of-contiguous-columns"]], "Iterating over alignment positions": [[90, "iterating-over-alignment-positions"]], "Getting codon 3rd positions from Alignment": [[90, "getting-codon-3rd-positions-from-alignment"]], "Getting codon 3rd positions from ArrayAlignment": [[90, "getting-codon-3rd-positions-from-arrayalignment"]], "Filtering positions": [[90, "filtering-positions"]], "Trim terminal stop codons": [[90, "trim-terminal-stop-codons"]], "Eliminating columns with non-nucleotide characters": [[90, "eliminating-columns-with-non-nucleotide-characters"]], "Getting all variable positions from an alignment": [[90, "getting-all-variable-positions-from-an-alignment"]], "Getting all constant positions from an alignment": [[90, "getting-all-constant-positions-from-an-alignment"]], "Getting all variable codons from an alignment": [[90, "getting-all-variable-codons-from-an-alignment"]], "Filtering sequences": [[90, "filtering-sequences"]], "Extracting sequences by sequence identifier into a new alignment object": [[90, "extracting-sequences-by-sequence-identifier-into-a-new-alignment-object"]], "Extracting sequences using an arbitrary function into a new alignment object": [[90, "extracting-sequences-using-an-arbitrary-function-into-a-new-alignment-object"]], "Computing alignment statistics": [[90, "computing-alignment-statistics"]], "Getting motif counts": [[90, "getting-motif-counts"]], "Computing motif probabilities from an alignment": [[90, "computing-motif-probabilities-from-an-alignment"]], "Working with alignment gaps": [[90, "working-with-alignment-gaps"]], "Filtering extracted columns for the gap character": [[90, "filtering-extracted-columns-for-the-gap-character"]], "Calculating the gap fraction": [[90, "calculating-the-gap-fraction"]], "Extracting maps of aligned to unaligned positions (i.e., gap maps)": [[90, "extracting-maps-of-aligned-to-unaligned-positions-i-e-gap-maps"]], "Filtering alignments based on gaps": [[90, "filtering-alignments-based-on-gaps"]], "Alphabets": [[91, "alphabets"]], "Alphabet and MolType": [[91, "alphabet-and-moltype"]], "Creating tuple alphabets": [[91, "creating-tuple-alphabets"]], "Convert a sequence into integers": [[91, "convert-a-sequence-into-integers"]], "Convert integers to a sequence": [[91, "convert-integers-to-a-sequence"]], "Annotation Databases": [[92, "annotation-databases"]], "What are the different types of AnnotationDb?": [[92, "what-are-the-different-types-of-annotationdb"]], "How to create a standalone BasicAnnotationDb": [[92, "how-to-create-a-standalone-basicannotationdb"]], "How to load an standalone AnnotationDb from a data file": [[92, "how-to-load-an-standalone-annotationdb-from-a-data-file"]], "From a GFF file": [[92, "from-a-gff-file"], [97, "from-a-gff-file"]], "From a Genbank file": [[92, "from-a-genbank-file"], [97, "from-a-genbank-file"]], "How to generate a summary of an AnnotationDb": [[92, "how-to-generate-a-summary-of-an-annotationdb"]], "How to add custom features to an AnnotationDb": [[92, "how-to-add-custom-features-to-an-annotationdb"]], "How to write an AnnotationDb to disk for efficient re-loading": [[92, "how-to-write-an-annotationdb-to-disk-for-efficient-re-loading"]], "How to query an AnnotationDb": [[92, "how-to-query-an-annotationdb"]], "Querying via Feature Name": [[92, "querying-via-feature-name"], [97, "querying-via-feature-name"]], "Querying via Feature Biotype": [[92, "querying-via-feature-biotype"], [97, "querying-via-feature-biotype"]], "Querying via region of interest": [[92, "querying-via-region-of-interest"], [97, "querying-via-region-of-interest"]], "Querying via the extended attributes field": [[92, "querying-via-the-extended-attributes-field"]], "How to interrogate an AnnotationDb": [[92, "how-to-interrogate-an-annotationdb"]], "How many unique genes are in a given genome?": [[92, "how-many-unique-genes-are-in-a-given-genome"]], "How to find the \u201cchildren\u201d of a Feature": [[92, "how-to-find-the-children-of-a-feature"], [97, "how-to-find-the-children-of-a-feature"]], "How to find the \u201cparent\u201d of a Feature": [[92, "how-to-find-the-parent-of-a-feature"], [97, "how-to-find-the-parent-of-a-feature"]], "How to combine two AnnotationDb instances": [[92, "how-to-combine-two-annotationdb-instances"]], "Checking the compatibility of two AnnotationDb instances": [[92, "checking-the-compatibility-of-two-annotationdb-instances"]], "Taking the union of two AnnotationDb instances": [[92, "taking-the-union-of-two-annotationdb-instances"]], "Updating an AnnotationDb with the record from another database": [[92, "updating-an-annotationdb-with-the-record-from-another-database"]], "Initialise a AnnotationDb with another database": [[92, "initialise-a-annotationdb-with-another-database"]], "How to assign an AnnotationDb to a sequence": [[92, "how-to-assign-an-annotationdb-to-a-sequence"]], "Directly assign an AnnotationDb to a Sequence": [[92, "directly-assign-an-annotationdb-to-a-sequence"]], "Loading an AnnotationDb and Sequence using the load_seq() function": [[92, "loading-an-annotationdb-and-sequence-using-the-load-seq-function"]], "For a single sequence Genbank file": [[92, "for-a-single-sequence-genbank-file"]], "For a single sequence FASTA file and an associated GFF annotation file": [[92, "for-a-single-sequence-fasta-file-and-an-associated-gff-annotation-file"]], "Building alignments": [[93, "building-alignments"]], "Using a cogent3 progressive aligner for nucleotides": [[93, "using-a-cogent3-progressive-aligner-for-nucleotides"]], "Using a cogent3 progressive aligner for codons": [[93, "using-a-cogent3-progressive-aligner-for-codons"]], "Converting gaps from aa-seq alignment to nuc seq alignment": [[93, "converting-gaps-from-aa-seq-alignment-to-nuc-seq-alignment"]], "Building phylogenies": [[94, "building-phylogenies"]], "Building A Phylogenetic Tree From Pairwise Distances": [[94, "building-a-phylogenetic-tree-from-pairwise-distances"]], "Directly via alignment.quick_tree()": [[94, "directly-via-alignment-quick-tree"]], "Using the DistanceMatrix object": [[94, "using-the-distancematrix-object"]], "Explicitly via DistanceMatrix and cogent3.phylo.nj.nj()`": [[94, "explicitly-via-distancematrix-and-cogent3-phylo-nj-nj"]], "Directly from a pairwise distance dict": [[94, "directly-from-a-pairwise-distance-dict"]], "By Least-squares": [[94, "by-least-squares"]], "By ML": [[94, "by-ml"]], "Genetic distance calculation": [[95, "genetic-distance-calculation"]], "Fast pairwise distance estimation": [[95, "fast-pairwise-distance-estimation"]], "Computing genetic distances using the Alignment object": [[95, "computing-genetic-distances-using-the-alignment-object"]], "Using the distance calculator directly": [[95, "using-the-distance-calculator-directly"]], "Likelihood based pairwise distance estimation": [[95, "likelihood-based-pairwise-distance-estimation"]], "Evolutionary Analysis Using Likelihood": [[96, "evolutionary-analysis-using-likelihood"]], "Specifying substitution models": [[96, "specifying-substitution-models"]], "The available pre-defined substitution models": [[96, "the-available-pre-defined-substitution-models"]], "Getting a substitution model with get_model()": [[96, "getting-a-substitution-model-with-get-model"]], "Rate heterogeneity models": [[96, "rate-heterogeneity-models"]], "For nucleotide": [[96, "for-nucleotide"]], "For codon": [[96, "for-codon"]], "For protein": [[96, "for-protein"]], "Making a likelihood function": [[96, "making-a-likelihood-function"]], "Providing an alignment to a likelihood function": [[96, "providing-an-alignment-to-a-likelihood-function"]], "Scoping parameters on trees \u2013 time heterogeneous models": [[96, "scoping-parameters-on-trees-time-heterogeneous-models"]], "Specifying a parameter as constant": [[96, "specifying-a-parameter-as-constant"]], "Providing a starting value for a parameter": [[96, "providing-a-starting-value-for-a-parameter"]], "Setting parameter bounds for optimisation": [[96, "setting-parameter-bounds-for-optimisation"]], "Setting an upper bound for branch length": [[96, "setting-an-upper-bound-for-branch-length"]], "Specifying rate heterogeneity functions": [[96, "specifying-rate-heterogeneity-functions"]], "Specifying Phylo-HMMs": [[96, "specifying-phylo-hmms"]], "Fitting likelihood functions - Choice of optimisers": [[96, "fitting-likelihood-functions-choice-of-optimisers"]], "How to check your optimisation was successful": [[96, "how-to-check-your-optimisation-was-successful"]], "Overview of the fitted likelihood function": [[96, "overview-of-the-fitted-likelihood-function"]], "Log likelihood and number of free parameters": [[96, "log-likelihood-and-number-of-free-parameters"]], "Aikake Information Criterion": [[96, "aikake-information-criterion"]], "Bayesian Information Criterion": [[96, "bayesian-information-criterion"]], "Getting maximum likelihood estimates": [[96, "getting-maximum-likelihood-estimates"]], "One at a time": [[96, "one-at-a-time"]], "Just the motif probabilities": [[96, "just-the-motif-probabilities"]], "As tables": [[96, "as-tables"]], "Testing Hypotheses - Using Likelihood Ratio Tests": [[96, "testing-hypotheses-using-likelihood-ratio-tests"]], "Testing Hypotheses - By parametric bootstrapping": [[96, "testing-hypotheses-by-parametric-bootstrapping"]], "Determining confidence intervals on MLEs": [[96, "determining-confidence-intervals-on-mles"]], "Saving results": [[96, "saving-results"]], "Reconstructing ancestral sequences": [[96, "reconstructing-ancestral-sequences"]], "Features": [[97, "features"]], "How to create a custom Feature": [[97, "how-to-create-a-custom-feature"]], "Via add_feature": [[97, "via-add-feature"]], "On a Sequence": [[97, "on-a-sequence"]], "On a Sequence within an Alignment": [[97, "on-a-sequence-within-an-alignment"]], "On an Alignment": [[97, "on-an-alignment"]], "Via an AnnotationDb": [[97, "via-an-annotationdb"]], "How to load bulk Features from a File": [[97, "how-to-load-bulk-features-from-a-file"]], "How to load features and sequence data": [[97, "how-to-load-features-and-sequence-data"], [97, "id1"]], "How to load features and associate them with an existing sequence": [[97, "how-to-load-features-and-associate-them-with-an-existing-sequence"]], "How to load features and associate them with sequences in an existing alignment": [[97, "how-to-load-features-and-associate-them-with-sequences-in-an-existing-alignment"]], "How to query a Sequence or Alignment for Features": [[97, "how-to-query-a-sequence-or-alignment-for-features"]], "Querying a Sequence for Features": [[97, "querying-a-sequence-for-features"]], "Querying a Sequence (via an Alignment) for Features": [[97, "querying-a-sequence-via-an-alignment-for-features"]], "Querying an Alignment for Features": [[97, "querying-an-alignment-for-features"]], "Querying for features on any Sequence in an Alignment": [[97, "querying-for-features-on-any-sequence-in-an-alignment"]], "Querying for features on an Alignment": [[97, "querying-for-features-on-an-alignment"]], "Querying features that span gaps in alignments": [[97, "querying-features-that-span-gaps-in-alignments"]], "Examples using the methods available on Features": [[97, "examples-using-the-methods-available-on-features"]], "How to slice a Sequence or Alignment by its features": [[97, "how-to-slice-a-sequence-or-alignment-by-its-features"]], "How to display the features of a Sequence": [[97, "how-to-display-the-features-of-a-sequence"]], "How to find the coordinates of a feature": [[97, "how-to-find-the-coordinates-of-a-feature"]], "How to take the union of features": [[97, "how-to-take-the-union-of-features"]], "How to get the shadow of a Feature": [[97, "how-to-get-the-shadow-of-a-feature"]], "How to use the shadow of a Feature to return the intergenic sequence": [[97, "how-to-use-the-shadow-of-a-feature-to-return-the-intergenic-sequence"]], "How to mask annotated regions": [[97, "how-to-mask-annotated-regions"]], "Masking annotated regions on a sequence": [[97, "masking-annotated-regions-on-a-sequence"]], "Masking annotated regions on an Alignment": [[97, "masking-annotated-regions-on-an-alignment"]], "How to copy features": [[97, "how-to-copy-features"]], "How to get the positions of a feature as one span": [[97, "how-to-get-the-positions-of-a-feature-as-one-span"]], "Behaviour of annotations on nucleic acid sequences": [[97, "behaviour-of-annotations-on-nucleic-acid-sequences"]], "Using genetic codes": [[98, "using-genetic-codes"]], "Selecting codes in methods that support them": [[98, "selecting-codes-in-methods-that-support-them"]], "Translate DNA sequences": [[98, "translate-dna-sequences"]], "Translate all six frames": [[98, "translate-all-six-frames"]], "Find out how many stops in a frame": [[98, "find-out-how-many-stops-in-a-frame"]], "Translate a codon": [[98, "translate-a-codon"]], "Look up the amino acid corresponding to a single codon": [[98, "look-up-the-amino-acid-corresponding-to-a-single-codon"]], "Get all the codons for one amino acid": [[98, "get-all-the-codons-for-one-amino-acid"]], "Get all the codons for a group of amino acids": [[98, "get-all-the-codons-for-a-group-of-amino-acids"]], "Converting the CodonAlphabet to codon series": [[98, "converting-the-codonalphabet-to-codon-series"]], "Obtaining the codons from a DnaSequence object": [[98, "obtaining-the-codons-from-a-dnasequence-object"]], "Translating a DNA sequence": [[98, "translating-a-dna-sequence"]], "Translating a DNA sequence containing stop codons": [[98, "translating-a-dna-sequence-containing-stop-codons"]], "Cookbook": [[99, "cookbook"]], "Loading a sequence from a file": [[100, "loading-a-sequence-from-a-file"]], "Loading an alignment from a file or url": [[100, "loading-an-alignment-from-a-file-or-url"]], "Loading aligned sequences": [[100, "loading-aligned-sequences"]], "Todo": [[100, "id1"], [111, "id1"], [112, "id1"], [127, "id1"], [131, "id1"]], "Loading unaligned sequences": [[100, "loading-unaligned-sequences"]], "Loading from a url": [[100, "loading-from-a-url"], [101, "loading-from-a-url"], [106, "loading-from-a-url"]], "Specifying the file format": [[100, "specifying-the-file-format"]], "Specifying the sequence molecular type": [[100, "specifying-the-sequence-molecular-type"]], "Making an alignment from standard python objects": [[100, "making-an-alignment-from-standard-python-objects"]], "From a dict of strings": [[100, "from-a-dict-of-strings"]], "From a series of strings": [[100, "from-a-series-of-strings"]], "Stripping label characters on loading": [[100, "stripping-label-characters-on-loading"]], "Making a sequence collection from standard python objects": [[100, "making-a-sequence-collection-from-standard-python-objects"]], "Loading sequences using format parsers": [[100, "loading-sequences-using-format-parsers"]], "Loading FASTA sequences from an open file or list of lines": [[100, "loading-fasta-sequences-from-an-open-file-or-list-of-lines"]], "Handling overloaded FASTA sequence labels": [[100, "handling-overloaded-fasta-sequence-labels"]], "Loading a csv file": [[101, "loading-a-csv-file"], [106, "loading-a-csv-file"]], "Loading delimited specifying the format": [[101, "loading-delimited-specifying-the-format"], [106, "loading-delimited-specifying-the-format"]], "Loading delimited data without a header line": [[101, "loading-delimited-data-without-a-header-line"], [106, "loading-delimited-data-without-a-header-line"]], "Using load_delimited()": [[101, "using-load-delimited"], [106, "using-load-delimited"]], "Using FilteringParser": [[101, "using-filteringparser"], [106, "using-filteringparser"]], "Selectively loading parts of a big file": [[101, "selectively-loading-parts-of-a-big-file"], [106, "selectively-loading-parts-of-a-big-file"]], "Loading a set number of lines from a file": [[101, "loading-a-set-number-of-lines-from-a-file"], [106, "loading-a-set-number-of-lines-from-a-file"]], "Loading only some rows": [[101, "loading-only-some-rows"], [106, "loading-only-some-rows"]], "Loading only some columns": [[101, "loading-only-some-columns"], [106, "loading-only-some-columns"]], "Load raw data as a list of lists of strings": [[101, "load-raw-data-as-a-list-of-lists-of-strings"], [106, "load-raw-data-as-a-list-of-lists-of-strings"]], "Make a table from header and rows": [[101, "make-a-table-from-header-and-rows"], [106, "make-a-table-from-header-and-rows"]], "Make a table from a dict": [[101, "make-a-table-from-a-dict"], [106, "make-a-table-from-a-dict"]], "Specify the column order when creating from a dict.": [[101, "specify-the-column-order-when-creating-from-a-dict"], [106, "specify-the-column-order-when-creating-from-a-dict"]], "Create the table with an index": [[101, "create-the-table-with-an-index"], [106, "create-the-table-with-an-index"]], "Create a table from a pandas.DataFrame": [[101, "create-a-table-from-a-pandas-dataframe"], [106, "create-a-table-from-a-pandas-dataframe"]], "Create a table from header and rows": [[101, "create-a-table-from-header-and-rows"], [106, "create-a-table-from-header-and-rows"]], "Create a table from dict": [[101, "create-a-table-from-dict"], [106, "create-a-table-from-dict"]], "Create a table from a 2D dict": [[101, "create-a-table-from-a-2d-dict"], [106, "create-a-table-from-a-2d-dict"]], "Create a table that has complex python objects as elements": [[101, "create-a-table-that-has-complex-python-objects-as-elements"], [106, "create-a-table-that-has-complex-python-objects-as-elements"]], "Create an empty table": [[101, "create-an-empty-table"], [106, "create-an-empty-table"]], "Manipulating biological data": [[102, "manipulating-biological-data"]], "Sequences and Alignments": [[102, "sequences-and-alignments"]], "Genetic code": [[102, "genetic-code"]], "Trees": [[102, "trees"], [105, "trees"]], "Molecular types": [[103, "molecular-types"]], "Available molecular types": [[103, "available-molecular-types"]], "Getting a MolType": [[103, "getting-a-moltype"]], "Using a MolType to get ambiguity codes": [[103, "using-a-moltype-to-get-ambiguity-codes"]], "MolType definition of degenerate codes": [[103, "moltype-definition-of-degenerate-codes"]], "Nucleic acid MolType and complementing": [[103, "nucleic-acid-moltype-and-complementing"]], "Making sequences": [[103, "making-sequences"]], "Verify sequences": [[103, "verify-sequences"]], "Making a custom MolType": [[103, "making-a-custom-moltype"]], "Protein sequences": [[104, "protein-sequences"]], "Creating a ProteinSequence with a name": [[104, "creating-a-proteinsequence-with-a-name"]], "Converting a DNA sequence string to protein sequence string": [[104, "converting-a-dna-sequence-string-to-protein-sequence-string"]], "Converting a nucleic acid sequence object to protein": [[104, "converting-a-nucleic-acid-sequence-object-to-protein"]], "Loading protein sequences from a Phylip file": [[104, "loading-protein-sequences-from-a-phylip-file"]], "Loading a tree from a file and visualizing it with ascii_art()": [[105, "loading-a-tree-from-a-file-and-visualizing-it-with-ascii-art"]], "Writing a tree to a file": [[105, "writing-a-tree-to-a-file"]], "Getting the individual nodes of a tree by name": [[105, "getting-the-individual-nodes-of-a-tree-by-name"]], "Getting the name of a node (or a tree)": [[105, "getting-the-name-of-a-node-or-a-tree"]], "The object type of a tree and its nodes is the same": [[105, "the-object-type-of-a-tree-and-its-nodes-is-the-same"]], "Working with the nodes of a tree": [[105, "working-with-the-nodes-of-a-tree"]], "Getting the path between two tips or edges (connecting edges)": [[105, "getting-the-path-between-two-tips-or-edges-connecting-edges"]], "Getting the distance between two nodes": [[105, "getting-the-distance-between-two-nodes"]], "Getting the last common ancestor (LCA) for two nodes": [[105, "getting-the-last-common-ancestor-lca-for-two-nodes"]], "Getting all the ancestors for a node": [[105, "getting-all-the-ancestors-for-a-node"]], "Getting all the children for a node": [[105, "getting-all-the-children-for-a-node"]], "Getting all the distances for a tree": [[105, "getting-all-the-distances-for-a-tree"]], "Getting the two nodes that are farthest apart": [[105, "getting-the-two-nodes-that-are-farthest-apart"]], "Get the nodes within a given distance": [[105, "get-the-nodes-within-a-given-distance"]], "Rerooting trees": [[105, "rerooting-trees"]], "At a named node": [[105, "at-a-named-node"]], "At the midpoint": [[105, "at-the-midpoint"]], "Near a given tip": [[105, "near-a-given-tip"]], "Tree representations": [[105, "tree-representations"]], "Newick format": [[105, "newick-format"]], "XML format": [[105, "xml-format"]], "Tree traversal": [[105, "tree-traversal"]], "Preorder": [[105, "preorder"]], "Postorder": [[105, "postorder"]], "Selecting subtrees": [[105, "selecting-subtrees"]], "One way to do it": [[105, "one-way-to-do-it"]], "Tree manipulation methods": [[105, "tree-manipulation-methods"]], "Pruning the tree": [[105, "pruning-the-tree"]], "Create a full unrooted copy of the tree": [[105, "create-a-full-unrooted-copy-of-the-tree"]], "Transform tree into a bifurcating tree": [[105, "transform-tree-into-a-bifurcating-tree"]], "Transform tree into a balanced tree": [[105, "transform-tree-into-a-balanced-tree"]], "Test two trees for same topology": [[105, "test-two-trees-for-same-topology"]], "Calculate each node\u2019s maximum distance to a tip": [[105, "calculate-each-node-s-maximum-distance-to-a-tip"]], "Scale branch lengths in place to integers for ascii output": [[105, "scale-branch-lengths-in-place-to-integers-for-ascii-output"]], "Get tip-to-tip distances": [[105, "get-tip-to-tip-distances"]], "Compare two trees using tip-to-tip distance matrices": [[105, "compare-two-trees-using-tip-to-tip-distance-matrices"]], "Tabular data": [[106, "tabular-data"]], "Adding a new column": [[106, "adding-a-new-column"], [106, "id1"]], "Add a title and a legend to a table": [[106, "add-a-title-and-a-legend-to-a-table"]], "Iterating over table rows": [[106, "iterating-over-table-rows"]], "How many rows are there?": [[106, "how-many-rows-are-there"]], "How many columns are there?": [[106, "how-many-columns-are-there"]], "Iterating over table columns": [[106, "iterating-over-table-columns"]], "Table slicing using column names": [[106, "table-slicing-using-column-names"]], "Table slicing using indices": [[106, "table-slicing-using-indices"]], "Changing displayed numerical precision": [[106, "changing-displayed-numerical-precision"]], "Change digits or column spacing": [[106, "change-digits-or-column-spacing"]], "Wrapping tables for display": [[106, "wrapping-tables-for-display"]], "Display the top of a table using head()": [[106, "display-the-top-of-a-table-using-head"]], "Display the bottom of a table using tail()": [[106, "display-the-bottom-of-a-table-using-tail"]], "Display random rows from a table": [[106, "display-random-rows-from-a-table"]], "Change the number of rows displayed by repr()": [[106, "change-the-number-of-rows-displayed-by-repr"]], "Changing column headings": [[106, "changing-column-headings"]], "Create a new column from existing ones": [[106, "create-a-new-column-from-existing-ones"]], "Get table data as a numpy array": [[106, "get-table-data-as-a-numpy-array"]], "Get a table column as a list": [[106, "get-a-table-column-as-a-list"]], "Get multiple table columns as a list": [[106, "get-multiple-table-columns-as-a-list"]], "Get the table as a row oriented dict": [[106, "get-the-table-as-a-row-oriented-dict"]], "Get the table as a column oriented dict": [[106, "get-the-table-as-a-column-oriented-dict"]], "Get the table as a pandas.DataFrame": [[106, "get-the-table-as-a-pandas-dataframe"]], "Get a table of counts as a contingency table": [[106, "get-a-table-of-counts-as-a-contingency-table"]], "Appending tables": [[106, "appending-tables"]], "Summing a single column": [[106, "summing-a-single-column"]], "Summing multiple columns or rows - strictly numerical data": [[106, "summing-multiple-columns-or-rows-strictly-numerical-data"]], "Summing multiple columns or rows with mixed non-numeric/numeric data": [[106, "summing-multiple-columns-or-rows-with-mixed-non-numeric-numeric-data"]], "Filtering table rows": [[106, "filtering-table-rows"]], "Filtering table columns": [[106, "filtering-table-columns"]], "Standard sorting": [[106, "standard-sorting"]], "Reverse sorting": [[106, "reverse-sorting"]], "Sorting involving multiple columns, one reversed": [[106, "sorting-involving-multiple-columns-one-reversed"]], "Getting raw data for a single column": [[106, "getting-raw-data-for-a-single-column"]], "Getting raw data for multiple columns": [[106, "getting-raw-data-for-multiple-columns"]], "Getting distinct values": [[106, "getting-distinct-values"]], "Counting occurrences of values": [[106, "counting-occurrences-of-values"]], "Counting unique values": [[106, "counting-unique-values"]], "Joining or merging tables": [[106, "joining-or-merging-tables"]], "Transpose a table": [[106, "transpose-a-table"]], "Specify markdown as the str() format": [[106, "specify-markdown-as-the-str-format"]], "Specify latex as the str() format": [[106, "specify-latex-as-the-str-format"]], "Get a table as a markdown formatted string": [[106, "get-a-table-as-a-markdown-formatted-string"]], "Get a table as a latex formatted string": [[106, "get-a-table-as-a-latex-formatted-string"]], "Get a table as a restructured text csv-table": [[106, "get-a-table-as-a-restructured-text-csv-table"]], "Get a table as a restructured text grid table": [[106, "get-a-table-as-a-restructured-text-grid-table"]], "Getting a latex format table with to_string()": [[106, "getting-a-latex-format-table-with-to-string"]], "Getting a bedGraph format with to_string()": [[106, "getting-a-bedgraph-format-with-to-string"]], "Getting a table as html": [[106, "getting-a-table-as-html"]], "What formats can be written?": [[106, "what-formats-can-be-written"]], "Writing a latex formmated file": [[106, "writing-a-latex-formmated-file"]], "Writing delimited formats": [[106, "writing-delimited-formats"]], "UnionDict \u2013 a dict with set like operations and keys as attributes": [[107, "uniondict-a-dict-with-set-like-operations-and-keys-as-attributes"], [108, "uniondict-a-dict-with-set-like-operations-and-keys-as-attributes"]], "Accessing elements of a UnionDict": [[107, "accessing-elements-of-a-uniondict"], [108, "accessing-elements-of-a-uniondict"]], "Updating a UnionDict": [[107, "updating-a-uniondict"], [108, "updating-a-uniondict"]], "Accessing a non-existent UnionDict key": [[107, "accessing-a-non-existent-uniondict-key"], [108, "accessing-a-non-existent-uniondict-key"]], "Useful Utilities": [[108, "useful-utilities"]], "Using Cogent3\u2019s optimisers for your own functions": [[108, "using-cogent3-s-optimisers-for-your-own-functions"]], "Miscellaneous functions": [[108, "miscellaneous-functions"]], "Force a variable to be iterable": [[108, "force-a-variable-to-be-iterable"]], "Curry a function": [[108, "curry-a-function"]], "Test to see if an object is iterable": [[108, "test-to-see-if-an-object-is-iterable"]], "Test to see if an object is a single char": [[108, "test-to-see-if-an-object-is-a-single-char"]], "Flatten a deeply nested iterable": [[108, "flatten-a-deeply-nested-iterable"]], "Test to determine if list of tuple": [[108, "test-to-determine-if-list-of-tuple"]], "Create a case-insensitive iterable": [[108, "create-a-case-insensitive-iterable"]], "Construct a distance matrix lookup function": [[108, "construct-a-distance-matrix-lookup-function"]], "Check class types": [[108, "check-class-types"]], "Delegate to a separate object": [[108, "delegate-to-a-separate-object"]], "Wrap a function to hide from a class": [[108, "wrap-a-function-to-hide-from-a-class"]], "Construct a constrained container": [[108, "construct-a-constrained-container"]], "Available genetic codes": [[109, "available-genetic-codes"]], "Getting a genetic code with get_code()": [[109, "getting-a-genetic-code-with-get-code"]], "Data Files Used in the Documentation": [[110, "data-files-used-in-the-documentation"]], "Coevolution analysis": [[111, "coevolution-analysis"]], "Display coevolution as a heatmap": [[111, "display-coevolution-as-a-heatmap"]], "Display coevolution scores as a Violin plot": [[111, "display-coevolution-scores-as-a-violin-plot"]], "Display coevolution scores as a Boxplot": [[111, "display-coevolution-scores-as-a-boxplot"]], "Dotplot basics": [[112, "dotplot-basics"]], "Modifying the matching parameters": [[112, "modifying-the-matching-parameters"]], "Displaying dotplot for the reverse complement": [[112, "displaying-dotplot-for-the-reverse-complement"]], "Setting plot attributes": [[112, "setting-plot-attributes"]], "Dotplot with annotated sequences": [[113, "dotplot-with-annotated-sequences"]], "Reloading from json": [[113, "reloading-from-json"]], "Removing annotation tracks": [[113, "removing-annotation-tracks"]], "Counting gaps per sequence": [[114, "counting-gaps-per-sequence"]], "Plotting counts of unique gaps": [[114, "plotting-counts-of-unique-gaps"]], "Displaying unique gaps as a bar chart": [[114, "displaying-unique-gaps-as-a-bar-chart"]], "Displaying unique gaps as a violin plot": [[114, "displaying-unique-gaps-as-a-violin-plot"]], "Displaying unique gaps as a box plot": [[114, "displaying-unique-gaps-as-a-box-plot"]], "Information analysis of an alignment": [[115, "information-analysis-of-an-alignment"]], "Illustrated with a simple example": [[115, "illustrated-with-a-simple-example"]], "On a sample data set": [[115, "on-a-sample-data-set"]], "Sequence logos": [[116, "sequence-logos"]], "Drawing logo for a TFBS": [[116, "drawing-logo-for-a-tfbs"]], "Drawing a sequence logo from a multiple sequence alignment": [[116, "drawing-a-sequence-logo-from-a-multiple-sequence-alignment"]], "Sequence logo of protein alignment": [[116, "sequence-logo-of-protein-alignment"]], "Sequence Features": [[117, "sequence-features"]], "Drawing all features on a sequence segment": [[117, "drawing-all-features-on-a-sequence-segment"]], "Drawing selected feature biotypes": [[117, "drawing-selected-feature-biotypes"]], "Image Gallery": [[118, "image-gallery"]], "Alignments & Sequences": [[118, "alignments-sequences"]], "Phylogenetic Trees": [[118, "phylogenetic-trees"]], "Angular Dendrogram Style": [[119, "angular-dendrogram-style"]], "With Contemporaneous Tips": [[119, "with-contemporaneous-tips"], [120, "with-contemporaneous-tips"], [121, "with-contemporaneous-tips"], [122, "with-contemporaneous-tips"]], "Circular Dendrogram Style": [[120, "circular-dendrogram-style"]], "Colouring a set of edges": [[120, "colouring-a-set-of-edges"], [122, "colouring-a-set-of-edges"]], "Radial Dendrogram Style": [[121, "radial-dendrogram-style"]], "Square Dendrogram Style": [[122, "square-dendrogram-style"]], "Showing Bootstrap Support": [[123, "showing-bootstrap-support"]], "Change the placement of support text": [[123, "change-the-placement-of-support-text"]], "Map protein alignment gaps to DNA alignment gaps": [[124, "map-protein-alignment-gaps-to-dna-alignment-gaps"]], "Make a UPGMA cluster": [[125, "make-a-upgma-cluster"]], "Make a neighbor joining tree": [[126, "make-a-neighbor-joining-tree"]], "Calculate pairwise distances between sequences": [[127, "calculate-pairwise-distances-between-sequences"]], "Using codon models": [[128, "using-codon-models"]], "Constructing the codon substitution model": [[128, "constructing-the-codon-substitution-model"]], "Standard test of neutrality": [[128, "standard-test-of-neutrality"]], "Rate-heterogeneity model variants": [[128, "rate-heterogeneity-model-variants"]], "Mixing branch and site-heterogeneity": [[128, "mixing-branch-and-site-heterogeneity"]], "Perform a coevolutionary analysis on biological sequence alignments": [[129, "perform-a-coevolutionary-analysis-on-biological-sequence-alignments"]], "Use an empirical protein substitution model": [[130, "use-an-empirical-protein-substitution-model"]], "Evaluate process heterogeneity using a Hidden Markov Model": [[131, "evaluate-process-heterogeneity-using-a-hidden-markov-model"]], "Model Ho: no rate heterogeneity": [[131, "model-ho-no-rate-heterogeneity"]], "Model Ha(1): two classes of gamma distributed but independent sites": [[131, "model-ha-1-two-classes-of-gamma-distributed-but-independent-sites"]], "Model Ha(2): fast and slowly evolving sites are auto-correlated": [[131, "model-ha-2-fast-and-slowly-evolving-sites-are-auto-correlated"]], "A model with patches of kappa": [[131, "a-model-with-patches-of-kappa"]], "Tutorials": [[132, "tutorials"]], "Data manipulation": [[132, "data-manipulation"]], "General data analysis": [[132, "general-data-analysis"]], "Modelling Evolution": [[132, "modelling-evolution"]], "Phylogenetic Reconstruction": [[132, "phylogenetic-reconstruction"]], "Utilities": [[132, "utilities"]], "Manipulation of Tree Node Objects": [[133, "manipulation-of-tree-node-objects"]], "An Example of Conditional Tree Node Modifications": [[133, "an-example-of-conditional-tree-node-modifications"]], "A test of the neutral theory": [[134, "a-test-of-the-neutral-theory"]], "Parallel computations": [[135, "parallel-computations"]], "Parallel computation on a single computer": [[135, "parallel-computation-on-a-single-computer"]], "Using app.apply_to()": [[135, "using-app-apply-to"]], "Directly using cogent3.util.parallel.map()": [[135, "directly-using-cogent3-util-parallel-map"]], "Parallel computation on multiple computers": [[135, "parallel-computation-on-multiple-computers"]], "Performing a parametric bootstrap": [[136, "performing-a-parametric-bootstrap"]], "Estimating periodic signals": [[137, "estimating-periodic-signals"]], "Estimating the periods in a signal": [[137, "estimating-the-periods-in-a-signal"]], "For numerical (continuous) data": [[137, "for-numerical-continuous-data"], [137, "id1"]], "Discrete Fourier transform": [[137, "discrete-fourier-transform"]], "Auto-correlation": [[137, "auto-correlation"]], "For symbolic data": [[137, "for-symbolic-data"], [137, "id2"], [137, "id4"]], "Estimating power for specified period": [[137, "estimating-power-for-specified-period"]], "Measuring statistical significance of periodic signals": [[137, "measuring-statistical-significance-of-periodic-signals"]], "For numerical (continuous data)": [[137, "id3"]], "Permutation testing": [[137, "permutation-testing"]], "Phylogenetic reconstruction by least squares": [[138, "phylogenetic-reconstruction-by-least-squares"]], "Look for the single best tree": [[138, "look-for-the-single-best-tree"]], "A more rigorous tree space search": [[138, "a-more-rigorous-tree-space-search"]], "Assessing the fit for a pre-specified tree topology": [[138, "assessing-the-fit-for-a-pre-specified-tree-topology"]], "Using maximum likelihood for measuring tree fit": [[138, "using-maximum-likelihood-for-measuring-tree-fit"]], "Analysis of rate heterogeneity": [[139, "analysis-of-rate-heterogeneity"]], "Performing a relative rate test": [[140, "performing-a-relative-rate-test"]], "Allowing substitution model parameters to differ between branches": [[141, "allowing-substitution-model-parameters-to-differ-between-branches"]], "Specifying a clade": [[141, "specifying-a-clade"]], "Specifying a stem": [[141, "specifying-a-stem"]], "Specifying clade and stem": [[141, "specifying-clade-and-stem"]], "Alternate arguments for specifying edges": [[141, "alternate-arguments-for-specifying-edges"]], "Applications of scoped parameters": [[141, "applications-of-scoped-parameters"]], "The simplest script": [[142, "the-simplest-script"]], "Simulate an alignment": [[143, "simulate-an-alignment"]], "Likelihood analysis of multiple loci": [[144, "likelihood-analysis-of-multiple-loci"]], "Community": [[145, "community"]], "Contributing": [[145, "contributing"]], "Asking for help": [[145, "asking-for-help"]], "Posting bugs": [[145, "posting-bugs"]], "Support": [[145, "support"]], "Citation": [[145, "citation"]], "User Guides": [[146, "user-guides"]], "Installation": [[147, "installation"]], "Minimal installation": [[147, "minimal-installation"]], "Install with graphing tools": [[147, "install-with-graphing-tools"]], "Install with developer tools": [[147, "install-with-developer-tools"]], "Installing the development version": [[147, "installing-the-development-version"]], "Installing using conda / mamba": [[147, "installing-using-conda-mamba"]], "License": [[148, "license"]], "How does cogent3 relate to PyCogent?": [[149, "how-does-cogent3-relate-to-pycogent"]], "cogent3 no longer includes module x, what do I do?": [[149, "cogent3-no-longer-includes-module-x-what-do-i-do"], [151, "cogent3-no-longer-includes-module-x-what-do-i-do"]], "Index": [[150, "index"]], "Project History": [[151, "project-history"]], "Making Sense from Sequence": [[152, "making-sense-from-sequence"]], "Projects using cogent3": [[153, "projects-using-cogent3"]]}, "indexentries": {"available_apps() (in module cogent3.__init__)": [[1, "cogent3.__init__.available_apps"]], "available_codes() (in module cogent3.__init__)": [[2, "cogent3.__init__.available_codes"]], "available_models() (in module cogent3.__init__)": [[3, "cogent3.__init__.available_models"]], "available_moltypes() (in module cogent3.__init__)": [[4, "cogent3.__init__.available_moltypes"]], "get_code() (in module cogent3.__init__)": [[5, "cogent3.__init__.get_code"]], "get_model() (in module cogent3.__init__)": [[6, "cogent3.__init__.get_model"]], "get_moltype() (in module cogent3.__init__)": [[7, "cogent3.__init__.get_moltype"]], "load_aligned_seqs() (in module cogent3.__init__)": [[8, "cogent3.__init__.load_aligned_seqs"]], "load_annotations() (in module cogent3.__init__)": [[9, "cogent3.__init__.load_annotations"]], "load_delimited() (in module cogent3.__init__)": [[10, "cogent3.__init__.load_delimited"]], "load_seq() (in module cogent3.__init__)": [[11, "cogent3.__init__.load_seq"]], "load_table() (in module cogent3.__init__)": [[12, "cogent3.__init__.load_table"]], "load_tree() (in module cogent3.__init__)": [[13, "cogent3.__init__.load_tree"]], "load_unaligned_seqs() (in module cogent3.__init__)": [[14, "cogent3.__init__.load_unaligned_seqs"]], "make_aligned_seqs() (in module cogent3.__init__)": [[15, "cogent3.__init__.make_aligned_seqs"]], "make_seq() (in module cogent3.__init__)": [[16, "cogent3.__init__.make_seq"]], "make_table() (in module cogent3.__init__)": [[17, "cogent3.__init__.make_table"]], "make_tree() (in module cogent3.__init__)": [[18, "cogent3.__init__.make_tree"]], "make_unaligned_seqs() (in module cogent3.__init__)": [[19, "cogent3.__init__.make_unaligned_seqs"]], "open_() (in module cogent3.__init__)": [[20, "cogent3.__init__.open_"]], "open_data_store() (in module cogent3.__init__)": [[21, "cogent3.__init__.open_data_store"]], "alignment (class in cogent3.core.alignment)": [[23, "cogent3.core.alignment.Alignment"]], "add_feature() (alignment method)": [[23, "cogent3.core.alignment.Alignment.add_feature"]], "add_from_ref_aln() (alignment method)": [[23, "cogent3.core.alignment.Alignment.add_from_ref_aln"]], "add_seqs() (alignment method)": [[23, "cogent3.core.alignment.Alignment.add_seqs"]], "alignment_quality() (alignment method)": [[23, "cogent3.core.alignment.Alignment.alignment_quality"]], "annotate_from_gff() (alignment method)": [[23, "cogent3.core.alignment.Alignment.annotate_from_gff"]], "annotation_db (alignment property)": [[23, "cogent3.core.alignment.Alignment.annotation_db"]], "apply_pssm() (alignment method)": [[23, "cogent3.core.alignment.Alignment.apply_pssm"]], "coevolution() (alignment method)": [[23, "cogent3.core.alignment.Alignment.coevolution"]], "copy() (alignment method)": [[23, "cogent3.core.alignment.Alignment.copy"]], "copy_annotations() (alignment method)": [[23, "cogent3.core.alignment.Alignment.copy_annotations"]], "count_gaps_per_pos() (alignment method)": [[23, "cogent3.core.alignment.Alignment.count_gaps_per_pos"]], "count_gaps_per_seq() (alignment method)": [[23, "cogent3.core.alignment.Alignment.count_gaps_per_seq"]], "counts() (alignment method)": [[23, "cogent3.core.alignment.Alignment.counts"]], "counts_per_pos() (alignment method)": [[23, "cogent3.core.alignment.Alignment.counts_per_pos"]], "counts_per_seq() (alignment method)": [[23, "cogent3.core.alignment.Alignment.counts_per_seq"]], "deepcopy() (alignment method)": [[23, "cogent3.core.alignment.Alignment.deepcopy"]], "default_gap (alignment attribute)": [[23, "cogent3.core.alignment.Alignment.default_gap"]], "degap() (alignment method)": [[23, "cogent3.core.alignment.Alignment.degap"]], "distance_matrix() (alignment method)": [[23, "cogent3.core.alignment.Alignment.distance_matrix"]], "dotplot() (alignment method)": [[23, "cogent3.core.alignment.Alignment.dotplot"]], "entropy_per_pos() (alignment method)": [[23, "cogent3.core.alignment.Alignment.entropy_per_pos"]], "entropy_per_seq() (alignment method)": [[23, "cogent3.core.alignment.Alignment.entropy_per_seq"]], "filtered() (alignment method)": [[23, "cogent3.core.alignment.Alignment.filtered"]], "gap_chars (alignment attribute)": [[23, "cogent3.core.alignment.Alignment.gap_chars"]], "gapped_by_map() (alignment method)": [[23, "cogent3.core.alignment.Alignment.gapped_by_map"]], "get_ambiguous_positions() (alignment method)": [[23, "cogent3.core.alignment.Alignment.get_ambiguous_positions"]], "get_degapped_relative_to() (alignment method)": [[23, "cogent3.core.alignment.Alignment.get_degapped_relative_to"]], "get_drawable() (alignment method)": [[23, "cogent3.core.alignment.Alignment.get_drawable"]], "get_drawables() (alignment method)": [[23, "cogent3.core.alignment.Alignment.get_drawables"]], "get_features() (alignment method)": [[23, "cogent3.core.alignment.Alignment.get_features"]], "get_gap_array() (alignment method)": [[23, "cogent3.core.alignment.Alignment.get_gap_array"]], "get_gapped_seq() (alignment method)": [[23, "cogent3.core.alignment.Alignment.get_gapped_seq"]], "get_identical_sets() (alignment method)": [[23, "cogent3.core.alignment.Alignment.get_identical_sets"]], "get_lengths() (alignment method)": [[23, "cogent3.core.alignment.Alignment.get_lengths"]], "get_motif_probs() (alignment method)": [[23, "cogent3.core.alignment.Alignment.get_motif_probs"]], "get_position_indices() (alignment method)": [[23, "cogent3.core.alignment.Alignment.get_position_indices"]], "get_projected_feature() (alignment method)": [[23, "cogent3.core.alignment.Alignment.get_projected_feature"]], "get_projected_features() (alignment method)": [[23, "cogent3.core.alignment.Alignment.get_projected_features"]], "get_seq() (alignment method)": [[23, "cogent3.core.alignment.Alignment.get_seq"]], "get_seq_indices() (alignment method)": [[23, "cogent3.core.alignment.Alignment.get_seq_indices"]], "get_similar() (alignment method)": [[23, "cogent3.core.alignment.Alignment.get_similar"]], "get_translation() (alignment method)": [[23, "cogent3.core.alignment.Alignment.get_translation"]], "has_terminal_stop() (alignment method)": [[23, "cogent3.core.alignment.Alignment.has_terminal_stop"]], "has_terminal_stops() (alignment method)": [[23, "cogent3.core.alignment.Alignment.has_terminal_stops"]], "information_plot() (alignment method)": [[23, "cogent3.core.alignment.Alignment.information_plot"]], "is_array (alignment attribute)": [[23, "cogent3.core.alignment.Alignment.is_array"]], "is_ragged() (alignment method)": [[23, "cogent3.core.alignment.Alignment.is_ragged"]], "iter_positions() (alignment method)": [[23, "cogent3.core.alignment.Alignment.iter_positions"]], "iter_selected() (alignment method)": [[23, "cogent3.core.alignment.Alignment.iter_selected"]], "iter_seqs() (alignment method)": [[23, "cogent3.core.alignment.Alignment.iter_seqs"]], "iupac_consensus() (alignment method)": [[23, "cogent3.core.alignment.Alignment.iupac_consensus"]], "majority_consensus() (alignment method)": [[23, "cogent3.core.alignment.Alignment.majority_consensus"]], "make_feature() (alignment method)": [[23, "cogent3.core.alignment.Alignment.make_feature"]], "matching_ref() (alignment method)": [[23, "cogent3.core.alignment.Alignment.matching_ref"]], "moltype (alignment attribute)": [[23, "cogent3.core.alignment.Alignment.moltype"]], "no_degenerates() (alignment method)": [[23, "cogent3.core.alignment.Alignment.no_degenerates"]], "num_seqs (alignment property)": [[23, "cogent3.core.alignment.Alignment.num_seqs"]], "omit_bad_seqs() (alignment method)": [[23, "cogent3.core.alignment.Alignment.omit_bad_seqs"]], "omit_gap_pos() (alignment method)": [[23, "cogent3.core.alignment.Alignment.omit_gap_pos"]], "omit_gap_runs() (alignment method)": [[23, "cogent3.core.alignment.Alignment.omit_gap_runs"]], "omit_gap_seqs() (alignment method)": [[23, "cogent3.core.alignment.Alignment.omit_gap_seqs"]], "pad_seqs() (alignment method)": [[23, "cogent3.core.alignment.Alignment.pad_seqs"]], "positions (alignment property)": [[23, "cogent3.core.alignment.Alignment.positions"]], "probs_per_pos() (alignment method)": [[23, "cogent3.core.alignment.Alignment.probs_per_pos"]], "probs_per_seq() (alignment method)": [[23, "cogent3.core.alignment.Alignment.probs_per_seq"]], "quick_tree() (alignment method)": [[23, "cogent3.core.alignment.Alignment.quick_tree"]], "rc() (alignment method)": [[23, "cogent3.core.alignment.Alignment.rc"]], "rename_seqs() (alignment method)": [[23, "cogent3.core.alignment.Alignment.rename_seqs"]], "replace_seqs() (alignment method)": [[23, "cogent3.core.alignment.Alignment.replace_seqs"]], "reverse_complement() (alignment method)": [[23, "cogent3.core.alignment.Alignment.reverse_complement"]], "sample() (alignment method)": [[23, "cogent3.core.alignment.Alignment.sample"]], "seqlogo() (alignment method)": [[23, "cogent3.core.alignment.Alignment.seqlogo"]], "seqs (alignment property)": [[23, "cogent3.core.alignment.Alignment.seqs"]], "set_repr_policy() (alignment method)": [[23, "cogent3.core.alignment.Alignment.set_repr_policy"]], "sliding_windows() (alignment method)": [[23, "cogent3.core.alignment.Alignment.sliding_windows"]], "strand_symmetry() (alignment method)": [[23, "cogent3.core.alignment.Alignment.strand_symmetry"]], "take_positions() (alignment method)": [[23, "cogent3.core.alignment.Alignment.take_positions"]], "take_positions_if() (alignment method)": [[23, "cogent3.core.alignment.Alignment.take_positions_if"]], "take_seqs() (alignment method)": [[23, "cogent3.core.alignment.Alignment.take_seqs"]], "take_seqs_if() (alignment method)": [[23, "cogent3.core.alignment.Alignment.take_seqs_if"]], "to_dict() (alignment method)": [[23, "cogent3.core.alignment.Alignment.to_dict"]], "to_dna() (alignment method)": [[23, "cogent3.core.alignment.Alignment.to_dna"]], "to_fasta() (alignment method)": [[23, "cogent3.core.alignment.Alignment.to_fasta"]], "to_html() (alignment method)": [[23, "cogent3.core.alignment.Alignment.to_html"]], "to_json() (alignment method)": [[23, "cogent3.core.alignment.Alignment.to_json"]], "to_moltype() (alignment method)": [[23, "cogent3.core.alignment.Alignment.to_moltype"]], "to_nexus() (alignment method)": [[23, "cogent3.core.alignment.Alignment.to_nexus"]], "to_phylip() (alignment method)": [[23, "cogent3.core.alignment.Alignment.to_phylip"]], "to_pretty() (alignment method)": [[23, "cogent3.core.alignment.Alignment.to_pretty"]], "to_protein() (alignment method)": [[23, "cogent3.core.alignment.Alignment.to_protein"]], "to_rich_dict() (alignment method)": [[23, "cogent3.core.alignment.Alignment.to_rich_dict"]], "to_rna() (alignment method)": [[23, "cogent3.core.alignment.Alignment.to_rna"]], "to_type() (alignment method)": [[23, "cogent3.core.alignment.Alignment.to_type"]], "trim_stop_codons() (alignment method)": [[23, "cogent3.core.alignment.Alignment.trim_stop_codons"]], "variable_positions() (alignment method)": [[23, "cogent3.core.alignment.Alignment.variable_positions"]], "with_gaps_from() (alignment method)": [[23, "cogent3.core.alignment.Alignment.with_gaps_from"]], "with_masked_annotations() (alignment method)": [[23, "cogent3.core.alignment.Alignment.with_masked_annotations"]], "with_modified_termini() (alignment method)": [[23, "cogent3.core.alignment.Alignment.with_modified_termini"]], "write() (alignment method)": [[23, "cogent3.core.alignment.Alignment.write"]], "arrayalignment (class in cogent3.core.alignment)": [[24, "cogent3.core.alignment.ArrayAlignment"]], "add_from_ref_aln() (arrayalignment method)": [[24, "cogent3.core.alignment.ArrayAlignment.add_from_ref_aln"]], "add_seqs() (arrayalignment method)": [[24, "cogent3.core.alignment.ArrayAlignment.add_seqs"]], "alignment_quality() (arrayalignment method)": [[24, "cogent3.core.alignment.ArrayAlignment.alignment_quality"]], "alphabet (arrayalignment attribute)": [[24, "cogent3.core.alignment.ArrayAlignment.alphabet"]], "annotation_db (arrayalignment property)": [[24, "cogent3.core.alignment.ArrayAlignment.annotation_db"]], "apply_pssm() (arrayalignment method)": [[24, "cogent3.core.alignment.ArrayAlignment.apply_pssm"]], "coevolution() (arrayalignment method)": [[24, "cogent3.core.alignment.ArrayAlignment.coevolution"]], "copy() (arrayalignment method)": [[24, "cogent3.core.alignment.ArrayAlignment.copy"]], "count_gaps_per_pos() (arrayalignment method)": [[24, "cogent3.core.alignment.ArrayAlignment.count_gaps_per_pos"]], "count_gaps_per_seq() (arrayalignment method)": [[24, "cogent3.core.alignment.ArrayAlignment.count_gaps_per_seq"]], "counts() (arrayalignment method)": [[24, "cogent3.core.alignment.ArrayAlignment.counts"]], "counts_per_pos() (arrayalignment method)": [[24, "cogent3.core.alignment.ArrayAlignment.counts_per_pos"]], "counts_per_seq() (arrayalignment method)": [[24, "cogent3.core.alignment.ArrayAlignment.counts_per_seq"]], "deepcopy() (arrayalignment method)": [[24, "cogent3.core.alignment.ArrayAlignment.deepcopy"]], "default_gap (arrayalignment attribute)": [[24, "cogent3.core.alignment.ArrayAlignment.default_gap"]], "degap() (arrayalignment method)": [[24, "cogent3.core.alignment.ArrayAlignment.degap"]], "distance_matrix() (arrayalignment method)": [[24, "cogent3.core.alignment.ArrayAlignment.distance_matrix"]], "dotplot() (arrayalignment method)": [[24, "cogent3.core.alignment.ArrayAlignment.dotplot"]], "entropy_per_pos() (arrayalignment method)": [[24, "cogent3.core.alignment.ArrayAlignment.entropy_per_pos"]], "entropy_per_seq() (arrayalignment method)": [[24, "cogent3.core.alignment.ArrayAlignment.entropy_per_seq"]], "filtered() (arrayalignment method)": [[24, "cogent3.core.alignment.ArrayAlignment.filtered"]], "gap_chars (arrayalignment attribute)": [[24, "cogent3.core.alignment.ArrayAlignment.gap_chars"]], "get_ambiguous_positions() (arrayalignment method)": [[24, "cogent3.core.alignment.ArrayAlignment.get_ambiguous_positions"]], "get_degapped_relative_to() (arrayalignment method)": [[24, "cogent3.core.alignment.ArrayAlignment.get_degapped_relative_to"]], "get_gap_array() (arrayalignment method)": [[24, "cogent3.core.alignment.ArrayAlignment.get_gap_array"]], "get_gapped_seq() (arrayalignment method)": [[24, "cogent3.core.alignment.ArrayAlignment.get_gapped_seq"]], "get_identical_sets() (arrayalignment method)": [[24, "cogent3.core.alignment.ArrayAlignment.get_identical_sets"]], "get_lengths() (arrayalignment method)": [[24, "cogent3.core.alignment.ArrayAlignment.get_lengths"]], "get_motif_probs() (arrayalignment method)": [[24, "cogent3.core.alignment.ArrayAlignment.get_motif_probs"]], "get_position_indices() (arrayalignment method)": [[24, "cogent3.core.alignment.ArrayAlignment.get_position_indices"]], "get_seq() (arrayalignment method)": [[24, "cogent3.core.alignment.ArrayAlignment.get_seq"]], "get_seq_indices() (arrayalignment method)": [[24, "cogent3.core.alignment.ArrayAlignment.get_seq_indices"]], "get_similar() (arrayalignment method)": [[24, "cogent3.core.alignment.ArrayAlignment.get_similar"]], "get_sub_alignment() (arrayalignment method)": [[24, "cogent3.core.alignment.ArrayAlignment.get_sub_alignment"]], "get_translation() (arrayalignment method)": [[24, "cogent3.core.alignment.ArrayAlignment.get_translation"]], "has_terminal_stop() (arrayalignment method)": [[24, "cogent3.core.alignment.ArrayAlignment.has_terminal_stop"]], "has_terminal_stops() (arrayalignment method)": [[24, "cogent3.core.alignment.ArrayAlignment.has_terminal_stops"]], "information_plot() (arrayalignment method)": [[24, "cogent3.core.alignment.ArrayAlignment.information_plot"]], "is_array (arrayalignment attribute)": [[24, "cogent3.core.alignment.ArrayAlignment.is_array"]], "is_ragged() (arrayalignment method)": [[24, "cogent3.core.alignment.ArrayAlignment.is_ragged"]], "iter_positions() (arrayalignment method)": [[24, "cogent3.core.alignment.ArrayAlignment.iter_positions"]], "iter_selected() (arrayalignment method)": [[24, "cogent3.core.alignment.ArrayAlignment.iter_selected"]], "iter_seqs() (arrayalignment method)": [[24, "cogent3.core.alignment.ArrayAlignment.iter_seqs"]], "iupac_consensus() (arrayalignment method)": [[24, "cogent3.core.alignment.ArrayAlignment.iupac_consensus"]], "majority_consensus() (arrayalignment method)": [[24, "cogent3.core.alignment.ArrayAlignment.majority_consensus"]], "matching_ref() (arrayalignment method)": [[24, "cogent3.core.alignment.ArrayAlignment.matching_ref"]], "moltype (arrayalignment attribute)": [[24, "cogent3.core.alignment.ArrayAlignment.moltype"]], "named_seqs (arrayalignment property)": [[24, "cogent3.core.alignment.ArrayAlignment.named_seqs"]], "no_degenerates() (arrayalignment method)": [[24, "cogent3.core.alignment.ArrayAlignment.no_degenerates"]], "num_seqs (arrayalignment property)": [[24, "cogent3.core.alignment.ArrayAlignment.num_seqs"]], "omit_bad_seqs() (arrayalignment method)": [[24, "cogent3.core.alignment.ArrayAlignment.omit_bad_seqs"]], "omit_gap_pos() (arrayalignment method)": [[24, "cogent3.core.alignment.ArrayAlignment.omit_gap_pos"]], "omit_gap_runs() (arrayalignment method)": [[24, "cogent3.core.alignment.ArrayAlignment.omit_gap_runs"]], "omit_gap_seqs() (arrayalignment method)": [[24, "cogent3.core.alignment.ArrayAlignment.omit_gap_seqs"]], "pad_seqs() (arrayalignment method)": [[24, "cogent3.core.alignment.ArrayAlignment.pad_seqs"]], "positions (arrayalignment property)": [[24, "cogent3.core.alignment.ArrayAlignment.positions"]], "probs_per_pos() (arrayalignment method)": [[24, "cogent3.core.alignment.ArrayAlignment.probs_per_pos"]], "probs_per_seq() (arrayalignment method)": [[24, "cogent3.core.alignment.ArrayAlignment.probs_per_seq"]], "quick_tree() (arrayalignment method)": [[24, "cogent3.core.alignment.ArrayAlignment.quick_tree"]], "rc() (arrayalignment method)": [[24, "cogent3.core.alignment.ArrayAlignment.rc"]], "rename_seqs() (arrayalignment method)": [[24, "cogent3.core.alignment.ArrayAlignment.rename_seqs"]], "replace_seqs() (arrayalignment method)": [[24, "cogent3.core.alignment.ArrayAlignment.replace_seqs"]], "reverse_complement() (arrayalignment method)": [[24, "cogent3.core.alignment.ArrayAlignment.reverse_complement"]], "sample() (arrayalignment method)": [[24, "cogent3.core.alignment.ArrayAlignment.sample"]], "seqlogo() (arrayalignment method)": [[24, "cogent3.core.alignment.ArrayAlignment.seqlogo"]], "seqs (arrayalignment property)": [[24, "cogent3.core.alignment.ArrayAlignment.seqs"]], "set_repr_policy() (arrayalignment method)": [[24, "cogent3.core.alignment.ArrayAlignment.set_repr_policy"]], "sliding_windows() (arrayalignment method)": [[24, "cogent3.core.alignment.ArrayAlignment.sliding_windows"]], "strand_symmetry() (arrayalignment method)": [[24, "cogent3.core.alignment.ArrayAlignment.strand_symmetry"]], "take_positions() (arrayalignment method)": [[24, "cogent3.core.alignment.ArrayAlignment.take_positions"]], "take_positions_if() (arrayalignment method)": [[24, "cogent3.core.alignment.ArrayAlignment.take_positions_if"]], "take_seqs() (arrayalignment method)": [[24, "cogent3.core.alignment.ArrayAlignment.take_seqs"]], "take_seqs_if() (arrayalignment method)": [[24, "cogent3.core.alignment.ArrayAlignment.take_seqs_if"]], "to_dict() (arrayalignment method)": [[24, "cogent3.core.alignment.ArrayAlignment.to_dict"]], "to_dna() (arrayalignment method)": [[24, "cogent3.core.alignment.ArrayAlignment.to_dna"]], "to_fasta() (arrayalignment method)": [[24, "cogent3.core.alignment.ArrayAlignment.to_fasta"]], "to_html() (arrayalignment method)": [[24, "cogent3.core.alignment.ArrayAlignment.to_html"]], "to_json() (arrayalignment method)": [[24, "cogent3.core.alignment.ArrayAlignment.to_json"]], "to_moltype() (arrayalignment method)": [[24, "cogent3.core.alignment.ArrayAlignment.to_moltype"]], "to_nexus() (arrayalignment method)": [[24, "cogent3.core.alignment.ArrayAlignment.to_nexus"]], "to_phylip() (arrayalignment method)": [[24, "cogent3.core.alignment.ArrayAlignment.to_phylip"]], "to_pretty() (arrayalignment method)": [[24, "cogent3.core.alignment.ArrayAlignment.to_pretty"]], "to_protein() (arrayalignment method)": [[24, "cogent3.core.alignment.ArrayAlignment.to_protein"]], "to_rich_dict() (arrayalignment method)": [[24, "cogent3.core.alignment.ArrayAlignment.to_rich_dict"]], "to_rna() (arrayalignment method)": [[24, "cogent3.core.alignment.ArrayAlignment.to_rna"]], "to_type() (arrayalignment method)": [[24, "cogent3.core.alignment.ArrayAlignment.to_type"]], "trim_stop_codons() (arrayalignment method)": [[24, "cogent3.core.alignment.ArrayAlignment.trim_stop_codons"]], "variable_positions() (arrayalignment method)": [[24, "cogent3.core.alignment.ArrayAlignment.variable_positions"]], "with_modified_termini() (arrayalignment method)": [[24, "cogent3.core.alignment.ArrayAlignment.with_modified_termini"]], "write() (arrayalignment method)": [[24, "cogent3.core.alignment.ArrayAlignment.write"]], "sequencecollection (class in cogent3.core.alignment)": [[25, "cogent3.core.alignment.SequenceCollection"]], "add_feature() (sequencecollection method)": [[25, "cogent3.core.alignment.SequenceCollection.add_feature"]], "add_seqs() (sequencecollection method)": [[25, "cogent3.core.alignment.SequenceCollection.add_seqs"]], "annotate_from_gff() (sequencecollection method)": [[25, "cogent3.core.alignment.SequenceCollection.annotate_from_gff"]], "annotation_db (sequencecollection property)": [[25, "cogent3.core.alignment.SequenceCollection.annotation_db"]], "apply_pssm() (sequencecollection method)": [[25, "cogent3.core.alignment.SequenceCollection.apply_pssm"]], "copy() (sequencecollection method)": [[25, "cogent3.core.alignment.SequenceCollection.copy"]], "copy_annotations() (sequencecollection method)": [[25, "cogent3.core.alignment.SequenceCollection.copy_annotations"]], "counts() (sequencecollection method)": [[25, "cogent3.core.alignment.SequenceCollection.counts"]], "counts_per_seq() (sequencecollection method)": [[25, "cogent3.core.alignment.SequenceCollection.counts_per_seq"]], "deepcopy() (sequencecollection method)": [[25, "cogent3.core.alignment.SequenceCollection.deepcopy"]], "degap() (sequencecollection method)": [[25, "cogent3.core.alignment.SequenceCollection.degap"]], "distance_matrix() (sequencecollection method)": [[25, "cogent3.core.alignment.SequenceCollection.distance_matrix"]], "dotplot() (sequencecollection method)": [[25, "cogent3.core.alignment.SequenceCollection.dotplot"]], "entropy_per_seq() (sequencecollection method)": [[25, "cogent3.core.alignment.SequenceCollection.entropy_per_seq"]], "get_ambiguous_positions() (sequencecollection method)": [[25, "cogent3.core.alignment.SequenceCollection.get_ambiguous_positions"]], "get_features() (sequencecollection method)": [[25, "cogent3.core.alignment.SequenceCollection.get_features"]], "get_identical_sets() (sequencecollection method)": [[25, "cogent3.core.alignment.SequenceCollection.get_identical_sets"]], "get_lengths() (sequencecollection method)": [[25, "cogent3.core.alignment.SequenceCollection.get_lengths"]], "get_motif_probs() (sequencecollection method)": [[25, "cogent3.core.alignment.SequenceCollection.get_motif_probs"]], "get_seq() (sequencecollection method)": [[25, "cogent3.core.alignment.SequenceCollection.get_seq"]], "get_seq_indices() (sequencecollection method)": [[25, "cogent3.core.alignment.SequenceCollection.get_seq_indices"]], "get_similar() (sequencecollection method)": [[25, "cogent3.core.alignment.SequenceCollection.get_similar"]], "get_translation() (sequencecollection method)": [[25, "cogent3.core.alignment.SequenceCollection.get_translation"]], "has_terminal_stop() (sequencecollection method)": [[25, "cogent3.core.alignment.SequenceCollection.has_terminal_stop"]], "has_terminal_stops() (sequencecollection method)": [[25, "cogent3.core.alignment.SequenceCollection.has_terminal_stops"]], "is_array (sequencecollection attribute)": [[25, "cogent3.core.alignment.SequenceCollection.is_array"]], "is_ragged() (sequencecollection method)": [[25, "cogent3.core.alignment.SequenceCollection.is_ragged"]], "iter_selected() (sequencecollection method)": [[25, "cogent3.core.alignment.SequenceCollection.iter_selected"]], "iter_seqs() (sequencecollection method)": [[25, "cogent3.core.alignment.SequenceCollection.iter_seqs"]], "make_feature() (sequencecollection method)": [[25, "cogent3.core.alignment.SequenceCollection.make_feature"]], "moltype (sequencecollection attribute)": [[25, "cogent3.core.alignment.SequenceCollection.moltype"]], "num_seqs (sequencecollection property)": [[25, "cogent3.core.alignment.SequenceCollection.num_seqs"]], "omit_gap_runs() (sequencecollection method)": [[25, "cogent3.core.alignment.SequenceCollection.omit_gap_runs"]], "omit_gap_seqs() (sequencecollection method)": [[25, "cogent3.core.alignment.SequenceCollection.omit_gap_seqs"]], "pad_seqs() (sequencecollection method)": [[25, "cogent3.core.alignment.SequenceCollection.pad_seqs"]], "probs_per_seq() (sequencecollection method)": [[25, "cogent3.core.alignment.SequenceCollection.probs_per_seq"]], "rc() (sequencecollection method)": [[25, "cogent3.core.alignment.SequenceCollection.rc"]], "rename_seqs() (sequencecollection method)": [[25, "cogent3.core.alignment.SequenceCollection.rename_seqs"]], "reverse_complement() (sequencecollection method)": [[25, "cogent3.core.alignment.SequenceCollection.reverse_complement"]], "seqs (sequencecollection property)": [[25, "cogent3.core.alignment.SequenceCollection.seqs"]], "set_repr_policy() (sequencecollection method)": [[25, "cogent3.core.alignment.SequenceCollection.set_repr_policy"]], "strand_symmetry() (sequencecollection method)": [[25, "cogent3.core.alignment.SequenceCollection.strand_symmetry"]], "take_seqs() (sequencecollection method)": [[25, "cogent3.core.alignment.SequenceCollection.take_seqs"]], "take_seqs_if() (sequencecollection method)": [[25, "cogent3.core.alignment.SequenceCollection.take_seqs_if"]], "to_dict() (sequencecollection method)": [[25, "cogent3.core.alignment.SequenceCollection.to_dict"]], "to_dna() (sequencecollection method)": [[25, "cogent3.core.alignment.SequenceCollection.to_dna"]], "to_fasta() (sequencecollection method)": [[25, "cogent3.core.alignment.SequenceCollection.to_fasta"]], "to_json() (sequencecollection method)": [[25, "cogent3.core.alignment.SequenceCollection.to_json"]], "to_moltype() (sequencecollection method)": [[25, "cogent3.core.alignment.SequenceCollection.to_moltype"]], "to_nexus() (sequencecollection method)": [[25, "cogent3.core.alignment.SequenceCollection.to_nexus"]], "to_phylip() (sequencecollection method)": [[25, "cogent3.core.alignment.SequenceCollection.to_phylip"]], "to_protein() (sequencecollection method)": [[25, "cogent3.core.alignment.SequenceCollection.to_protein"]], "to_rich_dict() (sequencecollection method)": [[25, "cogent3.core.alignment.SequenceCollection.to_rich_dict"]], "to_rna() (sequencecollection method)": [[25, "cogent3.core.alignment.SequenceCollection.to_rna"]], "trim_stop_codons() (sequencecollection method)": [[25, "cogent3.core.alignment.SequenceCollection.trim_stop_codons"]], "with_modified_termini() (sequencecollection method)": [[25, "cogent3.core.alignment.SequenceCollection.with_modified_termini"]], "write() (sequencecollection method)": [[25, "cogent3.core.alignment.SequenceCollection.write"]], "alphabet (class in cogent3.core.alphabet)": [[27, "cogent3.core.alphabet.Alphabet"]], "alphabet.alphabeterror": [[27, "cogent3.core.alphabet.Alphabet.AlphabetError"]], "adapt_motif_probs() (alphabet method)": [[27, "cogent3.core.alphabet.Alphabet.adapt_motif_probs"]], "add_note() (alphabet.alphabeterror method)": [[27, "cogent3.core.alphabet.Alphabet.AlphabetError.add_note"]], "args (alphabet.alphabeterror attribute)": [[27, "cogent3.core.alphabet.Alphabet.AlphabetError.args"]], "count() (alphabet method)": [[27, "cogent3.core.alphabet.Alphabet.count"]], "counts() (alphabet method)": [[27, "cogent3.core.alphabet.Alphabet.counts"]], "from_indices() (alphabet method)": [[27, "cogent3.core.alphabet.Alphabet.from_indices"]], "get_gap_motif() (alphabet method)": [[27, "cogent3.core.alphabet.Alphabet.get_gap_motif"]], "get_matched_array() (alphabet method)": [[27, "cogent3.core.alphabet.Alphabet.get_matched_array"]], "get_motif_len() (alphabet method)": [[27, "cogent3.core.alphabet.Alphabet.get_motif_len"]], "get_subset() (alphabet method)": [[27, "cogent3.core.alphabet.Alphabet.get_subset"]], "get_word_alphabet() (alphabet method)": [[27, "cogent3.core.alphabet.Alphabet.get_word_alphabet"]], "includes_gap_motif() (alphabet method)": [[27, "cogent3.core.alphabet.Alphabet.includes_gap_motif"]], "index() (alphabet method)": [[27, "cogent3.core.alphabet.Alphabet.index"]], "is_valid() (alphabet method)": [[27, "cogent3.core.alphabet.Alphabet.is_valid"]], "resolve_ambiguity() (alphabet method)": [[27, "cogent3.core.alphabet.Alphabet.resolve_ambiguity"]], "to_indices() (alphabet method)": [[27, "cogent3.core.alphabet.Alphabet.to_indices"]], "to_json() (alphabet method)": [[27, "cogent3.core.alphabet.Alphabet.to_json"]], "to_rich_dict() (alphabet method)": [[27, "cogent3.core.alphabet.Alphabet.to_rich_dict"]], "with_gap_motif() (alphabet method)": [[27, "cogent3.core.alphabet.Alphabet.with_gap_motif"]], "with_traceback() (alphabet.alphabeterror method)": [[27, "cogent3.core.alphabet.Alphabet.AlphabetError.with_traceback"]], "feature (class in cogent3.core.annotation)": [[29, "cogent3.core.annotation.Feature"]], "as_one_span() (feature method)": [[29, "cogent3.core.annotation.Feature.as_one_span"]], "biotype (feature property)": [[29, "cogent3.core.annotation.Feature.biotype"]], "get_children() (feature method)": [[29, "cogent3.core.annotation.Feature.get_children"]], "get_coordinates() (feature method)": [[29, "cogent3.core.annotation.Feature.get_coordinates"]], "get_drawable() (feature method)": [[29, "cogent3.core.annotation.Feature.get_drawable"]], "get_parent() (feature method)": [[29, "cogent3.core.annotation.Feature.get_parent"]], "get_slice() (feature method)": [[29, "cogent3.core.annotation.Feature.get_slice"]], "map (feature property)": [[29, "cogent3.core.annotation.Feature.map"]], "name (feature property)": [[29, "cogent3.core.annotation.Feature.name"]], "parent (feature property)": [[29, "cogent3.core.annotation.Feature.parent"]], "remapped_to() (feature method)": [[29, "cogent3.core.annotation.Feature.remapped_to"]], "seqid (feature property)": [[29, "cogent3.core.annotation.Feature.seqid"]], "shadow() (feature method)": [[29, "cogent3.core.annotation.Feature.shadow"]], "to_dict() (feature method)": [[29, "cogent3.core.annotation.Feature.to_dict"]], "union() (feature method)": [[29, "cogent3.core.annotation.Feature.union"]], "without_lost_spans() (feature method)": [[29, "cogent3.core.annotation.Feature.without_lost_spans"]], "basicannotationdb (class in cogent3.core.annotation_db)": [[31, "cogent3.core.annotation_db.BasicAnnotationDb"]], "strorbool (basicannotationdb attribute)": [[31, "cogent3.core.annotation_db.BasicAnnotationDb.StrOrBool"]], "add_feature() (basicannotationdb method)": [[31, "cogent3.core.annotation_db.BasicAnnotationDb.add_feature"]], "add_records() (basicannotationdb method)": [[31, "cogent3.core.annotation_db.BasicAnnotationDb.add_records"]], "biotype_counts() (basicannotationdb method)": [[31, "cogent3.core.annotation_db.BasicAnnotationDb.biotype_counts"]], "compatible() (basicannotationdb method)": [[31, "cogent3.core.annotation_db.BasicAnnotationDb.compatible"]], "count_distinct() (basicannotationdb method)": [[31, "cogent3.core.annotation_db.BasicAnnotationDb.count_distinct"]], "db (basicannotationdb property)": [[31, "cogent3.core.annotation_db.BasicAnnotationDb.db"]], "describe (basicannotationdb property)": [[31, "cogent3.core.annotation_db.BasicAnnotationDb.describe"]], "from_dict() (basicannotationdb class method)": [[31, "cogent3.core.annotation_db.BasicAnnotationDb.from_dict"]], "get_feature_children() (basicannotationdb method)": [[31, "cogent3.core.annotation_db.BasicAnnotationDb.get_feature_children"]], "get_feature_parent() (basicannotationdb method)": [[31, "cogent3.core.annotation_db.BasicAnnotationDb.get_feature_parent"]], "get_features_matching() (basicannotationdb method)": [[31, "cogent3.core.annotation_db.BasicAnnotationDb.get_features_matching"]], "get_records_matching() (basicannotationdb method)": [[31, "cogent3.core.annotation_db.BasicAnnotationDb.get_records_matching"]], "num_matches() (basicannotationdb method)": [[31, "cogent3.core.annotation_db.BasicAnnotationDb.num_matches"]], "table_names (basicannotationdb property)": [[31, "cogent3.core.annotation_db.BasicAnnotationDb.table_names"]], "to_json() (basicannotationdb method)": [[31, "cogent3.core.annotation_db.BasicAnnotationDb.to_json"]], "to_rich_dict() (basicannotationdb method)": [[31, "cogent3.core.annotation_db.BasicAnnotationDb.to_rich_dict"]], "union() (basicannotationdb method)": [[31, "cogent3.core.annotation_db.BasicAnnotationDb.union"]], "update() (basicannotationdb method)": [[31, "cogent3.core.annotation_db.BasicAnnotationDb.update"]], "write() (basicannotationdb method)": [[31, "cogent3.core.annotation_db.BasicAnnotationDb.write"]], "genbankannotationdb (class in cogent3.core.annotation_db)": [[32, "cogent3.core.annotation_db.GenbankAnnotationDb"]], "strorbool (genbankannotationdb attribute)": [[32, "cogent3.core.annotation_db.GenbankAnnotationDb.StrOrBool"]], "add_feature() (genbankannotationdb method)": [[32, "cogent3.core.annotation_db.GenbankAnnotationDb.add_feature"]], "add_records() (genbankannotationdb method)": [[32, "cogent3.core.annotation_db.GenbankAnnotationDb.add_records"]], "biotype_counts() (genbankannotationdb method)": [[32, "cogent3.core.annotation_db.GenbankAnnotationDb.biotype_counts"]], "compatible() (genbankannotationdb method)": [[32, "cogent3.core.annotation_db.GenbankAnnotationDb.compatible"]], "count_distinct() (genbankannotationdb method)": [[32, "cogent3.core.annotation_db.GenbankAnnotationDb.count_distinct"]], "db (genbankannotationdb property)": [[32, "cogent3.core.annotation_db.GenbankAnnotationDb.db"]], "describe (genbankannotationdb property)": [[32, "cogent3.core.annotation_db.GenbankAnnotationDb.describe"]], "from_dict() (genbankannotationdb class method)": [[32, "cogent3.core.annotation_db.GenbankAnnotationDb.from_dict"]], "get_feature_children() (genbankannotationdb method)": [[32, "cogent3.core.annotation_db.GenbankAnnotationDb.get_feature_children"]], "get_feature_parent() (genbankannotationdb method)": [[32, "cogent3.core.annotation_db.GenbankAnnotationDb.get_feature_parent"]], "get_features_matching() (genbankannotationdb method)": [[32, "cogent3.core.annotation_db.GenbankAnnotationDb.get_features_matching"]], "get_records_matching() (genbankannotationdb method)": [[32, "cogent3.core.annotation_db.GenbankAnnotationDb.get_records_matching"]], "num_matches() (genbankannotationdb method)": [[32, "cogent3.core.annotation_db.GenbankAnnotationDb.num_matches"]], "table_names (genbankannotationdb property)": [[32, "cogent3.core.annotation_db.GenbankAnnotationDb.table_names"]], "to_json() (genbankannotationdb method)": [[32, "cogent3.core.annotation_db.GenbankAnnotationDb.to_json"]], "to_rich_dict() (genbankannotationdb method)": [[32, "cogent3.core.annotation_db.GenbankAnnotationDb.to_rich_dict"]], "union() (genbankannotationdb method)": [[32, "cogent3.core.annotation_db.GenbankAnnotationDb.union"]], "update() (genbankannotationdb method)": [[32, "cogent3.core.annotation_db.GenbankAnnotationDb.update"]], "write() (genbankannotationdb method)": [[32, "cogent3.core.annotation_db.GenbankAnnotationDb.write"]], "gffannotationdb (class in cogent3.core.annotation_db)": [[33, "cogent3.core.annotation_db.GffAnnotationDb"]], "strorbool (gffannotationdb attribute)": [[33, "cogent3.core.annotation_db.GffAnnotationDb.StrOrBool"]], "add_feature() (gffannotationdb method)": [[33, "cogent3.core.annotation_db.GffAnnotationDb.add_feature"]], "add_records() (gffannotationdb method)": [[33, "cogent3.core.annotation_db.GffAnnotationDb.add_records"]], "biotype_counts() (gffannotationdb method)": [[33, "cogent3.core.annotation_db.GffAnnotationDb.biotype_counts"]], "compatible() (gffannotationdb method)": [[33, "cogent3.core.annotation_db.GffAnnotationDb.compatible"]], "count_distinct() (gffannotationdb method)": [[33, "cogent3.core.annotation_db.GffAnnotationDb.count_distinct"]], "db (gffannotationdb property)": [[33, "cogent3.core.annotation_db.GffAnnotationDb.db"]], "describe (gffannotationdb property)": [[33, "cogent3.core.annotation_db.GffAnnotationDb.describe"]], "from_dict() (gffannotationdb class method)": [[33, "cogent3.core.annotation_db.GffAnnotationDb.from_dict"]], "get_feature_children() (gffannotationdb method)": [[33, "cogent3.core.annotation_db.GffAnnotationDb.get_feature_children"]], "get_feature_parent() (gffannotationdb method)": [[33, "cogent3.core.annotation_db.GffAnnotationDb.get_feature_parent"]], "get_features_matching() (gffannotationdb method)": [[33, "cogent3.core.annotation_db.GffAnnotationDb.get_features_matching"]], "get_records_matching() (gffannotationdb method)": [[33, "cogent3.core.annotation_db.GffAnnotationDb.get_records_matching"]], "num_matches() (gffannotationdb method)": [[33, "cogent3.core.annotation_db.GffAnnotationDb.num_matches"]], "table_names (gffannotationdb property)": [[33, "cogent3.core.annotation_db.GffAnnotationDb.table_names"]], "to_json() (gffannotationdb method)": [[33, "cogent3.core.annotation_db.GffAnnotationDb.to_json"]], "to_rich_dict() (gffannotationdb method)": [[33, "cogent3.core.annotation_db.GffAnnotationDb.to_rich_dict"]], "union() (gffannotationdb method)": [[33, "cogent3.core.annotation_db.GffAnnotationDb.union"]], "update() (gffannotationdb method)": [[33, "cogent3.core.annotation_db.GffAnnotationDb.update"]], "write() (gffannotationdb method)": [[33, "cogent3.core.annotation_db.GffAnnotationDb.write"]], "define_app() (in module cogent3.app.composable)": [[34, "cogent3.app.composable.define_app"]], "datamember (class in cogent3.app.data_store)": [[35, "cogent3.app.data_store.DataMember"]], "data_store (datamember property)": [[35, "cogent3.app.data_store.DataMember.data_store"]], "md5 (datamember property)": [[35, "cogent3.app.data_store.DataMember.md5"]], "read() (datamember method)": [[35, "cogent3.app.data_store.DataMember.read"]], "unique_id (datamember property)": [[35, "cogent3.app.data_store.DataMember.unique_id"]], "datastoredirectory (class in cogent3.app.data_store)": [[36, "cogent3.app.data_store.DataStoreDirectory"]], "completed (datastoredirectory property)": [[36, "cogent3.app.data_store.DataStoreDirectory.completed"]], "describe (datastoredirectory property)": [[36, "cogent3.app.data_store.DataStoreDirectory.describe"]], "drop_not_completed() (datastoredirectory method)": [[36, "cogent3.app.data_store.DataStoreDirectory.drop_not_completed"]], "limit (datastoredirectory property)": [[36, "cogent3.app.data_store.DataStoreDirectory.limit"]], "logs (datastoredirectory property)": [[36, "cogent3.app.data_store.DataStoreDirectory.logs"]], "md5() (datastoredirectory method)": [[36, "cogent3.app.data_store.DataStoreDirectory.md5"]], "members (datastoredirectory property)": [[36, "cogent3.app.data_store.DataStoreDirectory.members"]], "mode (datastoredirectory property)": [[36, "cogent3.app.data_store.DataStoreDirectory.mode"]], "not_completed (datastoredirectory property)": [[36, "cogent3.app.data_store.DataStoreDirectory.not_completed"]], "read() (datastoredirectory method)": [[36, "cogent3.app.data_store.DataStoreDirectory.read"]], "source (datastoredirectory property)": [[36, "cogent3.app.data_store.DataStoreDirectory.source"]], "summary_logs (datastoredirectory property)": [[36, "cogent3.app.data_store.DataStoreDirectory.summary_logs"]], "summary_not_completed (datastoredirectory property)": [[36, "cogent3.app.data_store.DataStoreDirectory.summary_not_completed"]], "validate() (datastoredirectory method)": [[36, "cogent3.app.data_store.DataStoreDirectory.validate"]], "write() (datastoredirectory method)": [[36, "cogent3.app.data_store.DataStoreDirectory.write"]], "write_log() (datastoredirectory method)": [[36, "cogent3.app.data_store.DataStoreDirectory.write_log"]], "write_not_completed() (datastoredirectory method)": [[36, "cogent3.app.data_store.DataStoreDirectory.write_not_completed"]], "readonlydatastorezipped (class in cogent3.app.data_store)": [[37, "cogent3.app.data_store.ReadOnlyDataStoreZipped"]], "completed (readonlydatastorezipped property)": [[37, "cogent3.app.data_store.ReadOnlyDataStoreZipped.completed"]], "describe (readonlydatastorezipped property)": [[37, "cogent3.app.data_store.ReadOnlyDataStoreZipped.describe"]], "drop_not_completed() (readonlydatastorezipped method)": [[37, "cogent3.app.data_store.ReadOnlyDataStoreZipped.drop_not_completed"]], "limit (readonlydatastorezipped property)": [[37, "cogent3.app.data_store.ReadOnlyDataStoreZipped.limit"]], "logs (readonlydatastorezipped property)": [[37, "cogent3.app.data_store.ReadOnlyDataStoreZipped.logs"]], "md5() (readonlydatastorezipped method)": [[37, "cogent3.app.data_store.ReadOnlyDataStoreZipped.md5"]], "members (readonlydatastorezipped property)": [[37, "cogent3.app.data_store.ReadOnlyDataStoreZipped.members"]], "mode (readonlydatastorezipped property)": [[37, "cogent3.app.data_store.ReadOnlyDataStoreZipped.mode"]], "not_completed (readonlydatastorezipped property)": [[37, "cogent3.app.data_store.ReadOnlyDataStoreZipped.not_completed"]], "read() (readonlydatastorezipped method)": [[37, "cogent3.app.data_store.ReadOnlyDataStoreZipped.read"]], "source (readonlydatastorezipped property)": [[37, "cogent3.app.data_store.ReadOnlyDataStoreZipped.source"]], "summary_logs (readonlydatastorezipped property)": [[37, "cogent3.app.data_store.ReadOnlyDataStoreZipped.summary_logs"]], "summary_not_completed (readonlydatastorezipped property)": [[37, "cogent3.app.data_store.ReadOnlyDataStoreZipped.summary_not_completed"]], "validate() (readonlydatastorezipped method)": [[37, "cogent3.app.data_store.ReadOnlyDataStoreZipped.validate"]], "write() (readonlydatastorezipped method)": [[37, "cogent3.app.data_store.ReadOnlyDataStoreZipped.write"]], "write_log() (readonlydatastorezipped method)": [[37, "cogent3.app.data_store.ReadOnlyDataStoreZipped.write_log"]], "write_not_completed() (readonlydatastorezipped method)": [[37, "cogent3.app.data_store.ReadOnlyDataStoreZipped.write_not_completed"]], "register_datastore_reader() (in module cogent3.app.io)": [[38, "cogent3.app.io.register_datastore_reader"]], "datastoresqlite (class in cogent3.app.sqlite_data_store)": [[39, "cogent3.app.sqlite_data_store.DataStoreSqlite"]], "close() (datastoresqlite method)": [[39, "cogent3.app.sqlite_data_store.DataStoreSqlite.close"]], "completed (datastoresqlite property)": [[39, "cogent3.app.sqlite_data_store.DataStoreSqlite.completed"]], "db (datastoresqlite property)": [[39, "cogent3.app.sqlite_data_store.DataStoreSqlite.db"]], "describe (datastoresqlite property)": [[39, "cogent3.app.sqlite_data_store.DataStoreSqlite.describe"]], "drop_not_completed() (datastoresqlite method)": [[39, "cogent3.app.sqlite_data_store.DataStoreSqlite.drop_not_completed"]], "limit (datastoresqlite property)": [[39, "cogent3.app.sqlite_data_store.DataStoreSqlite.limit"]], "lock() (datastoresqlite method)": [[39, "cogent3.app.sqlite_data_store.DataStoreSqlite.lock"]], "locked (datastoresqlite property)": [[39, "cogent3.app.sqlite_data_store.DataStoreSqlite.locked"]], "logs (datastoresqlite property)": [[39, "cogent3.app.sqlite_data_store.DataStoreSqlite.logs"]], "md5() (datastoresqlite method)": [[39, "cogent3.app.sqlite_data_store.DataStoreSqlite.md5"]], "members (datastoresqlite property)": [[39, "cogent3.app.sqlite_data_store.DataStoreSqlite.members"]], "mode (datastoresqlite property)": [[39, "cogent3.app.sqlite_data_store.DataStoreSqlite.mode"]], "not_completed (datastoresqlite property)": [[39, "cogent3.app.sqlite_data_store.DataStoreSqlite.not_completed"]], "read() (datastoresqlite method)": [[39, "cogent3.app.sqlite_data_store.DataStoreSqlite.read"]], "record_type (datastoresqlite property)": [[39, "cogent3.app.sqlite_data_store.DataStoreSqlite.record_type"]], "source (datastoresqlite property)": [[39, "cogent3.app.sqlite_data_store.DataStoreSqlite.source"]], "store_suffix (datastoresqlite attribute)": [[39, "cogent3.app.sqlite_data_store.DataStoreSqlite.store_suffix"]], "summary_logs (datastoresqlite property)": [[39, "cogent3.app.sqlite_data_store.DataStoreSqlite.summary_logs"]], "summary_not_completed (datastoresqlite property)": [[39, "cogent3.app.sqlite_data_store.DataStoreSqlite.summary_not_completed"]], "unlock() (datastoresqlite method)": [[39, "cogent3.app.sqlite_data_store.DataStoreSqlite.unlock"]], "validate() (datastoresqlite method)": [[39, "cogent3.app.sqlite_data_store.DataStoreSqlite.validate"]], "write() (datastoresqlite method)": [[39, "cogent3.app.sqlite_data_store.DataStoreSqlite.write"]], "write_log() (datastoresqlite method)": [[39, "cogent3.app.sqlite_data_store.DataStoreSqlite.write_log"]], "write_not_completed() (datastoresqlite method)": [[39, "cogent3.app.sqlite_data_store.DataStoreSqlite.write_not_completed"]], "geneticcode (class in cogent3.core.genetic_code)": [[40, "cogent3.core.genetic_code.GeneticCode"]], "blocks (geneticcode property)": [[40, "cogent3.core.genetic_code.GeneticCode.blocks"]], "changes() (geneticcode method)": [[40, "cogent3.core.genetic_code.GeneticCode.changes"]], "get_alphabet() (geneticcode method)": [[40, "cogent3.core.genetic_code.GeneticCode.get_alphabet"]], "get_stop_indices() (geneticcode method)": [[40, "cogent3.core.genetic_code.GeneticCode.get_stop_indices"]], "is_start() (geneticcode method)": [[40, "cogent3.core.genetic_code.GeneticCode.is_start"]], "is_stop() (geneticcode method)": [[40, "cogent3.core.genetic_code.GeneticCode.is_stop"]], "sixframes() (geneticcode method)": [[40, "cogent3.core.genetic_code.GeneticCode.sixframes"]], "to_regex() (geneticcode method)": [[40, "cogent3.core.genetic_code.GeneticCode.to_regex"]], "to_table() (geneticcode method)": [[40, "cogent3.core.genetic_code.GeneticCode.to_table"]], "translate() (geneticcode method)": [[40, "cogent3.core.genetic_code.GeneticCode.translate"]], "moltype (class in cogent3.core.moltype)": [[43, "cogent3.core.moltype.MolType"]], "can_match() (moltype method)": [[43, "cogent3.core.moltype.MolType.can_match"]], "can_mismatch() (moltype method)": [[43, "cogent3.core.moltype.MolType.can_mismatch"]], "can_mispair() (moltype method)": [[43, "cogent3.core.moltype.MolType.can_mispair"]], "can_pair() (moltype method)": [[43, "cogent3.core.moltype.MolType.can_pair"]], "coerce_str() (moltype method)": [[43, "cogent3.core.moltype.MolType.coerce_str"]], "complement() (moltype method)": [[43, "cogent3.core.moltype.MolType.complement"]], "count_degenerate() (moltype method)": [[43, "cogent3.core.moltype.MolType.count_degenerate"]], "count_gaps() (moltype method)": [[43, "cogent3.core.moltype.MolType.count_gaps"]], "degap() (moltype method)": [[43, "cogent3.core.moltype.MolType.degap"]], "degenerate_from_seq() (moltype method)": [[43, "cogent3.core.moltype.MolType.degenerate_from_seq"]], "disambiguate() (moltype method)": [[43, "cogent3.core.moltype.MolType.disambiguate"]], "first_degenerate() (moltype method)": [[43, "cogent3.core.moltype.MolType.first_degenerate"]], "first_gap() (moltype method)": [[43, "cogent3.core.moltype.MolType.first_gap"]], "first_invalid() (moltype method)": [[43, "cogent3.core.moltype.MolType.first_invalid"]], "first_non_strict() (moltype method)": [[43, "cogent3.core.moltype.MolType.first_non_strict"]], "first_not_in_alphabet() (moltype method)": [[43, "cogent3.core.moltype.MolType.first_not_in_alphabet"]], "gap_indices() (moltype method)": [[43, "cogent3.core.moltype.MolType.gap_indices"]], "gap_maps() (moltype method)": [[43, "cogent3.core.moltype.MolType.gap_maps"]], "gap_vector() (moltype method)": [[43, "cogent3.core.moltype.MolType.gap_vector"]], "get_css_style() (moltype method)": [[43, "cogent3.core.moltype.MolType.get_css_style"]], "get_degenerate_positions() (moltype method)": [[43, "cogent3.core.moltype.MolType.get_degenerate_positions"]], "get_type() (moltype method)": [[43, "cogent3.core.moltype.MolType.get_type"]], "is_ambiguity() (moltype method)": [[43, "cogent3.core.moltype.MolType.is_ambiguity"]], "is_degenerate() (moltype method)": [[43, "cogent3.core.moltype.MolType.is_degenerate"]], "is_gap() (moltype method)": [[43, "cogent3.core.moltype.MolType.is_gap"]], "is_gapped() (moltype method)": [[43, "cogent3.core.moltype.MolType.is_gapped"]], "is_strict() (moltype method)": [[43, "cogent3.core.moltype.MolType.is_strict"]], "is_valid() (moltype method)": [[43, "cogent3.core.moltype.MolType.is_valid"]], "make_array_seq() (moltype method)": [[43, "cogent3.core.moltype.MolType.make_array_seq"]], "make_seq() (moltype method)": [[43, "cogent3.core.moltype.MolType.make_seq"]], "must_match() (moltype method)": [[43, "cogent3.core.moltype.MolType.must_match"]], "must_pair() (moltype method)": [[43, "cogent3.core.moltype.MolType.must_pair"]], "mw() (moltype method)": [[43, "cogent3.core.moltype.MolType.mw"]], "possibilities() (moltype method)": [[43, "cogent3.core.moltype.MolType.possibilities"]], "rc() (moltype method)": [[43, "cogent3.core.moltype.MolType.rc"]], "strand_symmetric_motifs() (moltype method)": [[43, "cogent3.core.moltype.MolType.strand_symmetric_motifs"]], "to_json() (moltype method)": [[43, "cogent3.core.moltype.MolType.to_json"]], "to_regex() (moltype method)": [[43, "cogent3.core.moltype.MolType.to_regex"]], "to_rich_dict() (moltype method)": [[43, "cogent3.core.moltype.MolType.to_rich_dict"]], "valid_on_alphabet() (moltype method)": [[43, "cogent3.core.moltype.MolType.valid_on_alphabet"]], "verify_sequence() (moltype method)": [[43, "cogent3.core.moltype.MolType.verify_sequence"]], "what_ambiguity() (moltype method)": [[43, "cogent3.core.moltype.MolType.what_ambiguity"]], "dnasequence (class in cogent3.core.sequence)": [[45, "cogent3.core.sequence.DnaSequence"]], "add_feature() (dnasequence method)": [[45, "cogent3.core.sequence.DnaSequence.add_feature"]], "annotate_from_gff() (dnasequence method)": [[45, "cogent3.core.sequence.DnaSequence.annotate_from_gff"]], "annotate_matches_to() (dnasequence method)": [[45, "cogent3.core.sequence.DnaSequence.annotate_matches_to"]], "annotation_db (dnasequence property)": [[45, "cogent3.core.sequence.DnaSequence.annotation_db"]], "annotation_offset (dnasequence property)": [[45, "cogent3.core.sequence.DnaSequence.annotation_offset"]], "can_match() (dnasequence method)": [[45, "cogent3.core.sequence.DnaSequence.can_match"]], "can_mismatch() (dnasequence method)": [[45, "cogent3.core.sequence.DnaSequence.can_mismatch"]], "can_mispair() (dnasequence method)": [[45, "cogent3.core.sequence.DnaSequence.can_mispair"]], "can_pair() (dnasequence method)": [[45, "cogent3.core.sequence.DnaSequence.can_pair"]], "codon_alphabet (dnasequence attribute)": [[45, "cogent3.core.sequence.DnaSequence.codon_alphabet"]], "complement() (dnasequence method)": [[45, "cogent3.core.sequence.DnaSequence.complement"]], "copy() (dnasequence method)": [[45, "cogent3.core.sequence.DnaSequence.copy"]], "copy_annotations() (dnasequence method)": [[45, "cogent3.core.sequence.DnaSequence.copy_annotations"]], "count() (dnasequence method)": [[45, "cogent3.core.sequence.DnaSequence.count"]], "count_degenerate() (dnasequence method)": [[45, "cogent3.core.sequence.DnaSequence.count_degenerate"]], "count_gaps() (dnasequence method)": [[45, "cogent3.core.sequence.DnaSequence.count_gaps"]], "counts() (dnasequence method)": [[45, "cogent3.core.sequence.DnaSequence.counts"]], "degap() (dnasequence method)": [[45, "cogent3.core.sequence.DnaSequence.degap"]], "diff() (dnasequence method)": [[45, "cogent3.core.sequence.DnaSequence.diff"]], "disambiguate() (dnasequence method)": [[45, "cogent3.core.sequence.DnaSequence.disambiguate"]], "distance() (dnasequence method)": [[45, "cogent3.core.sequence.DnaSequence.distance"]], "first_degenerate() (dnasequence method)": [[45, "cogent3.core.sequence.DnaSequence.first_degenerate"]], "first_gap() (dnasequence method)": [[45, "cogent3.core.sequence.DnaSequence.first_gap"]], "first_invalid() (dnasequence method)": [[45, "cogent3.core.sequence.DnaSequence.first_invalid"]], "first_non_strict() (dnasequence method)": [[45, "cogent3.core.sequence.DnaSequence.first_non_strict"]], "frac_diff() (dnasequence method)": [[45, "cogent3.core.sequence.DnaSequence.frac_diff"]], "frac_diff_gaps() (dnasequence method)": [[45, "cogent3.core.sequence.DnaSequence.frac_diff_gaps"]], "frac_diff_non_gaps() (dnasequence method)": [[45, "cogent3.core.sequence.DnaSequence.frac_diff_non_gaps"]], "frac_same() (dnasequence method)": [[45, "cogent3.core.sequence.DnaSequence.frac_same"]], "frac_same_gaps() (dnasequence method)": [[45, "cogent3.core.sequence.DnaSequence.frac_same_gaps"]], "frac_same_non_gaps() (dnasequence method)": [[45, "cogent3.core.sequence.DnaSequence.frac_same_non_gaps"]], "frac_similar() (dnasequence method)": [[45, "cogent3.core.sequence.DnaSequence.frac_similar"]], "gap_indices() (dnasequence method)": [[45, "cogent3.core.sequence.DnaSequence.gap_indices"]], "gap_maps() (dnasequence method)": [[45, "cogent3.core.sequence.DnaSequence.gap_maps"]], "gap_vector() (dnasequence method)": [[45, "cogent3.core.sequence.DnaSequence.gap_vector"]], "gapped_by_map() (dnasequence method)": [[45, "cogent3.core.sequence.DnaSequence.gapped_by_map"]], "gapped_by_map_motif_iter() (dnasequence method)": [[45, "cogent3.core.sequence.DnaSequence.gapped_by_map_motif_iter"]], "gapped_by_map_segment_iter() (dnasequence method)": [[45, "cogent3.core.sequence.DnaSequence.gapped_by_map_segment_iter"]], "get_drawable() (dnasequence method)": [[45, "cogent3.core.sequence.DnaSequence.get_drawable"]], "get_drawables() (dnasequence method)": [[45, "cogent3.core.sequence.DnaSequence.get_drawables"]], "get_features() (dnasequence method)": [[45, "cogent3.core.sequence.DnaSequence.get_features"]], "get_in_motif_size() (dnasequence method)": [[45, "cogent3.core.sequence.DnaSequence.get_in_motif_size"]], "get_kmers() (dnasequence method)": [[45, "cogent3.core.sequence.DnaSequence.get_kmers"]], "get_name() (dnasequence method)": [[45, "cogent3.core.sequence.DnaSequence.get_name"]], "get_translation() (dnasequence method)": [[45, "cogent3.core.sequence.DnaSequence.get_translation"]], "get_type() (dnasequence method)": [[45, "cogent3.core.sequence.DnaSequence.get_type"]], "has_terminal_stop() (dnasequence method)": [[45, "cogent3.core.sequence.DnaSequence.has_terminal_stop"]], "is_annotated() (dnasequence method)": [[45, "cogent3.core.sequence.DnaSequence.is_annotated"]], "is_degenerate() (dnasequence method)": [[45, "cogent3.core.sequence.DnaSequence.is_degenerate"]], "is_gap() (dnasequence method)": [[45, "cogent3.core.sequence.DnaSequence.is_gap"]], "is_gapped() (dnasequence method)": [[45, "cogent3.core.sequence.DnaSequence.is_gapped"]], "is_strict() (dnasequence method)": [[45, "cogent3.core.sequence.DnaSequence.is_strict"]], "is_valid() (dnasequence method)": [[45, "cogent3.core.sequence.DnaSequence.is_valid"]], "iter_kmers() (dnasequence method)": [[45, "cogent3.core.sequence.DnaSequence.iter_kmers"]], "line_wrap (dnasequence attribute)": [[45, "cogent3.core.sequence.DnaSequence.line_wrap"]], "make_feature() (dnasequence method)": [[45, "cogent3.core.sequence.DnaSequence.make_feature"]], "matrix_distance() (dnasequence method)": [[45, "cogent3.core.sequence.DnaSequence.matrix_distance"]], "moltype (dnasequence attribute)": [[45, "cogent3.core.sequence.DnaSequence.moltype"]], "must_match() (dnasequence method)": [[45, "cogent3.core.sequence.DnaSequence.must_match"]], "must_pair() (dnasequence method)": [[45, "cogent3.core.sequence.DnaSequence.must_pair"]], "mw() (dnasequence method)": [[45, "cogent3.core.sequence.DnaSequence.mw"]], "parse_out_gaps() (dnasequence method)": [[45, "cogent3.core.sequence.DnaSequence.parse_out_gaps"]], "possibilities() (dnasequence method)": [[45, "cogent3.core.sequence.DnaSequence.possibilities"]], "protein (dnasequence attribute)": [[45, "cogent3.core.sequence.DnaSequence.protein"]], "rc() (dnasequence method)": [[45, "cogent3.core.sequence.DnaSequence.rc"]], "replace() (dnasequence method)": [[45, "cogent3.core.sequence.DnaSequence.replace"]], "replace_annotation_db() (dnasequence method)": [[45, "cogent3.core.sequence.DnaSequence.replace_annotation_db"]], "resolved_ambiguities() (dnasequence method)": [[45, "cogent3.core.sequence.DnaSequence.resolved_ambiguities"]], "reverse_complement() (dnasequence method)": [[45, "cogent3.core.sequence.DnaSequence.reverse_complement"]], "shuffle() (dnasequence method)": [[45, "cogent3.core.sequence.DnaSequence.shuffle"]], "sliding_windows() (dnasequence method)": [[45, "cogent3.core.sequence.DnaSequence.sliding_windows"]], "strand_symmetry() (dnasequence method)": [[45, "cogent3.core.sequence.DnaSequence.strand_symmetry"]], "strip_bad() (dnasequence method)": [[45, "cogent3.core.sequence.DnaSequence.strip_bad"]], "strip_bad_and_gaps() (dnasequence method)": [[45, "cogent3.core.sequence.DnaSequence.strip_bad_and_gaps"]], "strip_degenerate() (dnasequence method)": [[45, "cogent3.core.sequence.DnaSequence.strip_degenerate"]], "to_dna() (dnasequence method)": [[45, "cogent3.core.sequence.DnaSequence.to_dna"]], "to_fasta() (dnasequence method)": [[45, "cogent3.core.sequence.DnaSequence.to_fasta"]], "to_html() (dnasequence method)": [[45, "cogent3.core.sequence.DnaSequence.to_html"]], "to_json() (dnasequence method)": [[45, "cogent3.core.sequence.DnaSequence.to_json"]], "to_moltype() (dnasequence method)": [[45, "cogent3.core.sequence.DnaSequence.to_moltype"]], "to_rich_dict() (dnasequence method)": [[45, "cogent3.core.sequence.DnaSequence.to_rich_dict"]], "to_rna() (dnasequence method)": [[45, "cogent3.core.sequence.DnaSequence.to_rna"]], "trim_stop_codon() (dnasequence method)": [[45, "cogent3.core.sequence.DnaSequence.trim_stop_codon"]], "with_masked_annotations() (dnasequence method)": [[45, "cogent3.core.sequence.DnaSequence.with_masked_annotations"]], "with_termini_unknown() (dnasequence method)": [[45, "cogent3.core.sequence.DnaSequence.with_termini_unknown"]], "proteinsequence (class in cogent3.core.sequence)": [[46, "cogent3.core.sequence.ProteinSequence"]], "add_feature() (proteinsequence method)": [[46, "cogent3.core.sequence.ProteinSequence.add_feature"]], "annotate_from_gff() (proteinsequence method)": [[46, "cogent3.core.sequence.ProteinSequence.annotate_from_gff"]], "annotate_matches_to() (proteinsequence method)": [[46, "cogent3.core.sequence.ProteinSequence.annotate_matches_to"]], "annotation_db (proteinsequence property)": [[46, "cogent3.core.sequence.ProteinSequence.annotation_db"]], "annotation_offset (proteinsequence property)": [[46, "cogent3.core.sequence.ProteinSequence.annotation_offset"]], "can_match() (proteinsequence method)": [[46, "cogent3.core.sequence.ProteinSequence.can_match"]], "can_mismatch() (proteinsequence method)": [[46, "cogent3.core.sequence.ProteinSequence.can_mismatch"]], "can_mispair() (proteinsequence method)": [[46, "cogent3.core.sequence.ProteinSequence.can_mispair"]], "can_pair() (proteinsequence method)": [[46, "cogent3.core.sequence.ProteinSequence.can_pair"]], "complement() (proteinsequence method)": [[46, "cogent3.core.sequence.ProteinSequence.complement"]], "copy() (proteinsequence method)": [[46, "cogent3.core.sequence.ProteinSequence.copy"]], "copy_annotations() (proteinsequence method)": [[46, "cogent3.core.sequence.ProteinSequence.copy_annotations"]], "count() (proteinsequence method)": [[46, "cogent3.core.sequence.ProteinSequence.count"]], "count_degenerate() (proteinsequence method)": [[46, "cogent3.core.sequence.ProteinSequence.count_degenerate"]], "count_gaps() (proteinsequence method)": [[46, "cogent3.core.sequence.ProteinSequence.count_gaps"]], "counts() (proteinsequence method)": [[46, "cogent3.core.sequence.ProteinSequence.counts"]], "degap() (proteinsequence method)": [[46, "cogent3.core.sequence.ProteinSequence.degap"]], "diff() (proteinsequence method)": [[46, "cogent3.core.sequence.ProteinSequence.diff"]], "disambiguate() (proteinsequence method)": [[46, "cogent3.core.sequence.ProteinSequence.disambiguate"]], "distance() (proteinsequence method)": [[46, "cogent3.core.sequence.ProteinSequence.distance"]], "first_degenerate() (proteinsequence method)": [[46, "cogent3.core.sequence.ProteinSequence.first_degenerate"]], "first_gap() (proteinsequence method)": [[46, "cogent3.core.sequence.ProteinSequence.first_gap"]], "first_invalid() (proteinsequence method)": [[46, "cogent3.core.sequence.ProteinSequence.first_invalid"]], "first_non_strict() (proteinsequence method)": [[46, "cogent3.core.sequence.ProteinSequence.first_non_strict"]], "frac_diff() (proteinsequence method)": [[46, "cogent3.core.sequence.ProteinSequence.frac_diff"]], "frac_diff_gaps() (proteinsequence method)": [[46, "cogent3.core.sequence.ProteinSequence.frac_diff_gaps"]], "frac_diff_non_gaps() (proteinsequence method)": [[46, "cogent3.core.sequence.ProteinSequence.frac_diff_non_gaps"]], "frac_same() (proteinsequence method)": [[46, "cogent3.core.sequence.ProteinSequence.frac_same"]], "frac_same_gaps() (proteinsequence method)": [[46, "cogent3.core.sequence.ProteinSequence.frac_same_gaps"]], "frac_same_non_gaps() (proteinsequence method)": [[46, "cogent3.core.sequence.ProteinSequence.frac_same_non_gaps"]], "frac_similar() (proteinsequence method)": [[46, "cogent3.core.sequence.ProteinSequence.frac_similar"]], "gap_indices() (proteinsequence method)": [[46, "cogent3.core.sequence.ProteinSequence.gap_indices"]], "gap_maps() (proteinsequence method)": [[46, "cogent3.core.sequence.ProteinSequence.gap_maps"]], "gap_vector() (proteinsequence method)": [[46, "cogent3.core.sequence.ProteinSequence.gap_vector"]], "gapped_by_map() (proteinsequence method)": [[46, "cogent3.core.sequence.ProteinSequence.gapped_by_map"]], "gapped_by_map_motif_iter() (proteinsequence method)": [[46, "cogent3.core.sequence.ProteinSequence.gapped_by_map_motif_iter"]], "gapped_by_map_segment_iter() (proteinsequence method)": [[46, "cogent3.core.sequence.ProteinSequence.gapped_by_map_segment_iter"]], "get_drawable() (proteinsequence method)": [[46, "cogent3.core.sequence.ProteinSequence.get_drawable"]], "get_drawables() (proteinsequence method)": [[46, "cogent3.core.sequence.ProteinSequence.get_drawables"]], "get_features() (proteinsequence method)": [[46, "cogent3.core.sequence.ProteinSequence.get_features"]], "get_in_motif_size() (proteinsequence method)": [[46, "cogent3.core.sequence.ProteinSequence.get_in_motif_size"]], "get_kmers() (proteinsequence method)": [[46, "cogent3.core.sequence.ProteinSequence.get_kmers"]], "get_name() (proteinsequence method)": [[46, "cogent3.core.sequence.ProteinSequence.get_name"]], "get_type() (proteinsequence method)": [[46, "cogent3.core.sequence.ProteinSequence.get_type"]], "is_annotated() (proteinsequence method)": [[46, "cogent3.core.sequence.ProteinSequence.is_annotated"]], "is_degenerate() (proteinsequence method)": [[46, "cogent3.core.sequence.ProteinSequence.is_degenerate"]], "is_gap() (proteinsequence method)": [[46, "cogent3.core.sequence.ProteinSequence.is_gap"]], "is_gapped() (proteinsequence method)": [[46, "cogent3.core.sequence.ProteinSequence.is_gapped"]], "is_strict() (proteinsequence method)": [[46, "cogent3.core.sequence.ProteinSequence.is_strict"]], "is_valid() (proteinsequence method)": [[46, "cogent3.core.sequence.ProteinSequence.is_valid"]], "iter_kmers() (proteinsequence method)": [[46, "cogent3.core.sequence.ProteinSequence.iter_kmers"]], "line_wrap (proteinsequence attribute)": [[46, "cogent3.core.sequence.ProteinSequence.line_wrap"]], "make_feature() (proteinsequence method)": [[46, "cogent3.core.sequence.ProteinSequence.make_feature"]], "matrix_distance() (proteinsequence method)": [[46, "cogent3.core.sequence.ProteinSequence.matrix_distance"]], "moltype (proteinsequence attribute)": [[46, "cogent3.core.sequence.ProteinSequence.moltype"]], "must_match() (proteinsequence method)": [[46, "cogent3.core.sequence.ProteinSequence.must_match"]], "must_pair() (proteinsequence method)": [[46, "cogent3.core.sequence.ProteinSequence.must_pair"]], "mw() (proteinsequence method)": [[46, "cogent3.core.sequence.ProteinSequence.mw"]], "parse_out_gaps() (proteinsequence method)": [[46, "cogent3.core.sequence.ProteinSequence.parse_out_gaps"]], "possibilities() (proteinsequence method)": [[46, "cogent3.core.sequence.ProteinSequence.possibilities"]], "rc() (proteinsequence method)": [[46, "cogent3.core.sequence.ProteinSequence.rc"]], "replace() (proteinsequence method)": [[46, "cogent3.core.sequence.ProteinSequence.replace"]], "replace_annotation_db() (proteinsequence method)": [[46, "cogent3.core.sequence.ProteinSequence.replace_annotation_db"]], "resolved_ambiguities() (proteinsequence method)": [[46, "cogent3.core.sequence.ProteinSequence.resolved_ambiguities"]], "shuffle() (proteinsequence method)": [[46, "cogent3.core.sequence.ProteinSequence.shuffle"]], "sliding_windows() (proteinsequence method)": [[46, "cogent3.core.sequence.ProteinSequence.sliding_windows"]], "strand_symmetry() (proteinsequence method)": [[46, "cogent3.core.sequence.ProteinSequence.strand_symmetry"]], "strip_bad() (proteinsequence method)": [[46, "cogent3.core.sequence.ProteinSequence.strip_bad"]], "strip_bad_and_gaps() (proteinsequence method)": [[46, "cogent3.core.sequence.ProteinSequence.strip_bad_and_gaps"]], "strip_degenerate() (proteinsequence method)": [[46, "cogent3.core.sequence.ProteinSequence.strip_degenerate"]], "to_fasta() (proteinsequence method)": [[46, "cogent3.core.sequence.ProteinSequence.to_fasta"]], "to_html() (proteinsequence method)": [[46, "cogent3.core.sequence.ProteinSequence.to_html"]], "to_json() (proteinsequence method)": [[46, "cogent3.core.sequence.ProteinSequence.to_json"]], "to_moltype() (proteinsequence method)": [[46, "cogent3.core.sequence.ProteinSequence.to_moltype"]], "to_rich_dict() (proteinsequence method)": [[46, "cogent3.core.sequence.ProteinSequence.to_rich_dict"]], "with_masked_annotations() (proteinsequence method)": [[46, "cogent3.core.sequence.ProteinSequence.with_masked_annotations"]], "with_termini_unknown() (proteinsequence method)": [[46, "cogent3.core.sequence.ProteinSequence.with_termini_unknown"]], "rnasequence (class in cogent3.core.sequence)": [[47, "cogent3.core.sequence.RnaSequence"]], "add_feature() (rnasequence method)": [[47, "cogent3.core.sequence.RnaSequence.add_feature"]], "annotate_from_gff() (rnasequence method)": [[47, "cogent3.core.sequence.RnaSequence.annotate_from_gff"]], "annotate_matches_to() (rnasequence method)": [[47, "cogent3.core.sequence.RnaSequence.annotate_matches_to"]], "annotation_db (rnasequence property)": [[47, "cogent3.core.sequence.RnaSequence.annotation_db"]], "annotation_offset (rnasequence property)": [[47, "cogent3.core.sequence.RnaSequence.annotation_offset"]], "can_match() (rnasequence method)": [[47, "cogent3.core.sequence.RnaSequence.can_match"]], "can_mismatch() (rnasequence method)": [[47, "cogent3.core.sequence.RnaSequence.can_mismatch"]], "can_mispair() (rnasequence method)": [[47, "cogent3.core.sequence.RnaSequence.can_mispair"]], "can_pair() (rnasequence method)": [[47, "cogent3.core.sequence.RnaSequence.can_pair"]], "codon_alphabet (rnasequence attribute)": [[47, "cogent3.core.sequence.RnaSequence.codon_alphabet"]], "complement() (rnasequence method)": [[47, "cogent3.core.sequence.RnaSequence.complement"]], "copy() (rnasequence method)": [[47, "cogent3.core.sequence.RnaSequence.copy"]], "copy_annotations() (rnasequence method)": [[47, "cogent3.core.sequence.RnaSequence.copy_annotations"]], "count() (rnasequence method)": [[47, "cogent3.core.sequence.RnaSequence.count"]], "count_degenerate() (rnasequence method)": [[47, "cogent3.core.sequence.RnaSequence.count_degenerate"]], "count_gaps() (rnasequence method)": [[47, "cogent3.core.sequence.RnaSequence.count_gaps"]], "counts() (rnasequence method)": [[47, "cogent3.core.sequence.RnaSequence.counts"]], "degap() (rnasequence method)": [[47, "cogent3.core.sequence.RnaSequence.degap"]], "diff() (rnasequence method)": [[47, "cogent3.core.sequence.RnaSequence.diff"]], "disambiguate() (rnasequence method)": [[47, "cogent3.core.sequence.RnaSequence.disambiguate"]], "distance() (rnasequence method)": [[47, "cogent3.core.sequence.RnaSequence.distance"]], "first_degenerate() (rnasequence method)": [[47, "cogent3.core.sequence.RnaSequence.first_degenerate"]], "first_gap() (rnasequence method)": [[47, "cogent3.core.sequence.RnaSequence.first_gap"]], "first_invalid() (rnasequence method)": [[47, "cogent3.core.sequence.RnaSequence.first_invalid"]], "first_non_strict() (rnasequence method)": [[47, "cogent3.core.sequence.RnaSequence.first_non_strict"]], "frac_diff() (rnasequence method)": [[47, "cogent3.core.sequence.RnaSequence.frac_diff"]], "frac_diff_gaps() (rnasequence method)": [[47, "cogent3.core.sequence.RnaSequence.frac_diff_gaps"]], "frac_diff_non_gaps() (rnasequence method)": [[47, "cogent3.core.sequence.RnaSequence.frac_diff_non_gaps"]], "frac_same() (rnasequence method)": [[47, "cogent3.core.sequence.RnaSequence.frac_same"]], "frac_same_gaps() (rnasequence method)": [[47, "cogent3.core.sequence.RnaSequence.frac_same_gaps"]], "frac_same_non_gaps() (rnasequence method)": [[47, "cogent3.core.sequence.RnaSequence.frac_same_non_gaps"]], "frac_similar() (rnasequence method)": [[47, "cogent3.core.sequence.RnaSequence.frac_similar"]], "gap_indices() (rnasequence method)": [[47, "cogent3.core.sequence.RnaSequence.gap_indices"]], "gap_maps() (rnasequence method)": [[47, "cogent3.core.sequence.RnaSequence.gap_maps"]], "gap_vector() (rnasequence method)": [[47, "cogent3.core.sequence.RnaSequence.gap_vector"]], "gapped_by_map() (rnasequence method)": [[47, "cogent3.core.sequence.RnaSequence.gapped_by_map"]], "gapped_by_map_motif_iter() (rnasequence method)": [[47, "cogent3.core.sequence.RnaSequence.gapped_by_map_motif_iter"]], "gapped_by_map_segment_iter() (rnasequence method)": [[47, "cogent3.core.sequence.RnaSequence.gapped_by_map_segment_iter"]], "get_drawable() (rnasequence method)": [[47, "cogent3.core.sequence.RnaSequence.get_drawable"]], "get_drawables() (rnasequence method)": [[47, "cogent3.core.sequence.RnaSequence.get_drawables"]], "get_features() (rnasequence method)": [[47, "cogent3.core.sequence.RnaSequence.get_features"]], "get_in_motif_size() (rnasequence method)": [[47, "cogent3.core.sequence.RnaSequence.get_in_motif_size"]], "get_kmers() (rnasequence method)": [[47, "cogent3.core.sequence.RnaSequence.get_kmers"]], "get_name() (rnasequence method)": [[47, "cogent3.core.sequence.RnaSequence.get_name"]], "get_translation() (rnasequence method)": [[47, "cogent3.core.sequence.RnaSequence.get_translation"]], "get_type() (rnasequence method)": [[47, "cogent3.core.sequence.RnaSequence.get_type"]], "has_terminal_stop() (rnasequence method)": [[47, "cogent3.core.sequence.RnaSequence.has_terminal_stop"]], "is_annotated() (rnasequence method)": [[47, "cogent3.core.sequence.RnaSequence.is_annotated"]], "is_degenerate() (rnasequence method)": [[47, "cogent3.core.sequence.RnaSequence.is_degenerate"]], "is_gap() (rnasequence method)": [[47, "cogent3.core.sequence.RnaSequence.is_gap"]], "is_gapped() (rnasequence method)": [[47, "cogent3.core.sequence.RnaSequence.is_gapped"]], "is_strict() (rnasequence method)": [[47, "cogent3.core.sequence.RnaSequence.is_strict"]], "is_valid() (rnasequence method)": [[47, "cogent3.core.sequence.RnaSequence.is_valid"]], "iter_kmers() (rnasequence method)": [[47, "cogent3.core.sequence.RnaSequence.iter_kmers"]], "line_wrap (rnasequence attribute)": [[47, "cogent3.core.sequence.RnaSequence.line_wrap"]], "make_feature() (rnasequence method)": [[47, "cogent3.core.sequence.RnaSequence.make_feature"]], "matrix_distance() (rnasequence method)": [[47, "cogent3.core.sequence.RnaSequence.matrix_distance"]], "moltype (rnasequence attribute)": [[47, "cogent3.core.sequence.RnaSequence.moltype"]], "must_match() (rnasequence method)": [[47, "cogent3.core.sequence.RnaSequence.must_match"]], "must_pair() (rnasequence method)": [[47, "cogent3.core.sequence.RnaSequence.must_pair"]], "mw() (rnasequence method)": [[47, "cogent3.core.sequence.RnaSequence.mw"]], "parse_out_gaps() (rnasequence method)": [[47, "cogent3.core.sequence.RnaSequence.parse_out_gaps"]], "possibilities() (rnasequence method)": [[47, "cogent3.core.sequence.RnaSequence.possibilities"]], "protein (rnasequence attribute)": [[47, "cogent3.core.sequence.RnaSequence.protein"]], "rc() (rnasequence method)": [[47, "cogent3.core.sequence.RnaSequence.rc"]], "replace() (rnasequence method)": [[47, "cogent3.core.sequence.RnaSequence.replace"]], "replace_annotation_db() (rnasequence method)": [[47, "cogent3.core.sequence.RnaSequence.replace_annotation_db"]], "resolved_ambiguities() (rnasequence method)": [[47, "cogent3.core.sequence.RnaSequence.resolved_ambiguities"]], "reverse_complement() (rnasequence method)": [[47, "cogent3.core.sequence.RnaSequence.reverse_complement"]], "shuffle() (rnasequence method)": [[47, "cogent3.core.sequence.RnaSequence.shuffle"]], "sliding_windows() (rnasequence method)": [[47, "cogent3.core.sequence.RnaSequence.sliding_windows"]], "strand_symmetry() (rnasequence method)": [[47, "cogent3.core.sequence.RnaSequence.strand_symmetry"]], "strip_bad() (rnasequence method)": [[47, "cogent3.core.sequence.RnaSequence.strip_bad"]], "strip_bad_and_gaps() (rnasequence method)": [[47, "cogent3.core.sequence.RnaSequence.strip_bad_and_gaps"]], "strip_degenerate() (rnasequence method)": [[47, "cogent3.core.sequence.RnaSequence.strip_degenerate"]], "to_dna() (rnasequence method)": [[47, "cogent3.core.sequence.RnaSequence.to_dna"]], "to_fasta() (rnasequence method)": [[47, "cogent3.core.sequence.RnaSequence.to_fasta"]], "to_html() (rnasequence method)": [[47, "cogent3.core.sequence.RnaSequence.to_html"]], "to_json() (rnasequence method)": [[47, "cogent3.core.sequence.RnaSequence.to_json"]], "to_moltype() (rnasequence method)": [[47, "cogent3.core.sequence.RnaSequence.to_moltype"]], "to_rich_dict() (rnasequence method)": [[47, "cogent3.core.sequence.RnaSequence.to_rich_dict"]], "to_rna() (rnasequence method)": [[47, "cogent3.core.sequence.RnaSequence.to_rna"]], "trim_stop_codon() (rnasequence method)": [[47, "cogent3.core.sequence.RnaSequence.trim_stop_codon"]], "with_masked_annotations() (rnasequence method)": [[47, "cogent3.core.sequence.RnaSequence.with_masked_annotations"]], "with_termini_unknown() (rnasequence method)": [[47, "cogent3.core.sequence.RnaSequence.with_termini_unknown"]], "filteringparser (class in cogent3.parse.table)": [[49, "cogent3.parse.table.FilteringParser"]], "columns (class in cogent3.util.table)": [[50, "cogent3.util.table.Columns"]], "add_column_from_str() (columns method)": [[50, "cogent3.util.table.Columns.add_column_from_str"]], "array (columns property)": [[50, "cogent3.util.table.Columns.array"]], "clear() (columns method)": [[50, "cogent3.util.table.Columns.clear"]], "get() (columns method)": [[50, "cogent3.util.table.Columns.get"]], "index_name (columns property)": [[50, "cogent3.util.table.Columns.index_name"]], "items() (columns method)": [[50, "cogent3.util.table.Columns.items"]], "iter_rows() (columns method)": [[50, "cogent3.util.table.Columns.iter_rows"]], "keys() (columns method)": [[50, "cogent3.util.table.Columns.keys"]], "order (columns property)": [[50, "cogent3.util.table.Columns.order"]], "pop() (columns method)": [[50, "cogent3.util.table.Columns.pop"]], "popitem() (columns method)": [[50, "cogent3.util.table.Columns.popitem"]], "setdefault() (columns method)": [[50, "cogent3.util.table.Columns.setdefault"]], "take_columns() (columns method)": [[50, "cogent3.util.table.Columns.take_columns"]], "to_dict() (columns method)": [[50, "cogent3.util.table.Columns.to_dict"]], "to_rich_dict() (columns method)": [[50, "cogent3.util.table.Columns.to_rich_dict"]], "update() (columns method)": [[50, "cogent3.util.table.Columns.update"]], "values() (columns method)": [[50, "cogent3.util.table.Columns.values"]], "table (class in cogent3.util.table)": [[51, "cogent3.util.table.Table"]], "appended() (table method)": [[51, "cogent3.util.table.Table.appended"]], "array (table property)": [[51, "cogent3.util.table.Table.array"]], "count() (table method)": [[51, "cogent3.util.table.Table.count"]], "count_unique() (table method)": [[51, "cogent3.util.table.Table.count_unique"]], "cross_join() (table method)": [[51, "cogent3.util.table.Table.cross_join"]], "distinct_values() (table method)": [[51, "cogent3.util.table.Table.distinct_values"]], "filtered() (table method)": [[51, "cogent3.util.table.Table.filtered"]], "filtered_by_column() (table method)": [[51, "cogent3.util.table.Table.filtered_by_column"]], "format (table property)": [[51, "cogent3.util.table.Table.format"]], "format_column() (table method)": [[51, "cogent3.util.table.Table.format_column"]], "get_columns() (table method)": [[51, "cogent3.util.table.Table.get_columns"]], "get_row_indices() (table method)": [[51, "cogent3.util.table.Table.get_row_indices"]], "head() (table method)": [[51, "cogent3.util.table.Table.head"]], "header (table property)": [[51, "cogent3.util.table.Table.header"]], "index_name (table property)": [[51, "cogent3.util.table.Table.index_name"]], "inner_join() (table method)": [[51, "cogent3.util.table.Table.inner_join"]], "joined() (table method)": [[51, "cogent3.util.table.Table.joined"]], "legend (table property)": [[51, "cogent3.util.table.Table.legend"]], "normalized() (table method)": [[51, "cogent3.util.table.Table.normalized"]], "set_repr_policy() (table method)": [[51, "cogent3.util.table.Table.set_repr_policy"]], "shape (table property)": [[51, "cogent3.util.table.Table.shape"]], "sorted() (table method)": [[51, "cogent3.util.table.Table.sorted"]], "space (table property)": [[51, "cogent3.util.table.Table.space"]], "sum_columns() (table method)": [[51, "cogent3.util.table.Table.sum_columns"]], "sum_rows() (table method)": [[51, "cogent3.util.table.Table.sum_rows"]], "summed() (table method)": [[51, "cogent3.util.table.Table.summed"]], "tail() (table method)": [[51, "cogent3.util.table.Table.tail"]], "title (table property)": [[51, "cogent3.util.table.Table.title"]], "to_categorical() (table method)": [[51, "cogent3.util.table.Table.to_categorical"]], "to_csv() (table method)": [[51, "cogent3.util.table.Table.to_csv"]], "to_dataframe() (table method)": [[51, "cogent3.util.table.Table.to_dataframe"]], "to_dict() (table method)": [[51, "cogent3.util.table.Table.to_dict"]], "to_html() (table method)": [[51, "cogent3.util.table.Table.to_html"]], "to_json() (table method)": [[51, "cogent3.util.table.Table.to_json"]], "to_latex() (table method)": [[51, "cogent3.util.table.Table.to_latex"]], "to_markdown() (table method)": [[51, "cogent3.util.table.Table.to_markdown"]], "to_plotly() (table method)": [[51, "cogent3.util.table.Table.to_plotly"]], "to_rich_dict() (table method)": [[51, "cogent3.util.table.Table.to_rich_dict"]], "to_rst() (table method)": [[51, "cogent3.util.table.Table.to_rst"]], "to_string() (table method)": [[51, "cogent3.util.table.Table.to_string"]], "to_tsv() (table method)": [[51, "cogent3.util.table.Table.to_tsv"]], "tolist() (table method)": [[51, "cogent3.util.table.Table.tolist"]], "transposed() (table method)": [[51, "cogent3.util.table.Table.transposed"]], "with_new_column() (table method)": [[51, "cogent3.util.table.Table.with_new_column"]], "with_new_header() (table method)": [[51, "cogent3.util.table.Table.with_new_header"]], "write() (table method)": [[51, "cogent3.util.table.Table.write"]], "phylonode (class in cogent3.core.tree)": [[53, "cogent3.core.tree.PhyloNode"]], "ancestors() (phylonode method)": [[53, "cogent3.core.tree.PhyloNode.ancestors"]], "append() (phylonode method)": [[53, "cogent3.core.tree.PhyloNode.append"]], "ascii_art() (phylonode method)": [[53, "cogent3.core.tree.PhyloNode.ascii_art"]], "balanced() (phylonode method)": [[53, "cogent3.core.tree.PhyloNode.balanced"]], "bifurcating() (phylonode method)": [[53, "cogent3.core.tree.PhyloNode.bifurcating"]], "child_groups() (phylonode method)": [[53, "cogent3.core.tree.PhyloNode.child_groups"]], "child_parent_map() (phylonode method)": [[53, "cogent3.core.tree.PhyloNode.child_parent_map"]], "compare_by_names() (phylonode method)": [[53, "cogent3.core.tree.PhyloNode.compare_by_names"]], "compare_by_subsets() (phylonode method)": [[53, "cogent3.core.tree.PhyloNode.compare_by_subsets"]], "compare_by_tip_distances() (phylonode method)": [[53, "cogent3.core.tree.PhyloNode.compare_by_tip_distances"]], "compare_name() (phylonode method)": [[53, "cogent3.core.tree.PhyloNode.compare_name"]], "copy() (phylonode method)": [[53, "cogent3.core.tree.PhyloNode.copy"]], "copy_topology() (phylonode method)": [[53, "cogent3.core.tree.PhyloNode.copy_topology"]], "deepcopy() (phylonode method)": [[53, "cogent3.core.tree.PhyloNode.deepcopy"]], "descendant_array() (phylonode method)": [[53, "cogent3.core.tree.PhyloNode.descendant_array"]], "distance() (phylonode method)": [[53, "cogent3.core.tree.PhyloNode.distance"]], "extend() (phylonode method)": [[53, "cogent3.core.tree.PhyloNode.extend"]], "get_connecting_edges() (phylonode method)": [[53, "cogent3.core.tree.PhyloNode.get_connecting_edges"]], "get_connecting_node() (phylonode method)": [[53, "cogent3.core.tree.PhyloNode.get_connecting_node"]], "get_distances() (phylonode method)": [[53, "cogent3.core.tree.PhyloNode.get_distances"]], "get_edge_names() (phylonode method)": [[53, "cogent3.core.tree.PhyloNode.get_edge_names"]], "get_edge_vector() (phylonode method)": [[53, "cogent3.core.tree.PhyloNode.get_edge_vector"]], "get_figure() (phylonode method)": [[53, "cogent3.core.tree.PhyloNode.get_figure"]], "get_max_tip_tip_distance() (phylonode method)": [[53, "cogent3.core.tree.PhyloNode.get_max_tip_tip_distance"]], "get_newick() (phylonode method)": [[53, "cogent3.core.tree.PhyloNode.get_newick"]], "get_node_matching_name() (phylonode method)": [[53, "cogent3.core.tree.PhyloNode.get_node_matching_name"]], "get_node_names() (phylonode method)": [[53, "cogent3.core.tree.PhyloNode.get_node_names"]], "get_nodes_dict() (phylonode method)": [[53, "cogent3.core.tree.PhyloNode.get_nodes_dict"]], "get_param_value() (phylonode method)": [[53, "cogent3.core.tree.PhyloNode.get_param_value"]], "get_sub_tree() (phylonode method)": [[53, "cogent3.core.tree.PhyloNode.get_sub_tree"]], "get_tip_names() (phylonode method)": [[53, "cogent3.core.tree.PhyloNode.get_tip_names"]], "get_xml() (phylonode method)": [[53, "cogent3.core.tree.PhyloNode.get_xml"]], "index_in_parent() (phylonode method)": [[53, "cogent3.core.tree.PhyloNode.index_in_parent"]], "insert() (phylonode method)": [[53, "cogent3.core.tree.PhyloNode.insert"]], "is_root() (phylonode method)": [[53, "cogent3.core.tree.PhyloNode.is_root"]], "is_tip() (phylonode method)": [[53, "cogent3.core.tree.PhyloNode.is_tip"]], "isroot() (phylonode method)": [[53, "cogent3.core.tree.PhyloNode.isroot"]], "istip() (phylonode method)": [[53, "cogent3.core.tree.PhyloNode.istip"]], "iter_nontips() (phylonode method)": [[53, "cogent3.core.tree.PhyloNode.iter_nontips"]], "iter_tips() (phylonode method)": [[53, "cogent3.core.tree.PhyloNode.iter_tips"]], "last_common_ancestor() (phylonode method)": [[53, "cogent3.core.tree.PhyloNode.last_common_ancestor"]], "lca() (phylonode method)": [[53, "cogent3.core.tree.PhyloNode.lca"]], "length (phylonode property)": [[53, "cogent3.core.tree.PhyloNode.length"]], "levelorder() (phylonode method)": [[53, "cogent3.core.tree.PhyloNode.levelorder"]], "lin_rajan_moret() (phylonode method)": [[53, "cogent3.core.tree.PhyloNode.lin_rajan_moret"]], "lowest_common_ancestor() (phylonode method)": [[53, "cogent3.core.tree.PhyloNode.lowest_common_ancestor"]], "make_tree_array() (phylonode method)": [[53, "cogent3.core.tree.PhyloNode.make_tree_array"]], "max_tip_tip_distance() (phylonode method)": [[53, "cogent3.core.tree.PhyloNode.max_tip_tip_distance"]], "multifurcating() (phylonode method)": [[53, "cogent3.core.tree.PhyloNode.multifurcating"]], "name_unnamed_nodes() (phylonode method)": [[53, "cogent3.core.tree.PhyloNode.name_unnamed_nodes"]], "non_tip_children() (phylonode method)": [[53, "cogent3.core.tree.PhyloNode.non_tip_children"]], "nontips() (phylonode method)": [[53, "cogent3.core.tree.PhyloNode.nontips"]], "parent (phylonode property)": [[53, "cogent3.core.tree.PhyloNode.parent"]], "pop() (phylonode method)": [[53, "cogent3.core.tree.PhyloNode.pop"]], "postorder() (phylonode method)": [[53, "cogent3.core.tree.PhyloNode.postorder"]], "pre_and_postorder() (phylonode method)": [[53, "cogent3.core.tree.PhyloNode.pre_and_postorder"]], "preorder() (phylonode method)": [[53, "cogent3.core.tree.PhyloNode.preorder"]], "prune() (phylonode method)": [[53, "cogent3.core.tree.PhyloNode.prune"]], "reassign_names() (phylonode method)": [[53, "cogent3.core.tree.PhyloNode.reassign_names"]], "remove() (phylonode method)": [[53, "cogent3.core.tree.PhyloNode.remove"]], "remove_deleted() (phylonode method)": [[53, "cogent3.core.tree.PhyloNode.remove_deleted"]], "remove_node() (phylonode method)": [[53, "cogent3.core.tree.PhyloNode.remove_node"]], "root() (phylonode method)": [[53, "cogent3.core.tree.PhyloNode.root"]], "root_at_midpoint() (phylonode method)": [[53, "cogent3.core.tree.PhyloNode.root_at_midpoint"]], "rooted_at() (phylonode method)": [[53, "cogent3.core.tree.PhyloNode.rooted_at"]], "rooted_with_tip() (phylonode method)": [[53, "cogent3.core.tree.PhyloNode.rooted_with_tip"]], "same_shape() (phylonode method)": [[53, "cogent3.core.tree.PhyloNode.same_shape"]], "same_topology() (phylonode method)": [[53, "cogent3.core.tree.PhyloNode.same_topology"]], "scale_branch_lengths() (phylonode method)": [[53, "cogent3.core.tree.PhyloNode.scale_branch_lengths"]], "separation() (phylonode method)": [[53, "cogent3.core.tree.PhyloNode.separation"]], "set_max_tip_tip_distance() (phylonode method)": [[53, "cogent3.core.tree.PhyloNode.set_max_tip_tip_distance"]], "set_param_value() (phylonode method)": [[53, "cogent3.core.tree.PhyloNode.set_param_value"]], "set_tip_distances() (phylonode method)": [[53, "cogent3.core.tree.PhyloNode.set_tip_distances"]], "siblings() (phylonode method)": [[53, "cogent3.core.tree.PhyloNode.siblings"]], "sorted() (phylonode method)": [[53, "cogent3.core.tree.PhyloNode.sorted"]], "subset() (phylonode method)": [[53, "cogent3.core.tree.PhyloNode.subset"]], "subsets() (phylonode method)": [[53, "cogent3.core.tree.PhyloNode.subsets"]], "tip_children() (phylonode method)": [[53, "cogent3.core.tree.PhyloNode.tip_children"]], "tip_to_tip_distances() (phylonode method)": [[53, "cogent3.core.tree.PhyloNode.tip_to_tip_distances"]], "tips() (phylonode method)": [[53, "cogent3.core.tree.PhyloNode.tips"]], "tips_within_distance() (phylonode method)": [[53, "cogent3.core.tree.PhyloNode.tips_within_distance"]], "to_json() (phylonode method)": [[53, "cogent3.core.tree.PhyloNode.to_json"]], "to_rich_dict() (phylonode method)": [[53, "cogent3.core.tree.PhyloNode.to_rich_dict"]], "total_descending_branch_length() (phylonode method)": [[53, "cogent3.core.tree.PhyloNode.total_descending_branch_length"]], "total_length() (phylonode method)": [[53, "cogent3.core.tree.PhyloNode.total_length"]], "traverse() (phylonode method)": [[53, "cogent3.core.tree.PhyloNode.traverse"]], "unrooted() (phylonode method)": [[53, "cogent3.core.tree.PhyloNode.unrooted"]], "unrooted_deepcopy() (phylonode method)": [[53, "cogent3.core.tree.PhyloNode.unrooted_deepcopy"]], "write() (phylonode method)": [[53, "cogent3.core.tree.PhyloNode.write"]], "register_deserialiser (class in cogent3.util.deserialise)": [[55, "cogent3.util.deserialise.register_deserialiser"]], "deserialise_object() (in module cogent3.util.deserialise)": [[56, "cogent3.util.deserialise.deserialise_object"]], "completed members": [[64, "index-1"]], "data store": [[64, "index-0"]], "open_data_store()": [[64, "index-2"]], "cogent3.util.misc": [[108, "index-0"]], "cogent.app": [[149, "term-cogent.app"], [151, "term-cogent.app"]], "cogent.db.ensembl": [[149, "term-cogent.db.ensembl"], [151, "term-cogent.db.ensembl"]], "cogent.db.eutils": [[149, "term-cogent.db.eutils"], [151, "term-cogent.db.eutils"]], "cogent.maths.unifrac": [[149, "term-cogent.maths.unifrac"], [151, "term-cogent.maths.unifrac"]], "cogent.motif": [[149, "term-cogent.motif"], [151, "term-cogent.motif"]], "cogent.seqsim": [[149, "term-cogent.seqsim"], [151, "term-cogent.seqsim"]], "cogent.struct": [[149, "term-cogent.struct"], [151, "term-cogent.struct"]]}})